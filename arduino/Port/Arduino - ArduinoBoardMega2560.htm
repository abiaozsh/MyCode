<!DOCTYPE html>
<!--html5-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if gt IE 8]><!-->
<html style="" class=" js no-touch boxshadow opacity fontface svg inlinesvg svgclippaths no-ie8compat" lang="en"><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><script src="//s7.addthis.com/static/r07/auth016.js" type="text/javascript"></script><script src="//s7.addthis.com/static/r07/counter017.js" type="text/javascript"></script><link media="all" href="http://s7.addthis.com/static/r07/counter013.css" type="text/css" rel="stylesheet"><script src="//platform.twitter.com/widgets.js" type="text/javascript"></script><link media="all" href="http://s7.addthis.com/static/r07/widget118.css" type="text/css" rel="stylesheet">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
  	<meta charset="utf-8">

	<title>Arduino - ArduinoBoardMega2560 </title>
	<link rel="shortcut icon" type="image/x-icon" href="http://arduino.cc/en/favicon.png">

	<script src="http://www.google-analytics.com/ga.js" async="" type="text/javascript"></script><script src="Arduino%20-%20ArduinoBoardMega2560_files/jquery.js"></script>

	<link rel="stylesheet" href="Arduino%20-%20ArduinoBoardMega2560_files/WF-003562-000476.css" type="text/css">
	<link rel="stylesheet" href="Arduino%20-%20ArduinoBoardMega2560_files/arduino-icons.css">
	<link rel="stylesheet" href="Arduino%20-%20ArduinoBoardMega2560_files/animation.css"><!--[if IE 7]>
	<link rel="stylesheet" href="http://id.arduino.cc/css/arduino-icons-ie7.css"><![endif]-->
	<!--[if gte IE 9]><!-->
	<link rel="stylesheet" href="Arduino%20-%20ArduinoBoardMega2560_files/foundation2.css" type="text/css">
	<!--[endif]---->
	<!--[if IE 8]>
		<link rel='stylesheet' href='http://id.arduino.cc/css/foundation_ie8.css' type='text/css' />	
	<![endif]-->
	<link rel="stylesheet" href="Arduino%20-%20ArduinoBoardMega2560_files/arduino_code_highlight.css" type="text/css">
	<link rel="stylesheet" type="text/css" media="screen" href="Arduino%20-%20ArduinoBoardMega2560_files/typeplate.css">
	<link rel="stylesheet" href="Arduino%20-%20ArduinoBoardMega2560_files/arduinoWide_SSO.css" type="text/css">
	
	<link rel="stylesheet" href="Arduino%20-%20ArduinoBoardMega2560_files/common.css" type="text/css">
	<link href="https://plus.google.com/114839908922424087554" rel="publisher">

	<!-- embedded JS and CSS from PmWiki plugins -->	
	<!--HeaderText--><style type="text/css"><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code { white-space: nowrap; }
  .vspace { margin-top:1.33em; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  
span.anchor {
	float: left;
	font-size: 10px;
	margin-left: -10px;
	width: 10px;
    position:relative; top:-0.1em;
	text-align: center;
}
span.anchor a { text-decoration: none; }
span.anchor a:hover { text-decoration: underline; }
ol.toc { text-indent:-20px; list-style: none; }
ol.toc ol.toc { text-indent:-40px; }
div.tocfloat { font-size: smaller; margin-bottom: 10px;
    border-top: 1px dotted #555555; border-bottom: 1px dotted #555555;
    padding-top: 5px; padding-bottom: 5px; 
    width: 38%; float: right; margin-left: 10px; clear: right;
    margin-right:-13px; padding-right: 13px; padding-left: 13px;
    background-color: #eeeeee; }
div.toc { font-size: smaller; 
    padding: 5px; border: 1px dotted #cccccc;
    background: #f7f7f7;
    margin-bottom: 10px; }
div.toc p { background-color: #f9f6d6;
    margin-top:-5px;   padding-top: 5px;
    margin-left:-5px;  padding-left: 5px;
    margin-right:-5px; padding-right: 5px;
    padding-bottom: 3px;
    border-bottom:  1px dotted #cccccc; }.editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }

  table.markup { border: 2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  td.markup1 { border-bottom: 1px solid #ccf; }
  div.faq { margin-left:2em; }
  div.faq p.question { margin: 1em 0 0.75em -2em; font-weight:bold; }
  div.faq hr { margin-left: -2em; }
   
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }

--></style><script type="text/javascript">
function toggle(obj) {
    var elstyle = document.getElementById(obj).style;
    var text    = document.getElementById(obj + "tog");
    if (elstyle.display == 'none') {
        elstyle.display = 'block';
        text.innerHTML = "hide";
    } else {
        elstyle.display = 'none';
        text.innerHTML = "show";
    }
}
</script>  <meta name="robots" content="index,follow">


	<script src="Arduino%20-%20ArduinoBoardMega2560_files/custom.js"></script>

	<!-- do not remove none of those lines, comments embedding in pages will break! -->
	<script src="Arduino%20-%20ArduinoBoardMega2560_files/jquery-ui.js" type="text/javascript"></script>
	<link rel="stylesheet" href="Arduino%20-%20ArduinoBoardMega2560_files/jquery-ui.css" type="text/css">
	<script src="Arduino%20-%20ArduinoBoardMega2560_files/sso_bar_js_2.php"></script>
	<script src="Arduino%20-%20ArduinoBoardMega2560_files/a" type="text/javascript"></script>
</head>
<body>

	<div id="menuWings" class="fixed"></div>
	<div id="page">
		
		
<script>
	var userAgent = (navigator.userAgent || navigator.vendor || window.opera).toLowerCase();
	if(userAgent.indexOf('mac')>0){
		$("head").append('<style type="text/css">@-moz-document url-prefix() {h1 a, h2 a, h3 a, h4 a, h5 a, h1 a:hover, h2 a:hover, th a, th a:hover, h3 a:hover, h4 a:hover, h5 a:hover, #wikitext h2 a:hover, #wikitext h3 a:hover, #wikitext h4 a:hover {padding-bottom: 0.5em!important;} #pageheader .search input{font-family: "TyponineSans Regular 18";} #pagefooter .monospace{margin-top: -4px;} #navWrapper ul.left &gt; li{margin-top: -2px; padding-bottom: 2px;}#navWrapper ul.right &gt; li{margin-top: -5px; padding-bottom: 5px;}#navWrapper ul.right &gt; li ul{margin-top: 4px;} .slider-container .fixed-caption p{padding:8px 0 14px 0}}</style>');
	}
</script>

<!--[if IE]>
<link rel='stylesheet' href='https://id.arduino.cc//css/ie-monospace.css' type='text/css' />
<![endif]-->

<div id="menuWings" class="fixed"></div>

<!--[if IE 8]>
<div class="alert-box panel ie8alert">
  <p><strong>Arduino.cc offers limited compatibility for Internet Explorer 8. Get a modern browser as Chrome, Firefox or Safari.</strong></p>
  <a href="" class="close">&times;</a>
</div>
<![endif]-->

<div id="pageheader">
	<div class="row">
		<div class="small-6 large-8 eight columns">
			<div class="title"><a href="http://arduino.cc/">Arduino</a></div>
		</div>
		<div class="small-6 large-4 four columns search">
			<div class="row collapse">
				<form method="GET" action="http://www.google.com/search">
	<div class="small-12 twelve columns">
		<i class="icon-search-2"></i>
		<input name="ie" value="UTF-8" type="hidden">
		<input name="oe" value="UTF-8" type="hidden">
		<input name="q" size="25" maxlength="255" placeholder="Search the Arduino Website" type="text">
		<input name="btnG" value="search" type="submit">
		<input name="domains" value="http://arduino.cc" type="hidden">
		<input name="sitesearch" value="http://arduino.cc" type="hidden">
	</div>
</form>			</div>
		</div>
	</div>

	<!--[if gte IE 9]><!-->
	<div id="navWrapper" class="sticky">
	<!--[endif]---->
	<!--[if IE 8]>
		<div id="navWrapper">
	<![endif]-->
		<nav class="top-bar" data-options="is_hover:true">
			<ul class="title-area">
				<li class="name"></li>
			</ul>

			
		<section class="top-bar-section">
				<ul class="left">
					<li class="active" id="navLogo">
						<a href="http://arduino.cc/">
							<img src="https://id.arduino.cc//img/logo_46.png" alt="userpicture">
						</a>
					</li>
					<li class="active" id="navHome"><a href="http://arduino.cc/">Home</a></li>
					<li class="has-dropdown not-click"><a href="#">Buy</a>
						<ul class="dropdown"><li class="title back js-generated"><h5><a href="#"><span class="backArrow">Back</span></a></h5></li>
							<li><a href="http://store.arduino.cc/ww/index.php">Store</a></li>
							<li><a href="http://arduino.cc/en/Main/Buy">Distributors</a></li>
						</ul>
					</li>
					<li><a href="http://arduino.cc/en/Main/Software">Download</a></li>
					<li><a href="http://arduino.cc/en/Main/Products">Products</a></li>
					<li class="has-dropdown not-click"><a href="#">Learning</a>
						<ul class="dropdown"><li class="title back js-generated"><h5><a href="#"><span class="backArrow">Back</span></a></h5></li>
							<li><a href="http://arduino.cc/en/Guide/HomePage">Getting started</a></li>
							<li><a href="http://arduino.cc/en/Tutorial/HomePage">Examples</a></li>
							<li><a href="http://playground.arduino.cc/">Playground</a></li>
						</ul>
					</li>
					<li><a href="http://arduino.cc/en/Reference/HomePage">Reference</a></li>
					<li class="has-dropdown not-click"><a href="#">Support</a>
						<ul class="dropdown"><li class="title back js-generated"><h5><a href="#"><span class="backArrow">Back</span></a></h5></li>
							<li><a href="http://arduino.cc/en/Main/FAQ">FAQ</a></li>
							<li><a href="http://forum.arduino.cc/">Forum</a></li>
							<li><a href="http://arduino.cc/en/ContactUs">Contact Us</a></li>
						</ul>
					</li>
					<li><a href="http://blog.arduino.cc/">Blog</a></li>
				</ul>

								<ul class="right">
					<li><a href="https://id.arduino.cc/auth/login/?returnurl=http%3A%2F%2Farduino.cc%2Fen%2FMain%2FarduinoBoardMega2560" class="cart">LOG IN</a></li>
					<li><a href="https://id.arduino.cc/auth/signup" class="cart">SIGN UP</a></li>
				</ul>
							</section></nav>
	</div>
</div>



		<br class="clear">

		<div id="pagetext">
				<!--PageText-->
<div id="wikitext">
<h2>Arduino Mega 2560</h2>
<p class="vspace"></p>
<table align="centre" border="0"><tbody><tr><td valign="top"><a class="urllink" href="http://arduino.cc/en/uploads/Main/ArduinoMega2560_R3_Front.jpg" rel="nofollow"><img src="http://arduino.cc/en/uploads/Main/ArduinoMega2560_R3_Front_450px.jpg" alt="" title=""></a>
</td><td valign="top"><a class="urllink" href="http://arduino.cc/en/uploads/Main/ArduinoMega2560_R3_Back.jpg" rel="nofollow"><img src="http://arduino.cc/en/uploads/Main/ArduinoMega2560_R3_Back_450px.jpg" alt="" title=""></a>
</td></tr><tr><td valign="top"><em>Arduino Mega 2560 R3 Front</em>
</td><td valign="top"><em>Arduino Mega2560 R3 Back</em>
<p class="vspace"></p></td></tr><tr><td valign="top"><a class="urllink" href="http://arduino.cc/en/uploads/Main/ArduinoMega2560_r2_front.jpg" rel="nofollow"><img src="http://arduino.cc/en/uploads/Main/ArduinoMega2560_r2_front_450px.jpg" alt="" title="" width="50%"></a>
</td><td valign="top"><a class="urllink" href="http://arduino.cc/en/uploads/Main/ArduinoMega2650Back.jpg" rel="nofollow"><img src="http://arduino.cc/en/uploads/Main/ArduinoMega2650Back_450px.jpg" alt="" title="" width="50%"></a>
</td></tr><tr><td valign="top"><em>Arduino Mega 2560 Front</em>
</td><td valign="top"><em>Arduino Mega 2560 Back</em>
</td></tr></tbody></table>
<p class="vspace"></p>
<table border="0"><tbody><tr><td valign="top"> <a class="urllink" href="http://store.arduino.cc/ww/index.php?main_page=product_info&amp;cPath=11_12&amp;products_id=196" rel="nofollow"><img src="http://arduino.cc/en/uploads/Main/buttonStore.jpg" alt="" title=""></a>
</td><td valign="top"><a class="urllink" href="http://arduino.cc/en/Main/Buy" rel="nofollow"><img src="http://arduino.cc/en/uploads/Main/buttonDistributors.jpg" alt="" title=""></a>
</td></tr></tbody></table>
<p class="vspace"></p><h3>Overview</h3>
<p>The Arduino Mega 2560 is a microcontroller board based on the <span class="wikiword">ATmega2560</span>  (<a class="urllink" href="http://www.atmel.com/dyn/resources/prod_documents/doc2549.PDF" rel="nofollow">datasheet</a>).  It has 54 digital input/output pins (of which 15 can be used as PWM outputs), 16 analog inputs, 4 <span class="wikiword">UARTs</span> (hardware serial ports), a 16 <span class="wikiword">MHz</span>
 crystal oscillator, a USB connection, a power jack, an ICSP header, and
 a reset button.  It contains everything needed to support the 
microcontroller; simply connect it to a computer with a USB cable or 
power it with a AC-to-DC adapter or battery to get started.  The Mega is
 compatible with most shields designed for the Arduino Duemilanove or 
Diecimila.
</p>
<p class="vspace"></p><p>The Mega 2560 is an update to the <a class="wikilink" href="http://arduino.cc/en/Main/ArduinoBoardMega">Arduino Mega</a>, which it replaces.
</p>
<p class="vspace"></p><p>The Mega2560 differs from all preceding boards 
in that it does not use the FTDI USB-to-serial driver chip. Instead, it 
features the <span class="wikiword">ATmega16U2</span> (<span class="wikiword">ATmega8U2</span> in the revision 1 and revision 2 boards) programmed as a USB-to-serial converter.<br><ins>Revision 2</ins> of the Mega2560 board has a resistor pulling the 8U2 HWB line to ground, making it easier to put into <a class="wikilink" href="http://arduino.cc/en/Hacking/DFUProgramming8U2">DFU mode</a>.<br><ins>Revision 3</ins> of the board has the following new features:
</p><ul><li> 1.0 pinout: added SDA and SCL pins that are near to the 
AREF pin and two other new pins placed near to the RESET pin, the IOREF 
that allow the shields to adapt to the voltage provided from the board. 
In future, shields will be compatible both with the board that use the 
AVR, which operate with 5V and with the Arduino Due that operate with 
3.3V. The second one is a not connected pin, that is reserved for future
 purposes.
</li><li>Stronger RESET circuit.
</li><li>Atmega 16U2 replace the 8U2.
</li></ul><p class="vspace"></p><h3>Schematic, Reference Design &amp; Pin Mapping</h3>
<p>EAGLE files: <a class="urllink" href="http://arduino.cc/en/uploads/Main/arduino-mega2560_R3-ref-design.zip" rel="nofollow">arduino-mega2560_R3-reference-design.zip</a>
</p>
<p class="vspace"></p><p>Schematic: <a class="urllink" href="http://arduino.cc/en/uploads/Main/arduino-mega2560_R3-sch.pdf" rel="nofollow">arduino-mega2560_R3-schematic.pdf</a>
</p>
<p class="vspace"></p><p>Pin Mapping: <a class="wikilink" href="http://arduino.cc/en/Hacking/PinMapping2560">PinMap2560 page</a>
</p><h3>Summary</h3>
<table border="0"><tbody><tr><td align="left">Microcontroller</td><td align="left"><span class="wikiword">ATmega2560</span></td></tr>
<tr><td align="left">Operating Voltage</td><td align="left">5V</td></tr>
<tr><td align="left">Input Voltage (recommended)</td><td align="left">7-12V</td></tr>
<tr><td align="left">Input Voltage (limits)</td><td align="left">6-20V</td></tr>
<tr><td align="left">Digital I/O Pins</td><td align="left">54  (of which 15 provide PWM output)</td></tr>
<tr><td align="left">Analog Input Pins</td><td align="left">16</td></tr>
<tr><td align="left">DC Current per I/O Pin</td><td align="left">40 mA</td></tr>
<tr><td align="left">DC Current for 3.3V Pin</td><td align="left">50 mA</td></tr>
<tr><td align="left">Flash Memory</td><td align="left">256 KB of which 8 KB used by bootloader</td></tr>
<tr><td align="left">SRAM</td><td align="left">8 KB</td></tr>
<tr><td align="left">EEPROM</td><td align="left">4 KB</td></tr>
<tr><td align="left">Clock Speed</td><td align="left">16 <span class="wikiword">MHz</span></td></tr>
</tbody></table>
<p class="vspace"></p><h3>Power</h3>
<p>The Arduino Mega can be powered via the USB connection or with an 
external power supply.  The power source is selected automatically.
</p>
<p class="vspace"></p><p>External (non-USB) power can come either from 
an AC-to-DC adapter (wall-wart) or battery.  The adapter can be 
connected by plugging a 2.1mm center-positive plug into the board's 
power jack.  Leads from a battery can be inserted in the Gnd and Vin pin
 headers of the POWER connector.  
</p>
<p class="vspace"></p><p>The board can operate on an external supply of 6
 to 20 volts.  If supplied with less than 7V, however, the 5V pin may 
supply less than five volts and the board may be unstable.  If using 
more than 12V, the voltage regulator may overheat and damage the board. 
 The recommended range is 7 to 12 volts.
</p>
<p class="vspace"></p><p>The power pins are as follows:
</p>
<p class="vspace"></p><ul><li><strong>VIN.</strong>  The input voltage 
to the Arduino board when it's using an external power source (as 
opposed to 5 volts from the USB connection or other regulated power 
source).  You can supply voltage through this pin, or, if supplying 
voltage via the power jack, access it through this pin.  
<p class="vspace"></p></li><li><strong>5V.</strong> This pin outputs a 
regulated 5V from the regulator on the board.  The board can be supplied
 with power either from the DC power jack (7 - 12V), the USB connector 
(5V), or the VIN pin of the board (7-12V).  Supplying voltage via the 5V
 or 3.3V pins bypasses the regulator, and can damage your board. We 
don't advise it.
<p class="vspace"></p></li><li><strong>3V3.</strong>  A 3.3 volt supply generated by the on-board regulator.  Maximum current draw is 50 mA.
<p class="vspace"></p></li><li><strong>GND.</strong> Ground pins.  
<p class="vspace"></p></li><li><strong>IOREF.</strong> This pin on the 
Arduino board provides the voltage reference with which the 
microcontroller operates. A properly configured shield can read the 
IOREF pin voltage and select the appropriate power source or enable 
voltage translators on the outputs for working with the 5V or 3.3V.
</li></ul><p class="vspace"></p><h3>Memory</h3>
<p>The <span class="wikiword">ATmega2560</span> has 256 KB of flash 
memory for storing code (of which 8 KB is used for the bootloader), 8 KB
 of SRAM and 4 KB of EEPROM (which can be read and written with the <a class="urllink" href="http://www.arduino.cc/en/Reference/EEPROM" rel="nofollow">EEPROM library</a>).
</p>
<p class="vspace"></p><h3>Input and Output</h3>
<p>Each of the 54 digital pins on the Mega can be used as an input or output, using <a class="wikilink" href="http://arduino.cc/en/Reference/PinMode">pinMode()</a>, <a class="wikilink" href="http://arduino.cc/en/Reference/DigitalWrite">digitalWrite()</a>, and <a class="wikilink" href="http://arduino.cc/en/Reference/DigitalRead">digitalRead()</a>
 functions.  They operate at 5 volts.  Each pin can provide or receive a
 maximum of 40 mA and has an internal pull-up resistor (disconnected by 
default) of 20-50 kOhms.  In addition, some pins have specialized 
functions:
</p>
<p class="vspace"></p><ul><li><strong>Serial: 0 (RX) and 1 (TX); Serial 1: 19 (RX) and 18 (TX); Serial 2: 17 (RX) and 16 (TX); Serial 3: 15 (RX) and 14 (TX).</strong>  Used to receive (RX) and transmit (TX) TTL serial data.  Pins 0 and 1 are also connected to the corresponding pins of the <span class="wikiword">ATmega16U2</span> USB-to-TTL Serial chip.  
<p class="vspace"></p></li><li><strong>External Interrupts: 2 (interrupt
 0), 3 (interrupt 1), 18 (interrupt 5), 19 (interrupt 4), 20 (interrupt 
3), and 21 (interrupt 2).</strong> These pins can be configured to trigger an interrupt on a low value, a rising or falling edge, or a change in value.  See the <a class="wikilink" href="http://arduino.cc/en/Reference/AttachInterrupt">attachInterrupt()</a> function for details.
<p class="vspace"></p></li><li><strong>PWM: 2 to 13 and 44 to 46.</strong>  Provide 8-bit PWM output with the <a class="wikilink" href="http://arduino.cc/en/Reference/AnalogWrite">analogWrite()</a> function.  
<p class="vspace"></p></li><li><strong>SPI: 50 (MISO), 51 (MOSI), 52 (SCK), 53 (SS).</strong>  These pins support SPI communication using the <a class="wikilink" href="http://arduino.cc/en/Reference/SPI">SPI library</a>.  The SPI pins are also broken out on the ICSP header, which is physically compatible with the Uno, Duemilanove and Diecimila.
<p class="vspace"></p></li><li><strong>LED: 13.</strong> There is a built-in LED connected to digital pin 13.  When the pin is HIGH value, the LED is on, when the pin is LOW, it's off.
<p class="vspace"></p></li><li><strong>TWI: 20 (SDA) and 21 (SCL).</strong>  Support TWI communication using the <a class="wikilink" href="http://arduino.cc/en/Reference/Wire">Wire library</a>.  Note that these pins are not in the same location as the TWI pins on the Duemilanove or Diecimila.
</li></ul><p class="vspace"></p><p>The Mega2560 has 16 analog inputs, 
each of which provide 10 bits of resolution (i.e. 1024 different 
values).  By default they measure from ground to 5 volts, though is it 
possible to change the upper end of their range using the AREF pin and 
analogReference() function. 
</p>
<p class="vspace"></p><p>There are a couple of other pins on the board:
</p>
<p class="vspace"></p><ul><li><strong>AREF.</strong> Reference voltage for the analog inputs.  Used with <a class="wikilink" href="http://arduino.cc/en/Reference/AnalogReference">analogReference</a>().
<p class="vspace"></p></li><li><strong>Reset.</strong> Bring this line 
LOW to reset the microcontroller.  Typically used to add a reset button 
to shields which block the one on the board.
</li></ul><p class="vspace"></p><h3>Communication</h3>
<p>The Arduino Mega2560 has a number of facilities for communicating 
with a computer, another Arduino, or other microcontrollers.  The <span class="wikiword">ATmega2560</span> provides four hardware <span class="wikiword">UARTs</span> for TTL (5V) serial communication.  An <span class="wikiword">ATmega16U2</span> (<span class="wikiword">ATmega</span>
 8U2 on the revision 1 and revision 2 boards) on the board channels one 
of these over USB  and provides a virtual com port to software on the 
computer (Windows machines will need a .inf file, but OSX and Linux 
machines will recognize the board as a COM port automatically.  The 
Arduino software includes a serial monitor which allows simple textual 
data to be sent to and from the board.  The RX and TX <span class="wikiword">LEDs</span> on the board will flash when data is being transmitted via the <span class="wikiword">ATmega8U2/ATmega16U2</span> chip and USB connection to the computer (but not for serial communication on pins 0 and 1).
</p>
<p class="vspace"></p><p>A <a class="urllink" href="http://www.arduino.cc/en/Reference/SoftwareSerial" rel="nofollow">SoftwareSerial library</a> allows for serial communication on any of the Mega2560's digital pins.
</p>
<p class="vspace"></p><p>The <span class="wikiword">ATmega2560</span> also supports TWI and SPI communication.  The Arduino software includes a Wire library to simplify use of the TWI bus; see the <a class="wikilink" href="http://arduino.cc/en/Reference/Wire">documentation</a> for details.  For SPI communication, use the <a class="wikilink" href="http://arduino.cc/en/Reference/SPI">SPI library</a>.
</p>
<p class="vspace"></p><h3>Programming</h3>
<p>The Arduino Mega can be programmed with the Arduino software (<a class="wikilink" href="http://arduino.cc/en/Main/Software">download</a>).  For details, see the <a class="wikilink" href="http://arduino.cc/en/Reference/HomePage">reference</a> and <a class="wikilink" href="http://arduino.cc/en/Tutorial/HomePage">tutorials</a>.
</p>
<p class="vspace"></p><p>The <span class="wikiword">ATmega2560</span> on the Arduino Mega comes preburned with a <a class="wikilink" href="http://arduino.cc/en/Tutorial/Bootloader">bootloader</a>
 that allows you to upload new code to it without the use of an external
 hardware programmer.  It communicates using the original <span class="wikiword">STK500</span> protocol (<a class="urllink" href="http://www.atmel.com/dyn/resources/prod_documents/doc2525.pdf" rel="nofollow">reference</a>, <a class="urllink" href="http://www.atmel.com/dyn/resources/prod_documents/avr061.zip" rel="nofollow">C header files</a>).
</p>
<p class="vspace"></p><p>You can also bypass the bootloader and program the microcontroller through the ICSP (In-Circuit Serial Programming) header; see <a class="wikilink" href="http://arduino.cc/en/Hacking/Programmer">these instructions</a> for details.
</p>
<p class="vspace"></p><p>The <span class="wikiword">ATmega16U2</span> (or 8U2 in the rev1 and rev2 boards) firmware source code is available <a class="urllink" href="http://github.com/arduino/Arduino/tree/master/hardware/arduino/firmwares/" rel="nofollow">in the Arduino repository</a>.  The <span class="wikiword">ATmega16U2</span>/8U2 is loaded with a DFU bootloader, which can be activated by:
</p><ul><li>On Rev1 boards: connecting the solder jumper on the back of the board (near the map of Italy) and then resetting the 8U2.  
</li><li>On Rev2 or later boards: there is a resistor that pulling the 
8U2/16U2 HWB line to ground, making it easier to put into DFU mode.  You
 can then use <a class="urllink" href="http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3886" rel="nofollow">Atmel's FLIP software</a> (Windows) or the <a class="urllink" href="http://dfu-programmer.sourceforge.net/" rel="nofollow">DFU programmer</a>
 (Mac OS X and Linux) to load a new firmware.  Or you can use the ISP 
header with an external programmer (overwriting the DFU bootloader).  
See <a class="urllink" href="http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1285962838" rel="nofollow">this user-contributed tutorial</a> for more information.
</li></ul><p class="vspace"></p><h3>Automatic (Software) Reset</h3>
<p>Rather then requiring a physical press of the reset button before an 
upload, the Arduino Mega2560 is designed in a way that allows it to be 
reset by software running on a connected computer.  One of the hardware 
flow control lines (DTR) of the <span class="wikiword">ATmega8U2</span> is connected to the reset line of the <span class="wikiword">ATmega2560</span>
 via a 100 nanofarad capacitor.  When this line is asserted (taken low),
 the reset line drops long enough to reset the chip.  The Arduino 
software uses this capability to allow you to upload code by simply 
pressing the upload button in the Arduino environment.  This means that 
the bootloader can have a shorter timeout, as the lowering of DTR can be
 well-coordinated with the start of the upload.  
</p>
<p class="vspace"></p><p>This setup has other implications.  When the 
Mega2560 is connected to either a computer running Mac OS X or Linux, it
 resets each time a connection is made to it from software (via USB).  
For the following half-second or so, the bootloader is running on the 
Mega2560.  While it is programmed to ignore malformed data (i.e. 
anything besides an upload of new code), it will intercept the first few
 bytes of data sent to the board after a connection is opened.  If a 
sketch running on the board receives one-time configuration or other 
data when it first starts, make sure that the software with which it 
communicates waits a second after opening the connection and before 
sending this data.
</p>
<p class="vspace"></p><p>The Mega2560 contains a trace that can be cut 
to disable the auto-reset.  The pads on either side of the trace can be 
soldered together to re-enable it.  It's labeled "RESET-EN".  You may 
also be able to disable the auto-reset by connecting a 110 ohm resistor 
from 5V to the reset line; see <a class="urllink" href="http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1213719666/all" rel="nofollow">this forum thread</a> for details.
</p>
<p class="vspace"></p><h3>USB Overcurrent Protection</h3>
<p>The Arduino Mega2560 has a resettable polyfuse that protects your 
computer's USB ports from shorts and overcurrent.  Although most 
computers provide their own internal protection, the fuse provides an 
extra layer of protection.  If more than 500 mA is applied to the USB 
port, the fuse will automatically break the connection until the short 
or overload is removed.  
</p>
<p class="vspace"></p><h3>Physical Characteristics and Shield Compatibility</h3>
<p>The maximum length and width of the Mega2560 PCB are 4 and 2.1 inches
 respectively, with the USB connector and power jack extending beyond 
the former dimension.  Three screw holes allow the board to be attached 
to a surface or case.  Note that the distance between digital pins 7 and
 8 is 160 mil (0.16"), not an even multiple of the 100 mil spacing of 
the other pins.
</p>
<p class="vspace"></p><p>The Mega2560 is designed to be compatible with 
most shields designed for the Uno, Diecimila or Duemilanove.  Digital 
pins 0 to 13 (and the adjacent AREF and GND pins), analog inputs 0 to 5,
 the power header, and ICSP header are all in equivalent locations.  
Further the main UART (serial port) is located on the same pins (0 and 
1), as are external interrupts 0 and 1 (pins 2 and 3 respectively).  SPI
 is available through the ICSP header on both the Mega2560 and 
Duemilanove / Diecimila.  <em>Please note that I<sup>2</sup>C is not located on the same pins on the Mega (20 and 21) as the Duemilanove / Diecimila (analog inputs 4 and 5).</em>
</p>
<p class="vspace"></p><div id="commentsbox">
</div>
</div>

				
				
				<!-- AddThis Button BEGIN -->
				<div class="addthis_toolbox addthis_default_style ">
				<a class="addthis_button_facebook_like at300b" fb:like:layout="button_count"><div data-send="false" data-href="http://arduino.cc/en/Main/arduinoBoardMega2560" data-font="arial" data-width="90" data-action="like" data-show_faces="false" data-layout="button_count" class="fb-like" data-ref=".UuMyX-raae8.like"></div></a>
				<a class="addthis_button_tweet at300b"><a data-width="110" data-hashtags="" data-related="" data-text="Arduino - ArduinoBoardMega2560:" data-count="horizontal" data-counturl="http://arduino.cc/en/Main/arduinoBoardMega2560" data-url="http://arduino.cc/en/Main/arduinoBoardMega2560#.UuMyX-w9bZA.twitter" class="twitter-share-button" href="http://twitter.com/share">Tweet</a></a>
				<a class="addthis_button_pinterest_pinit at300b" pi:pinit:layout="horizontal"><iframe src="//s7.addthis.com/static/r07/pinit017.html#url=http%253A%252F%252Farduino.cc%252Fen%252FMain%252FarduinoBoardMega2560&amp;media=&amp;description=Arduino%20-%20ArduinoBoardMega2560&amp;layout=horizontal&amp;ats=imp_url%3D1%26url%3Dhttp%253A%252F%252Farduino.cc%252Fen%252FMain%252FarduinoBoardMega2560%26title%3DArduino%2520-%2520ArduinoBoardMega2560%26smd%3Drsi%253D%2526gen%253D0%2526rsc%253D%2526dr%253Dhttp%25253A%25252F%25252Fwww.google.com.hk%25252Furl%25253Fsa%25253Dt%252526rct%25253Dj%252526q%25253Darduino%25252520mega2560%252526source%25253Dweb%252526cd%25253D5%252526ved%25253D0CDMQFjAE%252526url%25253D%25252568%25252574%25252574%25252570%2525253a%2525252f%2525252f%25252561%25252572%25252564%25252575%25252569%2525256e%2525256f%2525252e%25252563%25252563%2525252f%25252565%2525256e%2525252f%2525254d%25252561%25252569%2525256e%2525252f%25252561%25252572%25252564%25252575%25252569%2525256e%2525256f%25252542%2525256f%25252561%25252572%25252564%2525254d%25252565%25252567%25252561%25252532%25252535%25252536%25252530%252526ei%25253Dvy_jUu69OoTBiQe56ICgAw%252526usg%25253DAFQjCNF2_EcoD4zSHJe_8mD08OjswcZg_w%252526b%2526sta%253DAT-xa-5245a55032364734%25252F-%25252F-%25252F52e3325f4195ecad%25252F1%26description%3DArduino%2520-%2520ArduinoBoardMega2560&amp;atc=username%3Dxa-5245a55032364734" role="presentation" allowtransparency="true" scrollbars="no" style="width:100px; height:25px;" frameborder="0" scrolling="no"></iframe></a>
				<a class="addthis_counter addthis_pill_style"></a>
				<div class="atclear"></div></div>
				<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=xa-5245a55032364734"></script><div id="_atssh" style="visibility: hidden; height: 1px; width: 1px; position: absolute; z-index: 100000;"><iframe src="//s7.addthis.com/static/r07/sh147.html#" style="height: 1px; width: 1px; position: absolute; z-index: 100000; border: 0px none; left: 0px; top: 0px;" title="AddThis utility frame" id="_atssh601"></iframe></div><script src="http://s7.addthis.com/static/r07/core118.js" type="text/javascript"></script>
				<!-- AddThis Button END -->
			</div> <!-- eof pagetext -->			
	
	</div> <!-- eof page -->
		
	<!--PageFooterFmt-->
	<div id="pagefooter">
		<div class="row">
  <div class="small-8 columns">
	<ul class="inline-list">
		<li class="monospace">©Arduino</li>
		<li><a href="http://arduino.cc/en/Main/CopyrightNotice">Copyright Notice</a></li>
<!--		<li><a href='#'>About us</a></li>-->
		<li><a href="http://arduino.cc/en/Main/ContactUs">Contact us</a></li>
	</ul>
</div>

	</div>
	<!--/PageFooterFmt-->
	
	  <!--[if gte IE 9]><!-->
	  <script src="http://id.arduino.cc/js/foundation.min.js"></script>
	  <script src="http://id.arduino.cc/js/foundation.topbar.custom.js"></script>
	  <script>
	    $(document).foundation();
	  </script>
	  <!--<![endif]-->
	  <!--[if IE 8]>
	  <script src="http://id.arduino.cc/js/foundation_ie8.min.js"></script>
	  <script src="http://id.arduino.cc/js/ie8/jquery.foundation.orbit.js"></script>
	  <script src="http://id.arduino.cc/js/jquery.foundation.alerts.js"></script>
	  <script src="http://id.arduino.cc/js/app.js"></script>

	  <script>
	  $(window).load(function(){
	    $("#featured").orbit();
	  });
	  </script> 
	  <![endif]-->
	
	<script type="text/javascript">
	  var _gaq = _gaq || [];
	  _gaq.push(['_setAccount', 'UA-22581631-3']);
	  _gaq.push(['_setDomainName', 'arduino.cc']);
	  _gaq.push(['_trackPageview']);
	
	    (function() {
	    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
	    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
	    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	  })();
	</script>



</div><div id="fb-root"><script async="" src="http://connect.facebook.net/zh_CN/all.js"></script></div></body></html>