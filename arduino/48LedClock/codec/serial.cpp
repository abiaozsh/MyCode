#include <avr/io.h>
#include <avr/pgmspace.h>
#include <avr/interrupt.h>

#define block 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\


//d0,d1 serial
//d2~d7 6 io 74hc595
#define DDR_595_6 DDRD
#define PORT_595_6 PORTD

//b0 b1 b2 clk + st + oe 74hc595
#define DDR_CLK DDRB
#define PORT_CLK PORTB
#define BIT_CLK _BV(1)

#define DDR_OE DDRB
#define PORT_OE PORTB
#define BIT_OE _BV(0)

#define DDR_PNP1 DDRC
#define PORT_PNP1 PORTC
#define BIT_PNP1 _BV(3)

#define DDR_PNP2 DDRB
#define PORT_PNP2 PORTB
#define BIT_PNP2 _BV(2)


PROGMEM prog_uint8_t data0[] = {
//block block block block //1
//block block block block //2
//block block block block //3
//block block block block //4
//block block block block //5
//block block block block //6
//block block block block //7
//block block block block //8
//block block block block //9
//block block block block //10
//block block block block //11
//block block block block //12
//block block block block //13
//block block block block //14
//block block block block //15
//block block block block //16
};

PROGMEM prog_uint8_t data[] = {

  //00000000,00000000,11111000,00011111,00000000,00000000
0x00,0x00,0xF8,0x1F,0x00,0x00,
//00000000,00000000,00000111,11100000,00000000,00000000
0x00,0x00,0x07,0xE0,0x00,0x00,
//00000000,11000000,00000000,00000000,00000011,00000000
0x00,0xC0,0x00,0x00,0x03,0x00,
//00000000,00110000,00000000,00000000,00001100,00000000
0x00,0x30,0x00,0x00,0x0C,0x00,
//00000000,00001100,00000000,00000000,00110000,00000000
0x00,0x0C,0x00,0x00,0x30,0x00,
//00000000,00000010,00000000,00000000,01000000,00000000
0x00,0x02,0x00,0x00,0x40,0x00,
//00000000,00000001,00000000,00000000,10000000,00000000
0x00,0x01,0x00,0x00,0x80,0x00,
//10000000,00000000,00000000,00000000,00000000,00000001
0x80,0x00,0x00,0x00,0x00,0x01,
//01000000,00000000,00000000,00000000,00000000,00000010
0x40,0x00,0x00,0x00,0x00,0x02,
//00100000,00000000,00000000,00000000,00000000,00000100
0x20,0x00,0x00,0x00,0x00,0x04,
//00010000,00000000,00000000,00000000,00000000,00001000
0x10,0x00,0x00,0x00,0x00,0x08,
//00010000,00000000,00000000,00000000,00000000,00001000
0x10,0x00,0x00,0x00,0x00,0x08,
//00001000,00000000,00000000,00000000,00000000,00010000
0x08,0x00,0x00,0x00,0x00,0x10,
//00001000,00000000,00000000,00000000,00000000,00010000
0x08,0x00,0x00,0x00,0x00,0x10,
//00000100,00000000,00000000,00000000,00000000,00100000
0x04,0x00,0x00,0x00,0x00,0x20,
//00000100,00000000,00000000,00000000,00000000,00100000
0x04,0x00,0x00,0x00,0x00,0x20,
//00000010,00000000,00000000,00000000,00000000,01000000
0x02,0x00,0x00,0x00,0x00,0x40,
//00000010,00000000,00000000,00000000,00000000,01000000
0x02,0x00,0x00,0x00,0x00,0x40,
//00000010,00000000,00000000,00000000,00000000,01000000
0x02,0x00,0x00,0x00,0x00,0x40,
//00000001,00000000,00000000,00000000,00000000,01000000
0x01,0x00,0x00,0x00,0x00,0x40,
//00000001,00000000,00000000,00000000,00000000,10000000
0x01,0x00,0x00,0x00,0x00,0x80,
//00000001,00000000,00000000,00000000,00000000,10000000
0x01,0x00,0x00,0x00,0x00,0x80,
//00000001,00000000,00000000,00000000,00000000,10000000
0x01,0x00,0x00,0x00,0x00,0x80,
//00000001,00000000,00000000,00000000,00000000,10000000
0x01,0x00,0x00,0x00,0x00,0x80,
//00000001,00000000,00000000,00000000,00000000,10000000
0x01,0x00,0x00,0x00,0x00,0x80,
//00000001,00000000,00000000,00000000,00000000,10000000
0x01,0x00,0x00,0x00,0x00,0x80,
//00000001,00000000,00000000,00000000,00000000,10000000
0x01,0x00,0x00,0x00,0x00,0x80,
//00000001,00000000,00000000,00000000,00000000,10000000
0x01,0x00,0x00,0x00,0x00,0x80,
//00000001,00000000,00000000,00000000,00000000,01000000
0x01,0x00,0x00,0x00,0x00,0x40,
//00000010,00000000,00000000,00000000,00000000,01000000
0x02,0x00,0x00,0x00,0x00,0x40,
//00000010,00000000,00000000,00000000,00000000,01000000
0x02,0x00,0x00,0x00,0x00,0x40,
//00000010,00000000,00000000,00000000,00000000,01000000
0x02,0x00,0x00,0x00,0x00,0x40,
//00000100,00000000,00000000,00000000,00000000,00100000
0x04,0x00,0x00,0x00,0x00,0x20,
//00000100,00000000,00000000,00000000,00000000,00100000
0x04,0x00,0x00,0x00,0x00,0x20,
//00001000,00000000,00000000,00000000,00000000,00010000
0x08,0x00,0x00,0x00,0x00,0x10,
//00001000,00000000,00000000,00000000,00000000,00010000
0x08,0x00,0x00,0x00,0x00,0x10,
//00010000,00000000,00000000,00000000,00000000,00001000
0x10,0x00,0x00,0x00,0x00,0x08,
//00010000,00000000,00000000,00000000,00000000,00001000
0x10,0x00,0x00,0x00,0x00,0x08,
//00100000,00000000,00000000,00000000,00000000,00000100
0x20,0x00,0x00,0x00,0x00,0x04,
//01000000,00000000,00000000,00000000,00000000,00000010
0x40,0x00,0x00,0x00,0x00,0x02,
//10000000,00000000,00000000,00000000,00000000,00000001
0x80,0x00,0x00,0x00,0x00,0x01,
//00000000,00000001,00000000,00000000,10000000,00000000
0x00,0x01,0x00,0x00,0x80,0x00,
//00000000,00000010,00000000,00000000,01000000,00000000
0x00,0x02,0x00,0x00,0x40,0x00,
//00000000,00001100,00000000,00000000,00110000,00000000
0x00,0x0C,0x00,0x00,0x30,0x00,
//00000000,00110000,00000000,00000000,00001100,00000000
0x00,0x30,0x00,0x00,0x0C,0x00,
//00000000,11000000,00000000,00000000,00000011,00000000
0x00,0xC0,0x00,0x00,0x03,0x00,
//00000000,00000000,00001111,11110000,00000000,00000000
0x00,0x00,0x0F,0xF0,0x00,0x00,
//00000000,00000000,11110000,00001111,00000000,00000000
0x00,0x00,0xF0,0x0F,0x00,0x00,

  
  
/*
B00000001,B00000000,B00000000,B00000000,B00000000,B00000000,//00
B00000010,B00000000,B00000000,B00000000,B00000000,B00000000,//01
B00000100,B00000000,B00000000,B00000000,B00000000,B00000000,//02
B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,//03
B00010000,B00000000,B00000000,B00000000,B00000000,B00000000,//04
B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,//05
B01000000,B00000000,B00000000,B00000000,B00000000,B00000000,//06
B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,//07
B00000000,B00000001,B00000000,B00000000,B00000000,B00000000,//08
B00000000,B00000010,B00000000,B00000000,B00000000,B00000000,//09
B00000000,B00000100,B00000000,B00000000,B00000000,B00000000,//10
B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,//11
B00000000,B00010000,B00000000,B00000000,B00000000,B00000000,//12
B00000000,B00100000,B00000000,B00000000,B00000000,B00000000,//13
B00000000,B01000000,B00000000,B00000000,B00000000,B00000000,//14
B00000000,B10000000,B00000000,B00000000,B00000000,B00000000,//15
B00000000,B00000000,B00000001,B00000000,B00000000,B00000000,//16
B00000000,B00000000,B00000010,B00000000,B00000000,B00000000,//17
B00000000,B00000000,B00000100,B00000000,B00000000,B00000000,//18
B00000000,B00000000,B00001000,B00000000,B00000000,B00000000,//19
B00000000,B00000000,B00010000,B00000000,B00000000,B00000000,//20
B00000000,B00000000,B00100000,B00000000,B00000000,B00000000,//21
B00000000,B00000000,B01000000,B00000000,B00000000,B00000000,//22
B00000000,B00000000,B10000000,B00000000,B00000000,B00000000,//23
B00000000,B00000000,B00000000,B00000001,B00000000,B00000000,//24
B00000000,B00000000,B00000000,B00000010,B00000000,B00000000,//25
B00000000,B00010000,B00000000,B00000100,B00000000,B00000000,//26
B00000000,B00010000,B00000000,B00001000,B00000000,B00000000,//27
B00000000,B00010000,B00000000,B00010000,B00000000,B00000000,//28
B00000000,B00010000,B00000000,B00100000,B00000000,B00000000,//29
B00000000,B11111111,B00000000,B01000000,B00000000,B00000000,//30
B00000000,B00010000,B00000000,B10000000,B00000000,B00000000,//31
B00000000,B00010000,B00000000,B00000000,B00000001,B00000000,//32
B00000000,B00010000,B00000000,B00000000,B00000010,B00000000,//33
B00000000,B00010000,B00000000,B00000000,B00000100,B00000000,//34
B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,//35
B00000000,B00000000,B00000000,B00000000,B00010000,B00000000,//36
B00000000,B00000000,B00000000,B00000000,B00100000,B00000000,//37
B00000000,B00000000,B00000000,B00000000,B01000000,B00000000,//38
B00000000,B00000000,B00000000,B00000000,B10000000,B00000000,//39
B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,//40
B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,//41
B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,//42
B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,//43
B00000000,B00000000,B00000000,B00000000,B00000000,B00010000,//44
B00000000,B00000000,B00000000,B00000000,B00000000,B00100000,//45
B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,//46
B00000000,B00000000,B00000000,B00000000,B00000000,B10000000,//47
*/
};


uint8_t buff[384];

void SendLine(uint8_t* data);
void Conv(uint8_t* data);

int main(void) {
    pgm_read_byte_near(data0);
	TCCR1A = 0;
	TCCR1B = 1;
	TCCR1C = 0;
	TIMSK1 = 0;
	DDR_595_6 = 0xFC;//B11111100;
	DDR_CLK |= BIT_CLK;
	DDR_OE |= BIT_OE;
	DDR_PNP1 |= BIT_PNP1;

	for(uint16_t i=0;i<48;i++)
	{
		for(uint8_t t = 0;t<6;t++)
		{
			buff[i*8+t] = pgm_read_byte_near(data+i*6+t);
		}
		Conv(buff+i*8);
	}
    while(true)
    {

		for(uint16_t i=0;i<48;i++)
		{
			TCNT1 = 0;
			SendLine(buff+i*8);
			while(TCNT1<12000);
			PORT_PNP1 |= BIT_PNP1;//PNP on H
			PORT_OE &= ~BIT_OE;//OE on L
			while(TCNT1<15000);
			PORT_PNP1 &= ~BIT_PNP1;//PNP disable L
			PORT_OE |= BIT_OE;//OE disable H
		}
    }
}

void SendLine(uint8_t* data)
{
	PORT_CLK &= ~BIT_CLK;
        uint8_t* idx = data + 8;
	for(uint8_t i=0;i<8;i++)
	{
        idx--;
		PORT_595_6 = *idx;//setData bit0.1 is usart use bit2~7
		PORT_CLK |= BIT_CLK; //shift clock up
		PORT_CLK &= ~BIT_CLK; //shift clock down
	}
	PORT_CLK |= BIT_CLK; //shift clock up
	PORT_CLK &= ~BIT_CLK; //shift clock down
}

void Conv(uint8_t* data) // 6->8
{
  //                               7                       6                       5                       4                       3                       2  1  0 
  uint8_t b0 = ((data[5]&_BV(7))   ) | ((data[4]&_BV(0))<<6) | ((data[3]&_BV(7))>>2) | ((data[2]&_BV(0))<<4) | ((data[1]&_BV(7))>>4) | ((data[0]&_BV(0))<<2) |0 |0;
  uint8_t b1 = ((data[5]&_BV(5))<<2) | ((data[4]&_BV(2))<<4) | ((data[3]&_BV(5))   ) | ((data[2]&_BV(2))<<2) | ((data[1]&_BV(5))>>2) | ((data[0]&_BV(2))   ) |0 |0;
  uint8_t b2 = ((data[5]&_BV(3))<<4) | ((data[4]&_BV(4))<<2) | ((data[3]&_BV(3))<<2) | ((data[2]&_BV(4))   ) | ((data[1]&_BV(3))   ) | ((data[0]&_BV(4))>>2) |0 |0;
  uint8_t b3 = ((data[5]&_BV(1))<<6) | ((data[4]&_BV(6))   ) | ((data[3]&_BV(1))<<4) | ((data[2]&_BV(6))>>2) | ((data[1]&_BV(1))<<2) | ((data[0]&_BV(6))>>4) |0 |0;
  uint8_t b4 = ((data[4]&_BV(7))   ) | ((data[5]&_BV(0))<<6) | ((data[2]&_BV(7))>>2) | ((data[3]&_BV(0))<<4) | ((data[0]&_BV(7))>>4) | ((data[1]&_BV(0))<<2) |0 |0;
  uint8_t b5 = ((data[4]&_BV(5))<<2) | ((data[5]&_BV(2))<<4) | ((data[2]&_BV(5))   ) | ((data[3]&_BV(2))<<2) | ((data[0]&_BV(5))>>2) | ((data[1]&_BV(2))   ) |0 |0;
  uint8_t b6 = ((data[4]&_BV(3))<<4) | ((data[5]&_BV(4))<<2) | ((data[2]&_BV(3))<<2) | ((data[3]&_BV(4))   ) | ((data[0]&_BV(3))   ) | ((data[1]&_BV(4))>>2) |0 |0;
  uint8_t b7 = ((data[4]&_BV(1))<<6) | ((data[5]&_BV(6))   ) | ((data[2]&_BV(1))<<4) | ((data[3]&_BV(6))>>2) | ((data[0]&_BV(1))<<2) | ((data[1]&_BV(6))>>4) |0 |0;
  data[0] = b0;
  data[1] = b1;
  data[2] = b2;
  data[3] = b3;
  data[4] = b4;
  data[5] = b5;
  data[6] = b6;
  data[7] = b7;

}

