#include <avr/io.h>
#include <avr/pgmspace.h>
#include <avr/interrupt.h>

//d0,d1 serial
//d2~d7 6 io 74hc595
#define DDR_595_6 DDRD
#define PORT_595_6 PORTD

//b0 b1 b2 clk + st + oe 74hc595
#define DDR_CLK_ON   DDRB  |=  _BV(1)
#define PORT_CLK_ON  PORTB |=  _BV(1)
#define PORT_CLK_OFF PORTB &= ~_BV(1)

#define DDR_OE_ON   DDRB  |=  _BV(0)
#define PORT_OE_ON  PORTB |=  _BV(0)
#define PORT_OE_OFF PORTB &= ~_BV(0)

#define DDR_PNP1_ON   DDRC  |=  _BV(3)
#define PORT_PNP1_ON  PORTC |=  _BV(3)
#define PORT_PNP1_OFF PORTC &= ~_BV(3)

#define DDR_PNP2_ON   DDRC  |=  _BV(2)
#define PORT_PNP2_ON  PORTC |=  _BV(2)
#define PORT_PNP2_OFF PORTC &= ~_BV(2)

#define DDR_LED1_ON   DDRB  |=  _BV(4)
#define PORT_LED1_ON  PORTB |=  _BV(4)
#define PORT_LED1_OFF PORTB &= ~_BV(4)

#define DDR_LED2_ON   DDRB  |=  _BV(5)
#define PORT_LED2_ON  PORTB |=  _BV(5)
#define PORT_LED2_OFF PORTB &= ~_BV(5)

PROGMEM prog_uint8_t data[] = {
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,
//00000000,00000000,00000000,01001010,00000000,00001010
0x00,0x00,0x00,0x4A,0x00,0x0A,
//00000000,00000000,00000000,01111100,00000000,00011100
0x00,0x00,0x00,0x7C,0x00,0x1C,
//00000000,00000000,00000000,01000000,00000000,00000000
0x00,0x00,0x00,0x40,0x00,0x00,
//01000000,00000000,00000000,00000000,00000000,00000000
0x40,0x00,0x00,0x00,0x00,0x00,
//11000000,01111111,01000000,01000000,01000000,00000000
0xC0,0x7F,0x40,0x40,0x40,0x00,
//00000000,01000010,01000000,01000000,01000000,00000000
0x00,0x42,0x40,0x40,0x40,0x00,
//00000000,01000010,11000000,01111111,11000000,00011111
0x00,0x42,0xC0,0x7F,0xC0,0x1F,
//00000000,01000010,00000000,01000000,00000000,00000000
0x00,0x42,0x00,0x40,0x00,0x00,
//00000000,00111100,00000000,01000000,00000000,00000000
0x00,0x3C,0x00,0x40,0x00,0x00,
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,
//00000000,01000010,00000000,00000000,00000000,00000000
0x00,0x42,0x00,0x00,0x00,0x00,
//00000000,01111110,10000000,00111111,10000000,00011111
0x00,0x7E,0x80,0x3F,0x80,0x1F,
//00000000,00000010,01000000,01000000,01000000,00000000
0x00,0x02,0x40,0x40,0x40,0x00,
//00000000,01111110,01000000,01000000,01000000,00000000
0x00,0x7E,0x40,0x40,0x40,0x00,
//00000000,00000010,01000000,01000000,01000000,00000000
0x00,0x02,0x40,0x40,0x40,0x00,
//00000000,01111100,10000000,00111111,10000000,00011111
0x00,0x7C,0x80,0x3F,0x80,0x1F,
//00000000,01000000,00000000,00000000,00000000,00000000
0x00,0x40,0x00,0x00,0x00,0x00,
//00000000,00000010,00000001,00000000,00000000,00000000
0x00,0x02,0x01,0x00,0x00,0x00,
//00000000,11111110,00000001,00000000,00000000,00000000
0x00,0xFE,0x01,0x00,0x00,0x00,
//00000000,01000010,00000001,00000000,00000000,00000000
0x00,0x42,0x01,0x00,0x00,0x00,
//00000000,01000010,00000000,00000000,00000000,00000000
0x00,0x42,0x00,0x00,0x00,0x00,
//00000000,01000010,00000000,00000000,00000000,00000000
0x00,0x42,0x00,0x00,0x00,0x00,
//00000000,00111100,00000000,00000000,00000000,00000000
0x00,0x3C,0x00,0x00,0x00,0x00,
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,
//00000000,00000000,00000000,00000100,00000000,00000000
0x00,0x00,0x00,0x04,0x00,0x00,
//00000000,01100000,00000000,00000100,00000000,00000100
0x00,0x60,0x00,0x04,0x00,0x04,
//00000000,01100000,00000000,00000100,00000000,00001010
0x00,0x60,0x00,0x04,0x00,0x0A,
//00000000,00000000,10000000,00111111,00000000,00010001
0x00,0x00,0x80,0x3F,0x00,0x11,
//00000000,00000000,00000000,00000100,10000000,00000000
0x00,0x00,0x00,0x04,0x80,0x00,
//00000000,00000000,00000000,00000100,01000000,00000000
0x00,0x00,0x00,0x04,0x40,0x00,
//00000000,00000000,00000000,00000100,00000000,00000000
0x00,0x00,0x00,0x04,0x00,0x00,
//00000000,00011111,00000000,00000000,00000000,00000000
0x00,0x1F,0x00,0x00,0x00,0x00,
//10000000,00100000,00000000,00000000,00000000,00000100
0x80,0x20,0x00,0x00,0x00,0x04,
//01000000,01000000,00000000,00000000,00000000,00001010
0x40,0x40,0x00,0x00,0x00,0x0A,
//01000000,01001000,00000000,00000000,00000000,00010001
0x40,0x48,0x00,0x00,0x00,0x11,
//11000000,00111000,00000000,00000000,10000000,00000000
0xC0,0x38,0x00,0x00,0x80,0x00,
//00000000,00001000,00000000,00000000,01000000,00000000
0x00,0x08,0x00,0x00,0x40,0x00,
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,
//00000000,00111100,00000000,01100100,00000000,00000000
0x00,0x3C,0x00,0x64,0x00,0x00,
//00000000,01001010,00000000,01001010,00000000,00000000
0x00,0x4A,0x00,0x4A,0x00,0x00,
//00000000,01001010,00000000,01001010,00000000,00000000
0x00,0x4A,0x00,0x4A,0x00,0x00,
//00000000,01001010,00000000,01010010,00000000,00000000
0x00,0x4A,0x00,0x52,0x00,0x00,
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,
//00000000,00000000,00000000,00000000,00000000,00000000
0x00,0x00,0x00,0x00,0x00,0x00,

};


uint8_t buff[384];//48*8

void SendLine(uint8_t* data);
void Conv(uint8_t* data);

int main(void) {
	
	TCCR0A = 0;
	TCCR0B = 3;//1/64
	TIMSK0 = 0;

	TCCR1A = 0;
	TCCR1B = 5;//1/1024 (16000000/1024=15625)tick/s
	TCCR1C = 0;
	TIMSK1 = 0;
		
	DDR_595_6 = 0xFC;//B11111100;
	DDR_CLK_ON;
	DDR_OE_ON;
	DDR_PNP1_ON;
	DDR_LED1_ON;
	DDR_LED2_ON;
	
	while(true)
	{
		//init/////////////////////////////////////////////////////////////////////////////////////////////////////////////
		TCNT1 = 0;//0.000064 s/tick
		for(uint16_t i=0;i<48;i++)
		{
			for(uint8_t t = 0;t<6;t++)
			{
				buff[i*8+t] = pgm_read_byte_near(data+i*6+t);
			}
			Conv(buff+i*8);
		}
		//part1///////////////////////////////////////////////////////////////////////////////////////////////////////////
		while(TCNT1<100);//0.0064s
		for(uint8_t m = 0;m<10;m++)
		{
			for(uint16_t i=0;i<48;i++)
			{
				TCNT0 = 0;
				SendLine(buff+(i<<3));
				while(TCNT0<187);
				PORT_PNP1_ON;//PNP on H
				PORT_OE_OFF;//OE on L
				while(TCNT0<230);
				PORT_LED2_ON;//PNP on H
				while(TCNT0<235);
				PORT_PNP1_OFF;//PNP disable L
				PORT_OE_ON;//OE disable H
				PORT_LED2_OFF;//PNP disable L
			}
		}
		//while(TCNT1<30000);//part2///////////////////////////////////////////////////////////////////////////////////////////

		//while(TCNT1<30000+100);//0.0064s
		for(uint8_t m = 0;m<10;m++)
		{
			for(uint16_t i=0;i<48;i++)
			{
				TCNT0 = 0;
				SendLine(buff+((47-i)<<3));
				while(TCNT0<187);
				PORT_PNP1_ON;//PNP on H
				PORT_OE_OFF;//OE on L
				while(TCNT0<230);
				PORT_LED1_ON;//PNP on H
				while(TCNT0<235);
				PORT_PNP1_OFF;//PNP disable L
				PORT_OE_ON;//OE disable H
				PORT_LED1_OFF;//PNP disable L
			}
		}
		
		//while(TCNT1<60000);
    }
}

void SendLine(uint8_t* data)
{
	PORT_CLK_OFF;
	uint8_t* idx = data + 8;
	for(uint8_t i=0;i<8;i++)
	{
		idx--;
		PORT_595_6 = *idx;//setData bit0.1 is usart use bit2~7
		PORT_CLK_ON; //shift clock up
		PORT_CLK_OFF; //shift clock down
	}
	PORT_CLK_ON; //shift clock up
	PORT_CLK_OFF; //shift clock down
}

void SetPixel(uint8_t x,uint8_t y,uint8_t val)
{
	
}

void Conv(uint8_t* data) // 6->8
{
  //                               7                       6                       5                       4                       3                       2  1  0 
  uint8_t b0 = ((data[5]&_BV(7))   ) | ((data[4]&_BV(0))<<6) | ((data[3]&_BV(7))>>2) | ((data[2]&_BV(0))<<4) | ((data[1]&_BV(7))>>4) | ((data[0]&_BV(0))<<2) |0 |0;
  uint8_t b1 = ((data[5]&_BV(5))<<2) | ((data[4]&_BV(2))<<4) | ((data[3]&_BV(5))   ) | ((data[2]&_BV(2))<<2) | ((data[1]&_BV(5))>>2) | ((data[0]&_BV(2))   ) |0 |0;
  uint8_t b2 = ((data[5]&_BV(3))<<4) | ((data[4]&_BV(4))<<2) | ((data[3]&_BV(3))<<2) | ((data[2]&_BV(4))   ) | ((data[1]&_BV(3))   ) | ((data[0]&_BV(4))>>2) |0 |0;
  uint8_t b3 = ((data[5]&_BV(1))<<6) | ((data[4]&_BV(6))   ) | ((data[3]&_BV(1))<<4) | ((data[2]&_BV(6))>>2) | ((data[1]&_BV(1))<<2) | ((data[0]&_BV(6))>>4) |0 |0;
  uint8_t b4 = ((data[4]&_BV(7))   ) | ((data[5]&_BV(0))<<6) | ((data[2]&_BV(7))>>2) | ((data[3]&_BV(0))<<4) | ((data[0]&_BV(7))>>4) | ((data[1]&_BV(0))<<2) |0 |0;
  uint8_t b5 = ((data[4]&_BV(5))<<2) | ((data[5]&_BV(2))<<4) | ((data[2]&_BV(5))   ) | ((data[3]&_BV(2))<<2) | ((data[0]&_BV(5))>>2) | ((data[1]&_BV(2))   ) |0 |0;
  uint8_t b6 = ((data[4]&_BV(3))<<4) | ((data[5]&_BV(4))<<2) | ((data[2]&_BV(3))<<2) | ((data[3]&_BV(4))   ) | ((data[0]&_BV(3))   ) | ((data[1]&_BV(4))>>2) |0 |0;
  uint8_t b7 = ((data[4]&_BV(1))<<6) | ((data[5]&_BV(6))   ) | ((data[2]&_BV(1))<<4) | ((data[3]&_BV(6))>>2) | ((data[0]&_BV(1))<<2) | ((data[1]&_BV(6))>>4) |0 |0;
  data[0] = b0;
  data[1] = b1;
  data[2] = b2;
  data[3] = b3;
  data[4] = b4;
  data[5] = b5;
  data[6] = b6;
  data[7] = b7;

}

