


int char_table[] = {
0x00000000,0x00000000,0x00000000,0x00000000, // 0x00
0x00000000,0x00000000,0x00000000,0x00000000, // 0x01
0x00000000,0x00000000,0x00000000,0x00000000, // 0x02
0x00000000,0x00000000,0x00000000,0x00000000, // 0x03
0x00000000,0x00000000,0x00000000,0x00000000, // 0x04
0x00000000,0x00000000,0x00000000,0x00000000, // 0x05
0x00000000,0x00000000,0x00000000,0x00000000, // 0x06
0x00000000,0x00000000,0x00000000,0x00000000, // 0x07
0x00000000,0x00000000,0x00000000,0x00000000, // 0x08
0x00000000,0x00000000,0x00000000,0x00000000, // 0x09
0x00000000,0x00000000,0x00000000,0x00000000, // 0x0A
0x00000000,0x00000000,0x00000000,0x00000000, // 0x0B
0x00000000,0x00000000,0x00000000,0x00000000, // 0x0C
0x00000000,0x00000000,0x00000000,0x00000000, // 0x0D
0x00000000,0x00000000,0x00000000,0x00000000, // 0x0E
0x00000000,0x00000000,0x00000000,0x00000000, // 0x0F
0x00000000,0x00000000,0x00000000,0x00000000, // 0x10
0x00000000,0x00000000,0x00000000,0x00000000, // 0x11
0x00000000,0x00000000,0x00000000,0x00000000, // 0x12
0x00000000,0x00000000,0x00000000,0x00000000, // 0x13
0x00000000,0x00000000,0x00000000,0x00000000, // 0x14
0x00000000,0x00000000,0x00000000,0x00000000, // 0x15
0x00000000,0x00000000,0x00000000,0x00000000, // 0x16
0x00000000,0x00000000,0x00000000,0x00000000, // 0x17
0x00000000,0x00000000,0x00000000,0x00000000, // 0x18
0x00000000,0x00000000,0x00000000,0x00000000, // 0x19
0x00000000,0x00000000,0x00000000,0x00000000, // 0x1A
0x00000000,0x00000000,0x00000000,0x00000000, // 0x1B
0x00000000,0x00000000,0x00000000,0x00000000, // 0x1C
0x00000000,0x00000000,0x00000000,0x00000000, // 0x1D
0x00000000,0x00000000,0x00000000,0x00000000, // 0x1E
0x00000000,0x00000000,0x00000000,0x00000000, // 0x1F
0x00000000,0x00000000,0x00000000,0x00000000, // 0x20 space 0x20
0x0000183C,0x3C3C1818,0x18001818,0x00000000, // 0x21 !
0x00636363,0x22000000,0x00000000,0x00000000, // 0x22 "
0x00000036,0x367F3636,0x367F3636,0x00000000, // 0x23 #
0x0C0C3E63,0x61603E03,0x0343633E,0x0C0C0000, // 0x24 $
0x00000000,0x00616306,0x0C183363,0x00000000, // 0x25 %
0x0000001C,0x36361C3B,0x6E66663B,0x00000000, // 0x26 &amp;
0x00303030,0x60000000,0x00000000,0x00000000, // 0x27 '
0x00000C18,0x18303030,0x3018180C,0x00000000, // 0x28 (
0x0000180C,0x0C060606,0x060C0C18,0x00000000, // 0x29 )
0x00000000,0x42663CFF,0x3C664200,0x00000000, // 0x2A *
0x00000000,0x181818FF,0x18181800,0x00000000, // 0x2B +
0x00000000,0x00000000,0x00001818,0x18300000, // 0x2C ,
0x00000000,0x000000FF,0x00000000,0x00000000, // 0x2D -
0x00000000,0x00000000,0x00001818,0x00000000, // 0x2E .
0x00000103,0x070E1C38,0x70E0C080,0x00000000, // 0x2F / (forward slash)
0x00003E63,0x63636B6B,0x6363633E,0x00000000, // 0x30 0 0x30
0x00000C1C,0x3C0C0C0C,0x0C0C0C3F,0x00000000, // 0x31 1
0x00003E63,0x03060C18,0x3061637F,0x00000000, // 0x32 2
0x00003E63,0x03031E03,0x0303633E,0x00000000, // 0x33 3
0x0000060E,0x1E366666,0x7F06060F,0x00000000, // 0x34 4
0x00007F60,0x60607E03,0x0363733E,0x00000000, // 0x35 5
0x00001C30,0x60607E63,0x6363633E,0x00000000, // 0x36 6
0x00007F63,0x0306060C,0x0C181818,0x00000000, // 0x37 7
0x00003E63,0x63633E63,0x6363633E,0x00000000, // 0x38 8
0x00003E63,0x6363633F,0x0303063C,0x00000000, // 0x39 9
0x00000000,0x00181800,0x00001818,0x00000000, // 0x3A :
0x00000000,0x00181800,0x00001818,0x18300000, // 0x3B ;
0x00000006,0x0C183060,0x30180C06,0x00000000, // 0x3C &lt;
0x00000000,0x00007E00,0x007E0000,0x00000000, // 0x3D =
0x00000060,0x30180C06,0x0C183060,0x00000000, // 0x3E &gt;
0x00003E63,0x63060C0C,0x0C000C0C,0x00000000, // 0x3F ?
0x00003E63,0x636F6B6B,0x6E60603E,0x00000000, // 0x40 @ 0x40
0x0000081C,0x36636363,0x7F636363,0x00000000, // 0x41 A
0x00007E33,0x33333E33,0x3333337E,0x00000000, // 0x42 B
0x00001E33,0x61606060,0x6061331E,0x00000000, // 0x43 C
0x00007C36,0x33333333,0x3333367C,0x00000000, // 0x44 D
0x00007F33,0x31343C34,0x3031337F,0x00000000, // 0x45 E
0x00007F33,0x31343C34,0x30303078,0x00000000, // 0x46 F
0x00001E33,0x6160606F,0x6363371D,0x00000000, // 0x47 G
0x00006363,0x63637F63,0x63636363,0x00000000, // 0x48 H
0x00003C18,0x18181818,0x1818183C,0x00000000, // 0x49 I
0x00000F06,0x06060606,0x0666663C,0x00000000, // 0x4A J
0x00007333,0x36363C36,0x36333373,0x00000000, // 0x4B K
0x00007830,0x30303030,0x3031337F,0x00000000, // 0x4C L
0x00006377,0x7F6B6363,0x63636363,0x00000000, // 0x4D M
0x00006363,0x737B7F6F,0x67636363,0x00000000, // 0x4E N
0x00001C36,0x63636363,0x6363361C,0x00000000, // 0x4F O
0x00007E33,0x33333E30,0x30303078,0x00000000, // 0x50 P   0x50
0x00003E63,0x63636363,0x636B6F3E,0x06070000, // 0x51 Q
0x00007E33,0x33333E36,0x36333373,0x00000000, // 0x52 R
0x00003E63,0x63301C06,0x0363633E,0x00000000, // 0x53 S
0x0000FFDB,0x99181818,0x1818183C,0x00000000, // 0x54 T
0x00006363,0x63636363,0x6363633E,0x00000000, // 0x55 U
0x00006363,0x63636363,0x63361C08,0x00000000, // 0x56 V
0x00006363,0x6363636B,0x6B7F3636,0x00000000, // 0x57 W
0x0000C3C3,0x663C1818,0x3C66C3C3,0x00000000, // 0x58 X
0x0000C3C3,0xC3663C18,0x1818183C,0x00000000, // 0x59 Y
0x00007F63,0x43060C18,0x3061637F,0x00000000, // 0x5A Z
0x00003C30,0x30303030,0x3030303C,0x00000000, // 0x5B [
0x000080C0,0xE070381C,0x0E070301,0x00000000, // 0x5C \ (back slash)
0x00003C0C,0x0C0C0C0C,0x0C0C0C3C,0x00000000, // 0x5D ]
0x081C3663,0x00000000,0x00000000,0x00000000, // 0x5E ^
0x00000000,0x00000000,0x00000000,0xFF000000, // 0x5F _
0x18180C00,0x00000000,0x00000000,0x00000000, // 0x60 `    0x60
0x00000000,0x003C4606,0x3E66663B,0x00000000, // 0x61 a
0x00007030,0x303C3633,0x3333336E,0x00000000, // 0x62 b
0x00000000,0x003E6360,0x6060633E,0x00000000, // 0x63 c
0x00000E06,0x061E3666,0x6666663B,0x00000000, // 0x64 d
0x00000000,0x003E6363,0x7E60633E,0x00000000, // 0x65 e
0x00001C36,0x32307C30,0x30303078,0x00000000, // 0x66 f
0x00000000,0x003B6666,0x66663E06,0x663C0000, // 0x67 g
0x00007030,0x30363B33,0x33333373,0x00000000, // 0x68 h
0x00000C0C,0x001C0C0C,0x0C0C0C1E,0x00000000, // 0x69 i
0x00000606,0x000E0606,0x06060666,0x663C0000, // 0x6A j
0x00007030,0x30333336,0x3C363373,0x00000000, // 0x6B k
0x00001C0C,0x0C0C0C0C,0x0C0C0C1E,0x00000000, // 0x6C l
0x00000000,0x006E7F6B,0x6B6B6B6B,0x00000000, // 0x6D m
0x00000000,0x006E3333,0x33333333,0x00000000, // 0x6E n
0x00000000,0x003E6363,0x6363633E,0x00000000, // 0x6F o
0x00000000,0x006E3333,0x33333E30,0x30780000, // 0x70 p    0x70
0x00000000,0x003B6666,0x66663E06,0x060F0000, // 0x71 q
0x00000000,0x006E3B33,0x30303078,0x00000000, // 0x72 r
0x00000000,0x003E6338,0x0E03633E,0x00000000, // 0x73 s
0x00000818,0x187E1818,0x18181B0E,0x00000000, // 0x74 t
0x00000000,0x00666666,0x6666663B,0x00000000, // 0x75 u
0x00000000,0x00636336,0x361C1C08,0x00000000, // 0x76 v
0x00000000,0x00636363,0x6B6B7F36,0x00000000, // 0x77 w
0x00000000,0x0063361C,0x1C1C3663,0x00000000, // 0x78 x
0x00000000,0x00636363,0x63633F03,0x063C0000, // 0x79 y
0x00000000,0x007F660C,0x1830637F,0x00000000, // 0x7A z
0x00000E18,0x18187018,0x1818180E,0x00000000, // 0x7B {
0x00001818,0x18181800,0x18181818,0x18000000, // 0x7C |
0x00007018,0x18180E18,0x18181870,0x00000000, // 0x7D }
0x00003B6E,0x00000000,0x00000000,0x00000000, // 0x7E ~
0x0070D8D8,0x70000000,0x00000000,0x00000000  // 0x7F DEL
};

int x;
int y;
int screen_base;
int screenInited = 0;
int screenInit(int screenBase){
  x = 0;
  y = 0;
  IOWR(VGA, VGA_BASE, screenBase);//1024=2Mbyte
  screen_base = screenBase*2048;
  for(int i=0;i<0x80000;i++){
    ((int*)(screen_base))[i] = 0;//at 2Mbyte
  }
  screenInited = 1;
}
int printScreen(int chr){
  if(screenInited){
    for(int j=0;j<16;j++){
      void* addr;
      for(int i=0;i<8;i++){
        int a = (chr*4) + (j>>2);
        int b = ((3-(j&3))<<3)  +  (7-i);
        //printInt(a);print(" ");
        //printInt(b);print(" ");
        int val = char_table[a]>>( b ) & 1;
        //uart_write('0'+val);print("\r\n");
        int calc_x = x * 8 + i;
        int calc_y = y * 16 + j;
        addr = (void*)(screen_base+(calc_x+calc_y*1024)*2);
        *((short*)(addr)) = val?0xFFFF:0x0000;//at 2Mbyte
      }
      flushCache(addr);
    }
    x++;
    if(x==80 || (chr == 0x0A)){
      x=0;
      y++;
      if(y>=30){
        y=0;
      }
      
      for(int j=0;j<16;j++){
        void* addr;
        for(int i=0;i<1024;i++){
          int calc_x = x * 8 + i;
          int calc_y = y * 16 + j;
          addr = (void*)(screen_base+(calc_x+calc_y*1024)*2);
          *((short*)(addr)) = 0x0000;//at 2Mbyte
        }
        flushCache(addr);
      }
      
    }
  }

}


#define PS2_TAB				9
#define PS2_ENTER			10
#define PS2_BACKSPACE			127
#define PS2_ESC				27
#define PS2_INSERT			0
#define PS2_DELETE			127
#define PS2_HOME			0
#define PS2_END				0
#define PS2_PAGEUP			25
#define PS2_PAGEDOWN			26
#define PS2_UPARROW			11
#define PS2_LEFTARROW			8
#define PS2_DOWNARROW			10
#define PS2_RIGHTARROW			21
#define PS2_F1				0
#define PS2_F2				0
#define PS2_F3				0
#define PS2_F4				0
#define PS2_F5				0
#define PS2_F6				0
#define PS2_F7				0
#define PS2_F8				0
#define PS2_F9				0
#define PS2_F10				0
#define PS2_F11				0
#define PS2_F12				0
#define PS2_SCROLL			0

//int b[1000000];

int PS2Keymap_US[] = {
  // without shift
	0, PS2_F9, 0, PS2_F5, PS2_F3, PS2_F1, PS2_F2, PS2_F12,
	0, PS2_F10, PS2_F8, PS2_F6, PS2_F4, PS2_TAB, '`', 0,
	0, 0 /*Lalt*/, 0 /*Lshift*/, 0, 0 /*Lctrl*/, 'q', '1', 0,
	0, 0, 'z', 's', 'a', 'w', '2', 0,
	0, 'c', 'x', 'd', 'e', '4', '3', 0,
	0, ' ', 'v', 'f', 't', 'r', '5', 0,
	0, 'n', 'b', 'h', 'g', 'y', '6', 0,
	0, 0, 'm', 'j', 'u', '7', '8', 0,
	0, ',', 'k', 'i', 'o', '0', '9', 0,
	0, '.', '/', 'l', ';', 'p', '-', 0,
	0, 0, '\'', 0, '[', '=', 0, 0,
	0 /*CapsLock*/, 0 /*Rshift*/, PS2_ENTER /*Enter*/, ']', 0, '\\', 0, 0,
	0, 0, 0, 0, 0, 0, PS2_BACKSPACE, 0,
	0, '1', 0, '4', '7', 0, 0, 0,
	'0', '.', '2', '5', '6', '8', PS2_ESC, 0 /*NumLock*/,
	PS2_F11, '+', '3', '-', '*', '9', PS2_SCROLL, 0,
	0, 0, 0, PS2_F7 };

int uart_read(int timeout){
  if(timeout!=-1){
    IOWR(MYTIMER, 0 ,0);
  }
  while(1){
    if(timeout!=-1){
      int timer = IORD(MYTIMER, 0);
      if(timer>timeout){
        return -1;
      }
    }
    int tmp = IORD(MYUART, 0);
    if(tmp&0x100){
      return tmp & 0xFF;
    }
    
    tmp = IORD(MYKEYB, 0);
    if(tmp&0x400){
      tmp = (tmp>>1) & 0xFF;
      if(tmp == 0xF0 || tmp ==0xE0)
      {
        uart_read(timeout);
      }
      else{
        return PS2Keymap_US[tmp];
      }
    }
  }
}

int uart_read(){
  uart_read(-1);
}

int uart_write(int val){
  while((IORD(MYUART, 1)) & 0x100);
  IOWR(MYUART, 1 ,val);
  printScreen(val);
}


