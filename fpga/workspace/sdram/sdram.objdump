
sdram.elf:     file format elf32-littlenios2
sdram.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x020001b4

Program Header:
    LOAD off    0x00001000 vaddr 0x02000000 paddr 0x02000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x02000020 paddr 0x02000020 align 2**12
         filesz 0x00011b8c memsz 0x00011b8c flags r-x
    LOAD off    0x00012bac vaddr 0x02011bac paddr 0x02012698 align 2**12
         filesz 0x00000aec memsz 0x00000aec flags rw-
    LOAD off    0x00014184 vaddr 0x02013184 paddr 0x02013184 align 2**12
         filesz 0x00000000 memsz 0x000003ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  02000000  02000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  02000020  02000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000113c4  020001b4  020001b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000634  02011578  02011578  00012578  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000aec  02011bac  02012698  00012bac  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003ec  02013184  02013184  00014184  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000026  00000000  00000000  00013698  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000f98  00000000  00000000  000136c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000016cd  00000000  00000000  00014658  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002c376  00000000  00000000  00015d25  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009d5f  00000000  00000000  0004209b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000192a0  00000000  00000000  0004bdfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001e50  00000000  00000000  0006509c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000029b4  00000000  00000000  00066eec  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00011b71  00000000  00000000  000698a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  0007b414  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000b30  00000000  00000000  0007b448  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007f4fa  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0007f4fd  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007f509  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007f50a  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0007f50b  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007f50f  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007f513  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000006  00000000  00000000  0007f517  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000006  00000000  00000000  0007f51d  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000006  00000000  00000000  0007f523  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000003  00000000  00000000  0007f529  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000020  00000000  00000000  0007f52c  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0003e492  00000000  00000000  0007f54c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
02000000 l    d  .entry	00000000 .entry
02000020 l    d  .exceptions	00000000 .exceptions
020001b4 l    d  .text	00000000 .text
02011578 l    d  .rodata	00000000 .rodata
02011bac l    d  .rwdata	00000000 .rwdata
02013184 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
020001fc l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0200036c l     F .text	00000058 __sprint_r
020115ea l     O .rodata	00000010 blanks.3452
020115da l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
02011602 l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
02011725 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
02003b50 l     F .text	00000218 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0200554c l     F .text	00000058 std
02005658 l     F .text	00000008 __fp_lock
02005660 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
02011bac l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
02012664 l     O .rwdata	00000004 charset
020118cc l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
02011a14 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
02008a10 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtod.c
02008f24 l     F .text	00000048 match
020123d4 l     O .rwdata	00000014 fpi.1950
02011a30 l     O .rodata	00000028 tinytens
020123c0 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0200b61c l     F .text	00000024 htinit
0200b6a8 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0200bf10 l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0200d134 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0200e35c l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0200ee34 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0200ee94 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0200ef94 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0200f0b4 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0200f194 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0200f2f0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0200f51c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
02012688 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0200f7b8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
02012590 l     O .rwdata	000000c4 uart_0
0200f8a8 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0200f8e0 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
0200fba0 l     F .text	0000009c altera_avalon_uart_irq
0200fc3c l     F .text	000000e0 altera_avalon_uart_rxirq
0200fd1c l     F .text	0000015c altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
02010108 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
02010330 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
02010488 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
020108ac l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
020109e8 l     F .text	000000dc alt_file_locked
02010c4c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
02011360 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
02011514 l     F .text	00000040 alt_sim_halt
02007670 g     F .text	00000094 _mprec_log10
0200775c g     F .text	00000088 __any_on
0200c1a4 g     F .text	00000070 _isatty_r
020119ec g     O .rodata	00000028 __mprec_tinytens
0200f350 g     F .text	0000006c alt_main
020132e0 g     O .bss	00000100 alt_irq
0200c214 g     F .text	00000078 _lseek_r
02012698 g       *ABS*	00000000 __flash_rwdata_start
0200dc54 g     F .text	00000088 __eqdf2
02013570 g       *ABS*	00000000 __alt_heap_start
02000278 g     F .text	00000044 printf
02008cb0 g     F .text	00000068 __sseek
020055b4 g     F .text	000000a4 __sinit
020064f4 g     F .text	00000084 _setlocale_r
020056b4 g     F .text	00000068 __sfmoreglue
0200b2cc g     F .text	0000001c ungetc
0200f3dc g     F .text	00000020 __malloc_unlock
02008f6c g     F .text	000014e4 _strtod_r
020070ec g     F .text	000000e0 memmove
020056a4 g     F .text	00000010 _cleanup
020077e4 g     F .text	000000bc _Balloc
0200dd64 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
02000000 g     F .entry	0000001c __reset
02000020 g       *ABS*	00000000 __flash_exceptions_start
0200b5a8 g     F .text	00000074 _fstat_r
0201319c g     O .bss	00000004 errno
02003914 g     F .text	00000024 __svfscanf
0200e698 g     F .text	0000002c __make_fp
020131a4 g     O .bss	00000004 alt_argv
0201a654 g       *ABS*	00000000 _gp
02012410 g     O .rwdata	00000180 alt_fd_list
02010e70 g     F .text	00000094 alt_find_dev
0200704c g     F .text	000000a0 memcpy
0200bf5c g     F .text	00000248 __hexnan
02005698 g     F .text	0000000c _cleanup_r
0200df84 g     F .text	000000f8 __floatsidf
02010970 g     F .text	00000078 alt_io_redirect
0200de74 g     F .text	00000088 __ltdf2
02011578 g       *ABS*	00000000 __DTOR_END__
02006ee8 g     F .text	00000040 mbrtowc
02003938 g     F .text	00000068 _vfscanf_r
020075c0 g     F .text	000000b0 __ratio
00000000  w      *UND*	00000000 malloc
020002bc g     F .text	00000034 _printf_r
0200e498 g     F .text	00000008 __udivsi3
0200eff4 g     F .text	000000c0 isatty
020064a4 g     F .text	0000002c iswspace
020118fc g     O .rodata	000000c8 __mprec_tens
020064d0 g     F .text	00000008 __locale_charset
0200c39c g     F .text	000000a4 __fixunsdfsi
020110dc g     F .text	00000090 alt_icache_flush
02013190 g     O .bss	00000004 __malloc_top_pad
0200ad40 g     F .text	00000024 strtoul
02012660 g     O .rwdata	00000004 __mb_cur_max
020064d8 g     F .text	0000000c _localeconv_r
0200ad64 g     F .text	000002f0 _strtoull_r
02007edc g     F .text	0000003c __i2b
02005e88 g     F .text	0000049c __sfvwrite_r
02008a9c g     F .text	00000070 _sbrk_r
0200c28c g     F .text	00000078 _read_r
02011fac g     O .rwdata	0000000c __lc_ctype
02012680 g     O .rwdata	00000004 alt_max_fd
0200e9d8 g     F .text	00000138 __unpack_d
0200b484 g     F .text	00000110 _fclose_r
02005518 g     F .text	00000034 fflush
02013194 g     O .bss	00000004 __malloc_max_sbrked_mem
0200d5c4 g     F .text	00000074 __adddf3
0200cfcc g     F .text	00000078 __nesf2
020074a0 g     F .text	00000120 __b2d
0200ca1c g     F .text	000005b0 __umoddi3
0200f200 g     F .text	000000f0 lseek
0201265c g     O .rwdata	00000004 _global_impure_ptr
02008258 g     F .text	000005f4 _realloc_r
02013570 g       *ABS*	00000000 __bss_end
020107b4 g     F .text	000000f8 alt_iic_isr_register
02010d44 g     F .text	0000010c alt_tick
020131e0 g     O .bss	00000100 __hexdig
0200c440 g     F .text	000005dc __udivdi3
020119c4 g     O .rodata	00000028 __mprec_bigtens
02008138 g     F .text	00000120 __s2b
0200e1c8 g     F .text	00000194 __floatunsidf
020073c0 g     F .text	00000060 __mcmp
0200fad8 g     F .text	000000c8 altera_avalon_uart_init
02012654 g     O .rwdata	00000004 __ctype_ptr
02005680 g     F .text	00000018 __fp_lock_all
0201076c g     F .text	00000048 alt_ic_irq_enabled
02010cac g     F .text	00000098 alt_alarm_stop
0200a7d4 g     F .text	00000024 strtol
020131ac g     O .bss	00000004 alt_irq_active
020000ec g     F .exceptions	000000c8 alt_irq_handler
020123e8 g     O .rwdata	00000028 alt_dev_null
0200e528 g     F .text	000000c8 __unpack_f
02010390 g     F .text	00000044 alt_dcache_flush_all
0200728c g     F .text	00000070 __hi0bits
0200e07c g     F .text	000000d8 __fixdfsi
0200a574 g     F .text	0000001c strtod
02012698 g       *ABS*	00000000 __ram_rwdata_end
02012678 g     O .rwdata	00000008 alt_dev_list
0200f698 g     F .text	00000120 write
0200d044 g     F .text	00000078 __gtsf2
02011bac g       *ABS*	00000000 __ram_rodata_end
0200eec0 g     F .text	000000d4 fstat
0200defc g     F .text	00000088 __ledf2
02008018 g     F .text	00000120 __pow5mult
02013184 g     O .bss	00000004 __nlocale_changed
0200e4a0 g     F .text	00000008 __umodsi3
020002f0 g     F .text	00000034 _scanf_r
02013570 g       *ABS*	00000000 end
0200ebd8 g     F .text	00000160 __pack_f
02010168 g     F .text	000001c8 altera_avalon_uart_write
02011574 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0200f950 g     F .text	00000090 alt_avalon_timer_sc_init
0200fa38 g     F .text	00000058 altera_avalon_uart_write_fd
0200e4a8 g     F .text	00000080 __clzsi2
0200fa90 g     F .text	00000048 altera_avalon_uart_close_fd
020055a4 g     F .text	00000004 __sfp_lock_acquire
02006f68 g     F .text	000000e4 memchr
020003c4 g     F .text	00001eac ___vfprintf_internal_r
02008c48 g     F .text	00000060 _sprintf_r
02005b74 g     F .text	00000314 _free_r
02011364 g     F .text	000001b0 __call_exitprocs
02013188 g     O .bss	00000004 __mlocale_changed
0201266c g     O .rwdata	00000004 __malloc_sbrk_base
020001b4 g     F .text	0000004c _start
020131b0 g     O .bss	00000004 _alt_tick_rate
0200a7f8 g     F .text	00000318 _strtoll_r
02007ba8 g     F .text	0000014c __lshift
020131b4 g     O .bss	00000004 _alt_nticks
0200f3fc g     F .text	00000120 read
0200f84c g     F .text	0000005c alt_sys_init
0201122c g     F .text	00000134 __register_exitproc
02007cf4 g     F .text	000001e8 __multiply
02011bac g       *ABS*	00000000 __ram_rwdata_start
02011578 g       *ABS*	00000000 __ram_rodata_start
020131b8 g     O .bss	00000028 __malloc_current_mallinfo
020078a0 g     F .text	0000017c __d2b
0200ab10 g     F .text	00000230 _strtoul_r
02011024 g     F .text	000000b8 alt_get_fd
0200eb10 g     F .text	000000c8 __fpcmp_parts_d
0200b414 g     F .text	00000070 _close_r
020111b8 g     F .text	00000074 memcmp
02013570 g       *ABS*	00000000 __alt_stack_base
02003a14 g     F .text	0000013c __swsetup_r
0200d9fc g     F .text	00000258 __divdf3
0200571c g     F .text	000000f0 __sfp
02007704 g     F .text	00000058 __copybits
02011fb8 g     O .rwdata	00000408 __malloc_av_
020055b0 g     F .text	00000004 __sinit_lock_release
0200d638 g     F .text	000003c4 __muldf3
02008d94 g     F .text	00000060 __sread
02005a08 g     F .text	00000040 fread
02010f04 g     F .text	00000120 alt_find_file
020103d4 g     F .text	000000b4 alt_dev_llist_insert
0200f3bc g     F .text	00000020 __malloc_lock
0200f5dc g     F .text	000000bc sbrk
0200531c g     F .text	000001fc _fflush_r
0200b360 g     F .text	000000b4 _calloc_r
02013184 g       *ABS*	00000000 __bss_start
020071cc g     F .text	00000098 memset
02000200 g     F .text	00000078 main
020131a8 g     O .bss	00000004 alt_envp
02013198 g     O .bss	00000004 __malloc_max_total_mem
0200d0bc g     F .text	00000078 __ltsf2
0200580c g     F .text	000001fc _fread_r
02008ca8 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
0200b594 g     F .text	00000014 fclose
0200a590 g     F .text	00000244 _strtol_r
0200e154 g     F .text	00000074 __truncdfsf2
020133e0 g     O .bss	00000190 _atexit0
02003d68 g     F .text	000015b4 _dtoa_r
02006728 g     F .text	00000740 _malloc_r
02012684 g     O .rwdata	00000004 alt_errno
0200b054 g     F .text	000000dc __submore
020063ec g     F .text	000000b8 _fwalk
02006f28 g     F .text	00000040 _mbtowc_r
0200e3d8 g     F .text	00000060 __divsi3
02011a74 g     O .rodata	00000014 __thenan_df
02005a48 g     F .text	0000012c _malloc_trim_r
02011578 g       *ABS*	00000000 __CTOR_END__
02008df4 g     F .text	000000bc strcmp
02011578 g       *ABS*	00000000 __flash_rodata_start
02011578 g       *ABS*	00000000 __DTOR_LIST__
0200dcdc g     F .text	00000088 __nedf2
0200f818 g     F .text	00000034 alt_irq_init
0200f57c g     F .text	00000060 alt_release_fd
02008bd4 g     F .text	00000074 sprintf
02011a88 g     O .rodata	00000100 __clz_tab
0201318c g     O .bss	00000004 _PathLocale
0200a450 g     F .text	00000124 strtof
0201116c g     F .text	00000014 atexit
0200b2e8 g     F .text	00000078 _write_r
02006578 g     F .text	0000001c setlocale
02000324 g     F .text	00000048 scanf
02008bcc g     F .text	00000008 nanf
02012658 g     O .rwdata	00000004 _impure_ptr
020131a0 g     O .bss	00000004 alt_argc
02006e68 g     F .text	00000080 _mbrtowc_r
0201054c g     F .text	00000064 _do_dtors
0200884c g     F .text	000001c4 __srefill_r
02000000 g       *ABS*	00000000 __alt_mem_sdram_0
02000020 g       .exceptions	00000000 alt_irq_entry
02007420 g     F .text	00000080 __ulp
02008a2c g     F .text	00000040 __isinfd
02005668 g     F .text	00000018 __fp_unlock_all
02012670 g     O .rwdata	00000008 alt_fs_list
02000020 g       *ABS*	00000000 __ram_exceptions_start
020064e4 g     F .text	00000010 localeconv
020105e0 g     F .text	00000050 alt_ic_isr_register
0200b640 g     F .text	00000068 __hexdig_init
02012698 g       *ABS*	00000000 _edata
0200f9e0 g     F .text	00000058 altera_avalon_uart_read_fd
02013570 g       *ABS*	00000000 _end
020001b4 g       *ABS*	00000000 __ram_exceptions_end
020039a0 g     F .text	00000074 vfscanf
020106cc g     F .text	000000a0 alt_ic_irq_disable
02008d18 g     F .text	0000007c __swrite
02012668 g     O .rwdata	00000004 __malloc_trim_threshold
02010e50 g     F .text	00000020 altera_nios2_qsys_irq_init
02011180 g     F .text	00000038 exit
02006324 g     F .text	000000c8 _fwalk_reent
02007a1c g     F .text	0000018c __mdiff
0200e438 g     F .text	00000060 __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
02000020 g     F .exceptions	00000000 alt_exception
020055a8 g     F .text	00000004 __sfp_lock_release
02008b0c g     F .text	000000c0 __sccl
02011624 g     O .rodata	00000101 _ctype_
0200fe78 g     F .text	00000060 altera_avalon_uart_close
0200e5f0 g     F .text	000000a8 __fpcmp_parts_f
02011554 g     F .text	00000020 _exit
02008a6c g     F .text	00000030 __isnand
0200c304 g     F .text	00000098 __muldi3
02006594 g     F .text	00000194 __smakebuf_r
02008eb0 g     F .text	00000074 strlen
02010ac4 g     F .text	00000188 open
0200ddec g     F .text	00000088 __gedf2
0200b758 g     F .text	000007b8 __gethex
020105b0 g     F .text	00000030 alt_icache_flush_all
0201268c g     O .rwdata	00000004 alt_priority_mask
02010630 g     F .text	0000009c alt_ic_irq_enable
02002270 g     F .text	00000024 __vfprintf_internal
0200fed8 g     F .text	00000230 altera_avalon_uart_read
0200d544 g     F .text	00000080 __subdf3
020072fc g     F .text	000000c4 __lo0bits
02002294 g     F .text	00001680 __svfscanf_r
02012690 g     O .rwdata	00000008 alt_alarm_list
0200b130 g     F .text	0000019c _ungetc_r
020104e8 g     F .text	00000064 _do_ctors
0200ed38 g     F .text	000000fc close
0200f114 g     F .text	00000080 alt_load
0200e6c4 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
020055ac g     F .text	00000004 __sinit_lock_acquire
02007f18 g     F .text	00000100 __multadd
02007264 g     F .text	00000028 _Bfree



Disassembly of section .entry:

02000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 2000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 2000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 2000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 200000c:	00bffd16 	blt	zero,r2,2000004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 2000010:	00408034 	movhi	at,512
    ori r1, r1, %lo(_start)
 2000014:	08406d14 	ori	at,at,436
    jmp r1
 2000018:	0800683a 	jmp	at
 200001c:	00000000 	call	0 <__reset-0x2000000>

Disassembly of section .exceptions:

02000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
 2000020:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
 2000024:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
 2000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 200002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 2000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 2000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 2000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 200003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 2000040:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
 2000044:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
 2000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 200004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 2000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 2000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 2000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 200005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 2000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 2000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 2000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 200006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 2000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 2000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 2000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 200007c:	10000326 	beq	r2,zero,200008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 2000080:	20000226 	beq	r4,zero,200008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 2000084:	20000ec0 	call	20000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 2000088:	00000306 	br	2000098 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 200008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 2000090:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 2000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 2000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 200009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 20000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 20000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 20000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 20000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 20000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 20000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 20000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 20000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 20000c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
 20000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 20000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 20000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 20000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 20000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 20000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 20000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 20000e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
 20000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 20000e8:	ef80083a 	eret

020000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 20000ec:	defff904 	addi	sp,sp,-28
 20000f0:	dfc00615 	stw	ra,24(sp)
 20000f4:	df000515 	stw	fp,20(sp)
 20000f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 20000fc:	0005313a 	rdctl	r2,ipending
 2000100:	e0bffc15 	stw	r2,-16(fp)

  return active;
 2000104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 2000108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 200010c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 2000110:	00800044 	movi	r2,1
 2000114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 2000118:	e0ffff17 	ldw	r3,-4(fp)
 200011c:	e0bffe17 	ldw	r2,-8(fp)
 2000120:	1884703a 	and	r2,r3,r2
 2000124:	1005003a 	cmpeq	r2,r2,zero
 2000128:	1000161e 	bne	r2,zero,2000184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 200012c:	e0bffd17 	ldw	r2,-12(fp)
 2000130:	00c08074 	movhi	r3,513
 2000134:	18ccb804 	addi	r3,r3,13024
 2000138:	100490fa 	slli	r2,r2,3
 200013c:	10c5883a 	add	r2,r2,r3
 2000140:	11400017 	ldw	r5,0(r2)
 2000144:	e0bffd17 	ldw	r2,-12(fp)
 2000148:	00c08074 	movhi	r3,513
 200014c:	18ccb804 	addi	r3,r3,13024
 2000150:	100490fa 	slli	r2,r2,3
 2000154:	10c5883a 	add	r2,r2,r3
 2000158:	10800104 	addi	r2,r2,4
 200015c:	11000017 	ldw	r4,0(r2)
 2000160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 2000164:	0005313a 	rdctl	r2,ipending
 2000168:	e0bffb15 	stw	r2,-20(fp)

  return active;
 200016c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 2000170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 2000174:	e0bfff17 	ldw	r2,-4(fp)
 2000178:	1004c03a 	cmpne	r2,r2,zero
 200017c:	103fe31e 	bne	r2,zero,200010c <alt_irq_handler+0x20>
 2000180:	00000706 	br	20001a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 2000184:	e0bffe17 	ldw	r2,-8(fp)
 2000188:	1085883a 	add	r2,r2,r2
 200018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 2000190:	e0bffd17 	ldw	r2,-12(fp)
 2000194:	10800044 	addi	r2,r2,1
 2000198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 200019c:	003fde06 	br	2000118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 20001a0:	e037883a 	mov	sp,fp
 20001a4:	dfc00117 	ldw	ra,4(sp)
 20001a8:	df000017 	ldw	fp,0(sp)
 20001ac:	dec00204 	addi	sp,sp,8
 20001b0:	f800283a 	ret

Disassembly of section .text:

020001b4 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 20001b4:	00880014 	movui	r2,8192
#endif

0:
    initd 0(r2)
 20001b8:	10000033 	initd	0(r2)
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 20001bc:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 20001c0:	00bffd16 	blt	zero,r2,20001b8 <_start+0x4>
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 20001c4:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 20001c8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
 20001cc:	06808074 	movhi	gp,513
    ori gp, gp, %lo(_gp)
 20001d0:	d6a99514 	ori	gp,gp,42580
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 20001d4:	00808074 	movhi	r2,513
    ori r2, r2, %lo(__bss_start)
 20001d8:	108c6114 	ori	r2,r2,12676

    movhi r3, %hi(__bss_end)
 20001dc:	00c08074 	movhi	r3,513
    ori r3, r3, %lo(__bss_end)
 20001e0:	18cd5c14 	ori	r3,r3,13680

    beq r2, r3, 1f
 20001e4:	10c00326 	beq	r2,r3,20001f4 <_start+0x40>

0:
    stw zero, (r2)
 20001e8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 20001ec:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 20001f0:	10fffd36 	bltu	r2,r3,20001e8 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 20001f4:	200f1140 	call	200f114 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 20001f8:	200f3500 	call	200f350 <alt_main>

020001fc <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 20001fc:	003fff06 	br	20001fc <alt_after_alt_main>

02000200 <main>:
#include <stdio.h>
#include "system.h"
#include "altera_avalon_pio_regs.h"

int main() {
 2000200:	deffef04 	addi	sp,sp,-68
 2000204:	dfc01015 	stw	ra,64(sp)
 2000208:	df000f15 	stw	fp,60(sp)
 200020c:	df000f04 	addi	fp,sp,60
	int data = 0;
 2000210:	e03ff215 	stw	zero,-56(fp)
	while (1) {
		int val = IORD(PIO_1_BASE, 0);
 2000214:	00810034 	movhi	r2,1024
 2000218:	10841004 	addi	r2,r2,4160
 200021c:	10800037 	ldwio	r2,0(r2)
 2000220:	e0bff115 	stw	r2,-60(fp)

		if(val & 1){
 2000224:	e0bff117 	ldw	r2,-60(fp)
 2000228:	1080004c 	andi	r2,r2,1
 200022c:	10803fcc 	andi	r2,r2,255
 2000230:	1005003a 	cmpeq	r2,r2,zero
 2000234:	1000031e 	bne	r2,zero,2000244 <main+0x44>
			data++;
 2000238:	e0bff217 	ldw	r2,-56(fp)
 200023c:	10800044 	addi	r2,r2,1
 2000240:	e0bff215 	stw	r2,-56(fp)
		}

		IOWR(PIO_0_BASE, 0, data);
 2000244:	00c10034 	movhi	r3,1024
 2000248:	18c41404 	addi	r3,r3,4176
 200024c:	e0bff217 	ldw	r2,-56(fp)
 2000250:	18800035 	stwio	r2,0(r3)

		char s[50];
		scanf("%s", s);
 2000254:	e17ff304 	addi	r5,fp,-52
 2000258:	01008074 	movhi	r4,513
 200025c:	21055e04 	addi	r4,r4,5496
 2000260:	20003240 	call	2000324 <scanf>
		printf("%s", s);
 2000264:	e17ff304 	addi	r5,fp,-52
 2000268:	01008074 	movhi	r4,513
 200026c:	21055e04 	addi	r4,r4,5496
 2000270:	20002780 	call	2000278 <printf>

	}
 2000274:	003fe706 	br	2000214 <main+0x14>

02000278 <printf>:
 2000278:	defffb04 	addi	sp,sp,-20
 200027c:	dfc00115 	stw	ra,4(sp)
 2000280:	d9400215 	stw	r5,8(sp)
 2000284:	d9800315 	stw	r6,12(sp)
 2000288:	d9c00415 	stw	r7,16(sp)
 200028c:	00808074 	movhi	r2,513
 2000290:	10899604 	addi	r2,r2,9816
 2000294:	10c00017 	ldw	r3,0(r2)
 2000298:	200b883a 	mov	r5,r4
 200029c:	d8800204 	addi	r2,sp,8
 20002a0:	19000217 	ldw	r4,8(r3)
 20002a4:	100d883a 	mov	r6,r2
 20002a8:	d8800015 	stw	r2,0(sp)
 20002ac:	20022700 	call	2002270 <__vfprintf_internal>
 20002b0:	dfc00117 	ldw	ra,4(sp)
 20002b4:	dec00504 	addi	sp,sp,20
 20002b8:	f800283a 	ret

020002bc <_printf_r>:
 20002bc:	defffc04 	addi	sp,sp,-16
 20002c0:	dfc00115 	stw	ra,4(sp)
 20002c4:	d9800215 	stw	r6,8(sp)
 20002c8:	d9c00315 	stw	r7,12(sp)
 20002cc:	280d883a 	mov	r6,r5
 20002d0:	21400217 	ldw	r5,8(r4)
 20002d4:	d8c00204 	addi	r3,sp,8
 20002d8:	180f883a 	mov	r7,r3
 20002dc:	d8c00015 	stw	r3,0(sp)
 20002e0:	20003c40 	call	20003c4 <___vfprintf_internal_r>
 20002e4:	dfc00117 	ldw	ra,4(sp)
 20002e8:	dec00404 	addi	sp,sp,16
 20002ec:	f800283a 	ret

020002f0 <_scanf_r>:
 20002f0:	defffc04 	addi	sp,sp,-16
 20002f4:	dfc00115 	stw	ra,4(sp)
 20002f8:	d9800215 	stw	r6,8(sp)
 20002fc:	d9c00315 	stw	r7,12(sp)
 2000300:	280d883a 	mov	r6,r5
 2000304:	21400117 	ldw	r5,4(r4)
 2000308:	d8c00204 	addi	r3,sp,8
 200030c:	180f883a 	mov	r7,r3
 2000310:	d8c00015 	stw	r3,0(sp)
 2000314:	20022940 	call	2002294 <__svfscanf_r>
 2000318:	dfc00117 	ldw	ra,4(sp)
 200031c:	dec00404 	addi	sp,sp,16
 2000320:	f800283a 	ret

02000324 <scanf>:
 2000324:	defffb04 	addi	sp,sp,-20
 2000328:	dfc00115 	stw	ra,4(sp)
 200032c:	d9400215 	stw	r5,8(sp)
 2000330:	d9800315 	stw	r6,12(sp)
 2000334:	d9c00415 	stw	r7,16(sp)
 2000338:	00808074 	movhi	r2,513
 200033c:	10899604 	addi	r2,r2,9816
 2000340:	11400017 	ldw	r5,0(r2)
 2000344:	200d883a 	mov	r6,r4
 2000348:	d8800204 	addi	r2,sp,8
 200034c:	2809883a 	mov	r4,r5
 2000350:	29400117 	ldw	r5,4(r5)
 2000354:	100f883a 	mov	r7,r2
 2000358:	d8800015 	stw	r2,0(sp)
 200035c:	20022940 	call	2002294 <__svfscanf_r>
 2000360:	dfc00117 	ldw	ra,4(sp)
 2000364:	dec00504 	addi	sp,sp,20
 2000368:	f800283a 	ret

0200036c <__sprint_r>:
 200036c:	30800217 	ldw	r2,8(r6)
 2000370:	defffe04 	addi	sp,sp,-8
 2000374:	dc000015 	stw	r16,0(sp)
 2000378:	dfc00115 	stw	ra,4(sp)
 200037c:	3021883a 	mov	r16,r6
 2000380:	0007883a 	mov	r3,zero
 2000384:	1000061e 	bne	r2,zero,20003a0 <__sprint_r+0x34>
 2000388:	1805883a 	mov	r2,r3
 200038c:	30000115 	stw	zero,4(r6)
 2000390:	dfc00117 	ldw	ra,4(sp)
 2000394:	dc000017 	ldw	r16,0(sp)
 2000398:	dec00204 	addi	sp,sp,8
 200039c:	f800283a 	ret
 20003a0:	2005e880 	call	2005e88 <__sfvwrite_r>
 20003a4:	1007883a 	mov	r3,r2
 20003a8:	1805883a 	mov	r2,r3
 20003ac:	80000115 	stw	zero,4(r16)
 20003b0:	80000215 	stw	zero,8(r16)
 20003b4:	dfc00117 	ldw	ra,4(sp)
 20003b8:	dc000017 	ldw	r16,0(sp)
 20003bc:	dec00204 	addi	sp,sp,8
 20003c0:	f800283a 	ret

020003c4 <___vfprintf_internal_r>:
 20003c4:	defea404 	addi	sp,sp,-1392
 20003c8:	dd815815 	stw	r22,1376(sp)
 20003cc:	dc015215 	stw	r16,1352(sp)
 20003d0:	d9c15115 	stw	r7,1348(sp)
 20003d4:	dfc15b15 	stw	ra,1388(sp)
 20003d8:	df015a15 	stw	fp,1384(sp)
 20003dc:	ddc15915 	stw	r23,1380(sp)
 20003e0:	dd415715 	stw	r21,1372(sp)
 20003e4:	dd015615 	stw	r20,1368(sp)
 20003e8:	dcc15515 	stw	r19,1364(sp)
 20003ec:	dc815415 	stw	r18,1360(sp)
 20003f0:	dc415315 	stw	r17,1356(sp)
 20003f4:	282d883a 	mov	r22,r5
 20003f8:	3021883a 	mov	r16,r6
 20003fc:	d9014f15 	stw	r4,1340(sp)
 2000400:	20064d80 	call	20064d8 <_localeconv_r>
 2000404:	10800017 	ldw	r2,0(r2)
 2000408:	d9c15117 	ldw	r7,1348(sp)
 200040c:	d8814915 	stw	r2,1316(sp)
 2000410:	d8814f17 	ldw	r2,1340(sp)
 2000414:	10000226 	beq	r2,zero,2000420 <___vfprintf_internal_r+0x5c>
 2000418:	10800e17 	ldw	r2,56(r2)
 200041c:	10020d26 	beq	r2,zero,2000c54 <___vfprintf_internal_r+0x890>
 2000420:	b080030b 	ldhu	r2,12(r22)
 2000424:	1080020c 	andi	r2,r2,8
 2000428:	10020e26 	beq	r2,zero,2000c64 <___vfprintf_internal_r+0x8a0>
 200042c:	b0800417 	ldw	r2,16(r22)
 2000430:	10020c26 	beq	r2,zero,2000c64 <___vfprintf_internal_r+0x8a0>
 2000434:	b200030b 	ldhu	r8,12(r22)
 2000438:	00800284 	movi	r2,10
 200043c:	40c0068c 	andi	r3,r8,26
 2000440:	18802f1e 	bne	r3,r2,2000500 <___vfprintf_internal_r+0x13c>
 2000444:	b080038f 	ldh	r2,14(r22)
 2000448:	10002d16 	blt	r2,zero,2000500 <___vfprintf_internal_r+0x13c>
 200044c:	b240038b 	ldhu	r9,14(r22)
 2000450:	b2800717 	ldw	r10,28(r22)
 2000454:	b2c00917 	ldw	r11,36(r22)
 2000458:	d9014f17 	ldw	r4,1340(sp)
 200045c:	dc402904 	addi	r17,sp,164
 2000460:	d8804004 	addi	r2,sp,256
 2000464:	00c10004 	movi	r3,1024
 2000468:	423fff4c 	andi	r8,r8,65533
 200046c:	800d883a 	mov	r6,r16
 2000470:	880b883a 	mov	r5,r17
 2000474:	da002c0d 	sth	r8,176(sp)
 2000478:	da402c8d 	sth	r9,178(sp)
 200047c:	da803015 	stw	r10,192(sp)
 2000480:	dac03215 	stw	r11,200(sp)
 2000484:	d8802d15 	stw	r2,180(sp)
 2000488:	d8c02e15 	stw	r3,184(sp)
 200048c:	d8802915 	stw	r2,164(sp)
 2000490:	d8c02b15 	stw	r3,172(sp)
 2000494:	d8002f15 	stw	zero,188(sp)
 2000498:	20003c40 	call	20003c4 <___vfprintf_internal_r>
 200049c:	d8814b15 	stw	r2,1324(sp)
 20004a0:	10000416 	blt	r2,zero,20004b4 <___vfprintf_internal_r+0xf0>
 20004a4:	d9014f17 	ldw	r4,1340(sp)
 20004a8:	880b883a 	mov	r5,r17
 20004ac:	200531c0 	call	200531c <_fflush_r>
 20004b0:	1002321e 	bne	r2,zero,2000d7c <___vfprintf_internal_r+0x9b8>
 20004b4:	d8802c0b 	ldhu	r2,176(sp)
 20004b8:	1080100c 	andi	r2,r2,64
 20004bc:	10000326 	beq	r2,zero,20004cc <___vfprintf_internal_r+0x108>
 20004c0:	b080030b 	ldhu	r2,12(r22)
 20004c4:	10801014 	ori	r2,r2,64
 20004c8:	b080030d 	sth	r2,12(r22)
 20004cc:	d8814b17 	ldw	r2,1324(sp)
 20004d0:	dfc15b17 	ldw	ra,1388(sp)
 20004d4:	df015a17 	ldw	fp,1384(sp)
 20004d8:	ddc15917 	ldw	r23,1380(sp)
 20004dc:	dd815817 	ldw	r22,1376(sp)
 20004e0:	dd415717 	ldw	r21,1372(sp)
 20004e4:	dd015617 	ldw	r20,1368(sp)
 20004e8:	dcc15517 	ldw	r19,1364(sp)
 20004ec:	dc815417 	ldw	r18,1360(sp)
 20004f0:	dc415317 	ldw	r17,1356(sp)
 20004f4:	dc015217 	ldw	r16,1352(sp)
 20004f8:	dec15c04 	addi	sp,sp,1392
 20004fc:	f800283a 	ret
 2000500:	0005883a 	mov	r2,zero
 2000504:	0007883a 	mov	r3,zero
 2000508:	dd401904 	addi	r21,sp,100
 200050c:	d8814215 	stw	r2,1288(sp)
 2000510:	802f883a 	mov	r23,r16
 2000514:	d8c14315 	stw	r3,1292(sp)
 2000518:	d8014b15 	stw	zero,1324(sp)
 200051c:	d8014815 	stw	zero,1312(sp)
 2000520:	d8014415 	stw	zero,1296(sp)
 2000524:	d8014715 	stw	zero,1308(sp)
 2000528:	dd400c15 	stw	r21,48(sp)
 200052c:	d8000e15 	stw	zero,56(sp)
 2000530:	d8000d15 	stw	zero,52(sp)
 2000534:	b8800007 	ldb	r2,0(r23)
 2000538:	10001926 	beq	r2,zero,20005a0 <___vfprintf_internal_r+0x1dc>
 200053c:	00c00944 	movi	r3,37
 2000540:	10c01726 	beq	r2,r3,20005a0 <___vfprintf_internal_r+0x1dc>
 2000544:	b821883a 	mov	r16,r23
 2000548:	00000106 	br	2000550 <___vfprintf_internal_r+0x18c>
 200054c:	10c00326 	beq	r2,r3,200055c <___vfprintf_internal_r+0x198>
 2000550:	84000044 	addi	r16,r16,1
 2000554:	80800007 	ldb	r2,0(r16)
 2000558:	103ffc1e 	bne	r2,zero,200054c <___vfprintf_internal_r+0x188>
 200055c:	85e7c83a 	sub	r19,r16,r23
 2000560:	98000e26 	beq	r19,zero,200059c <___vfprintf_internal_r+0x1d8>
 2000564:	dc800e17 	ldw	r18,56(sp)
 2000568:	dc400d17 	ldw	r17,52(sp)
 200056c:	008001c4 	movi	r2,7
 2000570:	94e5883a 	add	r18,r18,r19
 2000574:	8c400044 	addi	r17,r17,1
 2000578:	adc00015 	stw	r23,0(r21)
 200057c:	dc800e15 	stw	r18,56(sp)
 2000580:	acc00115 	stw	r19,4(r21)
 2000584:	dc400d15 	stw	r17,52(sp)
 2000588:	14428b16 	blt	r2,r17,2000fb8 <___vfprintf_internal_r+0xbf4>
 200058c:	ad400204 	addi	r21,r21,8
 2000590:	d9014b17 	ldw	r4,1324(sp)
 2000594:	24c9883a 	add	r4,r4,r19
 2000598:	d9014b15 	stw	r4,1324(sp)
 200059c:	802f883a 	mov	r23,r16
 20005a0:	b8800007 	ldb	r2,0(r23)
 20005a4:	10013c26 	beq	r2,zero,2000a98 <___vfprintf_internal_r+0x6d4>
 20005a8:	bdc00044 	addi	r23,r23,1
 20005ac:	d8000405 	stb	zero,16(sp)
 20005b0:	b8c00007 	ldb	r3,0(r23)
 20005b4:	04ffffc4 	movi	r19,-1
 20005b8:	d8014c15 	stw	zero,1328(sp)
 20005bc:	d8014a15 	stw	zero,1320(sp)
 20005c0:	d8c14d15 	stw	r3,1332(sp)
 20005c4:	bdc00044 	addi	r23,r23,1
 20005c8:	d9414d17 	ldw	r5,1332(sp)
 20005cc:	00801604 	movi	r2,88
 20005d0:	28fff804 	addi	r3,r5,-32
 20005d4:	10c06036 	bltu	r2,r3,2000758 <___vfprintf_internal_r+0x394>
 20005d8:	18c5883a 	add	r2,r3,r3
 20005dc:	1085883a 	add	r2,r2,r2
 20005e0:	00c08034 	movhi	r3,512
 20005e4:	18c17d04 	addi	r3,r3,1524
 20005e8:	10c5883a 	add	r2,r2,r3
 20005ec:	11000017 	ldw	r4,0(r2)
 20005f0:	2000683a 	jmp	r4
 20005f4:	02001568 	cmpgeui	r8,zero,85
 20005f8:	02000758 	cmpnei	r8,zero,29
 20005fc:	02000758 	cmpnei	r8,zero,29
 2000600:	02001554 	movui	r8,85
 2000604:	02000758 	cmpnei	r8,zero,29
 2000608:	02000758 	cmpnei	r8,zero,29
 200060c:	02000758 	cmpnei	r8,zero,29
 2000610:	02000758 	cmpnei	r8,zero,29
 2000614:	02000758 	cmpnei	r8,zero,29
 2000618:	02000758 	cmpnei	r8,zero,29
 200061c:	02001334 	movhi	r8,76
 2000620:	02001544 	movi	r8,85
 2000624:	02000758 	cmpnei	r8,zero,29
 2000628:	0200134c 	andi	r8,zero,77
 200062c:	020015e0 	cmpeqi	r8,zero,87
 2000630:	02000758 	cmpnei	r8,zero,29
 2000634:	020015cc 	andi	r8,zero,87
 2000638:	02001594 	movui	r8,86
 200063c:	02001594 	movui	r8,86
 2000640:	02001594 	movui	r8,86
 2000644:	02001594 	movui	r8,86
 2000648:	02001594 	movui	r8,86
 200064c:	02001594 	movui	r8,86
 2000650:	02001594 	movui	r8,86
 2000654:	02001594 	movui	r8,86
 2000658:	02001594 	movui	r8,86
 200065c:	02000758 	cmpnei	r8,zero,29
 2000660:	02000758 	cmpnei	r8,zero,29
 2000664:	02000758 	cmpnei	r8,zero,29
 2000668:	02000758 	cmpnei	r8,zero,29
 200066c:	02000758 	cmpnei	r8,zero,29
 2000670:	02000758 	cmpnei	r8,zero,29
 2000674:	02000758 	cmpnei	r8,zero,29
 2000678:	02000758 	cmpnei	r8,zero,29
 200067c:	02000758 	cmpnei	r8,zero,29
 2000680:	02000758 	cmpnei	r8,zero,29
 2000684:	02000db0 	cmpltui	r8,zero,54
 2000688:	0200141c 	xori	r8,zero,80
 200068c:	02000758 	cmpnei	r8,zero,29
 2000690:	0200141c 	xori	r8,zero,80
 2000694:	02000758 	cmpnei	r8,zero,29
 2000698:	02000758 	cmpnei	r8,zero,29
 200069c:	02000758 	cmpnei	r8,zero,29
 20006a0:	02000758 	cmpnei	r8,zero,29
 20006a4:	02001580 	call	200158 <__reset-0x1dffea8>
 20006a8:	02000758 	cmpnei	r8,zero,29
 20006ac:	02000758 	cmpnei	r8,zero,29
 20006b0:	02000e64 	muli	r8,zero,57
 20006b4:	02000758 	cmpnei	r8,zero,29
 20006b8:	02000758 	cmpnei	r8,zero,29
 20006bc:	02000758 	cmpnei	r8,zero,29
 20006c0:	02000758 	cmpnei	r8,zero,29
 20006c4:	02000758 	cmpnei	r8,zero,29
 20006c8:	02000eb0 	cmpltui	r8,zero,58
 20006cc:	02000758 	cmpnei	r8,zero,29
 20006d0:	02000758 	cmpnei	r8,zero,29
 20006d4:	020014d0 	cmplti	r8,zero,83
 20006d8:	02000758 	cmpnei	r8,zero,29
 20006dc:	02000758 	cmpnei	r8,zero,29
 20006e0:	02000758 	cmpnei	r8,zero,29
 20006e4:	02000758 	cmpnei	r8,zero,29
 20006e8:	02000758 	cmpnei	r8,zero,29
 20006ec:	02000758 	cmpnei	r8,zero,29
 20006f0:	02000758 	cmpnei	r8,zero,29
 20006f4:	02000758 	cmpnei	r8,zero,29
 20006f8:	02000758 	cmpnei	r8,zero,29
 20006fc:	02000758 	cmpnei	r8,zero,29
 2000700:	020014a4 	muli	r8,zero,82
 2000704:	02000dbc 	xorhi	r8,zero,54
 2000708:	0200141c 	xori	r8,zero,80
 200070c:	0200141c 	xori	r8,zero,80
 2000710:	0200141c 	xori	r8,zero,80
 2000714:	02001408 	cmpgei	r8,zero,80
 2000718:	02000dbc 	xorhi	r8,zero,54
 200071c:	02000758 	cmpnei	r8,zero,29
 2000720:	02000758 	cmpnei	r8,zero,29
 2000724:	02001390 	cmplti	r8,zero,78
 2000728:	02000758 	cmpnei	r8,zero,29
 200072c:	02001360 	cmpeqi	r8,zero,77
 2000730:	02000e70 	cmpltui	r8,zero,57
 2000734:	020013c0 	call	20013c <__reset-0x1dffec4>
 2000738:	020013ac 	andhi	r8,zero,78
 200073c:	02000758 	cmpnei	r8,zero,29
 2000740:	0200163c 	xorhi	r8,zero,88
 2000744:	02000758 	cmpnei	r8,zero,29
 2000748:	02000ebc 	xorhi	r8,zero,58
 200074c:	02000758 	cmpnei	r8,zero,29
 2000750:	02000758 	cmpnei	r8,zero,29
 2000754:	02001534 	movhi	r8,84
 2000758:	d9014d17 	ldw	r4,1332(sp)
 200075c:	2000ce26 	beq	r4,zero,2000a98 <___vfprintf_internal_r+0x6d4>
 2000760:	01400044 	movi	r5,1
 2000764:	d9800f04 	addi	r6,sp,60
 2000768:	d9c14015 	stw	r7,1280(sp)
 200076c:	d9414515 	stw	r5,1300(sp)
 2000770:	d9814115 	stw	r6,1284(sp)
 2000774:	280f883a 	mov	r7,r5
 2000778:	d9000f05 	stb	r4,60(sp)
 200077c:	d8000405 	stb	zero,16(sp)
 2000780:	d8014615 	stw	zero,1304(sp)
 2000784:	d8c14c17 	ldw	r3,1328(sp)
 2000788:	1880008c 	andi	r2,r3,2
 200078c:	1005003a 	cmpeq	r2,r2,zero
 2000790:	d8815015 	stw	r2,1344(sp)
 2000794:	1000031e 	bne	r2,zero,20007a4 <___vfprintf_internal_r+0x3e0>
 2000798:	d9014517 	ldw	r4,1300(sp)
 200079c:	21000084 	addi	r4,r4,2
 20007a0:	d9014515 	stw	r4,1300(sp)
 20007a4:	d9414c17 	ldw	r5,1328(sp)
 20007a8:	2940210c 	andi	r5,r5,132
 20007ac:	d9414e15 	stw	r5,1336(sp)
 20007b0:	28002d1e 	bne	r5,zero,2000868 <___vfprintf_internal_r+0x4a4>
 20007b4:	d9814a17 	ldw	r6,1320(sp)
 20007b8:	d8814517 	ldw	r2,1300(sp)
 20007bc:	30a1c83a 	sub	r16,r6,r2
 20007c0:	0400290e 	bge	zero,r16,2000868 <___vfprintf_internal_r+0x4a4>
 20007c4:	00800404 	movi	r2,16
 20007c8:	1404580e 	bge	r2,r16,200192c <___vfprintf_internal_r+0x1568>
 20007cc:	dc800e17 	ldw	r18,56(sp)
 20007d0:	dc400d17 	ldw	r17,52(sp)
 20007d4:	1027883a 	mov	r19,r2
 20007d8:	07008074 	movhi	fp,513
 20007dc:	e7057a84 	addi	fp,fp,5610
 20007e0:	050001c4 	movi	r20,7
 20007e4:	00000306 	br	20007f4 <___vfprintf_internal_r+0x430>
 20007e8:	843ffc04 	addi	r16,r16,-16
 20007ec:	ad400204 	addi	r21,r21,8
 20007f0:	9c00130e 	bge	r19,r16,2000840 <___vfprintf_internal_r+0x47c>
 20007f4:	94800404 	addi	r18,r18,16
 20007f8:	8c400044 	addi	r17,r17,1
 20007fc:	af000015 	stw	fp,0(r21)
 2000800:	acc00115 	stw	r19,4(r21)
 2000804:	dc800e15 	stw	r18,56(sp)
 2000808:	dc400d15 	stw	r17,52(sp)
 200080c:	a47ff60e 	bge	r20,r17,20007e8 <___vfprintf_internal_r+0x424>
 2000810:	d9014f17 	ldw	r4,1340(sp)
 2000814:	b00b883a 	mov	r5,r22
 2000818:	d9800c04 	addi	r6,sp,48
 200081c:	d9c15115 	stw	r7,1348(sp)
 2000820:	200036c0 	call	200036c <__sprint_r>
 2000824:	d9c15117 	ldw	r7,1348(sp)
 2000828:	10009e1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 200082c:	843ffc04 	addi	r16,r16,-16
 2000830:	dc800e17 	ldw	r18,56(sp)
 2000834:	dc400d17 	ldw	r17,52(sp)
 2000838:	dd401904 	addi	r21,sp,100
 200083c:	9c3fed16 	blt	r19,r16,20007f4 <___vfprintf_internal_r+0x430>
 2000840:	9425883a 	add	r18,r18,r16
 2000844:	8c400044 	addi	r17,r17,1
 2000848:	008001c4 	movi	r2,7
 200084c:	af000015 	stw	fp,0(r21)
 2000850:	ac000115 	stw	r16,4(r21)
 2000854:	dc800e15 	stw	r18,56(sp)
 2000858:	dc400d15 	stw	r17,52(sp)
 200085c:	1441f516 	blt	r2,r17,2001034 <___vfprintf_internal_r+0xc70>
 2000860:	ad400204 	addi	r21,r21,8
 2000864:	00000206 	br	2000870 <___vfprintf_internal_r+0x4ac>
 2000868:	dc800e17 	ldw	r18,56(sp)
 200086c:	dc400d17 	ldw	r17,52(sp)
 2000870:	d8800407 	ldb	r2,16(sp)
 2000874:	10000b26 	beq	r2,zero,20008a4 <___vfprintf_internal_r+0x4e0>
 2000878:	00800044 	movi	r2,1
 200087c:	94800044 	addi	r18,r18,1
 2000880:	8c400044 	addi	r17,r17,1
 2000884:	a8800115 	stw	r2,4(r21)
 2000888:	d8c00404 	addi	r3,sp,16
 200088c:	008001c4 	movi	r2,7
 2000890:	a8c00015 	stw	r3,0(r21)
 2000894:	dc800e15 	stw	r18,56(sp)
 2000898:	dc400d15 	stw	r17,52(sp)
 200089c:	1441da16 	blt	r2,r17,2001008 <___vfprintf_internal_r+0xc44>
 20008a0:	ad400204 	addi	r21,r21,8
 20008a4:	d9015017 	ldw	r4,1344(sp)
 20008a8:	20000b1e 	bne	r4,zero,20008d8 <___vfprintf_internal_r+0x514>
 20008ac:	d8800444 	addi	r2,sp,17
 20008b0:	94800084 	addi	r18,r18,2
 20008b4:	8c400044 	addi	r17,r17,1
 20008b8:	a8800015 	stw	r2,0(r21)
 20008bc:	00c00084 	movi	r3,2
 20008c0:	008001c4 	movi	r2,7
 20008c4:	a8c00115 	stw	r3,4(r21)
 20008c8:	dc800e15 	stw	r18,56(sp)
 20008cc:	dc400d15 	stw	r17,52(sp)
 20008d0:	1441c216 	blt	r2,r17,2000fdc <___vfprintf_internal_r+0xc18>
 20008d4:	ad400204 	addi	r21,r21,8
 20008d8:	d9414e17 	ldw	r5,1336(sp)
 20008dc:	00802004 	movi	r2,128
 20008e0:	2880b126 	beq	r5,r2,2000ba8 <___vfprintf_internal_r+0x7e4>
 20008e4:	d8c14617 	ldw	r3,1304(sp)
 20008e8:	19e1c83a 	sub	r16,r3,r7
 20008ec:	0400260e 	bge	zero,r16,2000988 <___vfprintf_internal_r+0x5c4>
 20008f0:	00800404 	movi	r2,16
 20008f4:	1403c90e 	bge	r2,r16,200181c <___vfprintf_internal_r+0x1458>
 20008f8:	1027883a 	mov	r19,r2
 20008fc:	07008074 	movhi	fp,513
 2000900:	e7057684 	addi	fp,fp,5594
 2000904:	050001c4 	movi	r20,7
 2000908:	00000306 	br	2000918 <___vfprintf_internal_r+0x554>
 200090c:	843ffc04 	addi	r16,r16,-16
 2000910:	ad400204 	addi	r21,r21,8
 2000914:	9c00130e 	bge	r19,r16,2000964 <___vfprintf_internal_r+0x5a0>
 2000918:	94800404 	addi	r18,r18,16
 200091c:	8c400044 	addi	r17,r17,1
 2000920:	af000015 	stw	fp,0(r21)
 2000924:	acc00115 	stw	r19,4(r21)
 2000928:	dc800e15 	stw	r18,56(sp)
 200092c:	dc400d15 	stw	r17,52(sp)
 2000930:	a47ff60e 	bge	r20,r17,200090c <___vfprintf_internal_r+0x548>
 2000934:	d9014f17 	ldw	r4,1340(sp)
 2000938:	b00b883a 	mov	r5,r22
 200093c:	d9800c04 	addi	r6,sp,48
 2000940:	d9c15115 	stw	r7,1348(sp)
 2000944:	200036c0 	call	200036c <__sprint_r>
 2000948:	d9c15117 	ldw	r7,1348(sp)
 200094c:	1000551e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000950:	843ffc04 	addi	r16,r16,-16
 2000954:	dc800e17 	ldw	r18,56(sp)
 2000958:	dc400d17 	ldw	r17,52(sp)
 200095c:	dd401904 	addi	r21,sp,100
 2000960:	9c3fed16 	blt	r19,r16,2000918 <___vfprintf_internal_r+0x554>
 2000964:	9425883a 	add	r18,r18,r16
 2000968:	8c400044 	addi	r17,r17,1
 200096c:	008001c4 	movi	r2,7
 2000970:	af000015 	stw	fp,0(r21)
 2000974:	ac000115 	stw	r16,4(r21)
 2000978:	dc800e15 	stw	r18,56(sp)
 200097c:	dc400d15 	stw	r17,52(sp)
 2000980:	14418216 	blt	r2,r17,2000f8c <___vfprintf_internal_r+0xbc8>
 2000984:	ad400204 	addi	r21,r21,8
 2000988:	d9014c17 	ldw	r4,1328(sp)
 200098c:	2080400c 	andi	r2,r4,256
 2000990:	10004a1e 	bne	r2,zero,2000abc <___vfprintf_internal_r+0x6f8>
 2000994:	d9414117 	ldw	r5,1284(sp)
 2000998:	91e5883a 	add	r18,r18,r7
 200099c:	8c400044 	addi	r17,r17,1
 20009a0:	008001c4 	movi	r2,7
 20009a4:	a9400015 	stw	r5,0(r21)
 20009a8:	a9c00115 	stw	r7,4(r21)
 20009ac:	dc800e15 	stw	r18,56(sp)
 20009b0:	dc400d15 	stw	r17,52(sp)
 20009b4:	14416716 	blt	r2,r17,2000f54 <___vfprintf_internal_r+0xb90>
 20009b8:	a8c00204 	addi	r3,r21,8
 20009bc:	d9814c17 	ldw	r6,1328(sp)
 20009c0:	3080010c 	andi	r2,r6,4
 20009c4:	10002826 	beq	r2,zero,2000a68 <___vfprintf_internal_r+0x6a4>
 20009c8:	d8814a17 	ldw	r2,1320(sp)
 20009cc:	d9014517 	ldw	r4,1300(sp)
 20009d0:	1121c83a 	sub	r16,r2,r4
 20009d4:	0400240e 	bge	zero,r16,2000a68 <___vfprintf_internal_r+0x6a4>
 20009d8:	00800404 	movi	r2,16
 20009dc:	14044f0e 	bge	r2,r16,2001b1c <___vfprintf_internal_r+0x1758>
 20009e0:	dc400d17 	ldw	r17,52(sp)
 20009e4:	1027883a 	mov	r19,r2
 20009e8:	07008074 	movhi	fp,513
 20009ec:	e7057a84 	addi	fp,fp,5610
 20009f0:	050001c4 	movi	r20,7
 20009f4:	00000306 	br	2000a04 <___vfprintf_internal_r+0x640>
 20009f8:	843ffc04 	addi	r16,r16,-16
 20009fc:	18c00204 	addi	r3,r3,8
 2000a00:	9c00110e 	bge	r19,r16,2000a48 <___vfprintf_internal_r+0x684>
 2000a04:	94800404 	addi	r18,r18,16
 2000a08:	8c400044 	addi	r17,r17,1
 2000a0c:	1f000015 	stw	fp,0(r3)
 2000a10:	1cc00115 	stw	r19,4(r3)
 2000a14:	dc800e15 	stw	r18,56(sp)
 2000a18:	dc400d15 	stw	r17,52(sp)
 2000a1c:	a47ff60e 	bge	r20,r17,20009f8 <___vfprintf_internal_r+0x634>
 2000a20:	d9014f17 	ldw	r4,1340(sp)
 2000a24:	b00b883a 	mov	r5,r22
 2000a28:	d9800c04 	addi	r6,sp,48
 2000a2c:	200036c0 	call	200036c <__sprint_r>
 2000a30:	10001c1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000a34:	843ffc04 	addi	r16,r16,-16
 2000a38:	dc800e17 	ldw	r18,56(sp)
 2000a3c:	dc400d17 	ldw	r17,52(sp)
 2000a40:	d8c01904 	addi	r3,sp,100
 2000a44:	9c3fef16 	blt	r19,r16,2000a04 <___vfprintf_internal_r+0x640>
 2000a48:	9425883a 	add	r18,r18,r16
 2000a4c:	8c400044 	addi	r17,r17,1
 2000a50:	008001c4 	movi	r2,7
 2000a54:	1f000015 	stw	fp,0(r3)
 2000a58:	1c000115 	stw	r16,4(r3)
 2000a5c:	dc800e15 	stw	r18,56(sp)
 2000a60:	dc400d15 	stw	r17,52(sp)
 2000a64:	1440cb16 	blt	r2,r17,2000d94 <___vfprintf_internal_r+0x9d0>
 2000a68:	d8814a17 	ldw	r2,1320(sp)
 2000a6c:	d9414517 	ldw	r5,1300(sp)
 2000a70:	1140010e 	bge	r2,r5,2000a78 <___vfprintf_internal_r+0x6b4>
 2000a74:	2805883a 	mov	r2,r5
 2000a78:	d9814b17 	ldw	r6,1324(sp)
 2000a7c:	308d883a 	add	r6,r6,r2
 2000a80:	d9814b15 	stw	r6,1324(sp)
 2000a84:	90013b1e 	bne	r18,zero,2000f74 <___vfprintf_internal_r+0xbb0>
 2000a88:	d9c14017 	ldw	r7,1280(sp)
 2000a8c:	dd401904 	addi	r21,sp,100
 2000a90:	d8000d15 	stw	zero,52(sp)
 2000a94:	003ea706 	br	2000534 <___vfprintf_internal_r+0x170>
 2000a98:	d8800e17 	ldw	r2,56(sp)
 2000a9c:	10053f1e 	bne	r2,zero,2001f9c <___vfprintf_internal_r+0x1bd8>
 2000aa0:	d8000d15 	stw	zero,52(sp)
 2000aa4:	b080030b 	ldhu	r2,12(r22)
 2000aa8:	1080100c 	andi	r2,r2,64
 2000aac:	103e8726 	beq	r2,zero,20004cc <___vfprintf_internal_r+0x108>
 2000ab0:	00bfffc4 	movi	r2,-1
 2000ab4:	d8814b15 	stw	r2,1324(sp)
 2000ab8:	003e8406 	br	20004cc <___vfprintf_internal_r+0x108>
 2000abc:	d9814d17 	ldw	r6,1332(sp)
 2000ac0:	00801944 	movi	r2,101
 2000ac4:	11806e16 	blt	r2,r6,2000c80 <___vfprintf_internal_r+0x8bc>
 2000ac8:	d9414717 	ldw	r5,1308(sp)
 2000acc:	00c00044 	movi	r3,1
 2000ad0:	1943430e 	bge	r3,r5,20017e0 <___vfprintf_internal_r+0x141c>
 2000ad4:	d8814117 	ldw	r2,1284(sp)
 2000ad8:	94800044 	addi	r18,r18,1
 2000adc:	8c400044 	addi	r17,r17,1
 2000ae0:	a8800015 	stw	r2,0(r21)
 2000ae4:	008001c4 	movi	r2,7
 2000ae8:	a8c00115 	stw	r3,4(r21)
 2000aec:	dc800e15 	stw	r18,56(sp)
 2000af0:	dc400d15 	stw	r17,52(sp)
 2000af4:	1441ca16 	blt	r2,r17,2001220 <___vfprintf_internal_r+0xe5c>
 2000af8:	a8c00204 	addi	r3,r21,8
 2000afc:	d9014917 	ldw	r4,1316(sp)
 2000b00:	00800044 	movi	r2,1
 2000b04:	94800044 	addi	r18,r18,1
 2000b08:	8c400044 	addi	r17,r17,1
 2000b0c:	18800115 	stw	r2,4(r3)
 2000b10:	008001c4 	movi	r2,7
 2000b14:	19000015 	stw	r4,0(r3)
 2000b18:	dc800e15 	stw	r18,56(sp)
 2000b1c:	dc400d15 	stw	r17,52(sp)
 2000b20:	1441b616 	blt	r2,r17,20011fc <___vfprintf_internal_r+0xe38>
 2000b24:	1cc00204 	addi	r19,r3,8
 2000b28:	d9014217 	ldw	r4,1288(sp)
 2000b2c:	d9414317 	ldw	r5,1292(sp)
 2000b30:	000d883a 	mov	r6,zero
 2000b34:	000f883a 	mov	r7,zero
 2000b38:	200dcdc0 	call	200dcdc <__nedf2>
 2000b3c:	10017426 	beq	r2,zero,2001110 <___vfprintf_internal_r+0xd4c>
 2000b40:	d9414717 	ldw	r5,1308(sp)
 2000b44:	d9814117 	ldw	r6,1284(sp)
 2000b48:	8c400044 	addi	r17,r17,1
 2000b4c:	2c85883a 	add	r2,r5,r18
 2000b50:	14bfffc4 	addi	r18,r2,-1
 2000b54:	28bfffc4 	addi	r2,r5,-1
 2000b58:	30c00044 	addi	r3,r6,1
 2000b5c:	98800115 	stw	r2,4(r19)
 2000b60:	008001c4 	movi	r2,7
 2000b64:	98c00015 	stw	r3,0(r19)
 2000b68:	dc800e15 	stw	r18,56(sp)
 2000b6c:	dc400d15 	stw	r17,52(sp)
 2000b70:	14418e16 	blt	r2,r17,20011ac <___vfprintf_internal_r+0xde8>
 2000b74:	9cc00204 	addi	r19,r19,8
 2000b78:	d9414817 	ldw	r5,1312(sp)
 2000b7c:	d8800804 	addi	r2,sp,32
 2000b80:	8c400044 	addi	r17,r17,1
 2000b84:	9165883a 	add	r18,r18,r5
 2000b88:	98800015 	stw	r2,0(r19)
 2000b8c:	008001c4 	movi	r2,7
 2000b90:	99400115 	stw	r5,4(r19)
 2000b94:	dc800e15 	stw	r18,56(sp)
 2000b98:	dc400d15 	stw	r17,52(sp)
 2000b9c:	1440ed16 	blt	r2,r17,2000f54 <___vfprintf_internal_r+0xb90>
 2000ba0:	98c00204 	addi	r3,r19,8
 2000ba4:	003f8506 	br	20009bc <___vfprintf_internal_r+0x5f8>
 2000ba8:	d9814a17 	ldw	r6,1320(sp)
 2000bac:	d8814517 	ldw	r2,1300(sp)
 2000bb0:	30a1c83a 	sub	r16,r6,r2
 2000bb4:	043f4b0e 	bge	zero,r16,20008e4 <___vfprintf_internal_r+0x520>
 2000bb8:	00800404 	movi	r2,16
 2000bbc:	1404340e 	bge	r2,r16,2001c90 <___vfprintf_internal_r+0x18cc>
 2000bc0:	1027883a 	mov	r19,r2
 2000bc4:	07008074 	movhi	fp,513
 2000bc8:	e7057684 	addi	fp,fp,5594
 2000bcc:	050001c4 	movi	r20,7
 2000bd0:	00000306 	br	2000be0 <___vfprintf_internal_r+0x81c>
 2000bd4:	843ffc04 	addi	r16,r16,-16
 2000bd8:	ad400204 	addi	r21,r21,8
 2000bdc:	9c00130e 	bge	r19,r16,2000c2c <___vfprintf_internal_r+0x868>
 2000be0:	94800404 	addi	r18,r18,16
 2000be4:	8c400044 	addi	r17,r17,1
 2000be8:	af000015 	stw	fp,0(r21)
 2000bec:	acc00115 	stw	r19,4(r21)
 2000bf0:	dc800e15 	stw	r18,56(sp)
 2000bf4:	dc400d15 	stw	r17,52(sp)
 2000bf8:	a47ff60e 	bge	r20,r17,2000bd4 <___vfprintf_internal_r+0x810>
 2000bfc:	d9014f17 	ldw	r4,1340(sp)
 2000c00:	b00b883a 	mov	r5,r22
 2000c04:	d9800c04 	addi	r6,sp,48
 2000c08:	d9c15115 	stw	r7,1348(sp)
 2000c0c:	200036c0 	call	200036c <__sprint_r>
 2000c10:	d9c15117 	ldw	r7,1348(sp)
 2000c14:	103fa31e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000c18:	843ffc04 	addi	r16,r16,-16
 2000c1c:	dc800e17 	ldw	r18,56(sp)
 2000c20:	dc400d17 	ldw	r17,52(sp)
 2000c24:	dd401904 	addi	r21,sp,100
 2000c28:	9c3fed16 	blt	r19,r16,2000be0 <___vfprintf_internal_r+0x81c>
 2000c2c:	9425883a 	add	r18,r18,r16
 2000c30:	8c400044 	addi	r17,r17,1
 2000c34:	008001c4 	movi	r2,7
 2000c38:	af000015 	stw	fp,0(r21)
 2000c3c:	ac000115 	stw	r16,4(r21)
 2000c40:	dc800e15 	stw	r18,56(sp)
 2000c44:	dc400d15 	stw	r17,52(sp)
 2000c48:	14416116 	blt	r2,r17,20011d0 <___vfprintf_internal_r+0xe0c>
 2000c4c:	ad400204 	addi	r21,r21,8
 2000c50:	003f2406 	br	20008e4 <___vfprintf_internal_r+0x520>
 2000c54:	d9014f17 	ldw	r4,1340(sp)
 2000c58:	20055b40 	call	20055b4 <__sinit>
 2000c5c:	d9c15117 	ldw	r7,1348(sp)
 2000c60:	003def06 	br	2000420 <___vfprintf_internal_r+0x5c>
 2000c64:	d9014f17 	ldw	r4,1340(sp)
 2000c68:	b00b883a 	mov	r5,r22
 2000c6c:	d9c15115 	stw	r7,1348(sp)
 2000c70:	2003a140 	call	2003a14 <__swsetup_r>
 2000c74:	d9c15117 	ldw	r7,1348(sp)
 2000c78:	103dee26 	beq	r2,zero,2000434 <___vfprintf_internal_r+0x70>
 2000c7c:	003f8c06 	br	2000ab0 <___vfprintf_internal_r+0x6ec>
 2000c80:	d9014217 	ldw	r4,1288(sp)
 2000c84:	d9414317 	ldw	r5,1292(sp)
 2000c88:	000d883a 	mov	r6,zero
 2000c8c:	000f883a 	mov	r7,zero
 2000c90:	200dc540 	call	200dc54 <__eqdf2>
 2000c94:	1000f21e 	bne	r2,zero,2001060 <___vfprintf_internal_r+0xc9c>
 2000c98:	00808074 	movhi	r2,513
 2000c9c:	10857604 	addi	r2,r2,5592
 2000ca0:	94800044 	addi	r18,r18,1
 2000ca4:	8c400044 	addi	r17,r17,1
 2000ca8:	a8800015 	stw	r2,0(r21)
 2000cac:	00c00044 	movi	r3,1
 2000cb0:	008001c4 	movi	r2,7
 2000cb4:	a8c00115 	stw	r3,4(r21)
 2000cb8:	dc800e15 	stw	r18,56(sp)
 2000cbc:	dc400d15 	stw	r17,52(sp)
 2000cc0:	1442fa16 	blt	r2,r17,20018ac <___vfprintf_internal_r+0x14e8>
 2000cc4:	a8c00204 	addi	r3,r21,8
 2000cc8:	d8800517 	ldw	r2,20(sp)
 2000ccc:	d9014717 	ldw	r4,1308(sp)
 2000cd0:	11015c0e 	bge	r2,r4,2001244 <___vfprintf_internal_r+0xe80>
 2000cd4:	dc400d17 	ldw	r17,52(sp)
 2000cd8:	d9814917 	ldw	r6,1316(sp)
 2000cdc:	00800044 	movi	r2,1
 2000ce0:	94800044 	addi	r18,r18,1
 2000ce4:	8c400044 	addi	r17,r17,1
 2000ce8:	18800115 	stw	r2,4(r3)
 2000cec:	008001c4 	movi	r2,7
 2000cf0:	19800015 	stw	r6,0(r3)
 2000cf4:	dc800e15 	stw	r18,56(sp)
 2000cf8:	dc400d15 	stw	r17,52(sp)
 2000cfc:	14431016 	blt	r2,r17,2001940 <___vfprintf_internal_r+0x157c>
 2000d00:	18c00204 	addi	r3,r3,8
 2000d04:	d8814717 	ldw	r2,1308(sp)
 2000d08:	143fffc4 	addi	r16,r2,-1
 2000d0c:	043f2b0e 	bge	zero,r16,20009bc <___vfprintf_internal_r+0x5f8>
 2000d10:	00800404 	movi	r2,16
 2000d14:	1402a20e 	bge	r2,r16,20017a0 <___vfprintf_internal_r+0x13dc>
 2000d18:	dc400d17 	ldw	r17,52(sp)
 2000d1c:	1027883a 	mov	r19,r2
 2000d20:	07008074 	movhi	fp,513
 2000d24:	e7057684 	addi	fp,fp,5594
 2000d28:	050001c4 	movi	r20,7
 2000d2c:	00000306 	br	2000d3c <___vfprintf_internal_r+0x978>
 2000d30:	18c00204 	addi	r3,r3,8
 2000d34:	843ffc04 	addi	r16,r16,-16
 2000d38:	9c029c0e 	bge	r19,r16,20017ac <___vfprintf_internal_r+0x13e8>
 2000d3c:	94800404 	addi	r18,r18,16
 2000d40:	8c400044 	addi	r17,r17,1
 2000d44:	1f000015 	stw	fp,0(r3)
 2000d48:	1cc00115 	stw	r19,4(r3)
 2000d4c:	dc800e15 	stw	r18,56(sp)
 2000d50:	dc400d15 	stw	r17,52(sp)
 2000d54:	a47ff60e 	bge	r20,r17,2000d30 <___vfprintf_internal_r+0x96c>
 2000d58:	d9014f17 	ldw	r4,1340(sp)
 2000d5c:	b00b883a 	mov	r5,r22
 2000d60:	d9800c04 	addi	r6,sp,48
 2000d64:	200036c0 	call	200036c <__sprint_r>
 2000d68:	103f4e1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000d6c:	dc800e17 	ldw	r18,56(sp)
 2000d70:	dc400d17 	ldw	r17,52(sp)
 2000d74:	d8c01904 	addi	r3,sp,100
 2000d78:	003fee06 	br	2000d34 <___vfprintf_internal_r+0x970>
 2000d7c:	d8802c0b 	ldhu	r2,176(sp)
 2000d80:	00ffffc4 	movi	r3,-1
 2000d84:	d8c14b15 	stw	r3,1324(sp)
 2000d88:	1080100c 	andi	r2,r2,64
 2000d8c:	103dcc1e 	bne	r2,zero,20004c0 <___vfprintf_internal_r+0xfc>
 2000d90:	003dce06 	br	20004cc <___vfprintf_internal_r+0x108>
 2000d94:	d9014f17 	ldw	r4,1340(sp)
 2000d98:	b00b883a 	mov	r5,r22
 2000d9c:	d9800c04 	addi	r6,sp,48
 2000da0:	200036c0 	call	200036c <__sprint_r>
 2000da4:	103f3f1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000da8:	dc800e17 	ldw	r18,56(sp)
 2000dac:	003f2e06 	br	2000a68 <___vfprintf_internal_r+0x6a4>
 2000db0:	d9414c17 	ldw	r5,1328(sp)
 2000db4:	29400414 	ori	r5,r5,16
 2000db8:	d9414c15 	stw	r5,1328(sp)
 2000dbc:	d9814c17 	ldw	r6,1328(sp)
 2000dc0:	3080080c 	andi	r2,r6,32
 2000dc4:	10014f1e 	bne	r2,zero,2001304 <___vfprintf_internal_r+0xf40>
 2000dc8:	d8c14c17 	ldw	r3,1328(sp)
 2000dcc:	1880040c 	andi	r2,r3,16
 2000dd0:	1002ea1e 	bne	r2,zero,200197c <___vfprintf_internal_r+0x15b8>
 2000dd4:	d9014c17 	ldw	r4,1328(sp)
 2000dd8:	2080100c 	andi	r2,r4,64
 2000ddc:	1002e726 	beq	r2,zero,200197c <___vfprintf_internal_r+0x15b8>
 2000de0:	3880000f 	ldh	r2,0(r7)
 2000de4:	39c00104 	addi	r7,r7,4
 2000de8:	d9c14015 	stw	r7,1280(sp)
 2000dec:	1023d7fa 	srai	r17,r2,31
 2000df0:	1021883a 	mov	r16,r2
 2000df4:	88037216 	blt	r17,zero,2001bc0 <___vfprintf_internal_r+0x17fc>
 2000df8:	01000044 	movi	r4,1
 2000dfc:	98000416 	blt	r19,zero,2000e10 <___vfprintf_internal_r+0xa4c>
 2000e00:	d8c14c17 	ldw	r3,1328(sp)
 2000e04:	00bfdfc4 	movi	r2,-129
 2000e08:	1886703a 	and	r3,r3,r2
 2000e0c:	d8c14c15 	stw	r3,1328(sp)
 2000e10:	8444b03a 	or	r2,r16,r17
 2000e14:	1002261e 	bne	r2,zero,20016b0 <___vfprintf_internal_r+0x12ec>
 2000e18:	9802251e 	bne	r19,zero,20016b0 <___vfprintf_internal_r+0x12ec>
 2000e1c:	20803fcc 	andi	r2,r4,255
 2000e20:	10029b26 	beq	r2,zero,2001890 <___vfprintf_internal_r+0x14cc>
 2000e24:	d8c01904 	addi	r3,sp,100
 2000e28:	dd000f04 	addi	r20,sp,60
 2000e2c:	d8c14115 	stw	r3,1284(sp)
 2000e30:	d8c14117 	ldw	r3,1284(sp)
 2000e34:	dcc14515 	stw	r19,1300(sp)
 2000e38:	a0c5c83a 	sub	r2,r20,r3
 2000e3c:	11c00a04 	addi	r7,r2,40
 2000e40:	99c0010e 	bge	r19,r7,2000e48 <___vfprintf_internal_r+0xa84>
 2000e44:	d9c14515 	stw	r7,1300(sp)
 2000e48:	dcc14615 	stw	r19,1304(sp)
 2000e4c:	d8800407 	ldb	r2,16(sp)
 2000e50:	103e4c26 	beq	r2,zero,2000784 <___vfprintf_internal_r+0x3c0>
 2000e54:	d8814517 	ldw	r2,1300(sp)
 2000e58:	10800044 	addi	r2,r2,1
 2000e5c:	d8814515 	stw	r2,1300(sp)
 2000e60:	003e4806 	br	2000784 <___vfprintf_internal_r+0x3c0>
 2000e64:	d9814c17 	ldw	r6,1328(sp)
 2000e68:	31800414 	ori	r6,r6,16
 2000e6c:	d9814c15 	stw	r6,1328(sp)
 2000e70:	d8c14c17 	ldw	r3,1328(sp)
 2000e74:	1880080c 	andi	r2,r3,32
 2000e78:	1001271e 	bne	r2,zero,2001318 <___vfprintf_internal_r+0xf54>
 2000e7c:	d9414c17 	ldw	r5,1328(sp)
 2000e80:	2880040c 	andi	r2,r5,16
 2000e84:	1002b61e 	bne	r2,zero,2001960 <___vfprintf_internal_r+0x159c>
 2000e88:	d9814c17 	ldw	r6,1328(sp)
 2000e8c:	3080100c 	andi	r2,r6,64
 2000e90:	1002b326 	beq	r2,zero,2001960 <___vfprintf_internal_r+0x159c>
 2000e94:	3c00000b 	ldhu	r16,0(r7)
 2000e98:	0009883a 	mov	r4,zero
 2000e9c:	39c00104 	addi	r7,r7,4
 2000ea0:	0023883a 	mov	r17,zero
 2000ea4:	d9c14015 	stw	r7,1280(sp)
 2000ea8:	d8000405 	stb	zero,16(sp)
 2000eac:	003fd306 	br	2000dfc <___vfprintf_internal_r+0xa38>
 2000eb0:	d9014c17 	ldw	r4,1328(sp)
 2000eb4:	21000414 	ori	r4,r4,16
 2000eb8:	d9014c15 	stw	r4,1328(sp)
 2000ebc:	d9414c17 	ldw	r5,1328(sp)
 2000ec0:	2880080c 	andi	r2,r5,32
 2000ec4:	1001081e 	bne	r2,zero,20012e8 <___vfprintf_internal_r+0xf24>
 2000ec8:	d8c14c17 	ldw	r3,1328(sp)
 2000ecc:	1880040c 	andi	r2,r3,16
 2000ed0:	1002b01e 	bne	r2,zero,2001994 <___vfprintf_internal_r+0x15d0>
 2000ed4:	d9014c17 	ldw	r4,1328(sp)
 2000ed8:	2080100c 	andi	r2,r4,64
 2000edc:	1002ad26 	beq	r2,zero,2001994 <___vfprintf_internal_r+0x15d0>
 2000ee0:	3c00000b 	ldhu	r16,0(r7)
 2000ee4:	01000044 	movi	r4,1
 2000ee8:	39c00104 	addi	r7,r7,4
 2000eec:	0023883a 	mov	r17,zero
 2000ef0:	d9c14015 	stw	r7,1280(sp)
 2000ef4:	d8000405 	stb	zero,16(sp)
 2000ef8:	003fc006 	br	2000dfc <___vfprintf_internal_r+0xa38>
 2000efc:	d9014f17 	ldw	r4,1340(sp)
 2000f00:	b00b883a 	mov	r5,r22
 2000f04:	d9800c04 	addi	r6,sp,48
 2000f08:	200036c0 	call	200036c <__sprint_r>
 2000f0c:	103ee51e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000f10:	dc800e17 	ldw	r18,56(sp)
 2000f14:	d8c01904 	addi	r3,sp,100
 2000f18:	d9814c17 	ldw	r6,1328(sp)
 2000f1c:	3080004c 	andi	r2,r6,1
 2000f20:	1005003a 	cmpeq	r2,r2,zero
 2000f24:	103ea51e 	bne	r2,zero,20009bc <___vfprintf_internal_r+0x5f8>
 2000f28:	00800044 	movi	r2,1
 2000f2c:	dc400d17 	ldw	r17,52(sp)
 2000f30:	18800115 	stw	r2,4(r3)
 2000f34:	d8814917 	ldw	r2,1316(sp)
 2000f38:	94800044 	addi	r18,r18,1
 2000f3c:	8c400044 	addi	r17,r17,1
 2000f40:	18800015 	stw	r2,0(r3)
 2000f44:	008001c4 	movi	r2,7
 2000f48:	dc800e15 	stw	r18,56(sp)
 2000f4c:	dc400d15 	stw	r17,52(sp)
 2000f50:	14421e0e 	bge	r2,r17,20017cc <___vfprintf_internal_r+0x1408>
 2000f54:	d9014f17 	ldw	r4,1340(sp)
 2000f58:	b00b883a 	mov	r5,r22
 2000f5c:	d9800c04 	addi	r6,sp,48
 2000f60:	200036c0 	call	200036c <__sprint_r>
 2000f64:	103ecf1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000f68:	dc800e17 	ldw	r18,56(sp)
 2000f6c:	d8c01904 	addi	r3,sp,100
 2000f70:	003e9206 	br	20009bc <___vfprintf_internal_r+0x5f8>
 2000f74:	d9014f17 	ldw	r4,1340(sp)
 2000f78:	b00b883a 	mov	r5,r22
 2000f7c:	d9800c04 	addi	r6,sp,48
 2000f80:	200036c0 	call	200036c <__sprint_r>
 2000f84:	103ec026 	beq	r2,zero,2000a88 <___vfprintf_internal_r+0x6c4>
 2000f88:	003ec606 	br	2000aa4 <___vfprintf_internal_r+0x6e0>
 2000f8c:	d9014f17 	ldw	r4,1340(sp)
 2000f90:	b00b883a 	mov	r5,r22
 2000f94:	d9800c04 	addi	r6,sp,48
 2000f98:	d9c15115 	stw	r7,1348(sp)
 2000f9c:	200036c0 	call	200036c <__sprint_r>
 2000fa0:	d9c15117 	ldw	r7,1348(sp)
 2000fa4:	103ebf1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000fa8:	dc800e17 	ldw	r18,56(sp)
 2000fac:	dc400d17 	ldw	r17,52(sp)
 2000fb0:	dd401904 	addi	r21,sp,100
 2000fb4:	003e7406 	br	2000988 <___vfprintf_internal_r+0x5c4>
 2000fb8:	d9014f17 	ldw	r4,1340(sp)
 2000fbc:	b00b883a 	mov	r5,r22
 2000fc0:	d9800c04 	addi	r6,sp,48
 2000fc4:	d9c15115 	stw	r7,1348(sp)
 2000fc8:	200036c0 	call	200036c <__sprint_r>
 2000fcc:	d9c15117 	ldw	r7,1348(sp)
 2000fd0:	103eb41e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000fd4:	dd401904 	addi	r21,sp,100
 2000fd8:	003d6d06 	br	2000590 <___vfprintf_internal_r+0x1cc>
 2000fdc:	d9014f17 	ldw	r4,1340(sp)
 2000fe0:	b00b883a 	mov	r5,r22
 2000fe4:	d9800c04 	addi	r6,sp,48
 2000fe8:	d9c15115 	stw	r7,1348(sp)
 2000fec:	200036c0 	call	200036c <__sprint_r>
 2000ff0:	d9c15117 	ldw	r7,1348(sp)
 2000ff4:	103eab1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2000ff8:	dc800e17 	ldw	r18,56(sp)
 2000ffc:	dc400d17 	ldw	r17,52(sp)
 2001000:	dd401904 	addi	r21,sp,100
 2001004:	003e3406 	br	20008d8 <___vfprintf_internal_r+0x514>
 2001008:	d9014f17 	ldw	r4,1340(sp)
 200100c:	b00b883a 	mov	r5,r22
 2001010:	d9800c04 	addi	r6,sp,48
 2001014:	d9c15115 	stw	r7,1348(sp)
 2001018:	200036c0 	call	200036c <__sprint_r>
 200101c:	d9c15117 	ldw	r7,1348(sp)
 2001020:	103ea01e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001024:	dc800e17 	ldw	r18,56(sp)
 2001028:	dc400d17 	ldw	r17,52(sp)
 200102c:	dd401904 	addi	r21,sp,100
 2001030:	003e1c06 	br	20008a4 <___vfprintf_internal_r+0x4e0>
 2001034:	d9014f17 	ldw	r4,1340(sp)
 2001038:	b00b883a 	mov	r5,r22
 200103c:	d9800c04 	addi	r6,sp,48
 2001040:	d9c15115 	stw	r7,1348(sp)
 2001044:	200036c0 	call	200036c <__sprint_r>
 2001048:	d9c15117 	ldw	r7,1348(sp)
 200104c:	103e951e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001050:	dc800e17 	ldw	r18,56(sp)
 2001054:	dc400d17 	ldw	r17,52(sp)
 2001058:	dd401904 	addi	r21,sp,100
 200105c:	003e0406 	br	2000870 <___vfprintf_internal_r+0x4ac>
 2001060:	d9000517 	ldw	r4,20(sp)
 2001064:	0102520e 	bge	zero,r4,20019b0 <___vfprintf_internal_r+0x15ec>
 2001068:	d9814717 	ldw	r6,1308(sp)
 200106c:	21807a16 	blt	r4,r6,2001258 <___vfprintf_internal_r+0xe94>
 2001070:	d8814117 	ldw	r2,1284(sp)
 2001074:	91a5883a 	add	r18,r18,r6
 2001078:	8c400044 	addi	r17,r17,1
 200107c:	a8800015 	stw	r2,0(r21)
 2001080:	008001c4 	movi	r2,7
 2001084:	a9800115 	stw	r6,4(r21)
 2001088:	dc800e15 	stw	r18,56(sp)
 200108c:	dc400d15 	stw	r17,52(sp)
 2001090:	1442f616 	blt	r2,r17,2001c6c <___vfprintf_internal_r+0x18a8>
 2001094:	a8c00204 	addi	r3,r21,8
 2001098:	d9414717 	ldw	r5,1308(sp)
 200109c:	2161c83a 	sub	r16,r4,r5
 20010a0:	043f9d0e 	bge	zero,r16,2000f18 <___vfprintf_internal_r+0xb54>
 20010a4:	00800404 	movi	r2,16
 20010a8:	1402130e 	bge	r2,r16,20018f8 <___vfprintf_internal_r+0x1534>
 20010ac:	dc400d17 	ldw	r17,52(sp)
 20010b0:	1027883a 	mov	r19,r2
 20010b4:	07008074 	movhi	fp,513
 20010b8:	e7057684 	addi	fp,fp,5594
 20010bc:	050001c4 	movi	r20,7
 20010c0:	00000306 	br	20010d0 <___vfprintf_internal_r+0xd0c>
 20010c4:	18c00204 	addi	r3,r3,8
 20010c8:	843ffc04 	addi	r16,r16,-16
 20010cc:	9c020d0e 	bge	r19,r16,2001904 <___vfprintf_internal_r+0x1540>
 20010d0:	94800404 	addi	r18,r18,16
 20010d4:	8c400044 	addi	r17,r17,1
 20010d8:	1f000015 	stw	fp,0(r3)
 20010dc:	1cc00115 	stw	r19,4(r3)
 20010e0:	dc800e15 	stw	r18,56(sp)
 20010e4:	dc400d15 	stw	r17,52(sp)
 20010e8:	a47ff60e 	bge	r20,r17,20010c4 <___vfprintf_internal_r+0xd00>
 20010ec:	d9014f17 	ldw	r4,1340(sp)
 20010f0:	b00b883a 	mov	r5,r22
 20010f4:	d9800c04 	addi	r6,sp,48
 20010f8:	200036c0 	call	200036c <__sprint_r>
 20010fc:	103e691e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001100:	dc800e17 	ldw	r18,56(sp)
 2001104:	dc400d17 	ldw	r17,52(sp)
 2001108:	d8c01904 	addi	r3,sp,100
 200110c:	003fee06 	br	20010c8 <___vfprintf_internal_r+0xd04>
 2001110:	d8814717 	ldw	r2,1308(sp)
 2001114:	143fffc4 	addi	r16,r2,-1
 2001118:	043e970e 	bge	zero,r16,2000b78 <___vfprintf_internal_r+0x7b4>
 200111c:	00800404 	movi	r2,16
 2001120:	1400180e 	bge	r2,r16,2001184 <___vfprintf_internal_r+0xdc0>
 2001124:	1029883a 	mov	r20,r2
 2001128:	07008074 	movhi	fp,513
 200112c:	e7057684 	addi	fp,fp,5594
 2001130:	054001c4 	movi	r21,7
 2001134:	00000306 	br	2001144 <___vfprintf_internal_r+0xd80>
 2001138:	9cc00204 	addi	r19,r19,8
 200113c:	843ffc04 	addi	r16,r16,-16
 2001140:	a400120e 	bge	r20,r16,200118c <___vfprintf_internal_r+0xdc8>
 2001144:	94800404 	addi	r18,r18,16
 2001148:	8c400044 	addi	r17,r17,1
 200114c:	9f000015 	stw	fp,0(r19)
 2001150:	9d000115 	stw	r20,4(r19)
 2001154:	dc800e15 	stw	r18,56(sp)
 2001158:	dc400d15 	stw	r17,52(sp)
 200115c:	ac7ff60e 	bge	r21,r17,2001138 <___vfprintf_internal_r+0xd74>
 2001160:	d9014f17 	ldw	r4,1340(sp)
 2001164:	b00b883a 	mov	r5,r22
 2001168:	d9800c04 	addi	r6,sp,48
 200116c:	200036c0 	call	200036c <__sprint_r>
 2001170:	103e4c1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001174:	dc800e17 	ldw	r18,56(sp)
 2001178:	dc400d17 	ldw	r17,52(sp)
 200117c:	dcc01904 	addi	r19,sp,100
 2001180:	003fee06 	br	200113c <___vfprintf_internal_r+0xd78>
 2001184:	07008074 	movhi	fp,513
 2001188:	e7057684 	addi	fp,fp,5594
 200118c:	9425883a 	add	r18,r18,r16
 2001190:	8c400044 	addi	r17,r17,1
 2001194:	008001c4 	movi	r2,7
 2001198:	9f000015 	stw	fp,0(r19)
 200119c:	9c000115 	stw	r16,4(r19)
 20011a0:	dc800e15 	stw	r18,56(sp)
 20011a4:	dc400d15 	stw	r17,52(sp)
 20011a8:	147e720e 	bge	r2,r17,2000b74 <___vfprintf_internal_r+0x7b0>
 20011ac:	d9014f17 	ldw	r4,1340(sp)
 20011b0:	b00b883a 	mov	r5,r22
 20011b4:	d9800c04 	addi	r6,sp,48
 20011b8:	200036c0 	call	200036c <__sprint_r>
 20011bc:	103e391e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 20011c0:	dc800e17 	ldw	r18,56(sp)
 20011c4:	dc400d17 	ldw	r17,52(sp)
 20011c8:	dcc01904 	addi	r19,sp,100
 20011cc:	003e6a06 	br	2000b78 <___vfprintf_internal_r+0x7b4>
 20011d0:	d9014f17 	ldw	r4,1340(sp)
 20011d4:	b00b883a 	mov	r5,r22
 20011d8:	d9800c04 	addi	r6,sp,48
 20011dc:	d9c15115 	stw	r7,1348(sp)
 20011e0:	200036c0 	call	200036c <__sprint_r>
 20011e4:	d9c15117 	ldw	r7,1348(sp)
 20011e8:	103e2e1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 20011ec:	dc800e17 	ldw	r18,56(sp)
 20011f0:	dc400d17 	ldw	r17,52(sp)
 20011f4:	dd401904 	addi	r21,sp,100
 20011f8:	003dba06 	br	20008e4 <___vfprintf_internal_r+0x520>
 20011fc:	d9014f17 	ldw	r4,1340(sp)
 2001200:	b00b883a 	mov	r5,r22
 2001204:	d9800c04 	addi	r6,sp,48
 2001208:	200036c0 	call	200036c <__sprint_r>
 200120c:	103e251e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001210:	dc800e17 	ldw	r18,56(sp)
 2001214:	dc400d17 	ldw	r17,52(sp)
 2001218:	dcc01904 	addi	r19,sp,100
 200121c:	003e4206 	br	2000b28 <___vfprintf_internal_r+0x764>
 2001220:	d9014f17 	ldw	r4,1340(sp)
 2001224:	b00b883a 	mov	r5,r22
 2001228:	d9800c04 	addi	r6,sp,48
 200122c:	200036c0 	call	200036c <__sprint_r>
 2001230:	103e1c1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001234:	dc800e17 	ldw	r18,56(sp)
 2001238:	dc400d17 	ldw	r17,52(sp)
 200123c:	d8c01904 	addi	r3,sp,100
 2001240:	003e2e06 	br	2000afc <___vfprintf_internal_r+0x738>
 2001244:	d9414c17 	ldw	r5,1328(sp)
 2001248:	2880004c 	andi	r2,r5,1
 200124c:	1005003a 	cmpeq	r2,r2,zero
 2001250:	103dda1e 	bne	r2,zero,20009bc <___vfprintf_internal_r+0x5f8>
 2001254:	003e9f06 	br	2000cd4 <___vfprintf_internal_r+0x910>
 2001258:	d8c14117 	ldw	r3,1284(sp)
 200125c:	9125883a 	add	r18,r18,r4
 2001260:	8c400044 	addi	r17,r17,1
 2001264:	008001c4 	movi	r2,7
 2001268:	a8c00015 	stw	r3,0(r21)
 200126c:	a9000115 	stw	r4,4(r21)
 2001270:	dc800e15 	stw	r18,56(sp)
 2001274:	dc400d15 	stw	r17,52(sp)
 2001278:	14426616 	blt	r2,r17,2001c14 <___vfprintf_internal_r+0x1850>
 200127c:	a8c00204 	addi	r3,r21,8
 2001280:	d9414917 	ldw	r5,1316(sp)
 2001284:	00800044 	movi	r2,1
 2001288:	94800044 	addi	r18,r18,1
 200128c:	8c400044 	addi	r17,r17,1
 2001290:	18800115 	stw	r2,4(r3)
 2001294:	008001c4 	movi	r2,7
 2001298:	19400015 	stw	r5,0(r3)
 200129c:	dc800e15 	stw	r18,56(sp)
 20012a0:	dc400d15 	stw	r17,52(sp)
 20012a4:	2021883a 	mov	r16,r4
 20012a8:	14425016 	blt	r2,r17,2001bec <___vfprintf_internal_r+0x1828>
 20012ac:	19400204 	addi	r5,r3,8
 20012b0:	d9814717 	ldw	r6,1308(sp)
 20012b4:	8c400044 	addi	r17,r17,1
 20012b8:	dc400d15 	stw	r17,52(sp)
 20012bc:	3107c83a 	sub	r3,r6,r4
 20012c0:	d9014117 	ldw	r4,1284(sp)
 20012c4:	90e5883a 	add	r18,r18,r3
 20012c8:	28c00115 	stw	r3,4(r5)
 20012cc:	8105883a 	add	r2,r16,r4
 20012d0:	28800015 	stw	r2,0(r5)
 20012d4:	008001c4 	movi	r2,7
 20012d8:	dc800e15 	stw	r18,56(sp)
 20012dc:	147f1d16 	blt	r2,r17,2000f54 <___vfprintf_internal_r+0xb90>
 20012e0:	28c00204 	addi	r3,r5,8
 20012e4:	003db506 	br	20009bc <___vfprintf_internal_r+0x5f8>
 20012e8:	3c000017 	ldw	r16,0(r7)
 20012ec:	3c400117 	ldw	r17,4(r7)
 20012f0:	39800204 	addi	r6,r7,8
 20012f4:	01000044 	movi	r4,1
 20012f8:	d9814015 	stw	r6,1280(sp)
 20012fc:	d8000405 	stb	zero,16(sp)
 2001300:	003ebe06 	br	2000dfc <___vfprintf_internal_r+0xa38>
 2001304:	3c000017 	ldw	r16,0(r7)
 2001308:	3c400117 	ldw	r17,4(r7)
 200130c:	38800204 	addi	r2,r7,8
 2001310:	d8814015 	stw	r2,1280(sp)
 2001314:	003eb706 	br	2000df4 <___vfprintf_internal_r+0xa30>
 2001318:	3c000017 	ldw	r16,0(r7)
 200131c:	3c400117 	ldw	r17,4(r7)
 2001320:	39000204 	addi	r4,r7,8
 2001324:	d9014015 	stw	r4,1280(sp)
 2001328:	0009883a 	mov	r4,zero
 200132c:	d8000405 	stb	zero,16(sp)
 2001330:	003eb206 	br	2000dfc <___vfprintf_internal_r+0xa38>
 2001334:	38c00017 	ldw	r3,0(r7)
 2001338:	39c00104 	addi	r7,r7,4
 200133c:	d8c14a15 	stw	r3,1320(sp)
 2001340:	1800d10e 	bge	r3,zero,2001688 <___vfprintf_internal_r+0x12c4>
 2001344:	00c7c83a 	sub	r3,zero,r3
 2001348:	d8c14a15 	stw	r3,1320(sp)
 200134c:	d9014c17 	ldw	r4,1328(sp)
 2001350:	b8c00007 	ldb	r3,0(r23)
 2001354:	21000114 	ori	r4,r4,4
 2001358:	d9014c15 	stw	r4,1328(sp)
 200135c:	003c9806 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 2001360:	d9814c17 	ldw	r6,1328(sp)
 2001364:	3080080c 	andi	r2,r6,32
 2001368:	1001f026 	beq	r2,zero,2001b2c <___vfprintf_internal_r+0x1768>
 200136c:	d9014b17 	ldw	r4,1324(sp)
 2001370:	38800017 	ldw	r2,0(r7)
 2001374:	39c00104 	addi	r7,r7,4
 2001378:	d9c14015 	stw	r7,1280(sp)
 200137c:	2007d7fa 	srai	r3,r4,31
 2001380:	d9c14017 	ldw	r7,1280(sp)
 2001384:	11000015 	stw	r4,0(r2)
 2001388:	10c00115 	stw	r3,4(r2)
 200138c:	003c6906 	br	2000534 <___vfprintf_internal_r+0x170>
 2001390:	b8c00007 	ldb	r3,0(r23)
 2001394:	00801b04 	movi	r2,108
 2001398:	18824f26 	beq	r3,r2,2001cd8 <___vfprintf_internal_r+0x1914>
 200139c:	d9414c17 	ldw	r5,1328(sp)
 20013a0:	29400414 	ori	r5,r5,16
 20013a4:	d9414c15 	stw	r5,1328(sp)
 20013a8:	003c8506 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 20013ac:	d9814c17 	ldw	r6,1328(sp)
 20013b0:	b8c00007 	ldb	r3,0(r23)
 20013b4:	31800814 	ori	r6,r6,32
 20013b8:	d9814c15 	stw	r6,1328(sp)
 20013bc:	003c8006 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 20013c0:	d8814c17 	ldw	r2,1328(sp)
 20013c4:	3c000017 	ldw	r16,0(r7)
 20013c8:	00c01e04 	movi	r3,120
 20013cc:	10800094 	ori	r2,r2,2
 20013d0:	d8814c15 	stw	r2,1328(sp)
 20013d4:	39c00104 	addi	r7,r7,4
 20013d8:	01408074 	movhi	r5,513
 20013dc:	29455f04 	addi	r5,r5,5500
 20013e0:	00800c04 	movi	r2,48
 20013e4:	0023883a 	mov	r17,zero
 20013e8:	01000084 	movi	r4,2
 20013ec:	d9c14015 	stw	r7,1280(sp)
 20013f0:	d8c14d15 	stw	r3,1332(sp)
 20013f4:	d9414415 	stw	r5,1296(sp)
 20013f8:	d8800445 	stb	r2,17(sp)
 20013fc:	d8c00485 	stb	r3,18(sp)
 2001400:	d8000405 	stb	zero,16(sp)
 2001404:	003e7d06 	br	2000dfc <___vfprintf_internal_r+0xa38>
 2001408:	d8814c17 	ldw	r2,1328(sp)
 200140c:	b8c00007 	ldb	r3,0(r23)
 2001410:	10801014 	ori	r2,r2,64
 2001414:	d8814c15 	stw	r2,1328(sp)
 2001418:	003c6906 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 200141c:	d9414c17 	ldw	r5,1328(sp)
 2001420:	2880020c 	andi	r2,r5,8
 2001424:	1001df26 	beq	r2,zero,2001ba4 <___vfprintf_internal_r+0x17e0>
 2001428:	39800017 	ldw	r6,0(r7)
 200142c:	38800204 	addi	r2,r7,8
 2001430:	d8814015 	stw	r2,1280(sp)
 2001434:	d9814215 	stw	r6,1288(sp)
 2001438:	39c00117 	ldw	r7,4(r7)
 200143c:	d9c14315 	stw	r7,1292(sp)
 2001440:	d9014217 	ldw	r4,1288(sp)
 2001444:	d9414317 	ldw	r5,1292(sp)
 2001448:	2008a2c0 	call	2008a2c <__isinfd>
 200144c:	10021726 	beq	r2,zero,2001cac <___vfprintf_internal_r+0x18e8>
 2001450:	d9014217 	ldw	r4,1288(sp)
 2001454:	d9414317 	ldw	r5,1292(sp)
 2001458:	000d883a 	mov	r6,zero
 200145c:	000f883a 	mov	r7,zero
 2001460:	200de740 	call	200de74 <__ltdf2>
 2001464:	1002ca16 	blt	r2,zero,2001f90 <___vfprintf_internal_r+0x1bcc>
 2001468:	d9414d17 	ldw	r5,1332(sp)
 200146c:	008011c4 	movi	r2,71
 2001470:	11420a16 	blt	r2,r5,2001c9c <___vfprintf_internal_r+0x18d8>
 2001474:	01808074 	movhi	r6,513
 2001478:	31856404 	addi	r6,r6,5520
 200147c:	d9814115 	stw	r6,1284(sp)
 2001480:	d9014c17 	ldw	r4,1328(sp)
 2001484:	00c000c4 	movi	r3,3
 2001488:	00bfdfc4 	movi	r2,-129
 200148c:	2088703a 	and	r4,r4,r2
 2001490:	180f883a 	mov	r7,r3
 2001494:	d8c14515 	stw	r3,1300(sp)
 2001498:	d9014c15 	stw	r4,1328(sp)
 200149c:	d8014615 	stw	zero,1304(sp)
 20014a0:	003e6a06 	br	2000e4c <___vfprintf_internal_r+0xa88>
 20014a4:	38800017 	ldw	r2,0(r7)
 20014a8:	00c00044 	movi	r3,1
 20014ac:	39c00104 	addi	r7,r7,4
 20014b0:	d9c14015 	stw	r7,1280(sp)
 20014b4:	d9000f04 	addi	r4,sp,60
 20014b8:	180f883a 	mov	r7,r3
 20014bc:	d8c14515 	stw	r3,1300(sp)
 20014c0:	d9014115 	stw	r4,1284(sp)
 20014c4:	d8800f05 	stb	r2,60(sp)
 20014c8:	d8000405 	stb	zero,16(sp)
 20014cc:	003cac06 	br	2000780 <___vfprintf_internal_r+0x3bc>
 20014d0:	01408074 	movhi	r5,513
 20014d4:	29456a04 	addi	r5,r5,5544
 20014d8:	d9414415 	stw	r5,1296(sp)
 20014dc:	d9814c17 	ldw	r6,1328(sp)
 20014e0:	3080080c 	andi	r2,r6,32
 20014e4:	1000f926 	beq	r2,zero,20018cc <___vfprintf_internal_r+0x1508>
 20014e8:	3c000017 	ldw	r16,0(r7)
 20014ec:	3c400117 	ldw	r17,4(r7)
 20014f0:	38800204 	addi	r2,r7,8
 20014f4:	d8814015 	stw	r2,1280(sp)
 20014f8:	d9414c17 	ldw	r5,1328(sp)
 20014fc:	2880004c 	andi	r2,r5,1
 2001500:	1005003a 	cmpeq	r2,r2,zero
 2001504:	1000b31e 	bne	r2,zero,20017d4 <___vfprintf_internal_r+0x1410>
 2001508:	8444b03a 	or	r2,r16,r17
 200150c:	1000b126 	beq	r2,zero,20017d4 <___vfprintf_internal_r+0x1410>
 2001510:	d9814d17 	ldw	r6,1332(sp)
 2001514:	29400094 	ori	r5,r5,2
 2001518:	00800c04 	movi	r2,48
 200151c:	01000084 	movi	r4,2
 2001520:	d9414c15 	stw	r5,1328(sp)
 2001524:	d8800445 	stb	r2,17(sp)
 2001528:	d9800485 	stb	r6,18(sp)
 200152c:	d8000405 	stb	zero,16(sp)
 2001530:	003e3206 	br	2000dfc <___vfprintf_internal_r+0xa38>
 2001534:	01808074 	movhi	r6,513
 2001538:	31855f04 	addi	r6,r6,5500
 200153c:	d9814415 	stw	r6,1296(sp)
 2001540:	003fe606 	br	20014dc <___vfprintf_internal_r+0x1118>
 2001544:	00800ac4 	movi	r2,43
 2001548:	d8800405 	stb	r2,16(sp)
 200154c:	b8c00007 	ldb	r3,0(r23)
 2001550:	003c1b06 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 2001554:	d8814c17 	ldw	r2,1328(sp)
 2001558:	b8c00007 	ldb	r3,0(r23)
 200155c:	10800054 	ori	r2,r2,1
 2001560:	d8814c15 	stw	r2,1328(sp)
 2001564:	003c1606 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 2001568:	d8800407 	ldb	r2,16(sp)
 200156c:	1000461e 	bne	r2,zero,2001688 <___vfprintf_internal_r+0x12c4>
 2001570:	00800804 	movi	r2,32
 2001574:	d8800405 	stb	r2,16(sp)
 2001578:	b8c00007 	ldb	r3,0(r23)
 200157c:	003c1006 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 2001580:	d9814c17 	ldw	r6,1328(sp)
 2001584:	b8c00007 	ldb	r3,0(r23)
 2001588:	31800214 	ori	r6,r6,8
 200158c:	d9814c15 	stw	r6,1328(sp)
 2001590:	003c0b06 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 2001594:	0007883a 	mov	r3,zero
 2001598:	01000244 	movi	r4,9
 200159c:	188002a4 	muli	r2,r3,10
 20015a0:	b8c00007 	ldb	r3,0(r23)
 20015a4:	d9814d17 	ldw	r6,1332(sp)
 20015a8:	bdc00044 	addi	r23,r23,1
 20015ac:	d8c14d15 	stw	r3,1332(sp)
 20015b0:	d9414d17 	ldw	r5,1332(sp)
 20015b4:	3085883a 	add	r2,r6,r2
 20015b8:	10fff404 	addi	r3,r2,-48
 20015bc:	28bff404 	addi	r2,r5,-48
 20015c0:	20bff62e 	bgeu	r4,r2,200159c <___vfprintf_internal_r+0x11d8>
 20015c4:	d8c14a15 	stw	r3,1320(sp)
 20015c8:	003bff06 	br	20005c8 <___vfprintf_internal_r+0x204>
 20015cc:	d9414c17 	ldw	r5,1328(sp)
 20015d0:	b8c00007 	ldb	r3,0(r23)
 20015d4:	29402014 	ori	r5,r5,128
 20015d8:	d9414c15 	stw	r5,1328(sp)
 20015dc:	003bf806 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 20015e0:	b8c00007 	ldb	r3,0(r23)
 20015e4:	00800a84 	movi	r2,42
 20015e8:	bdc00044 	addi	r23,r23,1
 20015ec:	18831526 	beq	r3,r2,2002244 <___vfprintf_internal_r+0x1e80>
 20015f0:	d8c14d15 	stw	r3,1332(sp)
 20015f4:	18bff404 	addi	r2,r3,-48
 20015f8:	00c00244 	movi	r3,9
 20015fc:	18827836 	bltu	r3,r2,2001fe0 <___vfprintf_internal_r+0x1c1c>
 2001600:	000d883a 	mov	r6,zero
 2001604:	308002a4 	muli	r2,r6,10
 2001608:	b9800007 	ldb	r6,0(r23)
 200160c:	d9414d17 	ldw	r5,1332(sp)
 2001610:	bdc00044 	addi	r23,r23,1
 2001614:	d9814d15 	stw	r6,1332(sp)
 2001618:	d9014d17 	ldw	r4,1332(sp)
 200161c:	1145883a 	add	r2,r2,r5
 2001620:	11bff404 	addi	r6,r2,-48
 2001624:	20bff404 	addi	r2,r4,-48
 2001628:	18bff62e 	bgeu	r3,r2,2001604 <___vfprintf_internal_r+0x1240>
 200162c:	3027883a 	mov	r19,r6
 2001630:	303be50e 	bge	r6,zero,20005c8 <___vfprintf_internal_r+0x204>
 2001634:	04ffffc4 	movi	r19,-1
 2001638:	003be306 	br	20005c8 <___vfprintf_internal_r+0x204>
 200163c:	d8000405 	stb	zero,16(sp)
 2001640:	39800017 	ldw	r6,0(r7)
 2001644:	39c00104 	addi	r7,r7,4
 2001648:	d9c14015 	stw	r7,1280(sp)
 200164c:	d9814115 	stw	r6,1284(sp)
 2001650:	3001c926 	beq	r6,zero,2001d78 <___vfprintf_internal_r+0x19b4>
 2001654:	98000e16 	blt	r19,zero,2001690 <___vfprintf_internal_r+0x12cc>
 2001658:	d9014117 	ldw	r4,1284(sp)
 200165c:	000b883a 	mov	r5,zero
 2001660:	980d883a 	mov	r6,r19
 2001664:	2006f680 	call	2006f68 <memchr>
 2001668:	10025926 	beq	r2,zero,2001fd0 <___vfprintf_internal_r+0x1c0c>
 200166c:	d8c14117 	ldw	r3,1284(sp)
 2001670:	10cfc83a 	sub	r7,r2,r3
 2001674:	99c19e16 	blt	r19,r7,2001cf0 <___vfprintf_internal_r+0x192c>
 2001678:	d9c14515 	stw	r7,1300(sp)
 200167c:	38000916 	blt	r7,zero,20016a4 <___vfprintf_internal_r+0x12e0>
 2001680:	d8014615 	stw	zero,1304(sp)
 2001684:	003df106 	br	2000e4c <___vfprintf_internal_r+0xa88>
 2001688:	b8c00007 	ldb	r3,0(r23)
 200168c:	003bcc06 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 2001690:	d9014117 	ldw	r4,1284(sp)
 2001694:	2008eb00 	call	2008eb0 <strlen>
 2001698:	d8814515 	stw	r2,1300(sp)
 200169c:	100f883a 	mov	r7,r2
 20016a0:	103ff70e 	bge	r2,zero,2001680 <___vfprintf_internal_r+0x12bc>
 20016a4:	d8014515 	stw	zero,1300(sp)
 20016a8:	d8014615 	stw	zero,1304(sp)
 20016ac:	003de706 	br	2000e4c <___vfprintf_internal_r+0xa88>
 20016b0:	20c03fcc 	andi	r3,r4,255
 20016b4:	00800044 	movi	r2,1
 20016b8:	18802d26 	beq	r3,r2,2001770 <___vfprintf_internal_r+0x13ac>
 20016bc:	18800e36 	bltu	r3,r2,20016f8 <___vfprintf_internal_r+0x1334>
 20016c0:	00800084 	movi	r2,2
 20016c4:	1880fa26 	beq	r3,r2,2001ab0 <___vfprintf_internal_r+0x16ec>
 20016c8:	01008074 	movhi	r4,513
 20016cc:	21056f04 	addi	r4,r4,5564
 20016d0:	2008eb00 	call	2008eb0 <strlen>
 20016d4:	100f883a 	mov	r7,r2
 20016d8:	dcc14515 	stw	r19,1300(sp)
 20016dc:	9880010e 	bge	r19,r2,20016e4 <___vfprintf_internal_r+0x1320>
 20016e0:	d8814515 	stw	r2,1300(sp)
 20016e4:	00808074 	movhi	r2,513
 20016e8:	10856f04 	addi	r2,r2,5564
 20016ec:	dcc14615 	stw	r19,1304(sp)
 20016f0:	d8814115 	stw	r2,1284(sp)
 20016f4:	003dd506 	br	2000e4c <___vfprintf_internal_r+0xa88>
 20016f8:	d9401904 	addi	r5,sp,100
 20016fc:	dd000f04 	addi	r20,sp,60
 2001700:	d9414115 	stw	r5,1284(sp)
 2001704:	880a977a 	slli	r5,r17,29
 2001708:	d9814117 	ldw	r6,1284(sp)
 200170c:	8004d0fa 	srli	r2,r16,3
 2001710:	8806d0fa 	srli	r3,r17,3
 2001714:	810001cc 	andi	r4,r16,7
 2001718:	2884b03a 	or	r2,r5,r2
 200171c:	31bfffc4 	addi	r6,r6,-1
 2001720:	21000c04 	addi	r4,r4,48
 2001724:	d9814115 	stw	r6,1284(sp)
 2001728:	10cab03a 	or	r5,r2,r3
 200172c:	31000005 	stb	r4,0(r6)
 2001730:	1021883a 	mov	r16,r2
 2001734:	1823883a 	mov	r17,r3
 2001738:	283ff21e 	bne	r5,zero,2001704 <___vfprintf_internal_r+0x1340>
 200173c:	d8c14c17 	ldw	r3,1328(sp)
 2001740:	1880004c 	andi	r2,r3,1
 2001744:	1005003a 	cmpeq	r2,r2,zero
 2001748:	103db91e 	bne	r2,zero,2000e30 <___vfprintf_internal_r+0xa6c>
 200174c:	20803fcc 	andi	r2,r4,255
 2001750:	1080201c 	xori	r2,r2,128
 2001754:	10bfe004 	addi	r2,r2,-128
 2001758:	00c00c04 	movi	r3,48
 200175c:	10fdb426 	beq	r2,r3,2000e30 <___vfprintf_internal_r+0xa6c>
 2001760:	31bfffc4 	addi	r6,r6,-1
 2001764:	d9814115 	stw	r6,1284(sp)
 2001768:	30c00005 	stb	r3,0(r6)
 200176c:	003db006 	br	2000e30 <___vfprintf_internal_r+0xa6c>
 2001770:	88800068 	cmpgeui	r2,r17,1
 2001774:	10002c1e 	bne	r2,zero,2001828 <___vfprintf_internal_r+0x1464>
 2001778:	8800021e 	bne	r17,zero,2001784 <___vfprintf_internal_r+0x13c0>
 200177c:	00800244 	movi	r2,9
 2001780:	14002936 	bltu	r2,r16,2001828 <___vfprintf_internal_r+0x1464>
 2001784:	d90018c4 	addi	r4,sp,99
 2001788:	dd000f04 	addi	r20,sp,60
 200178c:	d9014115 	stw	r4,1284(sp)
 2001790:	d9014117 	ldw	r4,1284(sp)
 2001794:	80800c04 	addi	r2,r16,48
 2001798:	20800005 	stb	r2,0(r4)
 200179c:	003da406 	br	2000e30 <___vfprintf_internal_r+0xa6c>
 20017a0:	dc400d17 	ldw	r17,52(sp)
 20017a4:	07008074 	movhi	fp,513
 20017a8:	e7057684 	addi	fp,fp,5594
 20017ac:	9425883a 	add	r18,r18,r16
 20017b0:	8c400044 	addi	r17,r17,1
 20017b4:	008001c4 	movi	r2,7
 20017b8:	1f000015 	stw	fp,0(r3)
 20017bc:	1c000115 	stw	r16,4(r3)
 20017c0:	dc800e15 	stw	r18,56(sp)
 20017c4:	dc400d15 	stw	r17,52(sp)
 20017c8:	147de216 	blt	r2,r17,2000f54 <___vfprintf_internal_r+0xb90>
 20017cc:	18c00204 	addi	r3,r3,8
 20017d0:	003c7a06 	br	20009bc <___vfprintf_internal_r+0x5f8>
 20017d4:	01000084 	movi	r4,2
 20017d8:	d8000405 	stb	zero,16(sp)
 20017dc:	003d8706 	br	2000dfc <___vfprintf_internal_r+0xa38>
 20017e0:	d9814c17 	ldw	r6,1328(sp)
 20017e4:	30c4703a 	and	r2,r6,r3
 20017e8:	1005003a 	cmpeq	r2,r2,zero
 20017ec:	103cb926 	beq	r2,zero,2000ad4 <___vfprintf_internal_r+0x710>
 20017f0:	d9014117 	ldw	r4,1284(sp)
 20017f4:	94800044 	addi	r18,r18,1
 20017f8:	8c400044 	addi	r17,r17,1
 20017fc:	008001c4 	movi	r2,7
 2001800:	a9000015 	stw	r4,0(r21)
 2001804:	a8c00115 	stw	r3,4(r21)
 2001808:	dc800e15 	stw	r18,56(sp)
 200180c:	dc400d15 	stw	r17,52(sp)
 2001810:	147e6616 	blt	r2,r17,20011ac <___vfprintf_internal_r+0xde8>
 2001814:	acc00204 	addi	r19,r21,8
 2001818:	003cd706 	br	2000b78 <___vfprintf_internal_r+0x7b4>
 200181c:	07008074 	movhi	fp,513
 2001820:	e7057684 	addi	fp,fp,5594
 2001824:	003c4f06 	br	2000964 <___vfprintf_internal_r+0x5a0>
 2001828:	dd000f04 	addi	r20,sp,60
 200182c:	dc801904 	addi	r18,sp,100
 2001830:	8009883a 	mov	r4,r16
 2001834:	880b883a 	mov	r5,r17
 2001838:	01800284 	movi	r6,10
 200183c:	000f883a 	mov	r7,zero
 2001840:	200ca1c0 	call	200ca1c <__umoddi3>
 2001844:	12000c04 	addi	r8,r2,48
 2001848:	94bfffc4 	addi	r18,r18,-1
 200184c:	8009883a 	mov	r4,r16
 2001850:	880b883a 	mov	r5,r17
 2001854:	01800284 	movi	r6,10
 2001858:	000f883a 	mov	r7,zero
 200185c:	92000005 	stb	r8,0(r18)
 2001860:	200c4400 	call	200c440 <__udivdi3>
 2001864:	1009883a 	mov	r4,r2
 2001868:	1021883a 	mov	r16,r2
 200186c:	18800068 	cmpgeui	r2,r3,1
 2001870:	1823883a 	mov	r17,r3
 2001874:	103fee1e 	bne	r2,zero,2001830 <___vfprintf_internal_r+0x146c>
 2001878:	1800021e 	bne	r3,zero,2001884 <___vfprintf_internal_r+0x14c0>
 200187c:	00800244 	movi	r2,9
 2001880:	113feb36 	bltu	r2,r4,2001830 <___vfprintf_internal_r+0x146c>
 2001884:	94bfffc4 	addi	r18,r18,-1
 2001888:	dc814115 	stw	r18,1284(sp)
 200188c:	003fc006 	br	2001790 <___vfprintf_internal_r+0x13cc>
 2001890:	d9014c17 	ldw	r4,1328(sp)
 2001894:	2080004c 	andi	r2,r4,1
 2001898:	10009a1e 	bne	r2,zero,2001b04 <___vfprintf_internal_r+0x1740>
 200189c:	d9401904 	addi	r5,sp,100
 20018a0:	dd000f04 	addi	r20,sp,60
 20018a4:	d9414115 	stw	r5,1284(sp)
 20018a8:	003d6106 	br	2000e30 <___vfprintf_internal_r+0xa6c>
 20018ac:	d9014f17 	ldw	r4,1340(sp)
 20018b0:	b00b883a 	mov	r5,r22
 20018b4:	d9800c04 	addi	r6,sp,48
 20018b8:	200036c0 	call	200036c <__sprint_r>
 20018bc:	103c791e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 20018c0:	dc800e17 	ldw	r18,56(sp)
 20018c4:	d8c01904 	addi	r3,sp,100
 20018c8:	003cff06 	br	2000cc8 <___vfprintf_internal_r+0x904>
 20018cc:	d8c14c17 	ldw	r3,1328(sp)
 20018d0:	1880040c 	andi	r2,r3,16
 20018d4:	1000711e 	bne	r2,zero,2001a9c <___vfprintf_internal_r+0x16d8>
 20018d8:	d9014c17 	ldw	r4,1328(sp)
 20018dc:	2080100c 	andi	r2,r4,64
 20018e0:	10006e26 	beq	r2,zero,2001a9c <___vfprintf_internal_r+0x16d8>
 20018e4:	3c00000b 	ldhu	r16,0(r7)
 20018e8:	0023883a 	mov	r17,zero
 20018ec:	39c00104 	addi	r7,r7,4
 20018f0:	d9c14015 	stw	r7,1280(sp)
 20018f4:	003f0006 	br	20014f8 <___vfprintf_internal_r+0x1134>
 20018f8:	dc400d17 	ldw	r17,52(sp)
 20018fc:	07008074 	movhi	fp,513
 2001900:	e7057684 	addi	fp,fp,5594
 2001904:	9425883a 	add	r18,r18,r16
 2001908:	8c400044 	addi	r17,r17,1
 200190c:	008001c4 	movi	r2,7
 2001910:	1f000015 	stw	fp,0(r3)
 2001914:	1c000115 	stw	r16,4(r3)
 2001918:	dc800e15 	stw	r18,56(sp)
 200191c:	dc400d15 	stw	r17,52(sp)
 2001920:	147d7616 	blt	r2,r17,2000efc <___vfprintf_internal_r+0xb38>
 2001924:	18c00204 	addi	r3,r3,8
 2001928:	003d7b06 	br	2000f18 <___vfprintf_internal_r+0xb54>
 200192c:	dc800e17 	ldw	r18,56(sp)
 2001930:	dc400d17 	ldw	r17,52(sp)
 2001934:	07008074 	movhi	fp,513
 2001938:	e7057a84 	addi	fp,fp,5610
 200193c:	003bc006 	br	2000840 <___vfprintf_internal_r+0x47c>
 2001940:	d9014f17 	ldw	r4,1340(sp)
 2001944:	b00b883a 	mov	r5,r22
 2001948:	d9800c04 	addi	r6,sp,48
 200194c:	200036c0 	call	200036c <__sprint_r>
 2001950:	103c541e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001954:	dc800e17 	ldw	r18,56(sp)
 2001958:	d8c01904 	addi	r3,sp,100
 200195c:	003ce906 	br	2000d04 <___vfprintf_internal_r+0x940>
 2001960:	3c000017 	ldw	r16,0(r7)
 2001964:	0009883a 	mov	r4,zero
 2001968:	39c00104 	addi	r7,r7,4
 200196c:	0023883a 	mov	r17,zero
 2001970:	d9c14015 	stw	r7,1280(sp)
 2001974:	d8000405 	stb	zero,16(sp)
 2001978:	003d2006 	br	2000dfc <___vfprintf_internal_r+0xa38>
 200197c:	38800017 	ldw	r2,0(r7)
 2001980:	39c00104 	addi	r7,r7,4
 2001984:	d9c14015 	stw	r7,1280(sp)
 2001988:	1023d7fa 	srai	r17,r2,31
 200198c:	1021883a 	mov	r16,r2
 2001990:	003d1806 	br	2000df4 <___vfprintf_internal_r+0xa30>
 2001994:	3c000017 	ldw	r16,0(r7)
 2001998:	01000044 	movi	r4,1
 200199c:	39c00104 	addi	r7,r7,4
 20019a0:	0023883a 	mov	r17,zero
 20019a4:	d9c14015 	stw	r7,1280(sp)
 20019a8:	d8000405 	stb	zero,16(sp)
 20019ac:	003d1306 	br	2000dfc <___vfprintf_internal_r+0xa38>
 20019b0:	00808074 	movhi	r2,513
 20019b4:	10857604 	addi	r2,r2,5592
 20019b8:	94800044 	addi	r18,r18,1
 20019bc:	8c400044 	addi	r17,r17,1
 20019c0:	a8800015 	stw	r2,0(r21)
 20019c4:	00c00044 	movi	r3,1
 20019c8:	008001c4 	movi	r2,7
 20019cc:	a8c00115 	stw	r3,4(r21)
 20019d0:	dc800e15 	stw	r18,56(sp)
 20019d4:	dc400d15 	stw	r17,52(sp)
 20019d8:	1440ca16 	blt	r2,r17,2001d04 <___vfprintf_internal_r+0x1940>
 20019dc:	a8c00204 	addi	r3,r21,8
 20019e0:	2000061e 	bne	r4,zero,20019fc <___vfprintf_internal_r+0x1638>
 20019e4:	d9414717 	ldw	r5,1308(sp)
 20019e8:	2800041e 	bne	r5,zero,20019fc <___vfprintf_internal_r+0x1638>
 20019ec:	d9814c17 	ldw	r6,1328(sp)
 20019f0:	3080004c 	andi	r2,r6,1
 20019f4:	1005003a 	cmpeq	r2,r2,zero
 20019f8:	103bf01e 	bne	r2,zero,20009bc <___vfprintf_internal_r+0x5f8>
 20019fc:	00800044 	movi	r2,1
 2001a00:	dc400d17 	ldw	r17,52(sp)
 2001a04:	18800115 	stw	r2,4(r3)
 2001a08:	d8814917 	ldw	r2,1316(sp)
 2001a0c:	94800044 	addi	r18,r18,1
 2001a10:	8c400044 	addi	r17,r17,1
 2001a14:	18800015 	stw	r2,0(r3)
 2001a18:	008001c4 	movi	r2,7
 2001a1c:	dc800e15 	stw	r18,56(sp)
 2001a20:	dc400d15 	stw	r17,52(sp)
 2001a24:	1440ca16 	blt	r2,r17,2001d50 <___vfprintf_internal_r+0x198c>
 2001a28:	18c00204 	addi	r3,r3,8
 2001a2c:	0121c83a 	sub	r16,zero,r4
 2001a30:	0400500e 	bge	zero,r16,2001b74 <___vfprintf_internal_r+0x17b0>
 2001a34:	00800404 	movi	r2,16
 2001a38:	1400800e 	bge	r2,r16,2001c3c <___vfprintf_internal_r+0x1878>
 2001a3c:	1027883a 	mov	r19,r2
 2001a40:	07008074 	movhi	fp,513
 2001a44:	e7057684 	addi	fp,fp,5594
 2001a48:	050001c4 	movi	r20,7
 2001a4c:	00000306 	br	2001a5c <___vfprintf_internal_r+0x1698>
 2001a50:	18c00204 	addi	r3,r3,8
 2001a54:	843ffc04 	addi	r16,r16,-16
 2001a58:	9c007a0e 	bge	r19,r16,2001c44 <___vfprintf_internal_r+0x1880>
 2001a5c:	94800404 	addi	r18,r18,16
 2001a60:	8c400044 	addi	r17,r17,1
 2001a64:	1f000015 	stw	fp,0(r3)
 2001a68:	1cc00115 	stw	r19,4(r3)
 2001a6c:	dc800e15 	stw	r18,56(sp)
 2001a70:	dc400d15 	stw	r17,52(sp)
 2001a74:	a47ff60e 	bge	r20,r17,2001a50 <___vfprintf_internal_r+0x168c>
 2001a78:	d9014f17 	ldw	r4,1340(sp)
 2001a7c:	b00b883a 	mov	r5,r22
 2001a80:	d9800c04 	addi	r6,sp,48
 2001a84:	200036c0 	call	200036c <__sprint_r>
 2001a88:	103c061e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001a8c:	dc800e17 	ldw	r18,56(sp)
 2001a90:	dc400d17 	ldw	r17,52(sp)
 2001a94:	d8c01904 	addi	r3,sp,100
 2001a98:	003fee06 	br	2001a54 <___vfprintf_internal_r+0x1690>
 2001a9c:	3c000017 	ldw	r16,0(r7)
 2001aa0:	0023883a 	mov	r17,zero
 2001aa4:	39c00104 	addi	r7,r7,4
 2001aa8:	d9c14015 	stw	r7,1280(sp)
 2001aac:	003e9206 	br	20014f8 <___vfprintf_internal_r+0x1134>
 2001ab0:	d9401904 	addi	r5,sp,100
 2001ab4:	dd000f04 	addi	r20,sp,60
 2001ab8:	d9414115 	stw	r5,1284(sp)
 2001abc:	d9814417 	ldw	r6,1296(sp)
 2001ac0:	880a973a 	slli	r5,r17,28
 2001ac4:	8004d13a 	srli	r2,r16,4
 2001ac8:	810003cc 	andi	r4,r16,15
 2001acc:	3109883a 	add	r4,r6,r4
 2001ad0:	2884b03a 	or	r2,r5,r2
 2001ad4:	21400003 	ldbu	r5,0(r4)
 2001ad8:	d9014117 	ldw	r4,1284(sp)
 2001adc:	8806d13a 	srli	r3,r17,4
 2001ae0:	1021883a 	mov	r16,r2
 2001ae4:	213fffc4 	addi	r4,r4,-1
 2001ae8:	d9014115 	stw	r4,1284(sp)
 2001aec:	d9814117 	ldw	r6,1284(sp)
 2001af0:	10c8b03a 	or	r4,r2,r3
 2001af4:	1823883a 	mov	r17,r3
 2001af8:	31400005 	stb	r5,0(r6)
 2001afc:	203fef1e 	bne	r4,zero,2001abc <___vfprintf_internal_r+0x16f8>
 2001b00:	003ccb06 	br	2000e30 <___vfprintf_internal_r+0xa6c>
 2001b04:	00800c04 	movi	r2,48
 2001b08:	d98018c4 	addi	r6,sp,99
 2001b0c:	dd000f04 	addi	r20,sp,60
 2001b10:	d88018c5 	stb	r2,99(sp)
 2001b14:	d9814115 	stw	r6,1284(sp)
 2001b18:	003cc506 	br	2000e30 <___vfprintf_internal_r+0xa6c>
 2001b1c:	dc400d17 	ldw	r17,52(sp)
 2001b20:	07008074 	movhi	fp,513
 2001b24:	e7057a84 	addi	fp,fp,5610
 2001b28:	003bc706 	br	2000a48 <___vfprintf_internal_r+0x684>
 2001b2c:	d9414c17 	ldw	r5,1328(sp)
 2001b30:	2880040c 	andi	r2,r5,16
 2001b34:	10007c26 	beq	r2,zero,2001d28 <___vfprintf_internal_r+0x1964>
 2001b38:	38800017 	ldw	r2,0(r7)
 2001b3c:	39c00104 	addi	r7,r7,4
 2001b40:	d9c14015 	stw	r7,1280(sp)
 2001b44:	d9814b17 	ldw	r6,1324(sp)
 2001b48:	d9c14017 	ldw	r7,1280(sp)
 2001b4c:	11800015 	stw	r6,0(r2)
 2001b50:	003a7806 	br	2000534 <___vfprintf_internal_r+0x170>
 2001b54:	d9014f17 	ldw	r4,1340(sp)
 2001b58:	b00b883a 	mov	r5,r22
 2001b5c:	d9800c04 	addi	r6,sp,48
 2001b60:	200036c0 	call	200036c <__sprint_r>
 2001b64:	103bcf1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001b68:	dc800e17 	ldw	r18,56(sp)
 2001b6c:	dc400d17 	ldw	r17,52(sp)
 2001b70:	d8c01904 	addi	r3,sp,100
 2001b74:	d9014717 	ldw	r4,1308(sp)
 2001b78:	d9414117 	ldw	r5,1284(sp)
 2001b7c:	8c400044 	addi	r17,r17,1
 2001b80:	9125883a 	add	r18,r18,r4
 2001b84:	008001c4 	movi	r2,7
 2001b88:	19400015 	stw	r5,0(r3)
 2001b8c:	19000115 	stw	r4,4(r3)
 2001b90:	dc800e15 	stw	r18,56(sp)
 2001b94:	dc400d15 	stw	r17,52(sp)
 2001b98:	147cee16 	blt	r2,r17,2000f54 <___vfprintf_internal_r+0xb90>
 2001b9c:	18c00204 	addi	r3,r3,8
 2001ba0:	003b8606 	br	20009bc <___vfprintf_internal_r+0x5f8>
 2001ba4:	38c00017 	ldw	r3,0(r7)
 2001ba8:	39000204 	addi	r4,r7,8
 2001bac:	d9014015 	stw	r4,1280(sp)
 2001bb0:	d8c14215 	stw	r3,1288(sp)
 2001bb4:	39c00117 	ldw	r7,4(r7)
 2001bb8:	d9c14315 	stw	r7,1292(sp)
 2001bbc:	003e2006 	br	2001440 <___vfprintf_internal_r+0x107c>
 2001bc0:	0005883a 	mov	r2,zero
 2001bc4:	1409c83a 	sub	r4,r2,r16
 2001bc8:	1105803a 	cmpltu	r2,r2,r4
 2001bcc:	044bc83a 	sub	r5,zero,r17
 2001bd0:	2885c83a 	sub	r2,r5,r2
 2001bd4:	2021883a 	mov	r16,r4
 2001bd8:	1023883a 	mov	r17,r2
 2001bdc:	01000044 	movi	r4,1
 2001be0:	00800b44 	movi	r2,45
 2001be4:	d8800405 	stb	r2,16(sp)
 2001be8:	003c8406 	br	2000dfc <___vfprintf_internal_r+0xa38>
 2001bec:	d9014f17 	ldw	r4,1340(sp)
 2001bf0:	b00b883a 	mov	r5,r22
 2001bf4:	d9800c04 	addi	r6,sp,48
 2001bf8:	200036c0 	call	200036c <__sprint_r>
 2001bfc:	103ba91e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001c00:	dc800e17 	ldw	r18,56(sp)
 2001c04:	dc400d17 	ldw	r17,52(sp)
 2001c08:	d9000517 	ldw	r4,20(sp)
 2001c0c:	d9401904 	addi	r5,sp,100
 2001c10:	003da706 	br	20012b0 <___vfprintf_internal_r+0xeec>
 2001c14:	d9014f17 	ldw	r4,1340(sp)
 2001c18:	b00b883a 	mov	r5,r22
 2001c1c:	d9800c04 	addi	r6,sp,48
 2001c20:	200036c0 	call	200036c <__sprint_r>
 2001c24:	103b9f1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001c28:	dc800e17 	ldw	r18,56(sp)
 2001c2c:	dc400d17 	ldw	r17,52(sp)
 2001c30:	d9000517 	ldw	r4,20(sp)
 2001c34:	d8c01904 	addi	r3,sp,100
 2001c38:	003d9106 	br	2001280 <___vfprintf_internal_r+0xebc>
 2001c3c:	07008074 	movhi	fp,513
 2001c40:	e7057684 	addi	fp,fp,5594
 2001c44:	9425883a 	add	r18,r18,r16
 2001c48:	8c400044 	addi	r17,r17,1
 2001c4c:	008001c4 	movi	r2,7
 2001c50:	1f000015 	stw	fp,0(r3)
 2001c54:	1c000115 	stw	r16,4(r3)
 2001c58:	dc800e15 	stw	r18,56(sp)
 2001c5c:	dc400d15 	stw	r17,52(sp)
 2001c60:	147fbc16 	blt	r2,r17,2001b54 <___vfprintf_internal_r+0x1790>
 2001c64:	18c00204 	addi	r3,r3,8
 2001c68:	003fc206 	br	2001b74 <___vfprintf_internal_r+0x17b0>
 2001c6c:	d9014f17 	ldw	r4,1340(sp)
 2001c70:	b00b883a 	mov	r5,r22
 2001c74:	d9800c04 	addi	r6,sp,48
 2001c78:	200036c0 	call	200036c <__sprint_r>
 2001c7c:	103b891e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001c80:	dc800e17 	ldw	r18,56(sp)
 2001c84:	d9000517 	ldw	r4,20(sp)
 2001c88:	d8c01904 	addi	r3,sp,100
 2001c8c:	003d0206 	br	2001098 <___vfprintf_internal_r+0xcd4>
 2001c90:	07008074 	movhi	fp,513
 2001c94:	e7057684 	addi	fp,fp,5594
 2001c98:	003be406 	br	2000c2c <___vfprintf_internal_r+0x868>
 2001c9c:	00808074 	movhi	r2,513
 2001ca0:	10856504 	addi	r2,r2,5524
 2001ca4:	d8814115 	stw	r2,1284(sp)
 2001ca8:	003df506 	br	2001480 <___vfprintf_internal_r+0x10bc>
 2001cac:	d9014217 	ldw	r4,1288(sp)
 2001cb0:	d9414317 	ldw	r5,1292(sp)
 2001cb4:	2008a6c0 	call	2008a6c <__isnand>
 2001cb8:	10003926 	beq	r2,zero,2001da0 <___vfprintf_internal_r+0x19dc>
 2001cbc:	d9414d17 	ldw	r5,1332(sp)
 2001cc0:	008011c4 	movi	r2,71
 2001cc4:	1140ce16 	blt	r2,r5,2002000 <___vfprintf_internal_r+0x1c3c>
 2001cc8:	01808074 	movhi	r6,513
 2001ccc:	31856604 	addi	r6,r6,5528
 2001cd0:	d9814115 	stw	r6,1284(sp)
 2001cd4:	003dea06 	br	2001480 <___vfprintf_internal_r+0x10bc>
 2001cd8:	d9014c17 	ldw	r4,1328(sp)
 2001cdc:	bdc00044 	addi	r23,r23,1
 2001ce0:	b8c00007 	ldb	r3,0(r23)
 2001ce4:	21000814 	ori	r4,r4,32
 2001ce8:	d9014c15 	stw	r4,1328(sp)
 2001cec:	003a3406 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 2001cf0:	dcc14515 	stw	r19,1300(sp)
 2001cf4:	98011016 	blt	r19,zero,2002138 <___vfprintf_internal_r+0x1d74>
 2001cf8:	980f883a 	mov	r7,r19
 2001cfc:	d8014615 	stw	zero,1304(sp)
 2001d00:	003c5206 	br	2000e4c <___vfprintf_internal_r+0xa88>
 2001d04:	d9014f17 	ldw	r4,1340(sp)
 2001d08:	b00b883a 	mov	r5,r22
 2001d0c:	d9800c04 	addi	r6,sp,48
 2001d10:	200036c0 	call	200036c <__sprint_r>
 2001d14:	103b631e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001d18:	dc800e17 	ldw	r18,56(sp)
 2001d1c:	d9000517 	ldw	r4,20(sp)
 2001d20:	d8c01904 	addi	r3,sp,100
 2001d24:	003f2e06 	br	20019e0 <___vfprintf_internal_r+0x161c>
 2001d28:	d8c14c17 	ldw	r3,1328(sp)
 2001d2c:	1880100c 	andi	r2,r3,64
 2001d30:	1000a026 	beq	r2,zero,2001fb4 <___vfprintf_internal_r+0x1bf0>
 2001d34:	38800017 	ldw	r2,0(r7)
 2001d38:	39c00104 	addi	r7,r7,4
 2001d3c:	d9c14015 	stw	r7,1280(sp)
 2001d40:	d9014b17 	ldw	r4,1324(sp)
 2001d44:	d9c14017 	ldw	r7,1280(sp)
 2001d48:	1100000d 	sth	r4,0(r2)
 2001d4c:	0039f906 	br	2000534 <___vfprintf_internal_r+0x170>
 2001d50:	d9014f17 	ldw	r4,1340(sp)
 2001d54:	b00b883a 	mov	r5,r22
 2001d58:	d9800c04 	addi	r6,sp,48
 2001d5c:	200036c0 	call	200036c <__sprint_r>
 2001d60:	103b501e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001d64:	dc800e17 	ldw	r18,56(sp)
 2001d68:	dc400d17 	ldw	r17,52(sp)
 2001d6c:	d9000517 	ldw	r4,20(sp)
 2001d70:	d8c01904 	addi	r3,sp,100
 2001d74:	003f2d06 	br	2001a2c <___vfprintf_internal_r+0x1668>
 2001d78:	00800184 	movi	r2,6
 2001d7c:	14c09a36 	bltu	r2,r19,2001fe8 <___vfprintf_internal_r+0x1c24>
 2001d80:	dcc14515 	stw	r19,1300(sp)
 2001d84:	9800010e 	bge	r19,zero,2001d8c <___vfprintf_internal_r+0x19c8>
 2001d88:	d8014515 	stw	zero,1300(sp)
 2001d8c:	00808074 	movhi	r2,513
 2001d90:	10856804 	addi	r2,r2,5536
 2001d94:	980f883a 	mov	r7,r19
 2001d98:	d8814115 	stw	r2,1284(sp)
 2001d9c:	003a7806 	br	2000780 <___vfprintf_internal_r+0x3bc>
 2001da0:	00bfffc4 	movi	r2,-1
 2001da4:	9880e226 	beq	r19,r2,2002130 <___vfprintf_internal_r+0x1d6c>
 2001da8:	d9414d17 	ldw	r5,1332(sp)
 2001dac:	008019c4 	movi	r2,103
 2001db0:	2880dc26 	beq	r5,r2,2002124 <___vfprintf_internal_r+0x1d60>
 2001db4:	008011c4 	movi	r2,71
 2001db8:	2880da26 	beq	r5,r2,2002124 <___vfprintf_internal_r+0x1d60>
 2001dbc:	d9414c17 	ldw	r5,1328(sp)
 2001dc0:	d9014317 	ldw	r4,1292(sp)
 2001dc4:	d9814217 	ldw	r6,1288(sp)
 2001dc8:	29404014 	ori	r5,r5,256
 2001dcc:	d9414c15 	stw	r5,1328(sp)
 2001dd0:	2000cc16 	blt	r4,zero,2002104 <___vfprintf_internal_r+0x1d40>
 2001dd4:	3021883a 	mov	r16,r6
 2001dd8:	2023883a 	mov	r17,r4
 2001ddc:	0039883a 	mov	fp,zero
 2001de0:	d9414d17 	ldw	r5,1332(sp)
 2001de4:	00801984 	movi	r2,102
 2001de8:	2880b726 	beq	r5,r2,20020c8 <___vfprintf_internal_r+0x1d04>
 2001dec:	00801184 	movi	r2,70
 2001df0:	2880b526 	beq	r5,r2,20020c8 <___vfprintf_internal_r+0x1d04>
 2001df4:	00801944 	movi	r2,101
 2001df8:	2880c826 	beq	r5,r2,200211c <___vfprintf_internal_r+0x1d58>
 2001dfc:	00801144 	movi	r2,69
 2001e00:	2880c626 	beq	r5,r2,200211c <___vfprintf_internal_r+0x1d58>
 2001e04:	9829883a 	mov	r20,r19
 2001e08:	d9014f17 	ldw	r4,1340(sp)
 2001e0c:	d8800504 	addi	r2,sp,20
 2001e10:	880d883a 	mov	r6,r17
 2001e14:	d8800115 	stw	r2,4(sp)
 2001e18:	d8c00604 	addi	r3,sp,24
 2001e1c:	d8800704 	addi	r2,sp,28
 2001e20:	800b883a 	mov	r5,r16
 2001e24:	01c00084 	movi	r7,2
 2001e28:	d8c00215 	stw	r3,8(sp)
 2001e2c:	d8800315 	stw	r2,12(sp)
 2001e30:	dd000015 	stw	r20,0(sp)
 2001e34:	2003d680 	call	2003d68 <_dtoa_r>
 2001e38:	d9814d17 	ldw	r6,1332(sp)
 2001e3c:	d8814115 	stw	r2,1284(sp)
 2001e40:	008019c4 	movi	r2,103
 2001e44:	30809526 	beq	r6,r2,200209c <___vfprintf_internal_r+0x1cd8>
 2001e48:	d8c14d17 	ldw	r3,1332(sp)
 2001e4c:	008011c4 	movi	r2,71
 2001e50:	18809226 	beq	r3,r2,200209c <___vfprintf_internal_r+0x1cd8>
 2001e54:	d9414117 	ldw	r5,1284(sp)
 2001e58:	d9814d17 	ldw	r6,1332(sp)
 2001e5c:	00801984 	movi	r2,102
 2001e60:	2d25883a 	add	r18,r5,r20
 2001e64:	30808626 	beq	r6,r2,2002080 <___vfprintf_internal_r+0x1cbc>
 2001e68:	00801184 	movi	r2,70
 2001e6c:	30808426 	beq	r6,r2,2002080 <___vfprintf_internal_r+0x1cbc>
 2001e70:	000d883a 	mov	r6,zero
 2001e74:	000f883a 	mov	r7,zero
 2001e78:	880b883a 	mov	r5,r17
 2001e7c:	8009883a 	mov	r4,r16
 2001e80:	200dc540 	call	200dc54 <__eqdf2>
 2001e84:	1000751e 	bne	r2,zero,200205c <___vfprintf_internal_r+0x1c98>
 2001e88:	9005883a 	mov	r2,r18
 2001e8c:	dc800715 	stw	r18,28(sp)
 2001e90:	d9014117 	ldw	r4,1284(sp)
 2001e94:	d9414d17 	ldw	r5,1332(sp)
 2001e98:	00c019c4 	movi	r3,103
 2001e9c:	1125c83a 	sub	r18,r2,r4
 2001ea0:	28c06826 	beq	r5,r3,2002044 <___vfprintf_internal_r+0x1c80>
 2001ea4:	008011c4 	movi	r2,71
 2001ea8:	28806626 	beq	r5,r2,2002044 <___vfprintf_internal_r+0x1c80>
 2001eac:	d9000517 	ldw	r4,20(sp)
 2001eb0:	d8c14d17 	ldw	r3,1332(sp)
 2001eb4:	00801944 	movi	r2,101
 2001eb8:	10c05516 	blt	r2,r3,2002010 <___vfprintf_internal_r+0x1c4c>
 2001ebc:	213fffc4 	addi	r4,r4,-1
 2001ec0:	d9000515 	stw	r4,20(sp)
 2001ec4:	d8c00805 	stb	r3,32(sp)
 2001ec8:	2021883a 	mov	r16,r4
 2001ecc:	2000c116 	blt	r4,zero,20021d4 <___vfprintf_internal_r+0x1e10>
 2001ed0:	00800ac4 	movi	r2,43
 2001ed4:	d8800845 	stb	r2,33(sp)
 2001ed8:	00800244 	movi	r2,9
 2001edc:	1400af0e 	bge	r2,r16,200219c <___vfprintf_internal_r+0x1dd8>
 2001ee0:	1027883a 	mov	r19,r2
 2001ee4:	dc400b84 	addi	r17,sp,46
 2001ee8:	8009883a 	mov	r4,r16
 2001eec:	01400284 	movi	r5,10
 2001ef0:	200e4380 	call	200e438 <__modsi3>
 2001ef4:	10800c04 	addi	r2,r2,48
 2001ef8:	8c7fffc4 	addi	r17,r17,-1
 2001efc:	8009883a 	mov	r4,r16
 2001f00:	01400284 	movi	r5,10
 2001f04:	88800005 	stb	r2,0(r17)
 2001f08:	200e3d80 	call	200e3d8 <__divsi3>
 2001f0c:	1021883a 	mov	r16,r2
 2001f10:	98bff516 	blt	r19,r2,2001ee8 <___vfprintf_internal_r+0x1b24>
 2001f14:	10c00c04 	addi	r3,r2,48
 2001f18:	d88009c4 	addi	r2,sp,39
 2001f1c:	108001c4 	addi	r2,r2,7
 2001f20:	897fffc4 	addi	r5,r17,-1
 2001f24:	88ffffc5 	stb	r3,-1(r17)
 2001f28:	2880a72e 	bgeu	r5,r2,20021c8 <___vfprintf_internal_r+0x1e04>
 2001f2c:	1009883a 	mov	r4,r2
 2001f30:	d9800804 	addi	r6,sp,32
 2001f34:	d8c00884 	addi	r3,sp,34
 2001f38:	28800003 	ldbu	r2,0(r5)
 2001f3c:	29400044 	addi	r5,r5,1
 2001f40:	18800005 	stb	r2,0(r3)
 2001f44:	18c00044 	addi	r3,r3,1
 2001f48:	293ffb36 	bltu	r5,r4,2001f38 <___vfprintf_internal_r+0x1b74>
 2001f4c:	1987c83a 	sub	r3,r3,r6
 2001f50:	00800044 	movi	r2,1
 2001f54:	d8c14815 	stw	r3,1312(sp)
 2001f58:	90cf883a 	add	r7,r18,r3
 2001f5c:	1480960e 	bge	r2,r18,20021b8 <___vfprintf_internal_r+0x1df4>
 2001f60:	39c00044 	addi	r7,r7,1
 2001f64:	d9c14515 	stw	r7,1300(sp)
 2001f68:	38003416 	blt	r7,zero,200203c <___vfprintf_internal_r+0x1c78>
 2001f6c:	e0803fcc 	andi	r2,fp,255
 2001f70:	1080201c 	xori	r2,r2,128
 2001f74:	10bfe004 	addi	r2,r2,-128
 2001f78:	10004e26 	beq	r2,zero,20020b4 <___vfprintf_internal_r+0x1cf0>
 2001f7c:	00800b44 	movi	r2,45
 2001f80:	dc814715 	stw	r18,1308(sp)
 2001f84:	d8014615 	stw	zero,1304(sp)
 2001f88:	d8800405 	stb	r2,16(sp)
 2001f8c:	003bb106 	br	2000e54 <___vfprintf_internal_r+0xa90>
 2001f90:	00800b44 	movi	r2,45
 2001f94:	d8800405 	stb	r2,16(sp)
 2001f98:	003d3306 	br	2001468 <___vfprintf_internal_r+0x10a4>
 2001f9c:	d9014f17 	ldw	r4,1340(sp)
 2001fa0:	b00b883a 	mov	r5,r22
 2001fa4:	d9800c04 	addi	r6,sp,48
 2001fa8:	200036c0 	call	200036c <__sprint_r>
 2001fac:	103abd1e 	bne	r2,zero,2000aa4 <___vfprintf_internal_r+0x6e0>
 2001fb0:	003abb06 	br	2000aa0 <___vfprintf_internal_r+0x6dc>
 2001fb4:	38800017 	ldw	r2,0(r7)
 2001fb8:	39c00104 	addi	r7,r7,4
 2001fbc:	d9c14015 	stw	r7,1280(sp)
 2001fc0:	d9414b17 	ldw	r5,1324(sp)
 2001fc4:	d9c14017 	ldw	r7,1280(sp)
 2001fc8:	11400015 	stw	r5,0(r2)
 2001fcc:	00395906 	br	2000534 <___vfprintf_internal_r+0x170>
 2001fd0:	980f883a 	mov	r7,r19
 2001fd4:	dcc14515 	stw	r19,1300(sp)
 2001fd8:	d8014615 	stw	zero,1304(sp)
 2001fdc:	003b9b06 	br	2000e4c <___vfprintf_internal_r+0xa88>
 2001fe0:	0027883a 	mov	r19,zero
 2001fe4:	00397806 	br	20005c8 <___vfprintf_internal_r+0x204>
 2001fe8:	00c08074 	movhi	r3,513
 2001fec:	18c56804 	addi	r3,r3,5536
 2001ff0:	100f883a 	mov	r7,r2
 2001ff4:	d8814515 	stw	r2,1300(sp)
 2001ff8:	d8c14115 	stw	r3,1284(sp)
 2001ffc:	0039e006 	br	2000780 <___vfprintf_internal_r+0x3bc>
 2002000:	00808074 	movhi	r2,513
 2002004:	10856704 	addi	r2,r2,5532
 2002008:	d8814115 	stw	r2,1284(sp)
 200200c:	003d1c06 	br	2001480 <___vfprintf_internal_r+0x10bc>
 2002010:	d9414d17 	ldw	r5,1332(sp)
 2002014:	00801984 	movi	r2,102
 2002018:	28804926 	beq	r5,r2,2002140 <___vfprintf_internal_r+0x1d7c>
 200201c:	200f883a 	mov	r7,r4
 2002020:	24805716 	blt	r4,r18,2002180 <___vfprintf_internal_r+0x1dbc>
 2002024:	d9414c17 	ldw	r5,1328(sp)
 2002028:	2880004c 	andi	r2,r5,1
 200202c:	10000126 	beq	r2,zero,2002034 <___vfprintf_internal_r+0x1c70>
 2002030:	21c00044 	addi	r7,r4,1
 2002034:	d9c14515 	stw	r7,1300(sp)
 2002038:	383fcc0e 	bge	r7,zero,2001f6c <___vfprintf_internal_r+0x1ba8>
 200203c:	d8014515 	stw	zero,1300(sp)
 2002040:	003fca06 	br	2001f6c <___vfprintf_internal_r+0x1ba8>
 2002044:	d9000517 	ldw	r4,20(sp)
 2002048:	00bfff04 	movi	r2,-4
 200204c:	1100480e 	bge	r2,r4,2002170 <___vfprintf_internal_r+0x1dac>
 2002050:	99004716 	blt	r19,r4,2002170 <___vfprintf_internal_r+0x1dac>
 2002054:	d8c14d15 	stw	r3,1332(sp)
 2002058:	003ff006 	br	200201c <___vfprintf_internal_r+0x1c58>
 200205c:	d8800717 	ldw	r2,28(sp)
 2002060:	14bf8b2e 	bgeu	r2,r18,2001e90 <___vfprintf_internal_r+0x1acc>
 2002064:	9007883a 	mov	r3,r18
 2002068:	01000c04 	movi	r4,48
 200206c:	11000005 	stb	r4,0(r2)
 2002070:	10800044 	addi	r2,r2,1
 2002074:	d8800715 	stw	r2,28(sp)
 2002078:	18bffc1e 	bne	r3,r2,200206c <___vfprintf_internal_r+0x1ca8>
 200207c:	003f8406 	br	2001e90 <___vfprintf_internal_r+0x1acc>
 2002080:	d8814117 	ldw	r2,1284(sp)
 2002084:	10c00007 	ldb	r3,0(r2)
 2002088:	00800c04 	movi	r2,48
 200208c:	18805b26 	beq	r3,r2,20021fc <___vfprintf_internal_r+0x1e38>
 2002090:	d9000517 	ldw	r4,20(sp)
 2002094:	9125883a 	add	r18,r18,r4
 2002098:	003f7506 	br	2001e70 <___vfprintf_internal_r+0x1aac>
 200209c:	d9014c17 	ldw	r4,1328(sp)
 20020a0:	2080004c 	andi	r2,r4,1
 20020a4:	1005003a 	cmpeq	r2,r2,zero
 20020a8:	103f6a26 	beq	r2,zero,2001e54 <___vfprintf_internal_r+0x1a90>
 20020ac:	d8800717 	ldw	r2,28(sp)
 20020b0:	003f7706 	br	2001e90 <___vfprintf_internal_r+0x1acc>
 20020b4:	d9c14515 	stw	r7,1300(sp)
 20020b8:	38004d16 	blt	r7,zero,20021f0 <___vfprintf_internal_r+0x1e2c>
 20020bc:	dc814715 	stw	r18,1308(sp)
 20020c0:	d8014615 	stw	zero,1304(sp)
 20020c4:	003b6106 	br	2000e4c <___vfprintf_internal_r+0xa88>
 20020c8:	d9014f17 	ldw	r4,1340(sp)
 20020cc:	d8800504 	addi	r2,sp,20
 20020d0:	d8800115 	stw	r2,4(sp)
 20020d4:	d8c00604 	addi	r3,sp,24
 20020d8:	d8800704 	addi	r2,sp,28
 20020dc:	800b883a 	mov	r5,r16
 20020e0:	880d883a 	mov	r6,r17
 20020e4:	01c000c4 	movi	r7,3
 20020e8:	d8c00215 	stw	r3,8(sp)
 20020ec:	d8800315 	stw	r2,12(sp)
 20020f0:	dcc00015 	stw	r19,0(sp)
 20020f4:	9829883a 	mov	r20,r19
 20020f8:	2003d680 	call	2003d68 <_dtoa_r>
 20020fc:	d8814115 	stw	r2,1284(sp)
 2002100:	003f5106 	br	2001e48 <___vfprintf_internal_r+0x1a84>
 2002104:	d8c14217 	ldw	r3,1288(sp)
 2002108:	d9014317 	ldw	r4,1292(sp)
 200210c:	07000b44 	movi	fp,45
 2002110:	1821883a 	mov	r16,r3
 2002114:	2460003c 	xorhi	r17,r4,32768
 2002118:	003f3106 	br	2001de0 <___vfprintf_internal_r+0x1a1c>
 200211c:	9d000044 	addi	r20,r19,1
 2002120:	003f3906 	br	2001e08 <___vfprintf_internal_r+0x1a44>
 2002124:	983f251e 	bne	r19,zero,2001dbc <___vfprintf_internal_r+0x19f8>
 2002128:	04c00044 	movi	r19,1
 200212c:	003f2306 	br	2001dbc <___vfprintf_internal_r+0x19f8>
 2002130:	04c00184 	movi	r19,6
 2002134:	003f2106 	br	2001dbc <___vfprintf_internal_r+0x19f8>
 2002138:	d8014515 	stw	zero,1300(sp)
 200213c:	003eee06 	br	2001cf8 <___vfprintf_internal_r+0x1934>
 2002140:	200f883a 	mov	r7,r4
 2002144:	0100370e 	bge	zero,r4,2002224 <___vfprintf_internal_r+0x1e60>
 2002148:	9800031e 	bne	r19,zero,2002158 <___vfprintf_internal_r+0x1d94>
 200214c:	d9814c17 	ldw	r6,1328(sp)
 2002150:	3080004c 	andi	r2,r6,1
 2002154:	103fb726 	beq	r2,zero,2002034 <___vfprintf_internal_r+0x1c70>
 2002158:	20800044 	addi	r2,r4,1
 200215c:	98a7883a 	add	r19,r19,r2
 2002160:	dcc14515 	stw	r19,1300(sp)
 2002164:	980f883a 	mov	r7,r19
 2002168:	983f800e 	bge	r19,zero,2001f6c <___vfprintf_internal_r+0x1ba8>
 200216c:	003fb306 	br	200203c <___vfprintf_internal_r+0x1c78>
 2002170:	d9814d17 	ldw	r6,1332(sp)
 2002174:	31bfff84 	addi	r6,r6,-2
 2002178:	d9814d15 	stw	r6,1332(sp)
 200217c:	003f4c06 	br	2001eb0 <___vfprintf_internal_r+0x1aec>
 2002180:	0100180e 	bge	zero,r4,20021e4 <___vfprintf_internal_r+0x1e20>
 2002184:	00800044 	movi	r2,1
 2002188:	1485883a 	add	r2,r2,r18
 200218c:	d8814515 	stw	r2,1300(sp)
 2002190:	100f883a 	mov	r7,r2
 2002194:	103f750e 	bge	r2,zero,2001f6c <___vfprintf_internal_r+0x1ba8>
 2002198:	003fa806 	br	200203c <___vfprintf_internal_r+0x1c78>
 200219c:	80c00c04 	addi	r3,r16,48
 20021a0:	00800c04 	movi	r2,48
 20021a4:	d8c008c5 	stb	r3,35(sp)
 20021a8:	d9800804 	addi	r6,sp,32
 20021ac:	d8c00904 	addi	r3,sp,36
 20021b0:	d8800885 	stb	r2,34(sp)
 20021b4:	003f6506 	br	2001f4c <___vfprintf_internal_r+0x1b88>
 20021b8:	d9014c17 	ldw	r4,1328(sp)
 20021bc:	2084703a 	and	r2,r4,r2
 20021c0:	103f9c26 	beq	r2,zero,2002034 <___vfprintf_internal_r+0x1c70>
 20021c4:	003f6606 	br	2001f60 <___vfprintf_internal_r+0x1b9c>
 20021c8:	d9800804 	addi	r6,sp,32
 20021cc:	d8c00884 	addi	r3,sp,34
 20021d0:	003f5e06 	br	2001f4c <___vfprintf_internal_r+0x1b88>
 20021d4:	00800b44 	movi	r2,45
 20021d8:	0121c83a 	sub	r16,zero,r4
 20021dc:	d8800845 	stb	r2,33(sp)
 20021e0:	003f3d06 	br	2001ed8 <___vfprintf_internal_r+0x1b14>
 20021e4:	00800084 	movi	r2,2
 20021e8:	1105c83a 	sub	r2,r2,r4
 20021ec:	003fe606 	br	2002188 <___vfprintf_internal_r+0x1dc4>
 20021f0:	d8014515 	stw	zero,1300(sp)
 20021f4:	dc814715 	stw	r18,1308(sp)
 20021f8:	003fb106 	br	20020c0 <___vfprintf_internal_r+0x1cfc>
 20021fc:	000d883a 	mov	r6,zero
 2002200:	000f883a 	mov	r7,zero
 2002204:	8009883a 	mov	r4,r16
 2002208:	880b883a 	mov	r5,r17
 200220c:	200dcdc0 	call	200dcdc <__nedf2>
 2002210:	103f9f26 	beq	r2,zero,2002090 <___vfprintf_internal_r+0x1ccc>
 2002214:	00800044 	movi	r2,1
 2002218:	1509c83a 	sub	r4,r2,r20
 200221c:	d9000515 	stw	r4,20(sp)
 2002220:	003f9b06 	br	2002090 <___vfprintf_internal_r+0x1ccc>
 2002224:	98000d1e 	bne	r19,zero,200225c <___vfprintf_internal_r+0x1e98>
 2002228:	d8c14c17 	ldw	r3,1328(sp)
 200222c:	1880004c 	andi	r2,r3,1
 2002230:	10000a1e 	bne	r2,zero,200225c <___vfprintf_internal_r+0x1e98>
 2002234:	01000044 	movi	r4,1
 2002238:	200f883a 	mov	r7,r4
 200223c:	d9014515 	stw	r4,1300(sp)
 2002240:	003f4a06 	br	2001f6c <___vfprintf_internal_r+0x1ba8>
 2002244:	3cc00017 	ldw	r19,0(r7)
 2002248:	39c00104 	addi	r7,r7,4
 200224c:	983d0e0e 	bge	r19,zero,2001688 <___vfprintf_internal_r+0x12c4>
 2002250:	b8c00007 	ldb	r3,0(r23)
 2002254:	04ffffc4 	movi	r19,-1
 2002258:	0038d906 	br	20005c0 <___vfprintf_internal_r+0x1fc>
 200225c:	9cc00084 	addi	r19,r19,2
 2002260:	dcc14515 	stw	r19,1300(sp)
 2002264:	980f883a 	mov	r7,r19
 2002268:	983f400e 	bge	r19,zero,2001f6c <___vfprintf_internal_r+0x1ba8>
 200226c:	003f7306 	br	200203c <___vfprintf_internal_r+0x1c78>

02002270 <__vfprintf_internal>:
 2002270:	00808074 	movhi	r2,513
 2002274:	10899604 	addi	r2,r2,9816
 2002278:	2013883a 	mov	r9,r4
 200227c:	11000017 	ldw	r4,0(r2)
 2002280:	2805883a 	mov	r2,r5
 2002284:	300f883a 	mov	r7,r6
 2002288:	480b883a 	mov	r5,r9
 200228c:	100d883a 	mov	r6,r2
 2002290:	20003c41 	jmpi	20003c4 <___vfprintf_internal_r>

02002294 <__svfscanf_r>:
 2002294:	deff4e04 	addi	sp,sp,-712
 2002298:	dd80ae15 	stw	r22,696(sp)
 200229c:	dd00ac15 	stw	r20,688(sp)
 20022a0:	dc40a915 	stw	r17,676(sp)
 20022a4:	dc00a815 	stw	r16,672(sp)
 20022a8:	dfc0b115 	stw	ra,708(sp)
 20022ac:	df00b015 	stw	fp,704(sp)
 20022b0:	ddc0af15 	stw	r23,700(sp)
 20022b4:	dd40ad15 	stw	r21,692(sp)
 20022b8:	dcc0ab15 	stw	r19,684(sp)
 20022bc:	dc80aa15 	stw	r18,680(sp)
 20022c0:	202d883a 	mov	r22,r4
 20022c4:	2821883a 	mov	r16,r5
 20022c8:	d9c0a415 	stw	r7,656(sp)
 20022cc:	3029883a 	mov	r20,r6
 20022d0:	d800a215 	stw	zero,648(sp)
 20022d4:	0023883a 	mov	r17,zero
 20022d8:	d800a115 	stw	zero,644(sp)
 20022dc:	d800a015 	stw	zero,640(sp)
 20022e0:	a1000007 	ldb	r4,0(r20)
 20022e4:	d9000115 	stw	r4,4(sp)
 20022e8:	20001f26 	beq	r4,zero,2002368 <__svfscanf_r+0xd4>
 20022ec:	04808074 	movhi	r18,513
 20022f0:	94899504 	addi	r18,r18,9812
 20022f4:	91800017 	ldw	r6,0(r18)
 20022f8:	a5000044 	addi	r20,r20,1
 20022fc:	3107883a 	add	r3,r6,r4
 2002300:	18800003 	ldbu	r2,0(r3)
 2002304:	1080020c 	andi	r2,r2,8
 2002308:	10002426 	beq	r2,zero,200239c <__svfscanf_r+0x108>
 200230c:	80c00117 	ldw	r3,4(r16)
 2002310:	00c00e0e 	bge	zero,r3,200234c <__svfscanf_r+0xb8>
 2002314:	81400017 	ldw	r5,0(r16)
 2002318:	90800017 	ldw	r2,0(r18)
 200231c:	28c00003 	ldbu	r3,0(r5)
 2002320:	1887883a 	add	r3,r3,r2
 2002324:	19000003 	ldbu	r4,0(r3)
 2002328:	2100020c 	andi	r4,r4,8
 200232c:	203fec26 	beq	r4,zero,20022e0 <__svfscanf_r+0x4c>
 2002330:	80c00117 	ldw	r3,4(r16)
 2002334:	29800044 	addi	r6,r5,1
 2002338:	8c400044 	addi	r17,r17,1
 200233c:	18ffffc4 	addi	r3,r3,-1
 2002340:	81800015 	stw	r6,0(r16)
 2002344:	80c00115 	stw	r3,4(r16)
 2002348:	00fff216 	blt	zero,r3,2002314 <__svfscanf_r+0x80>
 200234c:	b009883a 	mov	r4,r22
 2002350:	800b883a 	mov	r5,r16
 2002354:	200884c0 	call	200884c <__srefill_r>
 2002358:	103fee26 	beq	r2,zero,2002314 <__svfscanf_r+0x80>
 200235c:	a1000007 	ldb	r4,0(r20)
 2002360:	d9000115 	stw	r4,4(sp)
 2002364:	203fe11e 	bne	r4,zero,20022ec <__svfscanf_r+0x58>
 2002368:	d880a217 	ldw	r2,648(sp)
 200236c:	dfc0b117 	ldw	ra,708(sp)
 2002370:	df00b017 	ldw	fp,704(sp)
 2002374:	ddc0af17 	ldw	r23,700(sp)
 2002378:	dd80ae17 	ldw	r22,696(sp)
 200237c:	dd40ad17 	ldw	r21,692(sp)
 2002380:	dd00ac17 	ldw	r20,688(sp)
 2002384:	dcc0ab17 	ldw	r19,684(sp)
 2002388:	dc80aa17 	ldw	r18,680(sp)
 200238c:	dc40a917 	ldw	r17,676(sp)
 2002390:	dc00a817 	ldw	r16,672(sp)
 2002394:	dec0b204 	addi	sp,sp,712
 2002398:	f800283a 	ret
 200239c:	00800944 	movi	r2,37
 20023a0:	20801626 	beq	r4,r2,20023fc <__svfscanf_r+0x168>
 20023a4:	80800117 	ldw	r2,4(r16)
 20023a8:	00800b0e 	bge	zero,r2,20023d8 <__svfscanf_r+0x144>
 20023ac:	81000017 	ldw	r4,0(r16)
 20023b0:	a0ffffc7 	ldb	r3,-1(r20)
 20023b4:	20800003 	ldbu	r2,0(r4)
 20023b8:	10ffeb1e 	bne	r2,r3,2002368 <__svfscanf_r+0xd4>
 20023bc:	80c00117 	ldw	r3,4(r16)
 20023c0:	21800044 	addi	r6,r4,1
 20023c4:	8c400044 	addi	r17,r17,1
 20023c8:	18ffffc4 	addi	r3,r3,-1
 20023cc:	80c00115 	stw	r3,4(r16)
 20023d0:	81800015 	stw	r6,0(r16)
 20023d4:	003fc206 	br	20022e0 <__svfscanf_r+0x4c>
 20023d8:	b009883a 	mov	r4,r22
 20023dc:	800b883a 	mov	r5,r16
 20023e0:	200884c0 	call	200884c <__srefill_r>
 20023e4:	103ff126 	beq	r2,zero,20023ac <__svfscanf_r+0x118>
 20023e8:	d900a217 	ldw	r4,648(sp)
 20023ec:	2004c91e 	bne	r4,zero,2003714 <__svfscanf_r+0x1480>
 20023f0:	00bfffc4 	movi	r2,-1
 20023f4:	d880a215 	stw	r2,648(sp)
 20023f8:	003fdb06 	br	2002368 <__svfscanf_r+0xd4>
 20023fc:	d800a315 	stw	zero,652(sp)
 2002400:	0027883a 	mov	r19,zero
 2002404:	a0c00003 	ldbu	r3,0(r20)
 2002408:	00801e04 	movi	r2,120
 200240c:	a5000044 	addi	r20,r20,1
 2002410:	19403fcc 	andi	r5,r3,255
 2002414:	2940201c 	xori	r5,r5,128
 2002418:	297fe004 	addi	r5,r5,-128
 200241c:	10c08036 	bltu	r2,r3,2002620 <__svfscanf_r+0x38c>
 2002420:	18c5883a 	add	r2,r3,r3
 2002424:	1085883a 	add	r2,r2,r2
 2002428:	00c08034 	movhi	r3,512
 200242c:	18c90f04 	addi	r3,r3,9276
 2002430:	10c5883a 	add	r2,r2,r3
 2002434:	11000017 	ldw	r4,0(r2)
 2002438:	2000683a 	jmp	r4
 200243c:	020023f0 	cmpltui	r8,zero,143
 2002440:	02002620 	cmpeqi	r8,zero,152
 2002444:	02002620 	cmpeqi	r8,zero,152
 2002448:	02002620 	cmpeqi	r8,zero,152
 200244c:	02002620 	cmpeqi	r8,zero,152
 2002450:	02002620 	cmpeqi	r8,zero,152
 2002454:	02002620 	cmpeqi	r8,zero,152
 2002458:	02002620 	cmpeqi	r8,zero,152
 200245c:	02002620 	cmpeqi	r8,zero,152
 2002460:	02002620 	cmpeqi	r8,zero,152
 2002464:	02002620 	cmpeqi	r8,zero,152
 2002468:	02002620 	cmpeqi	r8,zero,152
 200246c:	02002620 	cmpeqi	r8,zero,152
 2002470:	02002620 	cmpeqi	r8,zero,152
 2002474:	02002620 	cmpeqi	r8,zero,152
 2002478:	02002620 	cmpeqi	r8,zero,152
 200247c:	02002620 	cmpeqi	r8,zero,152
 2002480:	02002620 	cmpeqi	r8,zero,152
 2002484:	02002620 	cmpeqi	r8,zero,152
 2002488:	02002620 	cmpeqi	r8,zero,152
 200248c:	02002620 	cmpeqi	r8,zero,152
 2002490:	02002620 	cmpeqi	r8,zero,152
 2002494:	02002620 	cmpeqi	r8,zero,152
 2002498:	02002620 	cmpeqi	r8,zero,152
 200249c:	02002620 	cmpeqi	r8,zero,152
 20024a0:	02002620 	cmpeqi	r8,zero,152
 20024a4:	02002620 	cmpeqi	r8,zero,152
 20024a8:	02002620 	cmpeqi	r8,zero,152
 20024ac:	02002620 	cmpeqi	r8,zero,152
 20024b0:	02002620 	cmpeqi	r8,zero,152
 20024b4:	02002620 	cmpeqi	r8,zero,152
 20024b8:	02002620 	cmpeqi	r8,zero,152
 20024bc:	02002620 	cmpeqi	r8,zero,152
 20024c0:	02002620 	cmpeqi	r8,zero,152
 20024c4:	02002620 	cmpeqi	r8,zero,152
 20024c8:	02002620 	cmpeqi	r8,zero,152
 20024cc:	02002620 	cmpeqi	r8,zero,152
 20024d0:	020023a4 	muli	r8,zero,142
 20024d4:	02002620 	cmpeqi	r8,zero,152
 20024d8:	02002620 	cmpeqi	r8,zero,152
 20024dc:	02002620 	cmpeqi	r8,zero,152
 20024e0:	02002620 	cmpeqi	r8,zero,152
 20024e4:	02003644 	movi	r8,217
 20024e8:	02002620 	cmpeqi	r8,zero,152
 20024ec:	02002620 	cmpeqi	r8,zero,152
 20024f0:	02002620 	cmpeqi	r8,zero,152
 20024f4:	02002620 	cmpeqi	r8,zero,152
 20024f8:	02002620 	cmpeqi	r8,zero,152
 20024fc:	02003040 	call	200304 <__reset-0x1dffcfc>
 2002500:	02003040 	call	200304 <__reset-0x1dffcfc>
 2002504:	02003040 	call	200304 <__reset-0x1dffcfc>
 2002508:	02003040 	call	200304 <__reset-0x1dffcfc>
 200250c:	02003040 	call	200304 <__reset-0x1dffcfc>
 2002510:	02003040 	call	200304 <__reset-0x1dffcfc>
 2002514:	02003040 	call	200304 <__reset-0x1dffcfc>
 2002518:	02003040 	call	200304 <__reset-0x1dffcfc>
 200251c:	02003040 	call	200304 <__reset-0x1dffcfc>
 2002520:	02003040 	call	200304 <__reset-0x1dffcfc>
 2002524:	02002620 	cmpeqi	r8,zero,152
 2002528:	02002620 	cmpeqi	r8,zero,152
 200252c:	02002620 	cmpeqi	r8,zero,152
 2002530:	02002620 	cmpeqi	r8,zero,152
 2002534:	02002620 	cmpeqi	r8,zero,152
 2002538:	02002620 	cmpeqi	r8,zero,152
 200253c:	02002620 	cmpeqi	r8,zero,152
 2002540:	02002620 	cmpeqi	r8,zero,152
 2002544:	02002620 	cmpeqi	r8,zero,152
 2002548:	02002620 	cmpeqi	r8,zero,152
 200254c:	020037c0 	call	20037c <__reset-0x1dffc84>
 2002550:	020037b8 	rdprs	r8,zero,222
 2002554:	02002620 	cmpeqi	r8,zero,152
 2002558:	020037b8 	rdprs	r8,zero,222
 200255c:	02002620 	cmpeqi	r8,zero,152
 2002560:	02002620 	cmpeqi	r8,zero,152
 2002564:	02002620 	cmpeqi	r8,zero,152
 2002568:	02002620 	cmpeqi	r8,zero,152
 200256c:	02003850 	cmplti	r8,zero,225
 2002570:	02002620 	cmpeqi	r8,zero,152
 2002574:	02002620 	cmpeqi	r8,zero,152
 2002578:	02003808 	cmpgei	r8,zero,224
 200257c:	02002620 	cmpeqi	r8,zero,152
 2002580:	02002620 	cmpeqi	r8,zero,152
 2002584:	02002620 	cmpeqi	r8,zero,152
 2002588:	02002620 	cmpeqi	r8,zero,152
 200258c:	02002620 	cmpeqi	r8,zero,152
 2002590:	02002620 	cmpeqi	r8,zero,152
 2002594:	02002620 	cmpeqi	r8,zero,152
 2002598:	02002620 	cmpeqi	r8,zero,152
 200259c:	0200364c 	andi	r8,zero,217
 20025a0:	02002620 	cmpeqi	r8,zero,152
 20025a4:	02002620 	cmpeqi	r8,zero,152
 20025a8:	020037ec 	andhi	r8,zero,223
 20025ac:	02002620 	cmpeqi	r8,zero,152
 20025b0:	02002620 	cmpeqi	r8,zero,152
 20025b4:	02002620 	cmpeqi	r8,zero,152
 20025b8:	02002620 	cmpeqi	r8,zero,152
 20025bc:	02002620 	cmpeqi	r8,zero,152
 20025c0:	02002620 	cmpeqi	r8,zero,152
 20025c4:	02002620 	cmpeqi	r8,zero,152
 20025c8:	020037e0 	cmpeqi	r8,zero,223
 20025cc:	020037c4 	movi	r8,223
 20025d0:	020037b8 	rdprs	r8,zero,222
 20025d4:	020037b8 	rdprs	r8,zero,222
 20025d8:	020037b8 	rdprs	r8,zero,222
 20025dc:	020037b0 	cmpltui	r8,zero,222
 20025e0:	020038a4 	muli	r8,zero,226
 20025e4:	02002620 	cmpeqi	r8,zero,152
 20025e8:	02002620 	cmpeqi	r8,zero,152
 20025ec:	02003890 	cmplti	r8,zero,226
 20025f0:	02002620 	cmpeqi	r8,zero,152
 20025f4:	02003828 	cmpgeui	r8,zero,224
 20025f8:	0200380c 	andi	r8,zero,224
 20025fc:	02003860 	cmpeqi	r8,zero,225
 2002600:	02002620 	cmpeqi	r8,zero,152
 2002604:	02002620 	cmpeqi	r8,zero,152
 2002608:	02003858 	cmpnei	r8,zero,225
 200260c:	02002620 	cmpeqi	r8,zero,152
 2002610:	02002b90 	cmplti	r8,zero,174
 2002614:	02002620 	cmpeqi	r8,zero,152
 2002618:	02002620 	cmpeqi	r8,zero,152
 200261c:	0200364c 	andi	r8,zero,217
 2002620:	2987883a 	add	r3,r5,r6
 2002624:	18800003 	ldbu	r2,0(r3)
 2002628:	1080004c 	andi	r2,r2,1
 200262c:	1005003a 	cmpeq	r2,r2,zero
 2002630:	10002c26 	beq	r2,zero,20026e4 <__svfscanf_r+0x450>
 2002634:	01008074 	movhi	r4,513
 2002638:	21296404 	addi	r4,r4,-23152
 200263c:	00800284 	movi	r2,10
 2002640:	d900a015 	stw	r4,640(sp)
 2002644:	054000c4 	movi	r21,3
 2002648:	d880a115 	stw	r2,644(sp)
 200264c:	80c00117 	ldw	r3,4(r16)
 2002650:	00c14a0e 	bge	zero,r3,2002b7c <__svfscanf_r+0x8e8>
 2002654:	9880100c 	andi	r2,r19,64
 2002658:	10001326 	beq	r2,zero,20026a8 <__svfscanf_r+0x414>
 200265c:	00800104 	movi	r2,4
 2002660:	157f1f36 	bltu	r2,r21,20022e0 <__svfscanf_r+0x4c>
 2002664:	ad45883a 	add	r2,r21,r21
 2002668:	1085883a 	add	r2,r2,r2
 200266c:	00c08034 	movhi	r3,512
 2002670:	18c9a004 	addi	r3,r3,9856
 2002674:	10c5883a 	add	r2,r2,r3
 2002678:	11000017 	ldw	r4,0(r2)
 200267c:	2000683a 	jmp	r4
 2002680:	020026ec 	andhi	r8,zero,155
 2002684:	020027f8 	rdprs	r8,zero,159
 2002688:	0200286c 	andhi	r8,zero,161
 200268c:	02002b58 	cmpnei	r8,zero,173
 2002690:	020029a4 	muli	r8,zero,166
 2002694:	b009883a 	mov	r4,r22
 2002698:	800b883a 	mov	r5,r16
 200269c:	200884c0 	call	200884c <__srefill_r>
 20026a0:	103f511e 	bne	r2,zero,20023e8 <__svfscanf_r+0x154>
 20026a4:	8c400044 	addi	r17,r17,1
 20026a8:	81400017 	ldw	r5,0(r16)
 20026ac:	90800017 	ldw	r2,0(r18)
 20026b0:	28c00003 	ldbu	r3,0(r5)
 20026b4:	1887883a 	add	r3,r3,r2
 20026b8:	19000003 	ldbu	r4,0(r3)
 20026bc:	2100020c 	andi	r4,r4,8
 20026c0:	203fe626 	beq	r4,zero,200265c <__svfscanf_r+0x3c8>
 20026c4:	80c00117 	ldw	r3,4(r16)
 20026c8:	18ffffc4 	addi	r3,r3,-1
 20026cc:	80c00115 	stw	r3,4(r16)
 20026d0:	00fff00e 	bge	zero,r3,2002694 <__svfscanf_r+0x400>
 20026d4:	29800044 	addi	r6,r5,1
 20026d8:	8c400044 	addi	r17,r17,1
 20026dc:	81800015 	stw	r6,0(r16)
 20026e0:	003ff106 	br	20026a8 <__svfscanf_r+0x414>
 20026e4:	9cc00054 	ori	r19,r19,1
 20026e8:	003fd206 	br	2002634 <__svfscanf_r+0x3a0>
 20026ec:	d8c0a317 	ldw	r3,652(sp)
 20026f0:	1800021e 	bne	r3,zero,20026fc <__svfscanf_r+0x468>
 20026f4:	01000044 	movi	r4,1
 20026f8:	d900a315 	stw	r4,652(sp)
 20026fc:	9880004c 	andi	r2,r19,1
 2002700:	1005003a 	cmpeq	r2,r2,zero
 2002704:	1003d91e 	bne	r2,zero,200366c <__svfscanf_r+0x13d8>
 2002708:	9d40040c 	andi	r21,r19,16
 200270c:	a839003a 	cmpeq	fp,r21,zero
 2002710:	e0042526 	beq	fp,zero,20037a8 <__svfscanf_r+0x1514>
 2002714:	d880a417 	ldw	r2,656(sp)
 2002718:	14c00017 	ldw	r19,0(r2)
 200271c:	10800104 	addi	r2,r2,4
 2002720:	d880a415 	stw	r2,656(sp)
 2002724:	d8c0a317 	ldw	r3,652(sp)
 2002728:	18041a26 	beq	r3,zero,2003794 <__svfscanf_r+0x1500>
 200272c:	01008074 	movhi	r4,513
 2002730:	21099804 	addi	r4,r4,9824
 2002734:	20800017 	ldw	r2,0(r4)
 2002738:	103f2b26 	beq	r2,zero,20023e8 <__svfscanf_r+0x154>
 200273c:	d8804404 	addi	r2,sp,272
 2002740:	0025883a 	mov	r18,zero
 2002744:	d880a615 	stw	r2,664(sp)
 2002748:	05ffffc4 	movi	r23,-1
 200274c:	80800017 	ldw	r2,0(r16)
 2002750:	80c00117 	ldw	r3,4(r16)
 2002754:	d900a617 	ldw	r4,664(sp)
 2002758:	12000003 	ldbu	r8,0(r2)
 200275c:	18ffffc4 	addi	r3,r3,-1
 2002760:	11800044 	addi	r6,r2,1
 2002764:	248f883a 	add	r7,r4,r18
 2002768:	80c00115 	stw	r3,4(r16)
 200276c:	81800015 	stw	r6,0(r16)
 2002770:	3a000005 	stb	r8,0(r7)
 2002774:	d9000204 	addi	r4,sp,8
 2002778:	000b883a 	mov	r5,zero
 200277c:	01800204 	movi	r6,8
 2002780:	20071cc0 	call	20071cc <memset>
 2002784:	d980a617 	ldw	r6,664(sp)
 2002788:	94800044 	addi	r18,r18,1
 200278c:	d8800204 	addi	r2,sp,8
 2002790:	b009883a 	mov	r4,r22
 2002794:	980b883a 	mov	r5,r19
 2002798:	900f883a 	mov	r7,r18
 200279c:	d8800015 	stw	r2,0(sp)
 20027a0:	2006e680 	call	2006e68 <_mbrtowc_r>
 20027a4:	1007883a 	mov	r3,r2
 20027a8:	15ff0f26 	beq	r2,r23,20023e8 <__svfscanf_r+0x154>
 20027ac:	1003f11e 	bne	r2,zero,2003774 <__svfscanf_r+0x14e0>
 20027b0:	a800011e 	bne	r21,zero,20027b8 <__svfscanf_r+0x524>
 20027b4:	98000015 	stw	zero,0(r19)
 20027b8:	d8c0a317 	ldw	r3,652(sp)
 20027bc:	8ca3883a 	add	r17,r17,r18
 20027c0:	18ffffc4 	addi	r3,r3,-1
 20027c4:	d8c0a315 	stw	r3,652(sp)
 20027c8:	e0000126 	beq	fp,zero,20027d0 <__svfscanf_r+0x53c>
 20027cc:	9cc00104 	addi	r19,r19,4
 20027d0:	0025883a 	mov	r18,zero
 20027d4:	80c00117 	ldw	r3,4(r16)
 20027d8:	00c3e90e 	bge	zero,r3,2003780 <__svfscanf_r+0x14ec>
 20027dc:	d900a317 	ldw	r4,652(sp)
 20027e0:	2003ec26 	beq	r4,zero,2003794 <__svfscanf_r+0x1500>
 20027e4:	00c08074 	movhi	r3,513
 20027e8:	18c99804 	addi	r3,r3,9824
 20027ec:	18800017 	ldw	r2,0(r3)
 20027f0:	90bfd61e 	bne	r18,r2,200274c <__svfscanf_r+0x4b8>
 20027f4:	003efc06 	br	20023e8 <__svfscanf_r+0x154>
 20027f8:	d880a317 	ldw	r2,652(sp)
 20027fc:	1000021e 	bne	r2,zero,2002808 <__svfscanf_r+0x574>
 2002800:	00ffffc4 	movi	r3,-1
 2002804:	d8c0a315 	stw	r3,652(sp)
 2002808:	9880040c 	andi	r2,r19,16
 200280c:	10036526 	beq	r2,zero,20035a4 <__svfscanf_r+0x1310>
 2002810:	0027883a 	mov	r19,zero
 2002814:	dd400404 	addi	r21,sp,16
 2002818:	81000017 	ldw	r4,0(r16)
 200281c:	20800003 	ldbu	r2,0(r4)
 2002820:	a885883a 	add	r2,r21,r2
 2002824:	10c00007 	ldb	r3,0(r2)
 2002828:	1803be26 	beq	r3,zero,2003724 <__svfscanf_r+0x1490>
 200282c:	80c00117 	ldw	r3,4(r16)
 2002830:	21800044 	addi	r6,r4,1
 2002834:	d900a317 	ldw	r4,652(sp)
 2002838:	18ffffc4 	addi	r3,r3,-1
 200283c:	9cc00044 	addi	r19,r19,1
 2002840:	81800015 	stw	r6,0(r16)
 2002844:	80c00115 	stw	r3,4(r16)
 2002848:	24c3b626 	beq	r4,r19,2003724 <__svfscanf_r+0x1490>
 200284c:	00fff216 	blt	zero,r3,2002818 <__svfscanf_r+0x584>
 2002850:	b009883a 	mov	r4,r22
 2002854:	800b883a 	mov	r5,r16
 2002858:	200884c0 	call	200884c <__srefill_r>
 200285c:	103fee26 	beq	r2,zero,2002818 <__svfscanf_r+0x584>
 2002860:	983ee126 	beq	r19,zero,20023e8 <__svfscanf_r+0x154>
 2002864:	8ce3883a 	add	r17,r17,r19
 2002868:	003e9d06 	br	20022e0 <__svfscanf_r+0x4c>
 200286c:	d900a317 	ldw	r4,652(sp)
 2002870:	2000021e 	bne	r4,zero,200287c <__svfscanf_r+0x5e8>
 2002874:	00bfffc4 	movi	r2,-1
 2002878:	d880a315 	stw	r2,652(sp)
 200287c:	9880004c 	andi	r2,r19,1
 2002880:	1005003a 	cmpeq	r2,r2,zero
 2002884:	1001f41e 	bne	r2,zero,2003058 <__svfscanf_r+0xdc4>
 2002888:	9dc0040c 	andi	r23,r19,16
 200288c:	b807003a 	cmpeq	r3,r23,zero
 2002890:	d8c0a515 	stw	r3,660(sp)
 2002894:	1803b21e 	bne	r3,zero,2003760 <__svfscanf_r+0x14cc>
 2002898:	dd400104 	addi	r21,sp,4
 200289c:	0027883a 	mov	r19,zero
 20028a0:	073fffc4 	movi	fp,-1
 20028a4:	81400017 	ldw	r5,0(r16)
 20028a8:	90800017 	ldw	r2,0(r18)
 20028ac:	29c00003 	ldbu	r7,0(r5)
 20028b0:	38c03fcc 	andi	r3,r7,255
 20028b4:	1887883a 	add	r3,r3,r2
 20028b8:	19000003 	ldbu	r4,0(r3)
 20028bc:	2100020c 	andi	r4,r4,8
 20028c0:	2000321e 	bne	r4,zero,200298c <__svfscanf_r+0x6f8>
 20028c4:	d8c0a317 	ldw	r3,652(sp)
 20028c8:	18003026 	beq	r3,zero,200298c <__svfscanf_r+0x6f8>
 20028cc:	00808074 	movhi	r2,513
 20028d0:	10899804 	addi	r2,r2,9824
 20028d4:	10c00017 	ldw	r3,0(r2)
 20028d8:	98fec326 	beq	r19,r3,20023e8 <__svfscanf_r+0x154>
 20028dc:	d8c04404 	addi	r3,sp,272
 20028e0:	80800117 	ldw	r2,4(r16)
 20028e4:	d8c0a615 	stw	r3,664(sp)
 20028e8:	d900a617 	ldw	r4,664(sp)
 20028ec:	10ffffc4 	addi	r3,r2,-1
 20028f0:	29800044 	addi	r6,r5,1
 20028f4:	80c00115 	stw	r3,4(r16)
 20028f8:	24c5883a 	add	r2,r4,r19
 20028fc:	81800015 	stw	r6,0(r16)
 2002900:	d9000204 	addi	r4,sp,8
 2002904:	000b883a 	mov	r5,zero
 2002908:	01800204 	movi	r6,8
 200290c:	11c00005 	stb	r7,0(r2)
 2002910:	20071cc0 	call	20071cc <memset>
 2002914:	d980a617 	ldw	r6,664(sp)
 2002918:	9cc00044 	addi	r19,r19,1
 200291c:	d8800204 	addi	r2,sp,8
 2002920:	b009883a 	mov	r4,r22
 2002924:	a80b883a 	mov	r5,r21
 2002928:	980f883a 	mov	r7,r19
 200292c:	d8800015 	stw	r2,0(sp)
 2002930:	2006e680 	call	2006e68 <_mbrtowc_r>
 2002934:	1007883a 	mov	r3,r2
 2002938:	173eab26 	beq	r2,fp,20023e8 <__svfscanf_r+0x154>
 200293c:	1003851e 	bne	r2,zero,2003754 <__svfscanf_r+0x14c0>
 2002940:	a8000015 	stw	zero,0(r21)
 2002944:	a9000017 	ldw	r4,0(r21)
 2002948:	20064a40 	call	20064a4 <iswspace>
 200294c:	1003781e 	bne	r2,zero,2003730 <__svfscanf_r+0x149c>
 2002950:	d900a317 	ldw	r4,652(sp)
 2002954:	d880a517 	ldw	r2,660(sp)
 2002958:	8ce3883a 	add	r17,r17,r19
 200295c:	213fffc4 	addi	r4,r4,-1
 2002960:	d900a315 	stw	r4,652(sp)
 2002964:	10000126 	beq	r2,zero,200296c <__svfscanf_r+0x6d8>
 2002968:	ad400104 	addi	r21,r21,4
 200296c:	0027883a 	mov	r19,zero
 2002970:	80c00117 	ldw	r3,4(r16)
 2002974:	00ffcb16 	blt	zero,r3,20028a4 <__svfscanf_r+0x610>
 2002978:	b009883a 	mov	r4,r22
 200297c:	800b883a 	mov	r5,r16
 2002980:	200884c0 	call	200884c <__srefill_r>
 2002984:	103fc726 	beq	r2,zero,20028a4 <__svfscanf_r+0x610>
 2002988:	983e971e 	bne	r19,zero,20023e8 <__svfscanf_r+0x154>
 200298c:	b83e541e 	bne	r23,zero,20022e0 <__svfscanf_r+0x4c>
 2002990:	d900a217 	ldw	r4,648(sp)
 2002994:	a8000015 	stw	zero,0(r21)
 2002998:	21000044 	addi	r4,r4,1
 200299c:	d900a215 	stw	r4,648(sp)
 20029a0:	003e4f06 	br	20022e0 <__svfscanf_r+0x4c>
 20029a4:	d900a317 	ldw	r4,652(sp)
 20029a8:	00805704 	movi	r2,348
 20029ac:	20ffffc4 	addi	r3,r4,-1
 20029b0:	10c1ed2e 	bgeu	r2,r3,2003168 <__svfscanf_r+0xed4>
 20029b4:	00805744 	movi	r2,349
 20029b8:	21bfa8c4 	addi	r6,r4,-349
 20029bc:	9d41e014 	ori	r21,r19,1920
 20029c0:	d880a315 	stw	r2,652(sp)
 20029c4:	d8c04404 	addi	r3,sp,272
 20029c8:	d8c0a615 	stw	r3,664(sp)
 20029cc:	182f883a 	mov	r23,r3
 20029d0:	d8009f15 	stw	zero,636(sp)
 20029d4:	d8009e15 	stw	zero,632(sp)
 20029d8:	d8009d15 	stw	zero,628(sp)
 20029dc:	d8009c15 	stw	zero,624(sp)
 20029e0:	0039883a 	mov	fp,zero
 20029e4:	0025883a 	mov	r18,zero
 20029e8:	80800017 	ldw	r2,0(r16)
 20029ec:	11400003 	ldbu	r5,0(r2)
 20029f0:	00801384 	movi	r2,78
 20029f4:	28fff544 	addi	r3,r5,-43
 20029f8:	18c03fcc 	andi	r3,r3,255
 20029fc:	10c07d36 	bltu	r2,r3,2002bf4 <__svfscanf_r+0x960>
 2002a00:	18c5883a 	add	r2,r3,r3
 2002a04:	1085883a 	add	r2,r2,r2
 2002a08:	00c08034 	movhi	r3,512
 2002a0c:	18ca8704 	addi	r3,r3,10780
 2002a10:	10c5883a 	add	r2,r2,r3
 2002a14:	11000017 	ldw	r4,0(r2)
 2002a18:	2000683a 	jmp	r4
 2002a1c:	02002bac 	andhi	r8,zero,174
 2002a20:	02002bf4 	movhi	r8,175
 2002a24:	02002bac 	andhi	r8,zero,174
 2002a28:	02002d40 	call	2002d4 <__reset-0x1dffd2c>
 2002a2c:	02002bf4 	movhi	r8,175
 2002a30:	02002d78 	rdprs	r8,zero,181
 2002a34:	02002dac 	andhi	r8,zero,182
 2002a38:	02002dac 	andhi	r8,zero,182
 2002a3c:	02002dac 	andhi	r8,zero,182
 2002a40:	02002dac 	andhi	r8,zero,182
 2002a44:	02002dac 	andhi	r8,zero,182
 2002a48:	02002dac 	andhi	r8,zero,182
 2002a4c:	02002dac 	andhi	r8,zero,182
 2002a50:	02002dac 	andhi	r8,zero,182
 2002a54:	02002dac 	andhi	r8,zero,182
 2002a58:	02002bf4 	movhi	r8,175
 2002a5c:	02002bf4 	movhi	r8,175
 2002a60:	02002bf4 	movhi	r8,175
 2002a64:	02002bf4 	movhi	r8,175
 2002a68:	02002bf4 	movhi	r8,175
 2002a6c:	02002bf4 	movhi	r8,175
 2002a70:	02002bf4 	movhi	r8,175
 2002a74:	02002dcc 	andi	r8,zero,183
 2002a78:	02002bf4 	movhi	r8,175
 2002a7c:	02002bf4 	movhi	r8,175
 2002a80:	02002bf4 	movhi	r8,175
 2002a84:	02002ddc 	xori	r8,zero,183
 2002a88:	02002e78 	rdprs	r8,zero,185
 2002a8c:	02002bf4 	movhi	r8,175
 2002a90:	02002bf4 	movhi	r8,175
 2002a94:	02002e94 	movui	r8,186
 2002a98:	02002bf4 	movhi	r8,175
 2002a9c:	02002bf4 	movhi	r8,175
 2002aa0:	02002bf4 	movhi	r8,175
 2002aa4:	02002bf4 	movhi	r8,175
 2002aa8:	02002ec0 	call	2002ec <__reset-0x1dffd14>
 2002aac:	02002bf4 	movhi	r8,175
 2002ab0:	02002bf4 	movhi	r8,175
 2002ab4:	02002bf4 	movhi	r8,175
 2002ab8:	02002bf4 	movhi	r8,175
 2002abc:	02002bf4 	movhi	r8,175
 2002ac0:	02002f14 	movui	r8,188
 2002ac4:	02002bf4 	movhi	r8,175
 2002ac8:	02002bf4 	movhi	r8,175
 2002acc:	02002bf4 	movhi	r8,175
 2002ad0:	02002bf4 	movhi	r8,175
 2002ad4:	02003024 	muli	r8,zero,192
 2002ad8:	02002bf4 	movhi	r8,175
 2002adc:	02002bf4 	movhi	r8,175
 2002ae0:	02002bf4 	movhi	r8,175
 2002ae4:	02002bf4 	movhi	r8,175
 2002ae8:	02002bf4 	movhi	r8,175
 2002aec:	02002bf4 	movhi	r8,175
 2002af0:	02002bf4 	movhi	r8,175
 2002af4:	02002dcc 	andi	r8,zero,183
 2002af8:	02002bf4 	movhi	r8,175
 2002afc:	02002bf4 	movhi	r8,175
 2002b00:	02002bf4 	movhi	r8,175
 2002b04:	02002ddc 	xori	r8,zero,183
 2002b08:	02002e78 	rdprs	r8,zero,185
 2002b0c:	02002bf4 	movhi	r8,175
 2002b10:	02002bf4 	movhi	r8,175
 2002b14:	02002e94 	movui	r8,186
 2002b18:	02002bf4 	movhi	r8,175
 2002b1c:	02002bf4 	movhi	r8,175
 2002b20:	02002bf4 	movhi	r8,175
 2002b24:	02002bf4 	movhi	r8,175
 2002b28:	02002ec0 	call	2002ec <__reset-0x1dffd14>
 2002b2c:	02002bf4 	movhi	r8,175
 2002b30:	02002bf4 	movhi	r8,175
 2002b34:	02002bf4 	movhi	r8,175
 2002b38:	02002bf4 	movhi	r8,175
 2002b3c:	02002bf4 	movhi	r8,175
 2002b40:	02002f14 	movui	r8,188
 2002b44:	02002bf4 	movhi	r8,175
 2002b48:	02002bf4 	movhi	r8,175
 2002b4c:	02002bf4 	movhi	r8,175
 2002b50:	02002bf4 	movhi	r8,175
 2002b54:	02003024 	muli	r8,zero,192
 2002b58:	d900a317 	ldw	r4,652(sp)
 2002b5c:	00805704 	movi	r2,348
 2002b60:	20ffffc4 	addi	r3,r4,-1
 2002b64:	10c18c2e 	bgeu	r2,r3,2003198 <__svfscanf_r+0xf04>
 2002b68:	00805744 	movi	r2,349
 2002b6c:	257fa8c4 	addi	r21,r4,-349
 2002b70:	9c836014 	ori	r18,r19,3456
 2002b74:	d880a315 	stw	r2,652(sp)
 2002b78:	0001a106 	br	2003200 <__svfscanf_r+0xf6c>
 2002b7c:	b009883a 	mov	r4,r22
 2002b80:	800b883a 	mov	r5,r16
 2002b84:	200884c0 	call	200884c <__srefill_r>
 2002b88:	103eb226 	beq	r2,zero,2002654 <__svfscanf_r+0x3c0>
 2002b8c:	003e1606 	br	20023e8 <__svfscanf_r+0x154>
 2002b90:	01000284 	movi	r4,10
 2002b94:	00808074 	movhi	r2,513
 2002b98:	10aac404 	addi	r2,r2,-21744
 2002b9c:	054000c4 	movi	r21,3
 2002ba0:	d900a115 	stw	r4,644(sp)
 2002ba4:	d880a015 	stw	r2,640(sp)
 2002ba8:	003ea806 	br	200264c <__svfscanf_r+0x3b8>
 2002bac:	a880200c 	andi	r2,r21,128
 2002bb0:	10001026 	beq	r2,zero,2002bf4 <__svfscanf_r+0x960>
 2002bb4:	00bfdfc4 	movi	r2,-129
 2002bb8:	a8aa703a 	and	r21,r21,r2
 2002bbc:	b9400005 	stb	r5,0(r23)
 2002bc0:	bdc00044 	addi	r23,r23,1
 2002bc4:	80c00117 	ldw	r3,4(r16)
 2002bc8:	8c400044 	addi	r17,r17,1
 2002bcc:	18bfffc4 	addi	r2,r3,-1
 2002bd0:	80800115 	stw	r2,4(r16)
 2002bd4:	0080610e 	bge	zero,r2,2002d5c <__svfscanf_r+0xac8>
 2002bd8:	80800017 	ldw	r2,0(r16)
 2002bdc:	10800044 	addi	r2,r2,1
 2002be0:	80800015 	stw	r2,0(r16)
 2002be4:	d880a317 	ldw	r2,652(sp)
 2002be8:	10bfffc4 	addi	r2,r2,-1
 2002bec:	d880a315 	stw	r2,652(sp)
 2002bf0:	103f7d1e 	bne	r2,zero,20029e8 <__svfscanf_r+0x754>
 2002bf4:	d8c09e17 	ldw	r3,632(sp)
 2002bf8:	18000226 	beq	r3,zero,2002c04 <__svfscanf_r+0x970>
 2002bfc:	00bfbfc4 	movi	r2,-257
 2002c00:	a8aa703a 	and	r21,r21,r2
 2002c04:	90ffffc4 	addi	r3,r18,-1
 2002c08:	00800044 	movi	r2,1
 2002c0c:	10c0cd2e 	bgeu	r2,r3,2002f44 <__svfscanf_r+0xcb0>
 2002c10:	e1003fcc 	andi	r4,fp,255
 2002c14:	2100201c 	xori	r4,r4,128
 2002c18:	213fe004 	addi	r4,r4,-128
 2002c1c:	20ffffc4 	addi	r3,r4,-1
 2002c20:	00800184 	movi	r2,6
 2002c24:	10c01736 	bltu	r2,r3,2002c84 <__svfscanf_r+0x9f0>
 2002c28:	00c00084 	movi	r3,2
 2002c2c:	1900880e 	bge	r3,r4,2002e50 <__svfscanf_r+0xbbc>
 2002c30:	008000c4 	movi	r2,3
 2002c34:	1100130e 	bge	r2,r4,2002c84 <__svfscanf_r+0x9f0>
 2002c38:	e4ffffc4 	addi	r19,fp,-1
 2002c3c:	b825883a 	mov	r18,r23
 2002c40:	94bfffc4 	addi	r18,r18,-1
 2002c44:	91400007 	ldb	r5,0(r18)
 2002c48:	b009883a 	mov	r4,r22
 2002c4c:	800d883a 	mov	r6,r16
 2002c50:	200b1300 	call	200b130 <_ungetc_r>
 2002c54:	9cffffc4 	addi	r19,r19,-1
 2002c58:	98c03fcc 	andi	r3,r19,255
 2002c5c:	18c0201c 	xori	r3,r3,128
 2002c60:	18ffe004 	addi	r3,r3,-128
 2002c64:	00800084 	movi	r2,2
 2002c68:	18bff51e 	bne	r3,r2,2002c40 <__svfscanf_r+0x9ac>
 2002c6c:	e0bfff04 	addi	r2,fp,-4
 2002c70:	10803fcc 	andi	r2,r2,255
 2002c74:	b887c83a 	sub	r3,r23,r2
 2002c78:	8885c83a 	sub	r2,r17,r2
 2002c7c:	147fffc4 	addi	r17,r2,-1
 2002c80:	1dffffc4 	addi	r23,r3,-1
 2002c84:	a880400c 	andi	r2,r21,256
 2002c88:	10001226 	beq	r2,zero,2002cd4 <__svfscanf_r+0xa40>
 2002c8c:	a881000c 	andi	r2,r21,1024
 2002c90:	1000651e 	bne	r2,zero,2002e28 <__svfscanf_r+0xb94>
 2002c94:	bdffffc4 	addi	r23,r23,-1
 2002c98:	b9400007 	ldb	r5,0(r23)
 2002c9c:	00801944 	movi	r2,101
 2002ca0:	8c7fffc4 	addi	r17,r17,-1
 2002ca4:	28800826 	beq	r5,r2,2002cc8 <__svfscanf_r+0xa34>
 2002ca8:	00801144 	movi	r2,69
 2002cac:	28800626 	beq	r5,r2,2002cc8 <__svfscanf_r+0xa34>
 2002cb0:	bdffffc4 	addi	r23,r23,-1
 2002cb4:	b009883a 	mov	r4,r22
 2002cb8:	800d883a 	mov	r6,r16
 2002cbc:	200b1300 	call	200b130 <_ungetc_r>
 2002cc0:	b9400007 	ldb	r5,0(r23)
 2002cc4:	8c7fffc4 	addi	r17,r17,-1
 2002cc8:	b009883a 	mov	r4,r22
 2002ccc:	800d883a 	mov	r6,r16
 2002cd0:	200b1300 	call	200b130 <_ungetc_r>
 2002cd4:	a880040c 	andi	r2,r21,16
 2002cd8:	103d811e 	bne	r2,zero,20022e0 <__svfscanf_r+0x4c>
 2002cdc:	a8c1800c 	andi	r3,r21,1536
 2002ce0:	00810004 	movi	r2,1024
 2002ce4:	b8000005 	stb	zero,0(r23)
 2002ce8:	1880bb26 	beq	r3,r2,2002fd8 <__svfscanf_r+0xd44>
 2002cec:	d8809d17 	ldw	r2,628(sp)
 2002cf0:	1000a61e 	bne	r2,zero,2002f8c <__svfscanf_r+0xcf8>
 2002cf4:	d940a617 	ldw	r5,664(sp)
 2002cf8:	b009883a 	mov	r4,r22
 2002cfc:	000d883a 	mov	r6,zero
 2002d00:	2008f6c0 	call	2008f6c <_strtod_r>
 2002d04:	a900004c 	andi	r4,r21,1
 2002d08:	2009003a 	cmpeq	r4,r4,zero
 2002d0c:	1025883a 	mov	r18,r2
 2002d10:	1827883a 	mov	r19,r3
 2002d14:	2000951e 	bne	r4,zero,2002f6c <__svfscanf_r+0xcd8>
 2002d18:	d8c0a417 	ldw	r3,656(sp)
 2002d1c:	18800017 	ldw	r2,0(r3)
 2002d20:	1d400104 	addi	r21,r3,4
 2002d24:	14c00115 	stw	r19,4(r2)
 2002d28:	14800015 	stw	r18,0(r2)
 2002d2c:	d8c0a217 	ldw	r3,648(sp)
 2002d30:	dd40a415 	stw	r21,656(sp)
 2002d34:	18c00044 	addi	r3,r3,1
 2002d38:	d8c0a215 	stw	r3,648(sp)
 2002d3c:	003d6806 	br	20022e0 <__svfscanf_r+0x4c>
 2002d40:	a880800c 	andi	r2,r21,512
 2002d44:	103fab26 	beq	r2,zero,2002bf4 <__svfscanf_r+0x960>
 2002d48:	d9009e17 	ldw	r4,632(sp)
 2002d4c:	00bf5fc4 	movi	r2,-641
 2002d50:	a8aa703a 	and	r21,r21,r2
 2002d54:	d9009f15 	stw	r4,636(sp)
 2002d58:	003f9806 	br	2002bbc <__svfscanf_r+0x928>
 2002d5c:	b009883a 	mov	r4,r22
 2002d60:	800b883a 	mov	r5,r16
 2002d64:	d980a715 	stw	r6,668(sp)
 2002d68:	200884c0 	call	200884c <__srefill_r>
 2002d6c:	d980a717 	ldw	r6,668(sp)
 2002d70:	103f9c26 	beq	r2,zero,2002be4 <__svfscanf_r+0x950>
 2002d74:	003f9f06 	br	2002bf4 <__svfscanf_r+0x960>
 2002d78:	a880400c 	andi	r2,r21,256
 2002d7c:	10000b26 	beq	r2,zero,2002dac <__svfscanf_r+0xb18>
 2002d80:	00bfdfc4 	movi	r2,-129
 2002d84:	a8aa703a 	and	r21,r21,r2
 2002d88:	d8809e17 	ldw	r2,632(sp)
 2002d8c:	10800044 	addi	r2,r2,1
 2002d90:	d8809e15 	stw	r2,632(sp)
 2002d94:	303f8b26 	beq	r6,zero,2002bc4 <__svfscanf_r+0x930>
 2002d98:	d8c0a317 	ldw	r3,652(sp)
 2002d9c:	31bfffc4 	addi	r6,r6,-1
 2002da0:	18c00044 	addi	r3,r3,1
 2002da4:	d8c0a315 	stw	r3,652(sp)
 2002da8:	003f8606 	br	2002bc4 <__svfscanf_r+0x930>
 2002dac:	e0803fcc 	andi	r2,fp,255
 2002db0:	1080201c 	xori	r2,r2,128
 2002db4:	10bfe004 	addi	r2,r2,-128
 2002db8:	9085883a 	add	r2,r18,r2
 2002dbc:	103f8d1e 	bne	r2,zero,2002bf4 <__svfscanf_r+0x960>
 2002dc0:	00bf9fc4 	movi	r2,-385
 2002dc4:	a8aa703a 	and	r21,r21,r2
 2002dc8:	003f7c06 	br	2002bbc <__svfscanf_r+0x928>
 2002dcc:	00800044 	movi	r2,1
 2002dd0:	90bf881e 	bne	r18,r2,2002bf4 <__svfscanf_r+0x960>
 2002dd4:	04800084 	movi	r18,2
 2002dd8:	003f7806 	br	2002bbc <__svfscanf_r+0x928>
 2002ddc:	a8c1400c 	andi	r3,r21,1280
 2002de0:	00810004 	movi	r2,1024
 2002de4:	18800426 	beq	r3,r2,2002df8 <__svfscanf_r+0xb64>
 2002de8:	a884703a 	and	r2,r21,r2
 2002dec:	103f8126 	beq	r2,zero,2002bf4 <__svfscanf_r+0x960>
 2002df0:	d8809e17 	ldw	r2,632(sp)
 2002df4:	103f8326 	beq	r2,zero,2002c04 <__svfscanf_r+0x970>
 2002df8:	a880800c 	andi	r2,r21,512
 2002dfc:	1000051e 	bne	r2,zero,2002e14 <__svfscanf_r+0xb80>
 2002e00:	d8c09e17 	ldw	r3,632(sp)
 2002e04:	d9009f17 	ldw	r4,636(sp)
 2002e08:	ddc09c15 	stw	r23,624(sp)
 2002e0c:	1907c83a 	sub	r3,r3,r4
 2002e10:	d8c09d15 	stw	r3,628(sp)
 2002e14:	00be7fc4 	movi	r2,-1537
 2002e18:	a884703a 	and	r2,r21,r2
 2002e1c:	15406014 	ori	r21,r2,384
 2002e20:	d8009e15 	stw	zero,632(sp)
 2002e24:	003f6506 	br	2002bbc <__svfscanf_r+0x928>
 2002e28:	d900a617 	ldw	r4,664(sp)
 2002e2c:	25fd4e2e 	bgeu	r4,r23,2002368 <__svfscanf_r+0xd4>
 2002e30:	bdffffc4 	addi	r23,r23,-1
 2002e34:	b9400007 	ldb	r5,0(r23)
 2002e38:	b009883a 	mov	r4,r22
 2002e3c:	800d883a 	mov	r6,r16
 2002e40:	200b1300 	call	200b130 <_ungetc_r>
 2002e44:	d880a617 	ldw	r2,664(sp)
 2002e48:	15fff936 	bltu	r2,r23,2002e30 <__svfscanf_r+0xb9c>
 2002e4c:	003d4606 	br	2002368 <__svfscanf_r+0xd4>
 2002e50:	d900a617 	ldw	r4,664(sp)
 2002e54:	25fd442e 	bgeu	r4,r23,2002368 <__svfscanf_r+0xd4>
 2002e58:	bdffffc4 	addi	r23,r23,-1
 2002e5c:	b9400007 	ldb	r5,0(r23)
 2002e60:	b009883a 	mov	r4,r22
 2002e64:	800d883a 	mov	r6,r16
 2002e68:	200b1300 	call	200b130 <_ungetc_r>
 2002e6c:	d8c0a617 	ldw	r3,664(sp)
 2002e70:	1dfff936 	bltu	r3,r23,2002e58 <__svfscanf_r+0xbc4>
 2002e74:	003d3c06 	br	2002368 <__svfscanf_r+0xd4>
 2002e78:	e0c03fcc 	andi	r3,fp,255
 2002e7c:	18c0201c 	xori	r3,r3,128
 2002e80:	18ffe004 	addi	r3,r3,-128
 2002e84:	00800084 	movi	r2,2
 2002e88:	18bf5a1e 	bne	r3,r2,2002bf4 <__svfscanf_r+0x960>
 2002e8c:	070000c4 	movi	fp,3
 2002e90:	003f4a06 	br	2002bbc <__svfscanf_r+0x928>
 2002e94:	e0c03fcc 	andi	r3,fp,255
 2002e98:	18c0201c 	xori	r3,r3,128
 2002e9c:	18ffe004 	addi	r3,r3,-128
 2002ea0:	1800231e 	bne	r3,zero,2002f30 <__svfscanf_r+0xc9c>
 2002ea4:	a8c1c00c 	andi	r3,r21,1792
 2002ea8:	0081c004 	movi	r2,1792
 2002eac:	18bf511e 	bne	r3,r2,2002bf4 <__svfscanf_r+0x960>
 2002eb0:	00be1fc4 	movi	r2,-1921
 2002eb4:	a8aa703a 	and	r21,r21,r2
 2002eb8:	07000044 	movi	fp,1
 2002ebc:	003f3f06 	br	2002bbc <__svfscanf_r+0x928>
 2002ec0:	9000101e 	bne	r18,zero,2002f04 <__svfscanf_r+0xc70>
 2002ec4:	a8c1c00c 	andi	r3,r21,1792
 2002ec8:	0081c004 	movi	r2,1792
 2002ecc:	18800926 	beq	r3,r2,2002ef4 <__svfscanf_r+0xc60>
 2002ed0:	e0c03fcc 	andi	r3,fp,255
 2002ed4:	18c0201c 	xori	r3,r3,128
 2002ed8:	18ffe004 	addi	r3,r3,-128
 2002edc:	00800044 	movi	r2,1
 2002ee0:	18800226 	beq	r3,r2,2002eec <__svfscanf_r+0xc58>
 2002ee4:	00800104 	movi	r2,4
 2002ee8:	18bf421e 	bne	r3,r2,2002bf4 <__svfscanf_r+0x960>
 2002eec:	e7000044 	addi	fp,fp,1
 2002ef0:	003f3206 	br	2002bbc <__svfscanf_r+0x928>
 2002ef4:	00be1fc4 	movi	r2,-1921
 2002ef8:	a8aa703a 	and	r21,r21,r2
 2002efc:	04800044 	movi	r18,1
 2002f00:	003f2e06 	br	2002bbc <__svfscanf_r+0x928>
 2002f04:	00800084 	movi	r2,2
 2002f08:	90bff11e 	bne	r18,r2,2002ed0 <__svfscanf_r+0xc3c>
 2002f0c:	048000c4 	movi	r18,3
 2002f10:	003f2a06 	br	2002bbc <__svfscanf_r+0x928>
 2002f14:	e0c03fcc 	andi	r3,fp,255
 2002f18:	18c0201c 	xori	r3,r3,128
 2002f1c:	18ffe004 	addi	r3,r3,-128
 2002f20:	00800184 	movi	r2,6
 2002f24:	18bf331e 	bne	r3,r2,2002bf4 <__svfscanf_r+0x960>
 2002f28:	070001c4 	movi	fp,7
 2002f2c:	003f2306 	br	2002bbc <__svfscanf_r+0x928>
 2002f30:	008000c4 	movi	r2,3
 2002f34:	18bfed26 	beq	r3,r2,2002eec <__svfscanf_r+0xc58>
 2002f38:	00800144 	movi	r2,5
 2002f3c:	18bfeb26 	beq	r3,r2,2002eec <__svfscanf_r+0xc58>
 2002f40:	003f2c06 	br	2002bf4 <__svfscanf_r+0x960>
 2002f44:	d900a617 	ldw	r4,664(sp)
 2002f48:	25fd072e 	bgeu	r4,r23,2002368 <__svfscanf_r+0xd4>
 2002f4c:	bdffffc4 	addi	r23,r23,-1
 2002f50:	b9400007 	ldb	r5,0(r23)
 2002f54:	b009883a 	mov	r4,r22
 2002f58:	800d883a 	mov	r6,r16
 2002f5c:	200b1300 	call	200b130 <_ungetc_r>
 2002f60:	d880a617 	ldw	r2,664(sp)
 2002f64:	15fff936 	bltu	r2,r23,2002f4c <__svfscanf_r+0xcb8>
 2002f68:	003cff06 	br	2002368 <__svfscanf_r+0xd4>
 2002f6c:	a880008c 	andi	r2,r21,2
 2002f70:	10002026 	beq	r2,zero,2002ff4 <__svfscanf_r+0xd60>
 2002f74:	d900a417 	ldw	r4,656(sp)
 2002f78:	20800017 	ldw	r2,0(r4)
 2002f7c:	25400104 	addi	r21,r4,4
 2002f80:	10c00115 	stw	r3,4(r2)
 2002f84:	14800015 	stw	r18,0(r2)
 2002f88:	003f6806 	br	2002d2c <__svfscanf_r+0xa98>
 2002f8c:	d8c09c17 	ldw	r3,624(sp)
 2002f90:	b009883a 	mov	r4,r22
 2002f94:	000d883a 	mov	r6,zero
 2002f98:	19400044 	addi	r5,r3,1
 2002f9c:	01c00284 	movi	r7,10
 2002fa0:	200a5900 	call	200a590 <_strtol_r>
 2002fa4:	d9009d17 	ldw	r4,628(sp)
 2002fa8:	110dc83a 	sub	r6,r2,r4
 2002fac:	d8c0a617 	ldw	r3,664(sp)
 2002fb0:	d9009c17 	ldw	r4,624(sp)
 2002fb4:	188054c4 	addi	r2,r3,339
 2002fb8:	20800236 	bltu	r4,r2,2002fc4 <__svfscanf_r+0xd30>
 2002fbc:	18805484 	addi	r2,r3,338
 2002fc0:	d8809c15 	stw	r2,624(sp)
 2002fc4:	d9009c17 	ldw	r4,624(sp)
 2002fc8:	01408074 	movhi	r5,513
 2002fcc:	29457f04 	addi	r5,r5,5628
 2002fd0:	2008bd40 	call	2008bd4 <sprintf>
 2002fd4:	003f4706 	br	2002cf4 <__svfscanf_r+0xa60>
 2002fd8:	d8c09e17 	ldw	r3,632(sp)
 2002fdc:	d9009f17 	ldw	r4,636(sp)
 2002fe0:	1905c83a 	sub	r2,r3,r4
 2002fe4:	103f4326 	beq	r2,zero,2002cf4 <__svfscanf_r+0xa60>
 2002fe8:	008dc83a 	sub	r6,zero,r2
 2002fec:	ddc09c15 	stw	r23,624(sp)
 2002ff0:	003fee06 	br	2002fac <__svfscanf_r+0xd18>
 2002ff4:	d880a417 	ldw	r2,656(sp)
 2002ff8:	9009883a 	mov	r4,r18
 2002ffc:	180b883a 	mov	r5,r3
 2003000:	15c00017 	ldw	r23,0(r2)
 2003004:	15400104 	addi	r21,r2,4
 2003008:	2008a6c0 	call	2008a6c <__isnand>
 200300c:	10021c1e 	bne	r2,zero,2003880 <__svfscanf_r+0x15ec>
 2003010:	980b883a 	mov	r5,r19
 2003014:	9009883a 	mov	r4,r18
 2003018:	200e1540 	call	200e154 <__truncdfsf2>
 200301c:	b8800015 	stw	r2,0(r23)
 2003020:	003f4206 	br	2002d2c <__svfscanf_r+0xa98>
 2003024:	e0c03fcc 	andi	r3,fp,255
 2003028:	18c0201c 	xori	r3,r3,128
 200302c:	18ffe004 	addi	r3,r3,-128
 2003030:	008001c4 	movi	r2,7
 2003034:	18beef1e 	bne	r3,r2,2002bf4 <__svfscanf_r+0x960>
 2003038:	07000204 	movi	fp,8
 200303c:	003edf06 	br	2002bbc <__svfscanf_r+0x928>
 2003040:	d900a317 	ldw	r4,652(sp)
 2003044:	208002a4 	muli	r2,r4,10
 2003048:	1145883a 	add	r2,r2,r5
 200304c:	10bff404 	addi	r2,r2,-48
 2003050:	d880a315 	stw	r2,652(sp)
 2003054:	003ceb06 	br	2002404 <__svfscanf_r+0x170>
 2003058:	9880040c 	andi	r2,r19,16
 200305c:	10001426 	beq	r2,zero,20030b0 <__svfscanf_r+0xe1c>
 2003060:	0027883a 	mov	r19,zero
 2003064:	00000906 	br	200308c <__svfscanf_r+0xdf8>
 2003068:	80c00117 	ldw	r3,4(r16)
 200306c:	d880a317 	ldw	r2,652(sp)
 2003070:	29800044 	addi	r6,r5,1
 2003074:	18ffffc4 	addi	r3,r3,-1
 2003078:	9cc00044 	addi	r19,r19,1
 200307c:	81800015 	stw	r6,0(r16)
 2003080:	80c00115 	stw	r3,4(r16)
 2003084:	14fdf726 	beq	r2,r19,2002864 <__svfscanf_r+0x5d0>
 2003088:	00c02c0e 	bge	zero,r3,200313c <__svfscanf_r+0xea8>
 200308c:	81400017 	ldw	r5,0(r16)
 2003090:	90800017 	ldw	r2,0(r18)
 2003094:	28c00003 	ldbu	r3,0(r5)
 2003098:	1887883a 	add	r3,r3,r2
 200309c:	19000003 	ldbu	r4,0(r3)
 20030a0:	2100020c 	andi	r4,r4,8
 20030a4:	203ff026 	beq	r4,zero,2003068 <__svfscanf_r+0xdd4>
 20030a8:	8ce3883a 	add	r17,r17,r19
 20030ac:	003c8c06 	br	20022e0 <__svfscanf_r+0x4c>
 20030b0:	d8c0a417 	ldw	r3,656(sp)
 20030b4:	1d400017 	ldw	r21,0(r3)
 20030b8:	a827883a 	mov	r19,r21
 20030bc:	00000e06 	br	20030f8 <__svfscanf_r+0xe64>
 20030c0:	80800117 	ldw	r2,4(r16)
 20030c4:	d900a317 	ldw	r4,652(sp)
 20030c8:	29800044 	addi	r6,r5,1
 20030cc:	10ffffc4 	addi	r3,r2,-1
 20030d0:	213fffc4 	addi	r4,r4,-1
 20030d4:	d900a315 	stw	r4,652(sp)
 20030d8:	80c00115 	stw	r3,4(r16)
 20030dc:	28800003 	ldbu	r2,0(r5)
 20030e0:	98800005 	stb	r2,0(r19)
 20030e4:	81800015 	stw	r6,0(r16)
 20030e8:	9cc00044 	addi	r19,r19,1
 20030ec:	20000926 	beq	r4,zero,2003114 <__svfscanf_r+0xe80>
 20030f0:	80800117 	ldw	r2,4(r16)
 20030f4:	0080170e 	bge	zero,r2,2003154 <__svfscanf_r+0xec0>
 20030f8:	81400017 	ldw	r5,0(r16)
 20030fc:	90800017 	ldw	r2,0(r18)
 2003100:	28c00003 	ldbu	r3,0(r5)
 2003104:	1887883a 	add	r3,r3,r2
 2003108:	19000003 	ldbu	r4,0(r3)
 200310c:	2100020c 	andi	r4,r4,8
 2003110:	203feb26 	beq	r4,zero,20030c0 <__svfscanf_r+0xe2c>
 2003114:	9d45c83a 	sub	r2,r19,r21
 2003118:	d8c0a217 	ldw	r3,648(sp)
 200311c:	88a3883a 	add	r17,r17,r2
 2003120:	d880a417 	ldw	r2,656(sp)
 2003124:	18c00044 	addi	r3,r3,1
 2003128:	d8c0a215 	stw	r3,648(sp)
 200312c:	10800104 	addi	r2,r2,4
 2003130:	d880a415 	stw	r2,656(sp)
 2003134:	98000005 	stb	zero,0(r19)
 2003138:	003c6906 	br	20022e0 <__svfscanf_r+0x4c>
 200313c:	b009883a 	mov	r4,r22
 2003140:	800b883a 	mov	r5,r16
 2003144:	200884c0 	call	200884c <__srefill_r>
 2003148:	103fd026 	beq	r2,zero,200308c <__svfscanf_r+0xdf8>
 200314c:	8ce3883a 	add	r17,r17,r19
 2003150:	003c6306 	br	20022e0 <__svfscanf_r+0x4c>
 2003154:	b009883a 	mov	r4,r22
 2003158:	800b883a 	mov	r5,r16
 200315c:	200884c0 	call	200884c <__srefill_r>
 2003160:	103fe526 	beq	r2,zero,20030f8 <__svfscanf_r+0xe64>
 2003164:	003feb06 	br	2003114 <__svfscanf_r+0xe80>
 2003168:	d900a317 	ldw	r4,652(sp)
 200316c:	9d41e014 	ori	r21,r19,1920
 2003170:	2000821e 	bne	r4,zero,200337c <__svfscanf_r+0x10e8>
 2003174:	d8c04404 	addi	r3,sp,272
 2003178:	182f883a 	mov	r23,r3
 200317c:	0039883a 	mov	fp,zero
 2003180:	d8c0a615 	stw	r3,664(sp)
 2003184:	d8009c15 	stw	zero,624(sp)
 2003188:	d8009d15 	stw	zero,628(sp)
 200318c:	d8009f15 	stw	zero,636(sp)
 2003190:	d8009e15 	stw	zero,632(sp)
 2003194:	003e9e06 	br	2002c10 <__svfscanf_r+0x97c>
 2003198:	d900a317 	ldw	r4,652(sp)
 200319c:	9c836014 	ori	r18,r19,3456
 20031a0:	2000161e 	bne	r4,zero,20031fc <__svfscanf_r+0xf68>
 20031a4:	d8804404 	addi	r2,sp,272
 20031a8:	d880a615 	stw	r2,664(sp)
 20031ac:	002f883a 	mov	r23,zero
 20031b0:	1027883a 	mov	r19,r2
 20031b4:	9080400c 	andi	r2,r18,256
 20031b8:	10000926 	beq	r2,zero,20031e0 <__svfscanf_r+0xf4c>
 20031bc:	d8c0a617 	ldw	r3,664(sp)
 20031c0:	1cc0052e 	bgeu	r3,r19,20031d8 <__svfscanf_r+0xf44>
 20031c4:	9cffffc4 	addi	r19,r19,-1
 20031c8:	99400007 	ldb	r5,0(r19)
 20031cc:	b009883a 	mov	r4,r22
 20031d0:	800d883a 	mov	r6,r16
 20031d4:	200b1300 	call	200b130 <_ungetc_r>
 20031d8:	d900a617 	ldw	r4,664(sp)
 20031dc:	24fc6226 	beq	r4,r19,2002368 <__svfscanf_r+0xd4>
 20031e0:	9080040c 	andi	r2,r18,16
 20031e4:	10006726 	beq	r2,zero,2003384 <__svfscanf_r+0x10f0>
 20031e8:	d8c0a617 	ldw	r3,664(sp)
 20031ec:	98c5c83a 	sub	r2,r19,r3
 20031f0:	b885883a 	add	r2,r23,r2
 20031f4:	88a3883a 	add	r17,r17,r2
 20031f8:	003c3906 	br	20022e0 <__svfscanf_r+0x4c>
 20031fc:	002b883a 	mov	r21,zero
 2003200:	d8c04404 	addi	r3,sp,272
 2003204:	d8c0a615 	stw	r3,664(sp)
 2003208:	002f883a 	mov	r23,zero
 200320c:	1827883a 	mov	r19,r3
 2003210:	81800017 	ldw	r6,0(r16)
 2003214:	00c01344 	movi	r3,77
 2003218:	31400003 	ldbu	r5,0(r6)
 200321c:	28bff544 	addi	r2,r5,-43
 2003220:	10803fcc 	andi	r2,r2,255
 2003224:	18bfe336 	bltu	r3,r2,20031b4 <__svfscanf_r+0xf20>
 2003228:	1085883a 	add	r2,r2,r2
 200322c:	1085883a 	add	r2,r2,r2
 2003230:	00c08034 	movhi	r3,512
 2003234:	18cc9104 	addi	r3,r3,12868
 2003238:	10c5883a 	add	r2,r2,r3
 200323c:	11000017 	ldw	r4,0(r2)
 2003240:	2000683a 	jmp	r4
 2003244:	020033d8 	cmpnei	r8,zero,207
 2003248:	020031b4 	movhi	r8,198
 200324c:	020033d8 	cmpnei	r8,zero,207
 2003250:	020031b4 	movhi	r8,198
 2003254:	020031b4 	movhi	r8,198
 2003258:	0200341c 	xori	r8,zero,208
 200325c:	02003518 	cmpnei	r8,zero,212
 2003260:	02003518 	cmpnei	r8,zero,212
 2003264:	02003518 	cmpnei	r8,zero,212
 2003268:	02003518 	cmpnei	r8,zero,212
 200326c:	02003518 	cmpnei	r8,zero,212
 2003270:	02003518 	cmpnei	r8,zero,212
 2003274:	02003518 	cmpnei	r8,zero,212
 2003278:	02003540 	call	200354 <__reset-0x1dffcac>
 200327c:	02003540 	call	200354 <__reset-0x1dffcac>
 2003280:	020031b4 	movhi	r8,198
 2003284:	020031b4 	movhi	r8,198
 2003288:	020031b4 	movhi	r8,198
 200328c:	020031b4 	movhi	r8,198
 2003290:	020031b4 	movhi	r8,198
 2003294:	020031b4 	movhi	r8,198
 2003298:	020031b4 	movhi	r8,198
 200329c:	02003570 	cmpltui	r8,zero,213
 20032a0:	02003570 	cmpltui	r8,zero,213
 20032a4:	02003570 	cmpltui	r8,zero,213
 20032a8:	02003570 	cmpltui	r8,zero,213
 20032ac:	02003570 	cmpltui	r8,zero,213
 20032b0:	02003570 	cmpltui	r8,zero,213
 20032b4:	020031b4 	movhi	r8,198
 20032b8:	020031b4 	movhi	r8,198
 20032bc:	020031b4 	movhi	r8,198
 20032c0:	020031b4 	movhi	r8,198
 20032c4:	020031b4 	movhi	r8,198
 20032c8:	020031b4 	movhi	r8,198
 20032cc:	020031b4 	movhi	r8,198
 20032d0:	020031b4 	movhi	r8,198
 20032d4:	020031b4 	movhi	r8,198
 20032d8:	020031b4 	movhi	r8,198
 20032dc:	020031b4 	movhi	r8,198
 20032e0:	020031b4 	movhi	r8,198
 20032e4:	020031b4 	movhi	r8,198
 20032e8:	020031b4 	movhi	r8,198
 20032ec:	020031b4 	movhi	r8,198
 20032f0:	020031b4 	movhi	r8,198
 20032f4:	020031b4 	movhi	r8,198
 20032f8:	02003580 	call	200358 <__reset-0x1dffca8>
 20032fc:	020031b4 	movhi	r8,198
 2003300:	020031b4 	movhi	r8,198
 2003304:	020031b4 	movhi	r8,198
 2003308:	020031b4 	movhi	r8,198
 200330c:	020031b4 	movhi	r8,198
 2003310:	020031b4 	movhi	r8,198
 2003314:	020031b4 	movhi	r8,198
 2003318:	020031b4 	movhi	r8,198
 200331c:	02003570 	cmpltui	r8,zero,213
 2003320:	02003570 	cmpltui	r8,zero,213
 2003324:	02003570 	cmpltui	r8,zero,213
 2003328:	02003570 	cmpltui	r8,zero,213
 200332c:	02003570 	cmpltui	r8,zero,213
 2003330:	02003570 	cmpltui	r8,zero,213
 2003334:	020031b4 	movhi	r8,198
 2003338:	020031b4 	movhi	r8,198
 200333c:	020031b4 	movhi	r8,198
 2003340:	020031b4 	movhi	r8,198
 2003344:	020031b4 	movhi	r8,198
 2003348:	020031b4 	movhi	r8,198
 200334c:	020031b4 	movhi	r8,198
 2003350:	020031b4 	movhi	r8,198
 2003354:	020031b4 	movhi	r8,198
 2003358:	020031b4 	movhi	r8,198
 200335c:	020031b4 	movhi	r8,198
 2003360:	020031b4 	movhi	r8,198
 2003364:	020031b4 	movhi	r8,198
 2003368:	020031b4 	movhi	r8,198
 200336c:	020031b4 	movhi	r8,198
 2003370:	020031b4 	movhi	r8,198
 2003374:	020031b4 	movhi	r8,198
 2003378:	02003580 	call	200358 <__reset-0x1dffca8>
 200337c:	000d883a 	mov	r6,zero
 2003380:	003d9006 	br	20029c4 <__svfscanf_r+0x730>
 2003384:	98000005 	stb	zero,0(r19)
 2003388:	d8c0a017 	ldw	r3,640(sp)
 200338c:	d940a617 	ldw	r5,664(sp)
 2003390:	d9c0a117 	ldw	r7,644(sp)
 2003394:	b009883a 	mov	r4,r22
 2003398:	000d883a 	mov	r6,zero
 200339c:	183ee83a 	callr	r3
 20033a0:	1007883a 	mov	r3,r2
 20033a4:	9080080c 	andi	r2,r18,32
 20033a8:	10004d1e 	bne	r2,zero,20034e0 <__svfscanf_r+0x124c>
 20033ac:	9080010c 	andi	r2,r18,4
 20033b0:	10003426 	beq	r2,zero,2003484 <__svfscanf_r+0x11f0>
 20033b4:	d900a417 	ldw	r4,656(sp)
 20033b8:	20800017 	ldw	r2,0(r4)
 20033bc:	21000104 	addi	r4,r4,4
 20033c0:	d900a415 	stw	r4,656(sp)
 20033c4:	10c0000d 	sth	r3,0(r2)
 20033c8:	d880a217 	ldw	r2,648(sp)
 20033cc:	10800044 	addi	r2,r2,1
 20033d0:	d880a215 	stw	r2,648(sp)
 20033d4:	003f8406 	br	20031e8 <__svfscanf_r+0xf54>
 20033d8:	9080200c 	andi	r2,r18,128
 20033dc:	103f7526 	beq	r2,zero,20031b4 <__svfscanf_r+0xf20>
 20033e0:	00bfdfc4 	movi	r2,-129
 20033e4:	90a4703a 	and	r18,r18,r2
 20033e8:	99400005 	stb	r5,0(r19)
 20033ec:	9cc00044 	addi	r19,r19,1
 20033f0:	80c00117 	ldw	r3,4(r16)
 20033f4:	18ffffc4 	addi	r3,r3,-1
 20033f8:	80c00115 	stw	r3,4(r16)
 20033fc:	00c0130e 	bge	zero,r3,200344c <__svfscanf_r+0x11b8>
 2003400:	31800044 	addi	r6,r6,1
 2003404:	81800015 	stw	r6,0(r16)
 2003408:	d880a317 	ldw	r2,652(sp)
 200340c:	10bfffc4 	addi	r2,r2,-1
 2003410:	d880a315 	stw	r2,652(sp)
 2003414:	103f7e1e 	bne	r2,zero,2003210 <__svfscanf_r+0xf7c>
 2003418:	003f6606 	br	20031b4 <__svfscanf_r+0xf20>
 200341c:	9082000c 	andi	r2,r18,2048
 2003420:	103ff126 	beq	r2,zero,20033e8 <__svfscanf_r+0x1154>
 2003424:	d8c0a117 	ldw	r3,644(sp)
 2003428:	1800031e 	bne	r3,zero,2003438 <__svfscanf_r+0x11a4>
 200342c:	01000204 	movi	r4,8
 2003430:	94808014 	ori	r18,r18,512
 2003434:	d900a115 	stw	r4,644(sp)
 2003438:	9081000c 	andi	r2,r18,1024
 200343c:	10000826 	beq	r2,zero,2003460 <__svfscanf_r+0x11cc>
 2003440:	00be9fc4 	movi	r2,-1409
 2003444:	90a4703a 	and	r18,r18,r2
 2003448:	003fe706 	br	20033e8 <__svfscanf_r+0x1154>
 200344c:	b009883a 	mov	r4,r22
 2003450:	800b883a 	mov	r5,r16
 2003454:	200884c0 	call	200884c <__srefill_r>
 2003458:	103feb26 	beq	r2,zero,2003408 <__svfscanf_r+0x1174>
 200345c:	003f5506 	br	20031b4 <__svfscanf_r+0xf20>
 2003460:	a8000426 	beq	r21,zero,2003474 <__svfscanf_r+0x11e0>
 2003464:	d880a317 	ldw	r2,652(sp)
 2003468:	ad7fffc4 	addi	r21,r21,-1
 200346c:	10800044 	addi	r2,r2,1
 2003470:	d880a315 	stw	r2,652(sp)
 2003474:	00bf1fc4 	movi	r2,-897
 2003478:	90a4703a 	and	r18,r18,r2
 200347c:	bdc00044 	addi	r23,r23,1
 2003480:	003fdb06 	br	20033f0 <__svfscanf_r+0x115c>
 2003484:	9080004c 	andi	r2,r18,1
 2003488:	1005003a 	cmpeq	r2,r2,zero
 200348c:	10001426 	beq	r2,zero,20034e0 <__svfscanf_r+0x124c>
 2003490:	9080008c 	andi	r2,r18,2
 2003494:	10001226 	beq	r2,zero,20034e0 <__svfscanf_r+0x124c>
 2003498:	d8c0a017 	ldw	r3,640(sp)
 200349c:	00808074 	movhi	r2,513
 20034a0:	10aac404 	addi	r2,r2,-21744
 20034a4:	18801426 	beq	r3,r2,20034f8 <__svfscanf_r+0x1264>
 20034a8:	d9c0a117 	ldw	r7,644(sp)
 20034ac:	d940a617 	ldw	r5,664(sp)
 20034b0:	000d883a 	mov	r6,zero
 20034b4:	b009883a 	mov	r4,r22
 20034b8:	200a7f80 	call	200a7f8 <_strtoll_r>
 20034bc:	100d883a 	mov	r6,r2
 20034c0:	180f883a 	mov	r7,r3
 20034c4:	d900a417 	ldw	r4,656(sp)
 20034c8:	20800017 	ldw	r2,0(r4)
 20034cc:	21000104 	addi	r4,r4,4
 20034d0:	d900a415 	stw	r4,656(sp)
 20034d4:	11c00115 	stw	r7,4(r2)
 20034d8:	11800015 	stw	r6,0(r2)
 20034dc:	003fba06 	br	20033c8 <__svfscanf_r+0x1134>
 20034e0:	d900a417 	ldw	r4,656(sp)
 20034e4:	20800017 	ldw	r2,0(r4)
 20034e8:	21000104 	addi	r4,r4,4
 20034ec:	d900a415 	stw	r4,656(sp)
 20034f0:	10c00015 	stw	r3,0(r2)
 20034f4:	003fb406 	br	20033c8 <__svfscanf_r+0x1134>
 20034f8:	d9c0a117 	ldw	r7,644(sp)
 20034fc:	d940a617 	ldw	r5,664(sp)
 2003500:	000d883a 	mov	r6,zero
 2003504:	b009883a 	mov	r4,r22
 2003508:	200ad640 	call	200ad64 <_strtoull_r>
 200350c:	100d883a 	mov	r6,r2
 2003510:	180f883a 	mov	r7,r3
 2003514:	003feb06 	br	20034c4 <__svfscanf_r+0x1230>
 2003518:	d8c0a117 	ldw	r3,644(sp)
 200351c:	18c5883a 	add	r2,r3,r3
 2003520:	00c08074 	movhi	r3,513
 2003524:	18c58084 	addi	r3,r3,5634
 2003528:	10c5883a 	add	r2,r2,r3
 200352c:	1080000f 	ldh	r2,0(r2)
 2003530:	00fd1fc4 	movi	r3,-2945
 2003534:	90e4703a 	and	r18,r18,r3
 2003538:	d880a115 	stw	r2,644(sp)
 200353c:	003faa06 	br	20033e8 <__svfscanf_r+0x1154>
 2003540:	d900a117 	ldw	r4,644(sp)
 2003544:	00c08074 	movhi	r3,513
 2003548:	18c58084 	addi	r3,r3,5634
 200354c:	2105883a 	add	r2,r4,r4
 2003550:	10c5883a 	add	r2,r2,r3
 2003554:	1080000f 	ldh	r2,0(r2)
 2003558:	00c00204 	movi	r3,8
 200355c:	d880a115 	stw	r2,644(sp)
 2003560:	18bf140e 	bge	r3,r2,20031b4 <__svfscanf_r+0xf20>
 2003564:	00bd1fc4 	movi	r2,-2945
 2003568:	90a4703a 	and	r18,r18,r2
 200356c:	003f9e06 	br	20033e8 <__svfscanf_r+0x1154>
 2003570:	d8c0a117 	ldw	r3,644(sp)
 2003574:	00800284 	movi	r2,10
 2003578:	10fffa16 	blt	r2,r3,2003564 <__svfscanf_r+0x12d0>
 200357c:	003f0d06 	br	20031b4 <__svfscanf_r+0xf20>
 2003580:	90c1800c 	andi	r3,r18,1536
 2003584:	00808004 	movi	r2,512
 2003588:	18bf0a1e 	bne	r3,r2,20031b4 <__svfscanf_r+0xf20>
 200358c:	00bf7fc4 	movi	r2,-513
 2003590:	9084703a 	and	r2,r18,r2
 2003594:	01000404 	movi	r4,16
 2003598:	14814014 	ori	r18,r2,1280
 200359c:	d900a115 	stw	r4,644(sp)
 20035a0:	003f9106 	br	20033e8 <__svfscanf_r+0x1154>
 20035a4:	d880a417 	ldw	r2,656(sp)
 20035a8:	dd400404 	addi	r21,sp,16
 20035ac:	14800017 	ldw	r18,0(r2)
 20035b0:	9027883a 	mov	r19,r18
 20035b4:	81000017 	ldw	r4,0(r16)
 20035b8:	20800003 	ldbu	r2,0(r4)
 20035bc:	a885883a 	add	r2,r21,r2
 20035c0:	10c00007 	ldb	r3,0(r2)
 20035c4:	18001426 	beq	r3,zero,2003618 <__svfscanf_r+0x1384>
 20035c8:	d8c0a317 	ldw	r3,652(sp)
 20035cc:	80800117 	ldw	r2,4(r16)
 20035d0:	21800044 	addi	r6,r4,1
 20035d4:	18ffffc4 	addi	r3,r3,-1
 20035d8:	d8c0a315 	stw	r3,652(sp)
 20035dc:	10ffffc4 	addi	r3,r2,-1
 20035e0:	80c00115 	stw	r3,4(r16)
 20035e4:	20800003 	ldbu	r2,0(r4)
 20035e8:	90800005 	stb	r2,0(r18)
 20035ec:	d900a317 	ldw	r4,652(sp)
 20035f0:	81800015 	stw	r6,0(r16)
 20035f4:	94800044 	addi	r18,r18,1
 20035f8:	20000726 	beq	r4,zero,2003618 <__svfscanf_r+0x1384>
 20035fc:	80800117 	ldw	r2,4(r16)
 2003600:	00bfec16 	blt	zero,r2,20035b4 <__svfscanf_r+0x1320>
 2003604:	b009883a 	mov	r4,r22
 2003608:	800b883a 	mov	r5,r16
 200360c:	200884c0 	call	200884c <__srefill_r>
 2003610:	103fe826 	beq	r2,zero,20035b4 <__svfscanf_r+0x1320>
 2003614:	9cbb7426 	beq	r19,r18,20023e8 <__svfscanf_r+0x154>
 2003618:	94e7c83a 	sub	r19,r18,r19
 200361c:	983b5226 	beq	r19,zero,2002368 <__svfscanf_r+0xd4>
 2003620:	90000005 	stb	zero,0(r18)
 2003624:	d880a417 	ldw	r2,656(sp)
 2003628:	d8c0a217 	ldw	r3,648(sp)
 200362c:	8ce3883a 	add	r17,r17,r19
 2003630:	10800104 	addi	r2,r2,4
 2003634:	18c00044 	addi	r3,r3,1
 2003638:	d880a415 	stw	r2,656(sp)
 200363c:	d8c0a215 	stw	r3,648(sp)
 2003640:	003b2706 	br	20022e0 <__svfscanf_r+0x4c>
 2003644:	9cc00414 	ori	r19,r19,16
 2003648:	003b6e06 	br	2002404 <__svfscanf_r+0x170>
 200364c:	00c00404 	movi	r3,16
 2003650:	01008074 	movhi	r4,513
 2003654:	212ac404 	addi	r4,r4,-21744
 2003658:	9cc08014 	ori	r19,r19,512
 200365c:	054000c4 	movi	r21,3
 2003660:	d8c0a115 	stw	r3,644(sp)
 2003664:	d900a015 	stw	r4,640(sp)
 2003668:	003bf806 	br	200264c <__svfscanf_r+0x3b8>
 200366c:	9880040c 	andi	r2,r19,16
 2003670:	10001926 	beq	r2,zero,20036d8 <__svfscanf_r+0x1444>
 2003674:	0027883a 	mov	r19,zero
 2003678:	00000b06 	br	20036a8 <__svfscanf_r+0x1414>
 200367c:	80800017 	ldw	r2,0(r16)
 2003680:	b009883a 	mov	r4,r22
 2003684:	800b883a 	mov	r5,r16
 2003688:	148d883a 	add	r6,r2,r18
 200368c:	81800015 	stw	r6,0(r16)
 2003690:	9ca7883a 	add	r19,r19,r18
 2003694:	200884c0 	call	200884c <__srefill_r>
 2003698:	103c711e 	bne	r2,zero,2002860 <__svfscanf_r+0x5cc>
 200369c:	d900a317 	ldw	r4,652(sp)
 20036a0:	2489c83a 	sub	r4,r4,r18
 20036a4:	d900a315 	stw	r4,652(sp)
 20036a8:	84800117 	ldw	r18,4(r16)
 20036ac:	d8c0a317 	ldw	r3,652(sp)
 20036b0:	90fff216 	blt	r18,r3,200367c <__svfscanf_r+0x13e8>
 20036b4:	d900a317 	ldw	r4,652(sp)
 20036b8:	80800017 	ldw	r2,0(r16)
 20036bc:	9927883a 	add	r19,r19,r4
 20036c0:	9107c83a 	sub	r3,r18,r4
 20036c4:	110d883a 	add	r6,r2,r4
 20036c8:	8ce3883a 	add	r17,r17,r19
 20036cc:	80c00115 	stw	r3,4(r16)
 20036d0:	81800015 	stw	r6,0(r16)
 20036d4:	003b0206 	br	20022e0 <__svfscanf_r+0x4c>
 20036d8:	d880a417 	ldw	r2,656(sp)
 20036dc:	d980a317 	ldw	r6,652(sp)
 20036e0:	01400044 	movi	r5,1
 20036e4:	11000017 	ldw	r4,0(r2)
 20036e8:	800f883a 	mov	r7,r16
 20036ec:	2005a080 	call	2005a08 <fread>
 20036f0:	103b3d26 	beq	r2,zero,20023e8 <__svfscanf_r+0x154>
 20036f4:	d8c0a417 	ldw	r3,656(sp)
 20036f8:	d900a217 	ldw	r4,648(sp)
 20036fc:	88a3883a 	add	r17,r17,r2
 2003700:	18c00104 	addi	r3,r3,4
 2003704:	21000044 	addi	r4,r4,1
 2003708:	d8c0a415 	stw	r3,656(sp)
 200370c:	d900a215 	stw	r4,648(sp)
 2003710:	003af306 	br	20022e0 <__svfscanf_r+0x4c>
 2003714:	8080030b 	ldhu	r2,12(r16)
 2003718:	1080100c 	andi	r2,r2,64
 200371c:	103b1226 	beq	r2,zero,2002368 <__svfscanf_r+0xd4>
 2003720:	003b3306 	br	20023f0 <__svfscanf_r+0x15c>
 2003724:	983b1026 	beq	r19,zero,2002368 <__svfscanf_r+0xd4>
 2003728:	8ce3883a 	add	r17,r17,r19
 200372c:	003aec06 	br	20022e0 <__svfscanf_r+0x4c>
 2003730:	983c9626 	beq	r19,zero,200298c <__svfscanf_r+0x6f8>
 2003734:	9cffffc4 	addi	r19,r19,-1
 2003738:	d8c04404 	addi	r3,sp,272
 200373c:	1cc5883a 	add	r2,r3,r19
 2003740:	11400003 	ldbu	r5,0(r2)
 2003744:	b009883a 	mov	r4,r22
 2003748:	800d883a 	mov	r6,r16
 200374c:	200b1300 	call	200b130 <_ungetc_r>
 2003750:	003ff706 	br	2003730 <__svfscanf_r+0x149c>
 2003754:	00bfff84 	movi	r2,-2
 2003758:	18bc7a1e 	bne	r3,r2,2002944 <__svfscanf_r+0x6b0>
 200375c:	003c8406 	br	2002970 <__svfscanf_r+0x6dc>
 2003760:	d900a417 	ldw	r4,656(sp)
 2003764:	25400017 	ldw	r21,0(r4)
 2003768:	21000104 	addi	r4,r4,4
 200376c:	d900a415 	stw	r4,656(sp)
 2003770:	003c4a06 	br	200289c <__svfscanf_r+0x608>
 2003774:	00bfff84 	movi	r2,-2
 2003778:	18bc0f1e 	bne	r3,r2,20027b8 <__svfscanf_r+0x524>
 200377c:	003c1506 	br	20027d4 <__svfscanf_r+0x540>
 2003780:	b009883a 	mov	r4,r22
 2003784:	800b883a 	mov	r5,r16
 2003788:	200884c0 	call	200884c <__srefill_r>
 200378c:	103c1326 	beq	r2,zero,20027dc <__svfscanf_r+0x548>
 2003790:	903b151e 	bne	r18,zero,20023e8 <__svfscanf_r+0x154>
 2003794:	a83ad21e 	bne	r21,zero,20022e0 <__svfscanf_r+0x4c>
 2003798:	d880a217 	ldw	r2,648(sp)
 200379c:	10800044 	addi	r2,r2,1
 20037a0:	d880a215 	stw	r2,648(sp)
 20037a4:	003ace06 	br	20022e0 <__svfscanf_r+0x4c>
 20037a8:	0027883a 	mov	r19,zero
 20037ac:	003bdd06 	br	2002724 <__svfscanf_r+0x490>
 20037b0:	9cc00114 	ori	r19,r19,4
 20037b4:	003b1306 	br	2002404 <__svfscanf_r+0x170>
 20037b8:	05400104 	movi	r21,4
 20037bc:	003ba306 	br	200264c <__svfscanf_r+0x3b8>
 20037c0:	9cc00054 	ori	r19,r19,1
 20037c4:	00808074 	movhi	r2,513
 20037c8:	10a96404 	addi	r2,r2,-23152
 20037cc:	00c00284 	movi	r3,10
 20037d0:	054000c4 	movi	r21,3
 20037d4:	d880a015 	stw	r2,640(sp)
 20037d8:	d8c0a115 	stw	r3,644(sp)
 20037dc:	003b9b06 	br	200264c <__svfscanf_r+0x3b8>
 20037e0:	9cc01014 	ori	r19,r19,64
 20037e4:	002b883a 	mov	r21,zero
 20037e8:	003b9806 	br	200264c <__svfscanf_r+0x3b8>
 20037ec:	a00b883a 	mov	r5,r20
 20037f0:	d9000404 	addi	r4,sp,16
 20037f4:	2008b0c0 	call	2008b0c <__sccl>
 20037f8:	1029883a 	mov	r20,r2
 20037fc:	9cc01014 	ori	r19,r19,64
 2003800:	05400044 	movi	r21,1
 2003804:	003b9106 	br	200264c <__svfscanf_r+0x3b8>
 2003808:	9cc00054 	ori	r19,r19,1
 200380c:	00800204 	movi	r2,8
 2003810:	00c08074 	movhi	r3,513
 2003814:	18eac404 	addi	r3,r3,-21744
 2003818:	054000c4 	movi	r21,3
 200381c:	d880a115 	stw	r2,644(sp)
 2003820:	d8c0a015 	stw	r3,640(sp)
 2003824:	003b8906 	br	200264c <__svfscanf_r+0x3b8>
 2003828:	9880040c 	andi	r2,r19,16
 200382c:	103aac1e 	bne	r2,zero,20022e0 <__svfscanf_r+0x4c>
 2003830:	9880010c 	andi	r2,r19,4
 2003834:	10002426 	beq	r2,zero,20038c8 <__svfscanf_r+0x1634>
 2003838:	d900a417 	ldw	r4,656(sp)
 200383c:	20800017 	ldw	r2,0(r4)
 2003840:	21000104 	addi	r4,r4,4
 2003844:	d900a415 	stw	r4,656(sp)
 2003848:	1440000d 	sth	r17,0(r2)
 200384c:	003aa406 	br	20022e0 <__svfscanf_r+0x4c>
 2003850:	9cc00094 	ori	r19,r19,2
 2003854:	003aeb06 	br	2002404 <__svfscanf_r+0x170>
 2003858:	05400084 	movi	r21,2
 200385c:	003b7b06 	br	200264c <__svfscanf_r+0x3b8>
 2003860:	00800404 	movi	r2,16
 2003864:	00c08074 	movhi	r3,513
 2003868:	18eac404 	addi	r3,r3,-21744
 200386c:	9cc08814 	ori	r19,r19,544
 2003870:	054000c4 	movi	r21,3
 2003874:	d880a115 	stw	r2,644(sp)
 2003878:	d8c0a015 	stw	r3,640(sp)
 200387c:	003b7306 	br	200264c <__svfscanf_r+0x3b8>
 2003880:	0009883a 	mov	r4,zero
 2003884:	2008bcc0 	call	2008bcc <nanf>
 2003888:	b8800015 	stw	r2,0(r23)
 200388c:	003d2706 	br	2002d2c <__svfscanf_r+0xa98>
 2003890:	a0c00007 	ldb	r3,0(r20)
 2003894:	00801b04 	movi	r2,108
 2003898:	18800826 	beq	r3,r2,20038bc <__svfscanf_r+0x1628>
 200389c:	9cc00054 	ori	r19,r19,1
 20038a0:	003ad806 	br	2002404 <__svfscanf_r+0x170>
 20038a4:	01008074 	movhi	r4,513
 20038a8:	21296404 	addi	r4,r4,-23152
 20038ac:	054000c4 	movi	r21,3
 20038b0:	d900a015 	stw	r4,640(sp)
 20038b4:	d800a115 	stw	zero,644(sp)
 20038b8:	003b6406 	br	200264c <__svfscanf_r+0x3b8>
 20038bc:	a5000044 	addi	r20,r20,1
 20038c0:	9cc00094 	ori	r19,r19,2
 20038c4:	003acf06 	br	2002404 <__svfscanf_r+0x170>
 20038c8:	9880004c 	andi	r2,r19,1
 20038cc:	1005003a 	cmpeq	r2,r2,zero
 20038d0:	10000a26 	beq	r2,zero,20038fc <__svfscanf_r+0x1668>
 20038d4:	9880008c 	andi	r2,r19,2
 20038d8:	10000826 	beq	r2,zero,20038fc <__svfscanf_r+0x1668>
 20038dc:	d900a417 	ldw	r4,656(sp)
 20038e0:	8807d7fa 	srai	r3,r17,31
 20038e4:	20800017 	ldw	r2,0(r4)
 20038e8:	21000104 	addi	r4,r4,4
 20038ec:	d900a415 	stw	r4,656(sp)
 20038f0:	14400015 	stw	r17,0(r2)
 20038f4:	10c00115 	stw	r3,4(r2)
 20038f8:	003a7906 	br	20022e0 <__svfscanf_r+0x4c>
 20038fc:	d8c0a417 	ldw	r3,656(sp)
 2003900:	18800017 	ldw	r2,0(r3)
 2003904:	18c00104 	addi	r3,r3,4
 2003908:	d8c0a415 	stw	r3,656(sp)
 200390c:	14400015 	stw	r17,0(r2)
 2003910:	003a7306 	br	20022e0 <__svfscanf_r+0x4c>

02003914 <__svfscanf>:
 2003914:	00808074 	movhi	r2,513
 2003918:	10899604 	addi	r2,r2,9816
 200391c:	2013883a 	mov	r9,r4
 2003920:	11000017 	ldw	r4,0(r2)
 2003924:	2805883a 	mov	r2,r5
 2003928:	300f883a 	mov	r7,r6
 200392c:	480b883a 	mov	r5,r9
 2003930:	100d883a 	mov	r6,r2
 2003934:	20022941 	jmpi	2002294 <__svfscanf_r>

02003938 <_vfscanf_r>:
 2003938:	defffb04 	addi	sp,sp,-20
 200393c:	dcc00315 	stw	r19,12(sp)
 2003940:	dc800215 	stw	r18,8(sp)
 2003944:	dc400115 	stw	r17,4(sp)
 2003948:	dc000015 	stw	r16,0(sp)
 200394c:	dfc00415 	stw	ra,16(sp)
 2003950:	2021883a 	mov	r16,r4
 2003954:	2823883a 	mov	r17,r5
 2003958:	3025883a 	mov	r18,r6
 200395c:	3827883a 	mov	r19,r7
 2003960:	20000226 	beq	r4,zero,200396c <_vfscanf_r+0x34>
 2003964:	20800e17 	ldw	r2,56(r4)
 2003968:	10000b26 	beq	r2,zero,2003998 <_vfscanf_r+0x60>
 200396c:	8009883a 	mov	r4,r16
 2003970:	880b883a 	mov	r5,r17
 2003974:	900d883a 	mov	r6,r18
 2003978:	980f883a 	mov	r7,r19
 200397c:	dfc00417 	ldw	ra,16(sp)
 2003980:	dcc00317 	ldw	r19,12(sp)
 2003984:	dc800217 	ldw	r18,8(sp)
 2003988:	dc400117 	ldw	r17,4(sp)
 200398c:	dc000017 	ldw	r16,0(sp)
 2003990:	dec00504 	addi	sp,sp,20
 2003994:	20022941 	jmpi	2002294 <__svfscanf_r>
 2003998:	20055b40 	call	20055b4 <__sinit>
 200399c:	003ff306 	br	200396c <_vfscanf_r+0x34>

020039a0 <vfscanf>:
 20039a0:	defffb04 	addi	sp,sp,-20
 20039a4:	dcc00315 	stw	r19,12(sp)
 20039a8:	04c08074 	movhi	r19,513
 20039ac:	9cc99604 	addi	r19,r19,9816
 20039b0:	98c00017 	ldw	r3,0(r19)
 20039b4:	dc800215 	stw	r18,8(sp)
 20039b8:	dc400115 	stw	r17,4(sp)
 20039bc:	dc000015 	stw	r16,0(sp)
 20039c0:	dfc00415 	stw	ra,16(sp)
 20039c4:	2021883a 	mov	r16,r4
 20039c8:	2823883a 	mov	r17,r5
 20039cc:	3025883a 	mov	r18,r6
 20039d0:	18000326 	beq	r3,zero,20039e0 <vfscanf+0x40>
 20039d4:	18800e17 	ldw	r2,56(r3)
 20039d8:	1809883a 	mov	r4,r3
 20039dc:	10000b26 	beq	r2,zero,2003a0c <vfscanf+0x6c>
 20039e0:	99000017 	ldw	r4,0(r19)
 20039e4:	800b883a 	mov	r5,r16
 20039e8:	880d883a 	mov	r6,r17
 20039ec:	900f883a 	mov	r7,r18
 20039f0:	dfc00417 	ldw	ra,16(sp)
 20039f4:	dcc00317 	ldw	r19,12(sp)
 20039f8:	dc800217 	ldw	r18,8(sp)
 20039fc:	dc400117 	ldw	r17,4(sp)
 2003a00:	dc000017 	ldw	r16,0(sp)
 2003a04:	dec00504 	addi	sp,sp,20
 2003a08:	20022941 	jmpi	2002294 <__svfscanf_r>
 2003a0c:	20055b40 	call	20055b4 <__sinit>
 2003a10:	003ff306 	br	20039e0 <vfscanf+0x40>

02003a14 <__swsetup_r>:
 2003a14:	00808074 	movhi	r2,513
 2003a18:	10899604 	addi	r2,r2,9816
 2003a1c:	10c00017 	ldw	r3,0(r2)
 2003a20:	defffd04 	addi	sp,sp,-12
 2003a24:	dc400115 	stw	r17,4(sp)
 2003a28:	dc000015 	stw	r16,0(sp)
 2003a2c:	dfc00215 	stw	ra,8(sp)
 2003a30:	2023883a 	mov	r17,r4
 2003a34:	2821883a 	mov	r16,r5
 2003a38:	18000226 	beq	r3,zero,2003a44 <__swsetup_r+0x30>
 2003a3c:	18800e17 	ldw	r2,56(r3)
 2003a40:	10001f26 	beq	r2,zero,2003ac0 <__swsetup_r+0xac>
 2003a44:	8100030b 	ldhu	r4,12(r16)
 2003a48:	2080020c 	andi	r2,r4,8
 2003a4c:	10002826 	beq	r2,zero,2003af0 <__swsetup_r+0xdc>
 2003a50:	81400417 	ldw	r5,16(r16)
 2003a54:	28001d26 	beq	r5,zero,2003acc <__swsetup_r+0xb8>
 2003a58:	2080004c 	andi	r2,r4,1
 2003a5c:	1005003a 	cmpeq	r2,r2,zero
 2003a60:	10000b26 	beq	r2,zero,2003a90 <__swsetup_r+0x7c>
 2003a64:	2080008c 	andi	r2,r4,2
 2003a68:	10001226 	beq	r2,zero,2003ab4 <__swsetup_r+0xa0>
 2003a6c:	0005883a 	mov	r2,zero
 2003a70:	80800215 	stw	r2,8(r16)
 2003a74:	28000b26 	beq	r5,zero,2003aa4 <__swsetup_r+0x90>
 2003a78:	0005883a 	mov	r2,zero
 2003a7c:	dfc00217 	ldw	ra,8(sp)
 2003a80:	dc400117 	ldw	r17,4(sp)
 2003a84:	dc000017 	ldw	r16,0(sp)
 2003a88:	dec00304 	addi	sp,sp,12
 2003a8c:	f800283a 	ret
 2003a90:	80800517 	ldw	r2,20(r16)
 2003a94:	80000215 	stw	zero,8(r16)
 2003a98:	0085c83a 	sub	r2,zero,r2
 2003a9c:	80800615 	stw	r2,24(r16)
 2003aa0:	283ff51e 	bne	r5,zero,2003a78 <__swsetup_r+0x64>
 2003aa4:	2080200c 	andi	r2,r4,128
 2003aa8:	103ff326 	beq	r2,zero,2003a78 <__swsetup_r+0x64>
 2003aac:	00bfffc4 	movi	r2,-1
 2003ab0:	003ff206 	br	2003a7c <__swsetup_r+0x68>
 2003ab4:	80800517 	ldw	r2,20(r16)
 2003ab8:	80800215 	stw	r2,8(r16)
 2003abc:	003fed06 	br	2003a74 <__swsetup_r+0x60>
 2003ac0:	1809883a 	mov	r4,r3
 2003ac4:	20055b40 	call	20055b4 <__sinit>
 2003ac8:	003fde06 	br	2003a44 <__swsetup_r+0x30>
 2003acc:	20c0a00c 	andi	r3,r4,640
 2003ad0:	00808004 	movi	r2,512
 2003ad4:	18bfe026 	beq	r3,r2,2003a58 <__swsetup_r+0x44>
 2003ad8:	8809883a 	mov	r4,r17
 2003adc:	800b883a 	mov	r5,r16
 2003ae0:	20065940 	call	2006594 <__smakebuf_r>
 2003ae4:	8100030b 	ldhu	r4,12(r16)
 2003ae8:	81400417 	ldw	r5,16(r16)
 2003aec:	003fda06 	br	2003a58 <__swsetup_r+0x44>
 2003af0:	2080040c 	andi	r2,r4,16
 2003af4:	103fed26 	beq	r2,zero,2003aac <__swsetup_r+0x98>
 2003af8:	2080010c 	andi	r2,r4,4
 2003afc:	10001226 	beq	r2,zero,2003b48 <__swsetup_r+0x134>
 2003b00:	81400c17 	ldw	r5,48(r16)
 2003b04:	28000526 	beq	r5,zero,2003b1c <__swsetup_r+0x108>
 2003b08:	80801004 	addi	r2,r16,64
 2003b0c:	28800226 	beq	r5,r2,2003b18 <__swsetup_r+0x104>
 2003b10:	8809883a 	mov	r4,r17
 2003b14:	2005b740 	call	2005b74 <_free_r>
 2003b18:	80000c15 	stw	zero,48(r16)
 2003b1c:	8080030b 	ldhu	r2,12(r16)
 2003b20:	81400417 	ldw	r5,16(r16)
 2003b24:	80000115 	stw	zero,4(r16)
 2003b28:	10bff6cc 	andi	r2,r2,65499
 2003b2c:	8080030d 	sth	r2,12(r16)
 2003b30:	81400015 	stw	r5,0(r16)
 2003b34:	8080030b 	ldhu	r2,12(r16)
 2003b38:	10800214 	ori	r2,r2,8
 2003b3c:	113fffcc 	andi	r4,r2,65535
 2003b40:	8080030d 	sth	r2,12(r16)
 2003b44:	003fc306 	br	2003a54 <__swsetup_r+0x40>
 2003b48:	81400417 	ldw	r5,16(r16)
 2003b4c:	003ff906 	br	2003b34 <__swsetup_r+0x120>

02003b50 <quorem>:
 2003b50:	28c00417 	ldw	r3,16(r5)
 2003b54:	20800417 	ldw	r2,16(r4)
 2003b58:	defff604 	addi	sp,sp,-40
 2003b5c:	ddc00715 	stw	r23,28(sp)
 2003b60:	dd400515 	stw	r21,20(sp)
 2003b64:	dfc00915 	stw	ra,36(sp)
 2003b68:	df000815 	stw	fp,32(sp)
 2003b6c:	dd800615 	stw	r22,24(sp)
 2003b70:	dd000415 	stw	r20,16(sp)
 2003b74:	dcc00315 	stw	r19,12(sp)
 2003b78:	dc800215 	stw	r18,8(sp)
 2003b7c:	dc400115 	stw	r17,4(sp)
 2003b80:	dc000015 	stw	r16,0(sp)
 2003b84:	202f883a 	mov	r23,r4
 2003b88:	282b883a 	mov	r21,r5
 2003b8c:	10c07416 	blt	r2,r3,2003d60 <quorem+0x210>
 2003b90:	1c7fffc4 	addi	r17,r3,-1
 2003b94:	8c45883a 	add	r2,r17,r17
 2003b98:	1085883a 	add	r2,r2,r2
 2003b9c:	2c000504 	addi	r16,r5,20
 2003ba0:	24c00504 	addi	r19,r4,20
 2003ba4:	14ed883a 	add	r22,r2,r19
 2003ba8:	80a5883a 	add	r18,r16,r2
 2003bac:	b7000017 	ldw	fp,0(r22)
 2003bb0:	91400017 	ldw	r5,0(r18)
 2003bb4:	e009883a 	mov	r4,fp
 2003bb8:	29400044 	addi	r5,r5,1
 2003bbc:	200e4980 	call	200e498 <__udivsi3>
 2003bc0:	1029883a 	mov	r20,r2
 2003bc4:	10003c1e 	bne	r2,zero,2003cb8 <quorem+0x168>
 2003bc8:	a80b883a 	mov	r5,r21
 2003bcc:	b809883a 	mov	r4,r23
 2003bd0:	20073c00 	call	20073c0 <__mcmp>
 2003bd4:	10002b16 	blt	r2,zero,2003c84 <quorem+0x134>
 2003bd8:	a5000044 	addi	r20,r20,1
 2003bdc:	980f883a 	mov	r7,r19
 2003be0:	0011883a 	mov	r8,zero
 2003be4:	0009883a 	mov	r4,zero
 2003be8:	81400017 	ldw	r5,0(r16)
 2003bec:	38c00017 	ldw	r3,0(r7)
 2003bf0:	84000104 	addi	r16,r16,4
 2003bf4:	28bfffcc 	andi	r2,r5,65535
 2003bf8:	2085883a 	add	r2,r4,r2
 2003bfc:	11bfffcc 	andi	r6,r2,65535
 2003c00:	193fffcc 	andi	r4,r3,65535
 2003c04:	1004d43a 	srli	r2,r2,16
 2003c08:	280ad43a 	srli	r5,r5,16
 2003c0c:	2189c83a 	sub	r4,r4,r6
 2003c10:	2209883a 	add	r4,r4,r8
 2003c14:	1806d43a 	srli	r3,r3,16
 2003c18:	288b883a 	add	r5,r5,r2
 2003c1c:	200dd43a 	srai	r6,r4,16
 2003c20:	28bfffcc 	andi	r2,r5,65535
 2003c24:	1887c83a 	sub	r3,r3,r2
 2003c28:	1987883a 	add	r3,r3,r6
 2003c2c:	3900000d 	sth	r4,0(r7)
 2003c30:	38c0008d 	sth	r3,2(r7)
 2003c34:	2808d43a 	srli	r4,r5,16
 2003c38:	39c00104 	addi	r7,r7,4
 2003c3c:	1811d43a 	srai	r8,r3,16
 2003c40:	943fe92e 	bgeu	r18,r16,2003be8 <quorem+0x98>
 2003c44:	8c45883a 	add	r2,r17,r17
 2003c48:	1085883a 	add	r2,r2,r2
 2003c4c:	9885883a 	add	r2,r19,r2
 2003c50:	10c00017 	ldw	r3,0(r2)
 2003c54:	18000b1e 	bne	r3,zero,2003c84 <quorem+0x134>
 2003c58:	113fff04 	addi	r4,r2,-4
 2003c5c:	9900082e 	bgeu	r19,r4,2003c80 <quorem+0x130>
 2003c60:	10bfff17 	ldw	r2,-4(r2)
 2003c64:	10000326 	beq	r2,zero,2003c74 <quorem+0x124>
 2003c68:	00000506 	br	2003c80 <quorem+0x130>
 2003c6c:	20800017 	ldw	r2,0(r4)
 2003c70:	1000031e 	bne	r2,zero,2003c80 <quorem+0x130>
 2003c74:	213fff04 	addi	r4,r4,-4
 2003c78:	8c7fffc4 	addi	r17,r17,-1
 2003c7c:	993ffb36 	bltu	r19,r4,2003c6c <quorem+0x11c>
 2003c80:	bc400415 	stw	r17,16(r23)
 2003c84:	a005883a 	mov	r2,r20
 2003c88:	dfc00917 	ldw	ra,36(sp)
 2003c8c:	df000817 	ldw	fp,32(sp)
 2003c90:	ddc00717 	ldw	r23,28(sp)
 2003c94:	dd800617 	ldw	r22,24(sp)
 2003c98:	dd400517 	ldw	r21,20(sp)
 2003c9c:	dd000417 	ldw	r20,16(sp)
 2003ca0:	dcc00317 	ldw	r19,12(sp)
 2003ca4:	dc800217 	ldw	r18,8(sp)
 2003ca8:	dc400117 	ldw	r17,4(sp)
 2003cac:	dc000017 	ldw	r16,0(sp)
 2003cb0:	dec00a04 	addi	sp,sp,40
 2003cb4:	f800283a 	ret
 2003cb8:	980f883a 	mov	r7,r19
 2003cbc:	8011883a 	mov	r8,r16
 2003cc0:	0013883a 	mov	r9,zero
 2003cc4:	000d883a 	mov	r6,zero
 2003cc8:	40c00017 	ldw	r3,0(r8)
 2003ccc:	39000017 	ldw	r4,0(r7)
 2003cd0:	42000104 	addi	r8,r8,4
 2003cd4:	18bfffcc 	andi	r2,r3,65535
 2003cd8:	a085383a 	mul	r2,r20,r2
 2003cdc:	1806d43a 	srli	r3,r3,16
 2003ce0:	217fffcc 	andi	r5,r4,65535
 2003ce4:	3085883a 	add	r2,r6,r2
 2003ce8:	11bfffcc 	andi	r6,r2,65535
 2003cec:	a0c7383a 	mul	r3,r20,r3
 2003cf0:	1004d43a 	srli	r2,r2,16
 2003cf4:	298bc83a 	sub	r5,r5,r6
 2003cf8:	2a4b883a 	add	r5,r5,r9
 2003cfc:	2008d43a 	srli	r4,r4,16
 2003d00:	1887883a 	add	r3,r3,r2
 2003d04:	280dd43a 	srai	r6,r5,16
 2003d08:	18bfffcc 	andi	r2,r3,65535
 2003d0c:	2089c83a 	sub	r4,r4,r2
 2003d10:	2189883a 	add	r4,r4,r6
 2003d14:	3900008d 	sth	r4,2(r7)
 2003d18:	3940000d 	sth	r5,0(r7)
 2003d1c:	180cd43a 	srli	r6,r3,16
 2003d20:	39c00104 	addi	r7,r7,4
 2003d24:	2013d43a 	srai	r9,r4,16
 2003d28:	923fe72e 	bgeu	r18,r8,2003cc8 <quorem+0x178>
 2003d2c:	e03fa61e 	bne	fp,zero,2003bc8 <quorem+0x78>
 2003d30:	b0ffff04 	addi	r3,r22,-4
 2003d34:	98c0082e 	bgeu	r19,r3,2003d58 <quorem+0x208>
 2003d38:	b0bfff17 	ldw	r2,-4(r22)
 2003d3c:	10000326 	beq	r2,zero,2003d4c <quorem+0x1fc>
 2003d40:	00000506 	br	2003d58 <quorem+0x208>
 2003d44:	18800017 	ldw	r2,0(r3)
 2003d48:	1000031e 	bne	r2,zero,2003d58 <quorem+0x208>
 2003d4c:	18ffff04 	addi	r3,r3,-4
 2003d50:	8c7fffc4 	addi	r17,r17,-1
 2003d54:	98fffb36 	bltu	r19,r3,2003d44 <quorem+0x1f4>
 2003d58:	bc400415 	stw	r17,16(r23)
 2003d5c:	003f9a06 	br	2003bc8 <quorem+0x78>
 2003d60:	0005883a 	mov	r2,zero
 2003d64:	003fc806 	br	2003c88 <quorem+0x138>

02003d68 <_dtoa_r>:
 2003d68:	22001017 	ldw	r8,64(r4)
 2003d6c:	deffda04 	addi	sp,sp,-152
 2003d70:	dd402115 	stw	r21,132(sp)
 2003d74:	dd002015 	stw	r20,128(sp)
 2003d78:	dc801e15 	stw	r18,120(sp)
 2003d7c:	dc401d15 	stw	r17,116(sp)
 2003d80:	dfc02515 	stw	ra,148(sp)
 2003d84:	df002415 	stw	fp,144(sp)
 2003d88:	ddc02315 	stw	r23,140(sp)
 2003d8c:	dd802215 	stw	r22,136(sp)
 2003d90:	dcc01f15 	stw	r19,124(sp)
 2003d94:	dc001c15 	stw	r16,112(sp)
 2003d98:	d9001615 	stw	r4,88(sp)
 2003d9c:	3023883a 	mov	r17,r6
 2003da0:	2829883a 	mov	r20,r5
 2003da4:	d9c01715 	stw	r7,92(sp)
 2003da8:	dc802817 	ldw	r18,160(sp)
 2003dac:	302b883a 	mov	r21,r6
 2003db0:	40000a26 	beq	r8,zero,2003ddc <_dtoa_r+0x74>
 2003db4:	20801117 	ldw	r2,68(r4)
 2003db8:	400b883a 	mov	r5,r8
 2003dbc:	40800115 	stw	r2,4(r8)
 2003dc0:	20c01117 	ldw	r3,68(r4)
 2003dc4:	00800044 	movi	r2,1
 2003dc8:	10c4983a 	sll	r2,r2,r3
 2003dcc:	40800215 	stw	r2,8(r8)
 2003dd0:	20072640 	call	2007264 <_Bfree>
 2003dd4:	d8c01617 	ldw	r3,88(sp)
 2003dd8:	18001015 	stw	zero,64(r3)
 2003ddc:	8800a316 	blt	r17,zero,200406c <_dtoa_r+0x304>
 2003de0:	90000015 	stw	zero,0(r18)
 2003de4:	a8dffc2c 	andhi	r3,r21,32752
 2003de8:	009ffc34 	movhi	r2,32752
 2003dec:	18809126 	beq	r3,r2,2004034 <_dtoa_r+0x2cc>
 2003df0:	000d883a 	mov	r6,zero
 2003df4:	000f883a 	mov	r7,zero
 2003df8:	a009883a 	mov	r4,r20
 2003dfc:	a80b883a 	mov	r5,r21
 2003e00:	dd001215 	stw	r20,72(sp)
 2003e04:	dd401315 	stw	r21,76(sp)
 2003e08:	200dcdc0 	call	200dcdc <__nedf2>
 2003e0c:	1000171e 	bne	r2,zero,2003e6c <_dtoa_r+0x104>
 2003e10:	d9802717 	ldw	r6,156(sp)
 2003e14:	00800044 	movi	r2,1
 2003e18:	30800015 	stw	r2,0(r6)
 2003e1c:	d8802917 	ldw	r2,164(sp)
 2003e20:	10029b26 	beq	r2,zero,2004890 <_dtoa_r+0xb28>
 2003e24:	d9002917 	ldw	r4,164(sp)
 2003e28:	00808074 	movhi	r2,513
 2003e2c:	10857644 	addi	r2,r2,5593
 2003e30:	10ffffc4 	addi	r3,r2,-1
 2003e34:	20800015 	stw	r2,0(r4)
 2003e38:	1805883a 	mov	r2,r3
 2003e3c:	dfc02517 	ldw	ra,148(sp)
 2003e40:	df002417 	ldw	fp,144(sp)
 2003e44:	ddc02317 	ldw	r23,140(sp)
 2003e48:	dd802217 	ldw	r22,136(sp)
 2003e4c:	dd402117 	ldw	r21,132(sp)
 2003e50:	dd002017 	ldw	r20,128(sp)
 2003e54:	dcc01f17 	ldw	r19,124(sp)
 2003e58:	dc801e17 	ldw	r18,120(sp)
 2003e5c:	dc401d17 	ldw	r17,116(sp)
 2003e60:	dc001c17 	ldw	r16,112(sp)
 2003e64:	dec02604 	addi	sp,sp,152
 2003e68:	f800283a 	ret
 2003e6c:	d9001617 	ldw	r4,88(sp)
 2003e70:	d9401217 	ldw	r5,72(sp)
 2003e74:	d8800104 	addi	r2,sp,4
 2003e78:	a80d883a 	mov	r6,r21
 2003e7c:	d9c00204 	addi	r7,sp,8
 2003e80:	d8800015 	stw	r2,0(sp)
 2003e84:	20078a00 	call	20078a0 <__d2b>
 2003e88:	d8800715 	stw	r2,28(sp)
 2003e8c:	a804d53a 	srli	r2,r21,20
 2003e90:	1101ffcc 	andi	r4,r2,2047
 2003e94:	20008626 	beq	r4,zero,20040b0 <_dtoa_r+0x348>
 2003e98:	d8c01217 	ldw	r3,72(sp)
 2003e9c:	00800434 	movhi	r2,16
 2003ea0:	10bfffc4 	addi	r2,r2,-1
 2003ea4:	ddc00117 	ldw	r23,4(sp)
 2003ea8:	a884703a 	and	r2,r21,r2
 2003eac:	1811883a 	mov	r8,r3
 2003eb0:	124ffc34 	orhi	r9,r2,16368
 2003eb4:	25bf0044 	addi	r22,r4,-1023
 2003eb8:	d8000815 	stw	zero,32(sp)
 2003ebc:	0005883a 	mov	r2,zero
 2003ec0:	00cffe34 	movhi	r3,16376
 2003ec4:	480b883a 	mov	r5,r9
 2003ec8:	4009883a 	mov	r4,r8
 2003ecc:	180f883a 	mov	r7,r3
 2003ed0:	100d883a 	mov	r6,r2
 2003ed4:	200d5440 	call	200d544 <__subdf3>
 2003ed8:	0218dbf4 	movhi	r8,25455
 2003edc:	4210d844 	addi	r8,r8,17249
 2003ee0:	024ff4f4 	movhi	r9,16339
 2003ee4:	4a61e9c4 	addi	r9,r9,-30809
 2003ee8:	480f883a 	mov	r7,r9
 2003eec:	400d883a 	mov	r6,r8
 2003ef0:	180b883a 	mov	r5,r3
 2003ef4:	1009883a 	mov	r4,r2
 2003ef8:	200d6380 	call	200d638 <__muldf3>
 2003efc:	0222d874 	movhi	r8,35681
 2003f00:	42322cc4 	addi	r8,r8,-14157
 2003f04:	024ff1f4 	movhi	r9,16327
 2003f08:	4a628a04 	addi	r9,r9,-30168
 2003f0c:	480f883a 	mov	r7,r9
 2003f10:	400d883a 	mov	r6,r8
 2003f14:	180b883a 	mov	r5,r3
 2003f18:	1009883a 	mov	r4,r2
 2003f1c:	200d5c40 	call	200d5c4 <__adddf3>
 2003f20:	b009883a 	mov	r4,r22
 2003f24:	1021883a 	mov	r16,r2
 2003f28:	1823883a 	mov	r17,r3
 2003f2c:	200df840 	call	200df84 <__floatsidf>
 2003f30:	021427f4 	movhi	r8,20639
 2003f34:	421e7ec4 	addi	r8,r8,31227
 2003f38:	024ff4f4 	movhi	r9,16339
 2003f3c:	4a5104c4 	addi	r9,r9,17427
 2003f40:	480f883a 	mov	r7,r9
 2003f44:	400d883a 	mov	r6,r8
 2003f48:	180b883a 	mov	r5,r3
 2003f4c:	1009883a 	mov	r4,r2
 2003f50:	200d6380 	call	200d638 <__muldf3>
 2003f54:	180f883a 	mov	r7,r3
 2003f58:	880b883a 	mov	r5,r17
 2003f5c:	100d883a 	mov	r6,r2
 2003f60:	8009883a 	mov	r4,r16
 2003f64:	200d5c40 	call	200d5c4 <__adddf3>
 2003f68:	1009883a 	mov	r4,r2
 2003f6c:	180b883a 	mov	r5,r3
 2003f70:	1021883a 	mov	r16,r2
 2003f74:	1823883a 	mov	r17,r3
 2003f78:	200e07c0 	call	200e07c <__fixdfsi>
 2003f7c:	000d883a 	mov	r6,zero
 2003f80:	000f883a 	mov	r7,zero
 2003f84:	8009883a 	mov	r4,r16
 2003f88:	880b883a 	mov	r5,r17
 2003f8c:	d8800d15 	stw	r2,52(sp)
 2003f90:	200de740 	call	200de74 <__ltdf2>
 2003f94:	10031716 	blt	r2,zero,2004bf4 <_dtoa_r+0xe8c>
 2003f98:	d8c00d17 	ldw	r3,52(sp)
 2003f9c:	00800584 	movi	r2,22
 2003fa0:	10c1482e 	bgeu	r2,r3,20044c4 <_dtoa_r+0x75c>
 2003fa4:	01000044 	movi	r4,1
 2003fa8:	d9000c15 	stw	r4,48(sp)
 2003fac:	bd85c83a 	sub	r2,r23,r22
 2003fb0:	11bfffc4 	addi	r6,r2,-1
 2003fb4:	30030b16 	blt	r6,zero,2004be4 <_dtoa_r+0xe7c>
 2003fb8:	d9800a15 	stw	r6,40(sp)
 2003fbc:	d8001115 	stw	zero,68(sp)
 2003fc0:	d8c00d17 	ldw	r3,52(sp)
 2003fc4:	1802ff16 	blt	r3,zero,2004bc4 <_dtoa_r+0xe5c>
 2003fc8:	d9000a17 	ldw	r4,40(sp)
 2003fcc:	d8c00915 	stw	r3,36(sp)
 2003fd0:	d8001015 	stw	zero,64(sp)
 2003fd4:	20c9883a 	add	r4,r4,r3
 2003fd8:	d9000a15 	stw	r4,40(sp)
 2003fdc:	d9001717 	ldw	r4,92(sp)
 2003fe0:	00800244 	movi	r2,9
 2003fe4:	11004636 	bltu	r2,r4,2004100 <_dtoa_r+0x398>
 2003fe8:	00800144 	movi	r2,5
 2003fec:	11020416 	blt	r2,r4,2004800 <_dtoa_r+0xa98>
 2003ff0:	04400044 	movi	r17,1
 2003ff4:	d8c01717 	ldw	r3,92(sp)
 2003ff8:	00800144 	movi	r2,5
 2003ffc:	10c1ed36 	bltu	r2,r3,20047b4 <_dtoa_r+0xa4c>
 2004000:	18c5883a 	add	r2,r3,r3
 2004004:	1085883a 	add	r2,r2,r2
 2004008:	00c08034 	movhi	r3,512
 200400c:	18d00704 	addi	r3,r3,16412
 2004010:	10c5883a 	add	r2,r2,r3
 2004014:	11000017 	ldw	r4,0(r2)
 2004018:	2000683a 	jmp	r4
 200401c:	02004108 	cmpgei	r8,zero,260
 2004020:	02004108 	cmpgei	r8,zero,260
 2004024:	02004b08 	cmpgei	r8,zero,300
 2004028:	02004ae0 	cmpeqi	r8,zero,299
 200402c:	02004b24 	muli	r8,zero,300
 2004030:	02004b30 	cmpltui	r8,zero,300
 2004034:	d9002717 	ldw	r4,156(sp)
 2004038:	0089c3c4 	movi	r2,9999
 200403c:	20800015 	stw	r2,0(r4)
 2004040:	a0001026 	beq	r20,zero,2004084 <_dtoa_r+0x31c>
 2004044:	00c08074 	movhi	r3,513
 2004048:	18c62d04 	addi	r3,r3,6324
 200404c:	d9802917 	ldw	r6,164(sp)
 2004050:	303f7926 	beq	r6,zero,2003e38 <_dtoa_r+0xd0>
 2004054:	188000c7 	ldb	r2,3(r3)
 2004058:	190000c4 	addi	r4,r3,3
 200405c:	1000101e 	bne	r2,zero,20040a0 <_dtoa_r+0x338>
 2004060:	d8802917 	ldw	r2,164(sp)
 2004064:	11000015 	stw	r4,0(r2)
 2004068:	003f7306 	br	2003e38 <_dtoa_r+0xd0>
 200406c:	00a00034 	movhi	r2,32768
 2004070:	10bfffc4 	addi	r2,r2,-1
 2004074:	00c00044 	movi	r3,1
 2004078:	88aa703a 	and	r21,r17,r2
 200407c:	90c00015 	stw	r3,0(r18)
 2004080:	003f5806 	br	2003de4 <_dtoa_r+0x7c>
 2004084:	00800434 	movhi	r2,16
 2004088:	10bfffc4 	addi	r2,r2,-1
 200408c:	a884703a 	and	r2,r21,r2
 2004090:	103fec1e 	bne	r2,zero,2004044 <_dtoa_r+0x2dc>
 2004094:	00c08074 	movhi	r3,513
 2004098:	18c62a04 	addi	r3,r3,6312
 200409c:	003feb06 	br	200404c <_dtoa_r+0x2e4>
 20040a0:	d8802917 	ldw	r2,164(sp)
 20040a4:	19000204 	addi	r4,r3,8
 20040a8:	11000015 	stw	r4,0(r2)
 20040ac:	003f6206 	br	2003e38 <_dtoa_r+0xd0>
 20040b0:	ddc00117 	ldw	r23,4(sp)
 20040b4:	d8800217 	ldw	r2,8(sp)
 20040b8:	01000804 	movi	r4,32
 20040bc:	b8c10c84 	addi	r3,r23,1074
 20040c0:	18a3883a 	add	r17,r3,r2
 20040c4:	2441b80e 	bge	r4,r17,20047a8 <_dtoa_r+0xa40>
 20040c8:	00c01004 	movi	r3,64
 20040cc:	1c47c83a 	sub	r3,r3,r17
 20040d0:	88bff804 	addi	r2,r17,-32
 20040d4:	a8c6983a 	sll	r3,r21,r3
 20040d8:	a084d83a 	srl	r2,r20,r2
 20040dc:	1888b03a 	or	r4,r3,r2
 20040e0:	200e1c80 	call	200e1c8 <__floatunsidf>
 20040e4:	1011883a 	mov	r8,r2
 20040e8:	00bf8434 	movhi	r2,65040
 20040ec:	01000044 	movi	r4,1
 20040f0:	10d3883a 	add	r9,r2,r3
 20040f4:	8dbef344 	addi	r22,r17,-1075
 20040f8:	d9000815 	stw	r4,32(sp)
 20040fc:	003f6f06 	br	2003ebc <_dtoa_r+0x154>
 2004100:	d8001715 	stw	zero,92(sp)
 2004104:	04400044 	movi	r17,1
 2004108:	00bfffc4 	movi	r2,-1
 200410c:	00c00044 	movi	r3,1
 2004110:	d8800e15 	stw	r2,56(sp)
 2004114:	d8002615 	stw	zero,152(sp)
 2004118:	d8800f15 	stw	r2,60(sp)
 200411c:	d8c00b15 	stw	r3,44(sp)
 2004120:	1021883a 	mov	r16,r2
 2004124:	d8801617 	ldw	r2,88(sp)
 2004128:	10001115 	stw	zero,68(r2)
 200412c:	d8801617 	ldw	r2,88(sp)
 2004130:	11401117 	ldw	r5,68(r2)
 2004134:	1009883a 	mov	r4,r2
 2004138:	20077e40 	call	20077e4 <_Balloc>
 200413c:	d8c01617 	ldw	r3,88(sp)
 2004140:	d8800515 	stw	r2,20(sp)
 2004144:	18801015 	stw	r2,64(r3)
 2004148:	00800384 	movi	r2,14
 200414c:	14006836 	bltu	r2,r16,20042f0 <_dtoa_r+0x588>
 2004150:	8805003a 	cmpeq	r2,r17,zero
 2004154:	1000661e 	bne	r2,zero,20042f0 <_dtoa_r+0x588>
 2004158:	d9000d17 	ldw	r4,52(sp)
 200415c:	0102300e 	bge	zero,r4,2004a20 <_dtoa_r+0xcb8>
 2004160:	208003cc 	andi	r2,r4,15
 2004164:	100490fa 	slli	r2,r2,3
 2004168:	2025d13a 	srai	r18,r4,4
 200416c:	00c08074 	movhi	r3,513
 2004170:	18c63f04 	addi	r3,r3,6396
 2004174:	10c5883a 	add	r2,r2,r3
 2004178:	90c0040c 	andi	r3,r18,16
 200417c:	14000017 	ldw	r16,0(r2)
 2004180:	14400117 	ldw	r17,4(r2)
 2004184:	18036a1e 	bne	r3,zero,2004f30 <_dtoa_r+0x11c8>
 2004188:	05800084 	movi	r22,2
 200418c:	90001026 	beq	r18,zero,20041d0 <_dtoa_r+0x468>
 2004190:	04c08074 	movhi	r19,513
 2004194:	9cc67104 	addi	r19,r19,6596
 2004198:	9080004c 	andi	r2,r18,1
 200419c:	1005003a 	cmpeq	r2,r2,zero
 20041a0:	1000081e 	bne	r2,zero,20041c4 <_dtoa_r+0x45c>
 20041a4:	99800017 	ldw	r6,0(r19)
 20041a8:	99c00117 	ldw	r7,4(r19)
 20041ac:	880b883a 	mov	r5,r17
 20041b0:	8009883a 	mov	r4,r16
 20041b4:	200d6380 	call	200d638 <__muldf3>
 20041b8:	1021883a 	mov	r16,r2
 20041bc:	b5800044 	addi	r22,r22,1
 20041c0:	1823883a 	mov	r17,r3
 20041c4:	9025d07a 	srai	r18,r18,1
 20041c8:	9cc00204 	addi	r19,r19,8
 20041cc:	903ff21e 	bne	r18,zero,2004198 <_dtoa_r+0x430>
 20041d0:	a80b883a 	mov	r5,r21
 20041d4:	a009883a 	mov	r4,r20
 20041d8:	880f883a 	mov	r7,r17
 20041dc:	800d883a 	mov	r6,r16
 20041e0:	200d9fc0 	call	200d9fc <__divdf3>
 20041e4:	1029883a 	mov	r20,r2
 20041e8:	182b883a 	mov	r21,r3
 20041ec:	d8c00c17 	ldw	r3,48(sp)
 20041f0:	1805003a 	cmpeq	r2,r3,zero
 20041f4:	1000081e 	bne	r2,zero,2004218 <_dtoa_r+0x4b0>
 20041f8:	0005883a 	mov	r2,zero
 20041fc:	00cffc34 	movhi	r3,16368
 2004200:	180f883a 	mov	r7,r3
 2004204:	a009883a 	mov	r4,r20
 2004208:	a80b883a 	mov	r5,r21
 200420c:	100d883a 	mov	r6,r2
 2004210:	200de740 	call	200de74 <__ltdf2>
 2004214:	1003fe16 	blt	r2,zero,2005210 <_dtoa_r+0x14a8>
 2004218:	b009883a 	mov	r4,r22
 200421c:	200df840 	call	200df84 <__floatsidf>
 2004220:	180b883a 	mov	r5,r3
 2004224:	1009883a 	mov	r4,r2
 2004228:	a00d883a 	mov	r6,r20
 200422c:	a80f883a 	mov	r7,r21
 2004230:	200d6380 	call	200d638 <__muldf3>
 2004234:	0011883a 	mov	r8,zero
 2004238:	02500734 	movhi	r9,16412
 200423c:	1009883a 	mov	r4,r2
 2004240:	180b883a 	mov	r5,r3
 2004244:	480f883a 	mov	r7,r9
 2004248:	400d883a 	mov	r6,r8
 200424c:	200d5c40 	call	200d5c4 <__adddf3>
 2004250:	d9000f17 	ldw	r4,60(sp)
 2004254:	102d883a 	mov	r22,r2
 2004258:	00bf3034 	movhi	r2,64704
 200425c:	18b9883a 	add	fp,r3,r2
 2004260:	e02f883a 	mov	r23,fp
 2004264:	20028f1e 	bne	r4,zero,2004ca4 <_dtoa_r+0xf3c>
 2004268:	0005883a 	mov	r2,zero
 200426c:	00d00534 	movhi	r3,16404
 2004270:	a009883a 	mov	r4,r20
 2004274:	a80b883a 	mov	r5,r21
 2004278:	180f883a 	mov	r7,r3
 200427c:	100d883a 	mov	r6,r2
 2004280:	200d5440 	call	200d544 <__subdf3>
 2004284:	1009883a 	mov	r4,r2
 2004288:	e00f883a 	mov	r7,fp
 200428c:	180b883a 	mov	r5,r3
 2004290:	b00d883a 	mov	r6,r22
 2004294:	1025883a 	mov	r18,r2
 2004298:	1827883a 	mov	r19,r3
 200429c:	200dd640 	call	200dd64 <__gtdf2>
 20042a0:	00834f16 	blt	zero,r2,2004fe0 <_dtoa_r+0x1278>
 20042a4:	e0e0003c 	xorhi	r3,fp,32768
 20042a8:	9009883a 	mov	r4,r18
 20042ac:	980b883a 	mov	r5,r19
 20042b0:	180f883a 	mov	r7,r3
 20042b4:	b00d883a 	mov	r6,r22
 20042b8:	200de740 	call	200de74 <__ltdf2>
 20042bc:	1000080e 	bge	r2,zero,20042e0 <_dtoa_r+0x578>
 20042c0:	0027883a 	mov	r19,zero
 20042c4:	0025883a 	mov	r18,zero
 20042c8:	d8802617 	ldw	r2,152(sp)
 20042cc:	df000517 	ldw	fp,20(sp)
 20042d0:	d8000615 	stw	zero,24(sp)
 20042d4:	0084303a 	nor	r2,zero,r2
 20042d8:	d8800d15 	stw	r2,52(sp)
 20042dc:	00019b06 	br	200494c <_dtoa_r+0xbe4>
 20042e0:	d9801217 	ldw	r6,72(sp)
 20042e4:	d8801317 	ldw	r2,76(sp)
 20042e8:	3029883a 	mov	r20,r6
 20042ec:	102b883a 	mov	r21,r2
 20042f0:	d8c00217 	ldw	r3,8(sp)
 20042f4:	18008516 	blt	r3,zero,200450c <_dtoa_r+0x7a4>
 20042f8:	d9000d17 	ldw	r4,52(sp)
 20042fc:	00800384 	movi	r2,14
 2004300:	11008216 	blt	r2,r4,200450c <_dtoa_r+0x7a4>
 2004304:	200490fa 	slli	r2,r4,3
 2004308:	d9802617 	ldw	r6,152(sp)
 200430c:	00c08074 	movhi	r3,513
 2004310:	18c63f04 	addi	r3,r3,6396
 2004314:	10c5883a 	add	r2,r2,r3
 2004318:	14800017 	ldw	r18,0(r2)
 200431c:	14c00117 	ldw	r19,4(r2)
 2004320:	30031e16 	blt	r6,zero,2004f9c <_dtoa_r+0x1234>
 2004324:	d9000517 	ldw	r4,20(sp)
 2004328:	d8c00f17 	ldw	r3,60(sp)
 200432c:	a823883a 	mov	r17,r21
 2004330:	a021883a 	mov	r16,r20
 2004334:	192b883a 	add	r21,r3,r4
 2004338:	2039883a 	mov	fp,r4
 200433c:	00000f06 	br	200437c <_dtoa_r+0x614>
 2004340:	0005883a 	mov	r2,zero
 2004344:	00d00934 	movhi	r3,16420
 2004348:	5009883a 	mov	r4,r10
 200434c:	580b883a 	mov	r5,r11
 2004350:	180f883a 	mov	r7,r3
 2004354:	100d883a 	mov	r6,r2
 2004358:	200d6380 	call	200d638 <__muldf3>
 200435c:	180b883a 	mov	r5,r3
 2004360:	000d883a 	mov	r6,zero
 2004364:	000f883a 	mov	r7,zero
 2004368:	1009883a 	mov	r4,r2
 200436c:	1021883a 	mov	r16,r2
 2004370:	1823883a 	mov	r17,r3
 2004374:	200dcdc0 	call	200dcdc <__nedf2>
 2004378:	10004526 	beq	r2,zero,2004490 <_dtoa_r+0x728>
 200437c:	900d883a 	mov	r6,r18
 2004380:	980f883a 	mov	r7,r19
 2004384:	8009883a 	mov	r4,r16
 2004388:	880b883a 	mov	r5,r17
 200438c:	200d9fc0 	call	200d9fc <__divdf3>
 2004390:	180b883a 	mov	r5,r3
 2004394:	1009883a 	mov	r4,r2
 2004398:	200e07c0 	call	200e07c <__fixdfsi>
 200439c:	1009883a 	mov	r4,r2
 20043a0:	1029883a 	mov	r20,r2
 20043a4:	200df840 	call	200df84 <__floatsidf>
 20043a8:	180f883a 	mov	r7,r3
 20043ac:	9009883a 	mov	r4,r18
 20043b0:	980b883a 	mov	r5,r19
 20043b4:	100d883a 	mov	r6,r2
 20043b8:	200d6380 	call	200d638 <__muldf3>
 20043bc:	180f883a 	mov	r7,r3
 20043c0:	880b883a 	mov	r5,r17
 20043c4:	8009883a 	mov	r4,r16
 20043c8:	100d883a 	mov	r6,r2
 20043cc:	200d5440 	call	200d544 <__subdf3>
 20043d0:	1015883a 	mov	r10,r2
 20043d4:	a0800c04 	addi	r2,r20,48
 20043d8:	e0800005 	stb	r2,0(fp)
 20043dc:	e7000044 	addi	fp,fp,1
 20043e0:	1817883a 	mov	r11,r3
 20043e4:	e57fd61e 	bne	fp,r21,2004340 <_dtoa_r+0x5d8>
 20043e8:	500d883a 	mov	r6,r10
 20043ec:	180f883a 	mov	r7,r3
 20043f0:	5009883a 	mov	r4,r10
 20043f4:	180b883a 	mov	r5,r3
 20043f8:	200d5c40 	call	200d5c4 <__adddf3>
 20043fc:	100d883a 	mov	r6,r2
 2004400:	9009883a 	mov	r4,r18
 2004404:	980b883a 	mov	r5,r19
 2004408:	180f883a 	mov	r7,r3
 200440c:	1021883a 	mov	r16,r2
 2004410:	1823883a 	mov	r17,r3
 2004414:	200de740 	call	200de74 <__ltdf2>
 2004418:	10000816 	blt	r2,zero,200443c <_dtoa_r+0x6d4>
 200441c:	980b883a 	mov	r5,r19
 2004420:	800d883a 	mov	r6,r16
 2004424:	880f883a 	mov	r7,r17
 2004428:	9009883a 	mov	r4,r18
 200442c:	200dc540 	call	200dc54 <__eqdf2>
 2004430:	1000171e 	bne	r2,zero,2004490 <_dtoa_r+0x728>
 2004434:	a080004c 	andi	r2,r20,1
 2004438:	10001526 	beq	r2,zero,2004490 <_dtoa_r+0x728>
 200443c:	d8800d17 	ldw	r2,52(sp)
 2004440:	d8800415 	stw	r2,16(sp)
 2004444:	e009883a 	mov	r4,fp
 2004448:	213fffc4 	addi	r4,r4,-1
 200444c:	20c00007 	ldb	r3,0(r4)
 2004450:	00800e44 	movi	r2,57
 2004454:	1880081e 	bne	r3,r2,2004478 <_dtoa_r+0x710>
 2004458:	d8800517 	ldw	r2,20(sp)
 200445c:	113ffa1e 	bne	r2,r4,2004448 <_dtoa_r+0x6e0>
 2004460:	d8c00417 	ldw	r3,16(sp)
 2004464:	d9800517 	ldw	r6,20(sp)
 2004468:	00800c04 	movi	r2,48
 200446c:	18c00044 	addi	r3,r3,1
 2004470:	d8c00415 	stw	r3,16(sp)
 2004474:	30800005 	stb	r2,0(r6)
 2004478:	20800003 	ldbu	r2,0(r4)
 200447c:	d8c00417 	ldw	r3,16(sp)
 2004480:	27000044 	addi	fp,r4,1
 2004484:	10800044 	addi	r2,r2,1
 2004488:	d8c00d15 	stw	r3,52(sp)
 200448c:	20800005 	stb	r2,0(r4)
 2004490:	d9001617 	ldw	r4,88(sp)
 2004494:	d9400717 	ldw	r5,28(sp)
 2004498:	20072640 	call	2007264 <_Bfree>
 200449c:	e0000005 	stb	zero,0(fp)
 20044a0:	d9800d17 	ldw	r6,52(sp)
 20044a4:	d8c02717 	ldw	r3,156(sp)
 20044a8:	d9002917 	ldw	r4,164(sp)
 20044ac:	30800044 	addi	r2,r6,1
 20044b0:	18800015 	stw	r2,0(r3)
 20044b4:	20029c26 	beq	r4,zero,2004f28 <_dtoa_r+0x11c0>
 20044b8:	d8c00517 	ldw	r3,20(sp)
 20044bc:	27000015 	stw	fp,0(r4)
 20044c0:	003e5d06 	br	2003e38 <_dtoa_r+0xd0>
 20044c4:	d9800d17 	ldw	r6,52(sp)
 20044c8:	00c08074 	movhi	r3,513
 20044cc:	18c63f04 	addi	r3,r3,6396
 20044d0:	d9001217 	ldw	r4,72(sp)
 20044d4:	300490fa 	slli	r2,r6,3
 20044d8:	d9401317 	ldw	r5,76(sp)
 20044dc:	10c5883a 	add	r2,r2,r3
 20044e0:	12000017 	ldw	r8,0(r2)
 20044e4:	12400117 	ldw	r9,4(r2)
 20044e8:	400d883a 	mov	r6,r8
 20044ec:	480f883a 	mov	r7,r9
 20044f0:	200de740 	call	200de74 <__ltdf2>
 20044f4:	1000030e 	bge	r2,zero,2004504 <_dtoa_r+0x79c>
 20044f8:	d8800d17 	ldw	r2,52(sp)
 20044fc:	10bfffc4 	addi	r2,r2,-1
 2004500:	d8800d15 	stw	r2,52(sp)
 2004504:	d8000c15 	stw	zero,48(sp)
 2004508:	003ea806 	br	2003fac <_dtoa_r+0x244>
 200450c:	d9000b17 	ldw	r4,44(sp)
 2004510:	202cc03a 	cmpne	r22,r4,zero
 2004514:	b000c71e 	bne	r22,zero,2004834 <_dtoa_r+0xacc>
 2004518:	dc001117 	ldw	r16,68(sp)
 200451c:	dc801017 	ldw	r18,64(sp)
 2004520:	0027883a 	mov	r19,zero
 2004524:	04000b0e 	bge	zero,r16,2004554 <_dtoa_r+0x7ec>
 2004528:	d8c00a17 	ldw	r3,40(sp)
 200452c:	00c0090e 	bge	zero,r3,2004554 <_dtoa_r+0x7ec>
 2004530:	8005883a 	mov	r2,r16
 2004534:	1c011316 	blt	r3,r16,2004984 <_dtoa_r+0xc1c>
 2004538:	d9000a17 	ldw	r4,40(sp)
 200453c:	d9801117 	ldw	r6,68(sp)
 2004540:	80a1c83a 	sub	r16,r16,r2
 2004544:	2089c83a 	sub	r4,r4,r2
 2004548:	308dc83a 	sub	r6,r6,r2
 200454c:	d9000a15 	stw	r4,40(sp)
 2004550:	d9801115 	stw	r6,68(sp)
 2004554:	d8801017 	ldw	r2,64(sp)
 2004558:	0080150e 	bge	zero,r2,20045b0 <_dtoa_r+0x848>
 200455c:	d8c00b17 	ldw	r3,44(sp)
 2004560:	1805003a 	cmpeq	r2,r3,zero
 2004564:	1001c91e 	bne	r2,zero,2004c8c <_dtoa_r+0xf24>
 2004568:	04800e0e 	bge	zero,r18,20045a4 <_dtoa_r+0x83c>
 200456c:	d9001617 	ldw	r4,88(sp)
 2004570:	980b883a 	mov	r5,r19
 2004574:	900d883a 	mov	r6,r18
 2004578:	20080180 	call	2008018 <__pow5mult>
 200457c:	d9001617 	ldw	r4,88(sp)
 2004580:	d9800717 	ldw	r6,28(sp)
 2004584:	100b883a 	mov	r5,r2
 2004588:	1027883a 	mov	r19,r2
 200458c:	2007cf40 	call	2007cf4 <__multiply>
 2004590:	d9001617 	ldw	r4,88(sp)
 2004594:	d9400717 	ldw	r5,28(sp)
 2004598:	1023883a 	mov	r17,r2
 200459c:	20072640 	call	2007264 <_Bfree>
 20045a0:	dc400715 	stw	r17,28(sp)
 20045a4:	d9001017 	ldw	r4,64(sp)
 20045a8:	248dc83a 	sub	r6,r4,r18
 20045ac:	30010e1e 	bne	r6,zero,20049e8 <_dtoa_r+0xc80>
 20045b0:	d9001617 	ldw	r4,88(sp)
 20045b4:	04400044 	movi	r17,1
 20045b8:	880b883a 	mov	r5,r17
 20045bc:	2007edc0 	call	2007edc <__i2b>
 20045c0:	d9800917 	ldw	r6,36(sp)
 20045c4:	1025883a 	mov	r18,r2
 20045c8:	0180040e 	bge	zero,r6,20045dc <_dtoa_r+0x874>
 20045cc:	d9001617 	ldw	r4,88(sp)
 20045d0:	100b883a 	mov	r5,r2
 20045d4:	20080180 	call	2008018 <__pow5mult>
 20045d8:	1025883a 	mov	r18,r2
 20045dc:	d8801717 	ldw	r2,92(sp)
 20045e0:	8880f30e 	bge	r17,r2,20049b0 <_dtoa_r+0xc48>
 20045e4:	0023883a 	mov	r17,zero
 20045e8:	d9800917 	ldw	r6,36(sp)
 20045ec:	30019e1e 	bne	r6,zero,2004c68 <_dtoa_r+0xf00>
 20045f0:	00c00044 	movi	r3,1
 20045f4:	d9000a17 	ldw	r4,40(sp)
 20045f8:	20c5883a 	add	r2,r4,r3
 20045fc:	10c007cc 	andi	r3,r2,31
 2004600:	1800841e 	bne	r3,zero,2004814 <_dtoa_r+0xaac>
 2004604:	00800704 	movi	r2,28
 2004608:	d9000a17 	ldw	r4,40(sp)
 200460c:	d9801117 	ldw	r6,68(sp)
 2004610:	80a1883a 	add	r16,r16,r2
 2004614:	2089883a 	add	r4,r4,r2
 2004618:	308d883a 	add	r6,r6,r2
 200461c:	d9000a15 	stw	r4,40(sp)
 2004620:	d9801115 	stw	r6,68(sp)
 2004624:	d8801117 	ldw	r2,68(sp)
 2004628:	0080050e 	bge	zero,r2,2004640 <_dtoa_r+0x8d8>
 200462c:	d9400717 	ldw	r5,28(sp)
 2004630:	d9001617 	ldw	r4,88(sp)
 2004634:	100d883a 	mov	r6,r2
 2004638:	2007ba80 	call	2007ba8 <__lshift>
 200463c:	d8800715 	stw	r2,28(sp)
 2004640:	d8c00a17 	ldw	r3,40(sp)
 2004644:	00c0050e 	bge	zero,r3,200465c <_dtoa_r+0x8f4>
 2004648:	d9001617 	ldw	r4,88(sp)
 200464c:	900b883a 	mov	r5,r18
 2004650:	180d883a 	mov	r6,r3
 2004654:	2007ba80 	call	2007ba8 <__lshift>
 2004658:	1025883a 	mov	r18,r2
 200465c:	d9000c17 	ldw	r4,48(sp)
 2004660:	2005003a 	cmpeq	r2,r4,zero
 2004664:	10016f26 	beq	r2,zero,2004c24 <_dtoa_r+0xebc>
 2004668:	d9000f17 	ldw	r4,60(sp)
 200466c:	0102170e 	bge	zero,r4,2004ecc <_dtoa_r+0x1164>
 2004670:	d9800b17 	ldw	r6,44(sp)
 2004674:	3005003a 	cmpeq	r2,r6,zero
 2004678:	1000881e 	bne	r2,zero,200489c <_dtoa_r+0xb34>
 200467c:	0400050e 	bge	zero,r16,2004694 <_dtoa_r+0x92c>
 2004680:	d9001617 	ldw	r4,88(sp)
 2004684:	980b883a 	mov	r5,r19
 2004688:	800d883a 	mov	r6,r16
 200468c:	2007ba80 	call	2007ba8 <__lshift>
 2004690:	1027883a 	mov	r19,r2
 2004694:	8804c03a 	cmpne	r2,r17,zero
 2004698:	1002541e 	bne	r2,zero,2004fec <_dtoa_r+0x1284>
 200469c:	980b883a 	mov	r5,r19
 20046a0:	dd800517 	ldw	r22,20(sp)
 20046a4:	dcc00615 	stw	r19,24(sp)
 20046a8:	a700004c 	andi	fp,r20,1
 20046ac:	2827883a 	mov	r19,r5
 20046b0:	d9000717 	ldw	r4,28(sp)
 20046b4:	900b883a 	mov	r5,r18
 20046b8:	2003b500 	call	2003b50 <quorem>
 20046bc:	d9000717 	ldw	r4,28(sp)
 20046c0:	d9400617 	ldw	r5,24(sp)
 20046c4:	1023883a 	mov	r17,r2
 20046c8:	8dc00c04 	addi	r23,r17,48
 20046cc:	20073c00 	call	20073c0 <__mcmp>
 20046d0:	d9001617 	ldw	r4,88(sp)
 20046d4:	900b883a 	mov	r5,r18
 20046d8:	980d883a 	mov	r6,r19
 20046dc:	1029883a 	mov	r20,r2
 20046e0:	2007a1c0 	call	2007a1c <__mdiff>
 20046e4:	102b883a 	mov	r21,r2
 20046e8:	10800317 	ldw	r2,12(r2)
 20046ec:	1001281e 	bne	r2,zero,2004b90 <_dtoa_r+0xe28>
 20046f0:	d9000717 	ldw	r4,28(sp)
 20046f4:	a80b883a 	mov	r5,r21
 20046f8:	20073c00 	call	20073c0 <__mcmp>
 20046fc:	d9001617 	ldw	r4,88(sp)
 2004700:	1021883a 	mov	r16,r2
 2004704:	a80b883a 	mov	r5,r21
 2004708:	20072640 	call	2007264 <_Bfree>
 200470c:	8000041e 	bne	r16,zero,2004720 <_dtoa_r+0x9b8>
 2004710:	d8801717 	ldw	r2,92(sp)
 2004714:	1000021e 	bne	r2,zero,2004720 <_dtoa_r+0x9b8>
 2004718:	e004c03a 	cmpne	r2,fp,zero
 200471c:	10011726 	beq	r2,zero,2004b7c <_dtoa_r+0xe14>
 2004720:	a0010616 	blt	r20,zero,2004b3c <_dtoa_r+0xdd4>
 2004724:	a000041e 	bne	r20,zero,2004738 <_dtoa_r+0x9d0>
 2004728:	d8c01717 	ldw	r3,92(sp)
 200472c:	1800021e 	bne	r3,zero,2004738 <_dtoa_r+0x9d0>
 2004730:	e004c03a 	cmpne	r2,fp,zero
 2004734:	10010126 	beq	r2,zero,2004b3c <_dtoa_r+0xdd4>
 2004738:	04023d16 	blt	zero,r16,2005030 <_dtoa_r+0x12c8>
 200473c:	b5c00005 	stb	r23,0(r22)
 2004740:	d9800517 	ldw	r6,20(sp)
 2004744:	d9000f17 	ldw	r4,60(sp)
 2004748:	b5800044 	addi	r22,r22,1
 200474c:	3105883a 	add	r2,r6,r4
 2004750:	b0806526 	beq	r22,r2,20048e8 <_dtoa_r+0xb80>
 2004754:	d9400717 	ldw	r5,28(sp)
 2004758:	d9001617 	ldw	r4,88(sp)
 200475c:	01800284 	movi	r6,10
 2004760:	000f883a 	mov	r7,zero
 2004764:	2007f180 	call	2007f18 <__multadd>
 2004768:	d8800715 	stw	r2,28(sp)
 200476c:	d8800617 	ldw	r2,24(sp)
 2004770:	14c10c26 	beq	r2,r19,2004ba4 <_dtoa_r+0xe3c>
 2004774:	d9400617 	ldw	r5,24(sp)
 2004778:	d9001617 	ldw	r4,88(sp)
 200477c:	01800284 	movi	r6,10
 2004780:	000f883a 	mov	r7,zero
 2004784:	2007f180 	call	2007f18 <__multadd>
 2004788:	d9001617 	ldw	r4,88(sp)
 200478c:	980b883a 	mov	r5,r19
 2004790:	01800284 	movi	r6,10
 2004794:	000f883a 	mov	r7,zero
 2004798:	d8800615 	stw	r2,24(sp)
 200479c:	2007f180 	call	2007f18 <__multadd>
 20047a0:	1027883a 	mov	r19,r2
 20047a4:	003fc206 	br	20046b0 <_dtoa_r+0x948>
 20047a8:	2445c83a 	sub	r2,r4,r17
 20047ac:	a088983a 	sll	r4,r20,r2
 20047b0:	003e4b06 	br	20040e0 <_dtoa_r+0x378>
 20047b4:	01bfffc4 	movi	r6,-1
 20047b8:	00800044 	movi	r2,1
 20047bc:	d9800e15 	stw	r6,56(sp)
 20047c0:	d9800f15 	stw	r6,60(sp)
 20047c4:	d8800b15 	stw	r2,44(sp)
 20047c8:	d8c01617 	ldw	r3,88(sp)
 20047cc:	008005c4 	movi	r2,23
 20047d0:	18001115 	stw	zero,68(r3)
 20047d4:	1580082e 	bgeu	r2,r22,20047f8 <_dtoa_r+0xa90>
 20047d8:	00c00104 	movi	r3,4
 20047dc:	0009883a 	mov	r4,zero
 20047e0:	18c7883a 	add	r3,r3,r3
 20047e4:	18800504 	addi	r2,r3,20
 20047e8:	21000044 	addi	r4,r4,1
 20047ec:	b0bffc2e 	bgeu	r22,r2,20047e0 <_dtoa_r+0xa78>
 20047f0:	d9801617 	ldw	r6,88(sp)
 20047f4:	31001115 	stw	r4,68(r6)
 20047f8:	dc000f17 	ldw	r16,60(sp)
 20047fc:	003e4b06 	br	200412c <_dtoa_r+0x3c4>
 2004800:	d9801717 	ldw	r6,92(sp)
 2004804:	0023883a 	mov	r17,zero
 2004808:	31bfff04 	addi	r6,r6,-4
 200480c:	d9801715 	stw	r6,92(sp)
 2004810:	003df806 	br	2003ff4 <_dtoa_r+0x28c>
 2004814:	00800804 	movi	r2,32
 2004818:	10c9c83a 	sub	r4,r2,r3
 200481c:	00c00104 	movi	r3,4
 2004820:	19005a16 	blt	r3,r4,200498c <_dtoa_r+0xc24>
 2004824:	008000c4 	movi	r2,3
 2004828:	113f7e16 	blt	r2,r4,2004624 <_dtoa_r+0x8bc>
 200482c:	20800704 	addi	r2,r4,28
 2004830:	003f7506 	br	2004608 <_dtoa_r+0x8a0>
 2004834:	d9801717 	ldw	r6,92(sp)
 2004838:	00800044 	movi	r2,1
 200483c:	1180a10e 	bge	r2,r6,2004ac4 <_dtoa_r+0xd5c>
 2004840:	d9800f17 	ldw	r6,60(sp)
 2004844:	d8c01017 	ldw	r3,64(sp)
 2004848:	30bfffc4 	addi	r2,r6,-1
 200484c:	1881c616 	blt	r3,r2,2004f68 <_dtoa_r+0x1200>
 2004850:	18a5c83a 	sub	r18,r3,r2
 2004854:	d8800f17 	ldw	r2,60(sp)
 2004858:	10026216 	blt	r2,zero,20051e4 <_dtoa_r+0x147c>
 200485c:	dc001117 	ldw	r16,68(sp)
 2004860:	1007883a 	mov	r3,r2
 2004864:	d9800a17 	ldw	r6,40(sp)
 2004868:	d8801117 	ldw	r2,68(sp)
 200486c:	d9001617 	ldw	r4,88(sp)
 2004870:	30cd883a 	add	r6,r6,r3
 2004874:	10c5883a 	add	r2,r2,r3
 2004878:	01400044 	movi	r5,1
 200487c:	d9800a15 	stw	r6,40(sp)
 2004880:	d8801115 	stw	r2,68(sp)
 2004884:	2007edc0 	call	2007edc <__i2b>
 2004888:	1027883a 	mov	r19,r2
 200488c:	003f2506 	br	2004524 <_dtoa_r+0x7bc>
 2004890:	00c08074 	movhi	r3,513
 2004894:	18c57604 	addi	r3,r3,5592
 2004898:	003d6706 	br	2003e38 <_dtoa_r+0xd0>
 200489c:	dd800517 	ldw	r22,20(sp)
 20048a0:	04000044 	movi	r16,1
 20048a4:	00000706 	br	20048c4 <_dtoa_r+0xb5c>
 20048a8:	d9400717 	ldw	r5,28(sp)
 20048ac:	d9001617 	ldw	r4,88(sp)
 20048b0:	01800284 	movi	r6,10
 20048b4:	000f883a 	mov	r7,zero
 20048b8:	2007f180 	call	2007f18 <__multadd>
 20048bc:	d8800715 	stw	r2,28(sp)
 20048c0:	84000044 	addi	r16,r16,1
 20048c4:	d9000717 	ldw	r4,28(sp)
 20048c8:	900b883a 	mov	r5,r18
 20048cc:	2003b500 	call	2003b50 <quorem>
 20048d0:	15c00c04 	addi	r23,r2,48
 20048d4:	b5c00005 	stb	r23,0(r22)
 20048d8:	d8c00f17 	ldw	r3,60(sp)
 20048dc:	b5800044 	addi	r22,r22,1
 20048e0:	80fff116 	blt	r16,r3,20048a8 <_dtoa_r+0xb40>
 20048e4:	d8000615 	stw	zero,24(sp)
 20048e8:	d9400717 	ldw	r5,28(sp)
 20048ec:	d9001617 	ldw	r4,88(sp)
 20048f0:	01800044 	movi	r6,1
 20048f4:	2007ba80 	call	2007ba8 <__lshift>
 20048f8:	1009883a 	mov	r4,r2
 20048fc:	900b883a 	mov	r5,r18
 2004900:	d8800715 	stw	r2,28(sp)
 2004904:	20073c00 	call	20073c0 <__mcmp>
 2004908:	00803c0e 	bge	zero,r2,20049fc <_dtoa_r+0xc94>
 200490c:	b009883a 	mov	r4,r22
 2004910:	213fffc4 	addi	r4,r4,-1
 2004914:	21400003 	ldbu	r5,0(r4)
 2004918:	00800e44 	movi	r2,57
 200491c:	28c03fcc 	andi	r3,r5,255
 2004920:	18c0201c 	xori	r3,r3,128
 2004924:	18ffe004 	addi	r3,r3,-128
 2004928:	1881981e 	bne	r3,r2,2004f8c <_dtoa_r+0x1224>
 200492c:	d9800517 	ldw	r6,20(sp)
 2004930:	21bff71e 	bne	r4,r6,2004910 <_dtoa_r+0xba8>
 2004934:	d8800d17 	ldw	r2,52(sp)
 2004938:	37000044 	addi	fp,r6,1
 200493c:	10800044 	addi	r2,r2,1
 2004940:	d8800d15 	stw	r2,52(sp)
 2004944:	00800c44 	movi	r2,49
 2004948:	30800005 	stb	r2,0(r6)
 200494c:	d9001617 	ldw	r4,88(sp)
 2004950:	900b883a 	mov	r5,r18
 2004954:	20072640 	call	2007264 <_Bfree>
 2004958:	983ecd26 	beq	r19,zero,2004490 <_dtoa_r+0x728>
 200495c:	d8c00617 	ldw	r3,24(sp)
 2004960:	18000426 	beq	r3,zero,2004974 <_dtoa_r+0xc0c>
 2004964:	1cc00326 	beq	r3,r19,2004974 <_dtoa_r+0xc0c>
 2004968:	d9001617 	ldw	r4,88(sp)
 200496c:	180b883a 	mov	r5,r3
 2004970:	20072640 	call	2007264 <_Bfree>
 2004974:	d9001617 	ldw	r4,88(sp)
 2004978:	980b883a 	mov	r5,r19
 200497c:	20072640 	call	2007264 <_Bfree>
 2004980:	003ec306 	br	2004490 <_dtoa_r+0x728>
 2004984:	1805883a 	mov	r2,r3
 2004988:	003eeb06 	br	2004538 <_dtoa_r+0x7d0>
 200498c:	d9800a17 	ldw	r6,40(sp)
 2004990:	d8c01117 	ldw	r3,68(sp)
 2004994:	20bfff04 	addi	r2,r4,-4
 2004998:	308d883a 	add	r6,r6,r2
 200499c:	1887883a 	add	r3,r3,r2
 20049a0:	80a1883a 	add	r16,r16,r2
 20049a4:	d9800a15 	stw	r6,40(sp)
 20049a8:	d8c01115 	stw	r3,68(sp)
 20049ac:	003f1d06 	br	2004624 <_dtoa_r+0x8bc>
 20049b0:	a03f0c1e 	bne	r20,zero,20045e4 <_dtoa_r+0x87c>
 20049b4:	00800434 	movhi	r2,16
 20049b8:	10bfffc4 	addi	r2,r2,-1
 20049bc:	a884703a 	and	r2,r21,r2
 20049c0:	103f081e 	bne	r2,zero,20045e4 <_dtoa_r+0x87c>
 20049c4:	a89ffc2c 	andhi	r2,r21,32752
 20049c8:	103f0626 	beq	r2,zero,20045e4 <_dtoa_r+0x87c>
 20049cc:	d8c01117 	ldw	r3,68(sp)
 20049d0:	d9000a17 	ldw	r4,40(sp)
 20049d4:	18c00044 	addi	r3,r3,1
 20049d8:	21000044 	addi	r4,r4,1
 20049dc:	d8c01115 	stw	r3,68(sp)
 20049e0:	d9000a15 	stw	r4,40(sp)
 20049e4:	003f0006 	br	20045e8 <_dtoa_r+0x880>
 20049e8:	d9400717 	ldw	r5,28(sp)
 20049ec:	d9001617 	ldw	r4,88(sp)
 20049f0:	20080180 	call	2008018 <__pow5mult>
 20049f4:	d8800715 	stw	r2,28(sp)
 20049f8:	003eed06 	br	20045b0 <_dtoa_r+0x848>
 20049fc:	1000021e 	bne	r2,zero,2004a08 <_dtoa_r+0xca0>
 2004a00:	b880004c 	andi	r2,r23,1
 2004a04:	103fc11e 	bne	r2,zero,200490c <_dtoa_r+0xba4>
 2004a08:	b5bfffc4 	addi	r22,r22,-1
 2004a0c:	b0c00007 	ldb	r3,0(r22)
 2004a10:	00800c04 	movi	r2,48
 2004a14:	18bffc26 	beq	r3,r2,2004a08 <_dtoa_r+0xca0>
 2004a18:	b7000044 	addi	fp,r22,1
 2004a1c:	003fcb06 	br	200494c <_dtoa_r+0xbe4>
 2004a20:	d9800d17 	ldw	r6,52(sp)
 2004a24:	018fc83a 	sub	r7,zero,r6
 2004a28:	3801f726 	beq	r7,zero,2005208 <_dtoa_r+0x14a0>
 2004a2c:	398003cc 	andi	r6,r7,15
 2004a30:	300c90fa 	slli	r6,r6,3
 2004a34:	01408074 	movhi	r5,513
 2004a38:	29463f04 	addi	r5,r5,6396
 2004a3c:	d9001217 	ldw	r4,72(sp)
 2004a40:	314d883a 	add	r6,r6,r5
 2004a44:	30c00117 	ldw	r3,4(r6)
 2004a48:	30800017 	ldw	r2,0(r6)
 2004a4c:	d9401317 	ldw	r5,76(sp)
 2004a50:	3821d13a 	srai	r16,r7,4
 2004a54:	100d883a 	mov	r6,r2
 2004a58:	180f883a 	mov	r7,r3
 2004a5c:	200d6380 	call	200d638 <__muldf3>
 2004a60:	1011883a 	mov	r8,r2
 2004a64:	1813883a 	mov	r9,r3
 2004a68:	1029883a 	mov	r20,r2
 2004a6c:	182b883a 	mov	r21,r3
 2004a70:	8001e526 	beq	r16,zero,2005208 <_dtoa_r+0x14a0>
 2004a74:	05800084 	movi	r22,2
 2004a78:	04408074 	movhi	r17,513
 2004a7c:	8c467104 	addi	r17,r17,6596
 2004a80:	8080004c 	andi	r2,r16,1
 2004a84:	1005003a 	cmpeq	r2,r2,zero
 2004a88:	1000081e 	bne	r2,zero,2004aac <_dtoa_r+0xd44>
 2004a8c:	89800017 	ldw	r6,0(r17)
 2004a90:	89c00117 	ldw	r7,4(r17)
 2004a94:	480b883a 	mov	r5,r9
 2004a98:	4009883a 	mov	r4,r8
 2004a9c:	200d6380 	call	200d638 <__muldf3>
 2004aa0:	1011883a 	mov	r8,r2
 2004aa4:	b5800044 	addi	r22,r22,1
 2004aa8:	1813883a 	mov	r9,r3
 2004aac:	8021d07a 	srai	r16,r16,1
 2004ab0:	8c400204 	addi	r17,r17,8
 2004ab4:	803ff21e 	bne	r16,zero,2004a80 <_dtoa_r+0xd18>
 2004ab8:	4029883a 	mov	r20,r8
 2004abc:	482b883a 	mov	r21,r9
 2004ac0:	003dca06 	br	20041ec <_dtoa_r+0x484>
 2004ac4:	d9000817 	ldw	r4,32(sp)
 2004ac8:	2005003a 	cmpeq	r2,r4,zero
 2004acc:	1001f61e 	bne	r2,zero,20052a8 <_dtoa_r+0x1540>
 2004ad0:	dc001117 	ldw	r16,68(sp)
 2004ad4:	dc801017 	ldw	r18,64(sp)
 2004ad8:	18c10cc4 	addi	r3,r3,1075
 2004adc:	003f6106 	br	2004864 <_dtoa_r+0xafc>
 2004ae0:	d8000b15 	stw	zero,44(sp)
 2004ae4:	d9802617 	ldw	r6,152(sp)
 2004ae8:	d8c00d17 	ldw	r3,52(sp)
 2004aec:	30800044 	addi	r2,r6,1
 2004af0:	18ad883a 	add	r22,r3,r2
 2004af4:	b13fffc4 	addi	r4,r22,-1
 2004af8:	d9000e15 	stw	r4,56(sp)
 2004afc:	0581f60e 	bge	zero,r22,20052d8 <_dtoa_r+0x1570>
 2004b00:	dd800f15 	stw	r22,60(sp)
 2004b04:	003f3006 	br	20047c8 <_dtoa_r+0xa60>
 2004b08:	d8000b15 	stw	zero,44(sp)
 2004b0c:	d9002617 	ldw	r4,152(sp)
 2004b10:	0101eb0e 	bge	zero,r4,20052c0 <_dtoa_r+0x1558>
 2004b14:	202d883a 	mov	r22,r4
 2004b18:	d9000e15 	stw	r4,56(sp)
 2004b1c:	d9000f15 	stw	r4,60(sp)
 2004b20:	003f2906 	br	20047c8 <_dtoa_r+0xa60>
 2004b24:	01800044 	movi	r6,1
 2004b28:	d9800b15 	stw	r6,44(sp)
 2004b2c:	003ff706 	br	2004b0c <_dtoa_r+0xda4>
 2004b30:	01000044 	movi	r4,1
 2004b34:	d9000b15 	stw	r4,44(sp)
 2004b38:	003fea06 	br	2004ae4 <_dtoa_r+0xd7c>
 2004b3c:	04000c0e 	bge	zero,r16,2004b70 <_dtoa_r+0xe08>
 2004b40:	d9400717 	ldw	r5,28(sp)
 2004b44:	d9001617 	ldw	r4,88(sp)
 2004b48:	01800044 	movi	r6,1
 2004b4c:	2007ba80 	call	2007ba8 <__lshift>
 2004b50:	1009883a 	mov	r4,r2
 2004b54:	900b883a 	mov	r5,r18
 2004b58:	d8800715 	stw	r2,28(sp)
 2004b5c:	20073c00 	call	20073c0 <__mcmp>
 2004b60:	0081e00e 	bge	zero,r2,20052e4 <_dtoa_r+0x157c>
 2004b64:	bdc00044 	addi	r23,r23,1
 2004b68:	00800e84 	movi	r2,58
 2004b6c:	b881a226 	beq	r23,r2,20051f8 <_dtoa_r+0x1490>
 2004b70:	b7000044 	addi	fp,r22,1
 2004b74:	b5c00005 	stb	r23,0(r22)
 2004b78:	003f7406 	br	200494c <_dtoa_r+0xbe4>
 2004b7c:	00800e44 	movi	r2,57
 2004b80:	b8819d26 	beq	r23,r2,20051f8 <_dtoa_r+0x1490>
 2004b84:	053ffa0e 	bge	zero,r20,2004b70 <_dtoa_r+0xe08>
 2004b88:	8dc00c44 	addi	r23,r17,49
 2004b8c:	003ff806 	br	2004b70 <_dtoa_r+0xe08>
 2004b90:	d9001617 	ldw	r4,88(sp)
 2004b94:	a80b883a 	mov	r5,r21
 2004b98:	04000044 	movi	r16,1
 2004b9c:	20072640 	call	2007264 <_Bfree>
 2004ba0:	003edf06 	br	2004720 <_dtoa_r+0x9b8>
 2004ba4:	d9001617 	ldw	r4,88(sp)
 2004ba8:	980b883a 	mov	r5,r19
 2004bac:	01800284 	movi	r6,10
 2004bb0:	000f883a 	mov	r7,zero
 2004bb4:	2007f180 	call	2007f18 <__multadd>
 2004bb8:	1027883a 	mov	r19,r2
 2004bbc:	d8800615 	stw	r2,24(sp)
 2004bc0:	003ebb06 	br	20046b0 <_dtoa_r+0x948>
 2004bc4:	d9801117 	ldw	r6,68(sp)
 2004bc8:	d8800d17 	ldw	r2,52(sp)
 2004bcc:	d8000915 	stw	zero,36(sp)
 2004bd0:	308dc83a 	sub	r6,r6,r2
 2004bd4:	0087c83a 	sub	r3,zero,r2
 2004bd8:	d9801115 	stw	r6,68(sp)
 2004bdc:	d8c01015 	stw	r3,64(sp)
 2004be0:	003cfe06 	br	2003fdc <_dtoa_r+0x274>
 2004be4:	018dc83a 	sub	r6,zero,r6
 2004be8:	d9801115 	stw	r6,68(sp)
 2004bec:	d8000a15 	stw	zero,40(sp)
 2004bf0:	003cf306 	br	2003fc0 <_dtoa_r+0x258>
 2004bf4:	d9000d17 	ldw	r4,52(sp)
 2004bf8:	200df840 	call	200df84 <__floatsidf>
 2004bfc:	880b883a 	mov	r5,r17
 2004c00:	8009883a 	mov	r4,r16
 2004c04:	180f883a 	mov	r7,r3
 2004c08:	100d883a 	mov	r6,r2
 2004c0c:	200dcdc0 	call	200dcdc <__nedf2>
 2004c10:	103ce126 	beq	r2,zero,2003f98 <_dtoa_r+0x230>
 2004c14:	d9800d17 	ldw	r6,52(sp)
 2004c18:	31bfffc4 	addi	r6,r6,-1
 2004c1c:	d9800d15 	stw	r6,52(sp)
 2004c20:	003cdd06 	br	2003f98 <_dtoa_r+0x230>
 2004c24:	d9000717 	ldw	r4,28(sp)
 2004c28:	900b883a 	mov	r5,r18
 2004c2c:	20073c00 	call	20073c0 <__mcmp>
 2004c30:	103e8d0e 	bge	r2,zero,2004668 <_dtoa_r+0x900>
 2004c34:	d9400717 	ldw	r5,28(sp)
 2004c38:	d9001617 	ldw	r4,88(sp)
 2004c3c:	01800284 	movi	r6,10
 2004c40:	000f883a 	mov	r7,zero
 2004c44:	2007f180 	call	2007f18 <__multadd>
 2004c48:	d9800d17 	ldw	r6,52(sp)
 2004c4c:	d8800715 	stw	r2,28(sp)
 2004c50:	31bfffc4 	addi	r6,r6,-1
 2004c54:	d9800d15 	stw	r6,52(sp)
 2004c58:	b001a71e 	bne	r22,zero,20052f8 <_dtoa_r+0x1590>
 2004c5c:	d8800e17 	ldw	r2,56(sp)
 2004c60:	d8800f15 	stw	r2,60(sp)
 2004c64:	003e8006 	br	2004668 <_dtoa_r+0x900>
 2004c68:	90800417 	ldw	r2,16(r18)
 2004c6c:	1085883a 	add	r2,r2,r2
 2004c70:	1085883a 	add	r2,r2,r2
 2004c74:	1485883a 	add	r2,r2,r18
 2004c78:	11000417 	ldw	r4,16(r2)
 2004c7c:	200728c0 	call	200728c <__hi0bits>
 2004c80:	00c00804 	movi	r3,32
 2004c84:	1887c83a 	sub	r3,r3,r2
 2004c88:	003e5a06 	br	20045f4 <_dtoa_r+0x88c>
 2004c8c:	d9400717 	ldw	r5,28(sp)
 2004c90:	d9801017 	ldw	r6,64(sp)
 2004c94:	d9001617 	ldw	r4,88(sp)
 2004c98:	20080180 	call	2008018 <__pow5mult>
 2004c9c:	d8800715 	stw	r2,28(sp)
 2004ca0:	003e4306 	br	20045b0 <_dtoa_r+0x848>
 2004ca4:	d9800f17 	ldw	r6,60(sp)
 2004ca8:	d8800d17 	ldw	r2,52(sp)
 2004cac:	d9800315 	stw	r6,12(sp)
 2004cb0:	d8800415 	stw	r2,16(sp)
 2004cb4:	d8c00b17 	ldw	r3,44(sp)
 2004cb8:	1805003a 	cmpeq	r2,r3,zero
 2004cbc:	1000e21e 	bne	r2,zero,2005048 <_dtoa_r+0x12e0>
 2004cc0:	d9000317 	ldw	r4,12(sp)
 2004cc4:	0005883a 	mov	r2,zero
 2004cc8:	00cff834 	movhi	r3,16352
 2004ccc:	200c90fa 	slli	r6,r4,3
 2004cd0:	01008074 	movhi	r4,513
 2004cd4:	21063f04 	addi	r4,r4,6396
 2004cd8:	180b883a 	mov	r5,r3
 2004cdc:	310d883a 	add	r6,r6,r4
 2004ce0:	327fff17 	ldw	r9,-4(r6)
 2004ce4:	323ffe17 	ldw	r8,-8(r6)
 2004ce8:	1009883a 	mov	r4,r2
 2004cec:	480f883a 	mov	r7,r9
 2004cf0:	400d883a 	mov	r6,r8
 2004cf4:	200d9fc0 	call	200d9fc <__divdf3>
 2004cf8:	180b883a 	mov	r5,r3
 2004cfc:	b00d883a 	mov	r6,r22
 2004d00:	b80f883a 	mov	r7,r23
 2004d04:	1009883a 	mov	r4,r2
 2004d08:	200d5440 	call	200d544 <__subdf3>
 2004d0c:	a80b883a 	mov	r5,r21
 2004d10:	a009883a 	mov	r4,r20
 2004d14:	d8c01915 	stw	r3,100(sp)
 2004d18:	d8801815 	stw	r2,96(sp)
 2004d1c:	200e07c0 	call	200e07c <__fixdfsi>
 2004d20:	1009883a 	mov	r4,r2
 2004d24:	1027883a 	mov	r19,r2
 2004d28:	200df840 	call	200df84 <__floatsidf>
 2004d2c:	a80b883a 	mov	r5,r21
 2004d30:	a009883a 	mov	r4,r20
 2004d34:	180f883a 	mov	r7,r3
 2004d38:	100d883a 	mov	r6,r2
 2004d3c:	200d5440 	call	200d544 <__subdf3>
 2004d40:	d9801817 	ldw	r6,96(sp)
 2004d44:	1823883a 	mov	r17,r3
 2004d48:	d8801415 	stw	r2,80(sp)
 2004d4c:	302d883a 	mov	r22,r6
 2004d50:	d9800517 	ldw	r6,20(sp)
 2004d54:	9cc00c04 	addi	r19,r19,48
 2004d58:	dc401515 	stw	r17,84(sp)
 2004d5c:	d8c01917 	ldw	r3,100(sp)
 2004d60:	34c00005 	stb	r19,0(r6)
 2004d64:	d8800517 	ldw	r2,20(sp)
 2004d68:	d9401917 	ldw	r5,100(sp)
 2004d6c:	d9801417 	ldw	r6,80(sp)
 2004d70:	b009883a 	mov	r4,r22
 2004d74:	880f883a 	mov	r7,r17
 2004d78:	182f883a 	mov	r23,r3
 2004d7c:	17000044 	addi	fp,r2,1
 2004d80:	200dd640 	call	200dd64 <__gtdf2>
 2004d84:	00804e16 	blt	zero,r2,2004ec0 <_dtoa_r+0x1158>
 2004d88:	d9801417 	ldw	r6,80(sp)
 2004d8c:	0005883a 	mov	r2,zero
 2004d90:	00cffc34 	movhi	r3,16368
 2004d94:	180b883a 	mov	r5,r3
 2004d98:	880f883a 	mov	r7,r17
 2004d9c:	1009883a 	mov	r4,r2
 2004da0:	200d5440 	call	200d544 <__subdf3>
 2004da4:	d9401917 	ldw	r5,100(sp)
 2004da8:	180f883a 	mov	r7,r3
 2004dac:	b009883a 	mov	r4,r22
 2004db0:	100d883a 	mov	r6,r2
 2004db4:	200dd640 	call	200dd64 <__gtdf2>
 2004db8:	00bda216 	blt	zero,r2,2004444 <_dtoa_r+0x6dc>
 2004dbc:	d8c00317 	ldw	r3,12(sp)
 2004dc0:	00800044 	movi	r2,1
 2004dc4:	10c01216 	blt	r2,r3,2004e10 <_dtoa_r+0x10a8>
 2004dc8:	003d4506 	br	20042e0 <_dtoa_r+0x578>
 2004dcc:	d9801417 	ldw	r6,80(sp)
 2004dd0:	0005883a 	mov	r2,zero
 2004dd4:	00cffc34 	movhi	r3,16368
 2004dd8:	180b883a 	mov	r5,r3
 2004ddc:	880f883a 	mov	r7,r17
 2004de0:	1009883a 	mov	r4,r2
 2004de4:	200d5440 	call	200d544 <__subdf3>
 2004de8:	d9c01b17 	ldw	r7,108(sp)
 2004dec:	180b883a 	mov	r5,r3
 2004df0:	1009883a 	mov	r4,r2
 2004df4:	b00d883a 	mov	r6,r22
 2004df8:	200de740 	call	200de74 <__ltdf2>
 2004dfc:	103d9116 	blt	r2,zero,2004444 <_dtoa_r+0x6dc>
 2004e00:	d9800517 	ldw	r6,20(sp)
 2004e04:	d9000317 	ldw	r4,12(sp)
 2004e08:	3105883a 	add	r2,r6,r4
 2004e0c:	e0bd3426 	beq	fp,r2,20042e0 <_dtoa_r+0x578>
 2004e10:	04500934 	movhi	r17,16420
 2004e14:	0021883a 	mov	r16,zero
 2004e18:	b80b883a 	mov	r5,r23
 2004e1c:	b009883a 	mov	r4,r22
 2004e20:	800d883a 	mov	r6,r16
 2004e24:	880f883a 	mov	r7,r17
 2004e28:	200d6380 	call	200d638 <__muldf3>
 2004e2c:	d9401517 	ldw	r5,84(sp)
 2004e30:	d9001417 	ldw	r4,80(sp)
 2004e34:	880f883a 	mov	r7,r17
 2004e38:	000d883a 	mov	r6,zero
 2004e3c:	d8801a15 	stw	r2,104(sp)
 2004e40:	d8c01b15 	stw	r3,108(sp)
 2004e44:	200d6380 	call	200d638 <__muldf3>
 2004e48:	180b883a 	mov	r5,r3
 2004e4c:	1009883a 	mov	r4,r2
 2004e50:	1823883a 	mov	r17,r3
 2004e54:	1021883a 	mov	r16,r2
 2004e58:	200e07c0 	call	200e07c <__fixdfsi>
 2004e5c:	1009883a 	mov	r4,r2
 2004e60:	102b883a 	mov	r21,r2
 2004e64:	200df840 	call	200df84 <__floatsidf>
 2004e68:	880b883a 	mov	r5,r17
 2004e6c:	8009883a 	mov	r4,r16
 2004e70:	180f883a 	mov	r7,r3
 2004e74:	100d883a 	mov	r6,r2
 2004e78:	200d5440 	call	200d544 <__subdf3>
 2004e7c:	1021883a 	mov	r16,r2
 2004e80:	d9001b17 	ldw	r4,108(sp)
 2004e84:	1823883a 	mov	r17,r3
 2004e88:	dc001415 	stw	r16,80(sp)
 2004e8c:	ad400c04 	addi	r21,r21,48
 2004e90:	dc401515 	stw	r17,84(sp)
 2004e94:	d8801a17 	ldw	r2,104(sp)
 2004e98:	e5400005 	stb	r21,0(fp)
 2004e9c:	202f883a 	mov	r23,r4
 2004ea0:	d9c01b17 	ldw	r7,108(sp)
 2004ea4:	d9001417 	ldw	r4,80(sp)
 2004ea8:	880b883a 	mov	r5,r17
 2004eac:	100d883a 	mov	r6,r2
 2004eb0:	102d883a 	mov	r22,r2
 2004eb4:	e7000044 	addi	fp,fp,1
 2004eb8:	200de740 	call	200de74 <__ltdf2>
 2004ebc:	103fc30e 	bge	r2,zero,2004dcc <_dtoa_r+0x1064>
 2004ec0:	d9000417 	ldw	r4,16(sp)
 2004ec4:	d9000d15 	stw	r4,52(sp)
 2004ec8:	003d7106 	br	2004490 <_dtoa_r+0x728>
 2004ecc:	d9801717 	ldw	r6,92(sp)
 2004ed0:	00800084 	movi	r2,2
 2004ed4:	11bde60e 	bge	r2,r6,2004670 <_dtoa_r+0x908>
 2004ed8:	203cfb1e 	bne	r4,zero,20042c8 <_dtoa_r+0x560>
 2004edc:	d9001617 	ldw	r4,88(sp)
 2004ee0:	900b883a 	mov	r5,r18
 2004ee4:	01800144 	movi	r6,5
 2004ee8:	000f883a 	mov	r7,zero
 2004eec:	2007f180 	call	2007f18 <__multadd>
 2004ef0:	d9000717 	ldw	r4,28(sp)
 2004ef4:	100b883a 	mov	r5,r2
 2004ef8:	1025883a 	mov	r18,r2
 2004efc:	20073c00 	call	20073c0 <__mcmp>
 2004f00:	00bcf10e 	bge	zero,r2,20042c8 <_dtoa_r+0x560>
 2004f04:	d8c00d17 	ldw	r3,52(sp)
 2004f08:	d9000517 	ldw	r4,20(sp)
 2004f0c:	d8000615 	stw	zero,24(sp)
 2004f10:	18c00044 	addi	r3,r3,1
 2004f14:	d8c00d15 	stw	r3,52(sp)
 2004f18:	00800c44 	movi	r2,49
 2004f1c:	27000044 	addi	fp,r4,1
 2004f20:	20800005 	stb	r2,0(r4)
 2004f24:	003e8906 	br	200494c <_dtoa_r+0xbe4>
 2004f28:	d8c00517 	ldw	r3,20(sp)
 2004f2c:	003bc206 	br	2003e38 <_dtoa_r+0xd0>
 2004f30:	01808074 	movhi	r6,513
 2004f34:	31867104 	addi	r6,r6,6596
 2004f38:	30c00917 	ldw	r3,36(r6)
 2004f3c:	30800817 	ldw	r2,32(r6)
 2004f40:	d9001217 	ldw	r4,72(sp)
 2004f44:	d9401317 	ldw	r5,76(sp)
 2004f48:	180f883a 	mov	r7,r3
 2004f4c:	100d883a 	mov	r6,r2
 2004f50:	200d9fc0 	call	200d9fc <__divdf3>
 2004f54:	948003cc 	andi	r18,r18,15
 2004f58:	058000c4 	movi	r22,3
 2004f5c:	1029883a 	mov	r20,r2
 2004f60:	182b883a 	mov	r21,r3
 2004f64:	003c8906 	br	200418c <_dtoa_r+0x424>
 2004f68:	d9001017 	ldw	r4,64(sp)
 2004f6c:	d9800917 	ldw	r6,36(sp)
 2004f70:	0025883a 	mov	r18,zero
 2004f74:	1105c83a 	sub	r2,r2,r4
 2004f78:	2089883a 	add	r4,r4,r2
 2004f7c:	308d883a 	add	r6,r6,r2
 2004f80:	d9001015 	stw	r4,64(sp)
 2004f84:	d9800915 	stw	r6,36(sp)
 2004f88:	003e3206 	br	2004854 <_dtoa_r+0xaec>
 2004f8c:	28800044 	addi	r2,r5,1
 2004f90:	27000044 	addi	fp,r4,1
 2004f94:	20800005 	stb	r2,0(r4)
 2004f98:	003e6c06 	br	200494c <_dtoa_r+0xbe4>
 2004f9c:	d8800f17 	ldw	r2,60(sp)
 2004fa0:	00bce016 	blt	zero,r2,2004324 <_dtoa_r+0x5bc>
 2004fa4:	d9800f17 	ldw	r6,60(sp)
 2004fa8:	303cc51e 	bne	r6,zero,20042c0 <_dtoa_r+0x558>
 2004fac:	0005883a 	mov	r2,zero
 2004fb0:	00d00534 	movhi	r3,16404
 2004fb4:	980b883a 	mov	r5,r19
 2004fb8:	180f883a 	mov	r7,r3
 2004fbc:	9009883a 	mov	r4,r18
 2004fc0:	100d883a 	mov	r6,r2
 2004fc4:	200d6380 	call	200d638 <__muldf3>
 2004fc8:	180b883a 	mov	r5,r3
 2004fcc:	a80f883a 	mov	r7,r21
 2004fd0:	1009883a 	mov	r4,r2
 2004fd4:	a00d883a 	mov	r6,r20
 2004fd8:	200ddec0 	call	200ddec <__gedf2>
 2004fdc:	103cb80e 	bge	r2,zero,20042c0 <_dtoa_r+0x558>
 2004fe0:	0027883a 	mov	r19,zero
 2004fe4:	0025883a 	mov	r18,zero
 2004fe8:	003fc606 	br	2004f04 <_dtoa_r+0x119c>
 2004fec:	99400117 	ldw	r5,4(r19)
 2004ff0:	d9001617 	ldw	r4,88(sp)
 2004ff4:	20077e40 	call	20077e4 <_Balloc>
 2004ff8:	99800417 	ldw	r6,16(r19)
 2004ffc:	11000304 	addi	r4,r2,12
 2005000:	99400304 	addi	r5,r19,12
 2005004:	318d883a 	add	r6,r6,r6
 2005008:	318d883a 	add	r6,r6,r6
 200500c:	31800204 	addi	r6,r6,8
 2005010:	1023883a 	mov	r17,r2
 2005014:	200704c0 	call	200704c <memcpy>
 2005018:	d9001617 	ldw	r4,88(sp)
 200501c:	880b883a 	mov	r5,r17
 2005020:	01800044 	movi	r6,1
 2005024:	2007ba80 	call	2007ba8 <__lshift>
 2005028:	100b883a 	mov	r5,r2
 200502c:	003d9c06 	br	20046a0 <_dtoa_r+0x938>
 2005030:	00800e44 	movi	r2,57
 2005034:	b8807026 	beq	r23,r2,20051f8 <_dtoa_r+0x1490>
 2005038:	b8800044 	addi	r2,r23,1
 200503c:	b7000044 	addi	fp,r22,1
 2005040:	b0800005 	stb	r2,0(r22)
 2005044:	003e4106 	br	200494c <_dtoa_r+0xbe4>
 2005048:	d8800317 	ldw	r2,12(sp)
 200504c:	01808074 	movhi	r6,513
 2005050:	31863f04 	addi	r6,r6,6396
 2005054:	b009883a 	mov	r4,r22
 2005058:	100e90fa 	slli	r7,r2,3
 200505c:	b80b883a 	mov	r5,r23
 2005060:	398f883a 	add	r7,r7,r6
 2005064:	38bffe17 	ldw	r2,-8(r7)
 2005068:	d9800517 	ldw	r6,20(sp)
 200506c:	38ffff17 	ldw	r3,-4(r7)
 2005070:	37000044 	addi	fp,r6,1
 2005074:	180f883a 	mov	r7,r3
 2005078:	100d883a 	mov	r6,r2
 200507c:	200d6380 	call	200d638 <__muldf3>
 2005080:	a80b883a 	mov	r5,r21
 2005084:	a009883a 	mov	r4,r20
 2005088:	182f883a 	mov	r23,r3
 200508c:	102d883a 	mov	r22,r2
 2005090:	200e07c0 	call	200e07c <__fixdfsi>
 2005094:	1009883a 	mov	r4,r2
 2005098:	1027883a 	mov	r19,r2
 200509c:	200df840 	call	200df84 <__floatsidf>
 20050a0:	a80b883a 	mov	r5,r21
 20050a4:	a009883a 	mov	r4,r20
 20050a8:	180f883a 	mov	r7,r3
 20050ac:	100d883a 	mov	r6,r2
 20050b0:	200d5440 	call	200d544 <__subdf3>
 20050b4:	180b883a 	mov	r5,r3
 20050b8:	d8c00517 	ldw	r3,20(sp)
 20050bc:	9cc00c04 	addi	r19,r19,48
 20050c0:	1009883a 	mov	r4,r2
 20050c4:	1cc00005 	stb	r19,0(r3)
 20050c8:	2021883a 	mov	r16,r4
 20050cc:	d9000317 	ldw	r4,12(sp)
 20050d0:	00800044 	movi	r2,1
 20050d4:	2823883a 	mov	r17,r5
 20050d8:	20802226 	beq	r4,r2,2005164 <_dtoa_r+0x13fc>
 20050dc:	1029883a 	mov	r20,r2
 20050e0:	0005883a 	mov	r2,zero
 20050e4:	00d00934 	movhi	r3,16420
 20050e8:	180f883a 	mov	r7,r3
 20050ec:	100d883a 	mov	r6,r2
 20050f0:	880b883a 	mov	r5,r17
 20050f4:	8009883a 	mov	r4,r16
 20050f8:	200d6380 	call	200d638 <__muldf3>
 20050fc:	180b883a 	mov	r5,r3
 2005100:	1009883a 	mov	r4,r2
 2005104:	1823883a 	mov	r17,r3
 2005108:	1021883a 	mov	r16,r2
 200510c:	200e07c0 	call	200e07c <__fixdfsi>
 2005110:	1009883a 	mov	r4,r2
 2005114:	102b883a 	mov	r21,r2
 2005118:	200df840 	call	200df84 <__floatsidf>
 200511c:	880b883a 	mov	r5,r17
 2005120:	8009883a 	mov	r4,r16
 2005124:	180f883a 	mov	r7,r3
 2005128:	100d883a 	mov	r6,r2
 200512c:	200d5440 	call	200d544 <__subdf3>
 2005130:	180b883a 	mov	r5,r3
 2005134:	d8c00517 	ldw	r3,20(sp)
 2005138:	1009883a 	mov	r4,r2
 200513c:	ad400c04 	addi	r21,r21,48
 2005140:	1d05883a 	add	r2,r3,r20
 2005144:	15400005 	stb	r21,0(r2)
 2005148:	2021883a 	mov	r16,r4
 200514c:	d9000317 	ldw	r4,12(sp)
 2005150:	a5000044 	addi	r20,r20,1
 2005154:	2823883a 	mov	r17,r5
 2005158:	a13fe11e 	bne	r20,r4,20050e0 <_dtoa_r+0x1378>
 200515c:	e505883a 	add	r2,fp,r20
 2005160:	173fffc4 	addi	fp,r2,-1
 2005164:	0025883a 	mov	r18,zero
 2005168:	04cff834 	movhi	r19,16352
 200516c:	b009883a 	mov	r4,r22
 2005170:	b80b883a 	mov	r5,r23
 2005174:	900d883a 	mov	r6,r18
 2005178:	980f883a 	mov	r7,r19
 200517c:	200d5c40 	call	200d5c4 <__adddf3>
 2005180:	180b883a 	mov	r5,r3
 2005184:	1009883a 	mov	r4,r2
 2005188:	800d883a 	mov	r6,r16
 200518c:	880f883a 	mov	r7,r17
 2005190:	200de740 	call	200de74 <__ltdf2>
 2005194:	103cab16 	blt	r2,zero,2004444 <_dtoa_r+0x6dc>
 2005198:	0009883a 	mov	r4,zero
 200519c:	980b883a 	mov	r5,r19
 20051a0:	b80f883a 	mov	r7,r23
 20051a4:	b00d883a 	mov	r6,r22
 20051a8:	200d5440 	call	200d544 <__subdf3>
 20051ac:	180b883a 	mov	r5,r3
 20051b0:	880f883a 	mov	r7,r17
 20051b4:	1009883a 	mov	r4,r2
 20051b8:	800d883a 	mov	r6,r16
 20051bc:	200dd640 	call	200dd64 <__gtdf2>
 20051c0:	00bc470e 	bge	zero,r2,20042e0 <_dtoa_r+0x578>
 20051c4:	00c00c04 	movi	r3,48
 20051c8:	e73fffc4 	addi	fp,fp,-1
 20051cc:	e0800007 	ldb	r2,0(fp)
 20051d0:	10fffd26 	beq	r2,r3,20051c8 <_dtoa_r+0x1460>
 20051d4:	d9800417 	ldw	r6,16(sp)
 20051d8:	e7000044 	addi	fp,fp,1
 20051dc:	d9800d15 	stw	r6,52(sp)
 20051e0:	003cab06 	br	2004490 <_dtoa_r+0x728>
 20051e4:	d8c00f17 	ldw	r3,60(sp)
 20051e8:	d9001117 	ldw	r4,68(sp)
 20051ec:	20e1c83a 	sub	r16,r4,r3
 20051f0:	0007883a 	mov	r3,zero
 20051f4:	003d9b06 	br	2004864 <_dtoa_r+0xafc>
 20051f8:	00800e44 	movi	r2,57
 20051fc:	b0800005 	stb	r2,0(r22)
 2005200:	b5800044 	addi	r22,r22,1
 2005204:	003dc106 	br	200490c <_dtoa_r+0xba4>
 2005208:	05800084 	movi	r22,2
 200520c:	003bf706 	br	20041ec <_dtoa_r+0x484>
 2005210:	d9000f17 	ldw	r4,60(sp)
 2005214:	013c000e 	bge	zero,r4,2004218 <_dtoa_r+0x4b0>
 2005218:	d9800e17 	ldw	r6,56(sp)
 200521c:	01bc300e 	bge	zero,r6,20042e0 <_dtoa_r+0x578>
 2005220:	0005883a 	mov	r2,zero
 2005224:	00d00934 	movhi	r3,16420
 2005228:	a80b883a 	mov	r5,r21
 200522c:	180f883a 	mov	r7,r3
 2005230:	a009883a 	mov	r4,r20
 2005234:	100d883a 	mov	r6,r2
 2005238:	200d6380 	call	200d638 <__muldf3>
 200523c:	b1000044 	addi	r4,r22,1
 2005240:	1021883a 	mov	r16,r2
 2005244:	1823883a 	mov	r17,r3
 2005248:	200df840 	call	200df84 <__floatsidf>
 200524c:	880b883a 	mov	r5,r17
 2005250:	8009883a 	mov	r4,r16
 2005254:	180f883a 	mov	r7,r3
 2005258:	100d883a 	mov	r6,r2
 200525c:	200d6380 	call	200d638 <__muldf3>
 2005260:	0011883a 	mov	r8,zero
 2005264:	02500734 	movhi	r9,16412
 2005268:	180b883a 	mov	r5,r3
 200526c:	480f883a 	mov	r7,r9
 2005270:	1009883a 	mov	r4,r2
 2005274:	400d883a 	mov	r6,r8
 2005278:	200d5c40 	call	200d5c4 <__adddf3>
 200527c:	102d883a 	mov	r22,r2
 2005280:	00bf3034 	movhi	r2,64704
 2005284:	10ef883a 	add	r23,r2,r3
 2005288:	d8800d17 	ldw	r2,52(sp)
 200528c:	d8c00e17 	ldw	r3,56(sp)
 2005290:	8029883a 	mov	r20,r16
 2005294:	10bfffc4 	addi	r2,r2,-1
 2005298:	882b883a 	mov	r21,r17
 200529c:	d8800415 	stw	r2,16(sp)
 20052a0:	d8c00315 	stw	r3,12(sp)
 20052a4:	003e8306 	br	2004cb4 <_dtoa_r+0xf4c>
 20052a8:	d8800117 	ldw	r2,4(sp)
 20052ac:	dc001117 	ldw	r16,68(sp)
 20052b0:	dc801017 	ldw	r18,64(sp)
 20052b4:	00c00d84 	movi	r3,54
 20052b8:	1887c83a 	sub	r3,r3,r2
 20052bc:	003d6906 	br	2004864 <_dtoa_r+0xafc>
 20052c0:	01800044 	movi	r6,1
 20052c4:	3021883a 	mov	r16,r6
 20052c8:	d9800f15 	stw	r6,60(sp)
 20052cc:	d9802615 	stw	r6,152(sp)
 20052d0:	d9800e15 	stw	r6,56(sp)
 20052d4:	003b9306 	br	2004124 <_dtoa_r+0x3bc>
 20052d8:	b021883a 	mov	r16,r22
 20052dc:	dd800f15 	stw	r22,60(sp)
 20052e0:	003b9006 	br	2004124 <_dtoa_r+0x3bc>
 20052e4:	103e221e 	bne	r2,zero,2004b70 <_dtoa_r+0xe08>
 20052e8:	b880004c 	andi	r2,r23,1
 20052ec:	1005003a 	cmpeq	r2,r2,zero
 20052f0:	103e1f1e 	bne	r2,zero,2004b70 <_dtoa_r+0xe08>
 20052f4:	003e1b06 	br	2004b64 <_dtoa_r+0xdfc>
 20052f8:	d9001617 	ldw	r4,88(sp)
 20052fc:	980b883a 	mov	r5,r19
 2005300:	01800284 	movi	r6,10
 2005304:	000f883a 	mov	r7,zero
 2005308:	2007f180 	call	2007f18 <__multadd>
 200530c:	d8c00e17 	ldw	r3,56(sp)
 2005310:	1027883a 	mov	r19,r2
 2005314:	d8c00f15 	stw	r3,60(sp)
 2005318:	003cd306 	br	2004668 <_dtoa_r+0x900>

0200531c <_fflush_r>:
 200531c:	defffb04 	addi	sp,sp,-20
 2005320:	dcc00315 	stw	r19,12(sp)
 2005324:	dc800215 	stw	r18,8(sp)
 2005328:	dfc00415 	stw	ra,16(sp)
 200532c:	dc400115 	stw	r17,4(sp)
 2005330:	dc000015 	stw	r16,0(sp)
 2005334:	2027883a 	mov	r19,r4
 2005338:	2825883a 	mov	r18,r5
 200533c:	20000226 	beq	r4,zero,2005348 <_fflush_r+0x2c>
 2005340:	20800e17 	ldw	r2,56(r4)
 2005344:	10005626 	beq	r2,zero,20054a0 <_fflush_r+0x184>
 2005348:	9100030b 	ldhu	r4,12(r18)
 200534c:	20ffffcc 	andi	r3,r4,65535
 2005350:	18e0001c 	xori	r3,r3,32768
 2005354:	18e00004 	addi	r3,r3,-32768
 2005358:	1880020c 	andi	r2,r3,8
 200535c:	1000261e 	bne	r2,zero,20053f8 <_fflush_r+0xdc>
 2005360:	90c00117 	ldw	r3,4(r18)
 2005364:	20820014 	ori	r2,r4,2048
 2005368:	9080030d 	sth	r2,12(r18)
 200536c:	1009883a 	mov	r4,r2
 2005370:	00c0400e 	bge	zero,r3,2005474 <_fflush_r+0x158>
 2005374:	92000a17 	ldw	r8,40(r18)
 2005378:	40004026 	beq	r8,zero,200547c <_fflush_r+0x160>
 200537c:	2084000c 	andi	r2,r4,4096
 2005380:	10005326 	beq	r2,zero,20054d0 <_fflush_r+0x1b4>
 2005384:	94001417 	ldw	r16,80(r18)
 2005388:	9080030b 	ldhu	r2,12(r18)
 200538c:	1080010c 	andi	r2,r2,4
 2005390:	1000481e 	bne	r2,zero,20054b4 <_fflush_r+0x198>
 2005394:	91400717 	ldw	r5,28(r18)
 2005398:	9809883a 	mov	r4,r19
 200539c:	800d883a 	mov	r6,r16
 20053a0:	000f883a 	mov	r7,zero
 20053a4:	403ee83a 	callr	r8
 20053a8:	8080261e 	bne	r16,r2,2005444 <_fflush_r+0x128>
 20053ac:	9080030b 	ldhu	r2,12(r18)
 20053b0:	91000417 	ldw	r4,16(r18)
 20053b4:	90000115 	stw	zero,4(r18)
 20053b8:	10bdffcc 	andi	r2,r2,63487
 20053bc:	10ffffcc 	andi	r3,r2,65535
 20053c0:	18c4000c 	andi	r3,r3,4096
 20053c4:	9080030d 	sth	r2,12(r18)
 20053c8:	91000015 	stw	r4,0(r18)
 20053cc:	18002b26 	beq	r3,zero,200547c <_fflush_r+0x160>
 20053d0:	0007883a 	mov	r3,zero
 20053d4:	1805883a 	mov	r2,r3
 20053d8:	94001415 	stw	r16,80(r18)
 20053dc:	dfc00417 	ldw	ra,16(sp)
 20053e0:	dcc00317 	ldw	r19,12(sp)
 20053e4:	dc800217 	ldw	r18,8(sp)
 20053e8:	dc400117 	ldw	r17,4(sp)
 20053ec:	dc000017 	ldw	r16,0(sp)
 20053f0:	dec00504 	addi	sp,sp,20
 20053f4:	f800283a 	ret
 20053f8:	94400417 	ldw	r17,16(r18)
 20053fc:	88001f26 	beq	r17,zero,200547c <_fflush_r+0x160>
 2005400:	90800017 	ldw	r2,0(r18)
 2005404:	18c000cc 	andi	r3,r3,3
 2005408:	94400015 	stw	r17,0(r18)
 200540c:	1461c83a 	sub	r16,r2,r17
 2005410:	18002526 	beq	r3,zero,20054a8 <_fflush_r+0x18c>
 2005414:	0005883a 	mov	r2,zero
 2005418:	90800215 	stw	r2,8(r18)
 200541c:	0400170e 	bge	zero,r16,200547c <_fflush_r+0x160>
 2005420:	90c00917 	ldw	r3,36(r18)
 2005424:	91400717 	ldw	r5,28(r18)
 2005428:	880d883a 	mov	r6,r17
 200542c:	800f883a 	mov	r7,r16
 2005430:	9809883a 	mov	r4,r19
 2005434:	183ee83a 	callr	r3
 2005438:	88a3883a 	add	r17,r17,r2
 200543c:	80a1c83a 	sub	r16,r16,r2
 2005440:	00bff616 	blt	zero,r2,200541c <_fflush_r+0x100>
 2005444:	9080030b 	ldhu	r2,12(r18)
 2005448:	00ffffc4 	movi	r3,-1
 200544c:	10801014 	ori	r2,r2,64
 2005450:	9080030d 	sth	r2,12(r18)
 2005454:	1805883a 	mov	r2,r3
 2005458:	dfc00417 	ldw	ra,16(sp)
 200545c:	dcc00317 	ldw	r19,12(sp)
 2005460:	dc800217 	ldw	r18,8(sp)
 2005464:	dc400117 	ldw	r17,4(sp)
 2005468:	dc000017 	ldw	r16,0(sp)
 200546c:	dec00504 	addi	sp,sp,20
 2005470:	f800283a 	ret
 2005474:	90800f17 	ldw	r2,60(r18)
 2005478:	00bfbe16 	blt	zero,r2,2005374 <_fflush_r+0x58>
 200547c:	0007883a 	mov	r3,zero
 2005480:	1805883a 	mov	r2,r3
 2005484:	dfc00417 	ldw	ra,16(sp)
 2005488:	dcc00317 	ldw	r19,12(sp)
 200548c:	dc800217 	ldw	r18,8(sp)
 2005490:	dc400117 	ldw	r17,4(sp)
 2005494:	dc000017 	ldw	r16,0(sp)
 2005498:	dec00504 	addi	sp,sp,20
 200549c:	f800283a 	ret
 20054a0:	20055b40 	call	20055b4 <__sinit>
 20054a4:	003fa806 	br	2005348 <_fflush_r+0x2c>
 20054a8:	90800517 	ldw	r2,20(r18)
 20054ac:	90800215 	stw	r2,8(r18)
 20054b0:	003fda06 	br	200541c <_fflush_r+0x100>
 20054b4:	90800117 	ldw	r2,4(r18)
 20054b8:	90c00c17 	ldw	r3,48(r18)
 20054bc:	80a1c83a 	sub	r16,r16,r2
 20054c0:	183fb426 	beq	r3,zero,2005394 <_fflush_r+0x78>
 20054c4:	90800f17 	ldw	r2,60(r18)
 20054c8:	80a1c83a 	sub	r16,r16,r2
 20054cc:	003fb106 	br	2005394 <_fflush_r+0x78>
 20054d0:	91400717 	ldw	r5,28(r18)
 20054d4:	9809883a 	mov	r4,r19
 20054d8:	000d883a 	mov	r6,zero
 20054dc:	01c00044 	movi	r7,1
 20054e0:	403ee83a 	callr	r8
 20054e4:	1021883a 	mov	r16,r2
 20054e8:	00bfffc4 	movi	r2,-1
 20054ec:	80800226 	beq	r16,r2,20054f8 <_fflush_r+0x1dc>
 20054f0:	92000a17 	ldw	r8,40(r18)
 20054f4:	003fa406 	br	2005388 <_fflush_r+0x6c>
 20054f8:	98c00017 	ldw	r3,0(r19)
 20054fc:	00800744 	movi	r2,29
 2005500:	18bfde26 	beq	r3,r2,200547c <_fflush_r+0x160>
 2005504:	9080030b 	ldhu	r2,12(r18)
 2005508:	8007883a 	mov	r3,r16
 200550c:	10801014 	ori	r2,r2,64
 2005510:	9080030d 	sth	r2,12(r18)
 2005514:	003fcf06 	br	2005454 <_fflush_r+0x138>

02005518 <fflush>:
 2005518:	01408034 	movhi	r5,512
 200551c:	2954c704 	addi	r5,r5,21276
 2005520:	2007883a 	mov	r3,r4
 2005524:	20000526 	beq	r4,zero,200553c <fflush+0x24>
 2005528:	00808074 	movhi	r2,513
 200552c:	10899604 	addi	r2,r2,9816
 2005530:	11000017 	ldw	r4,0(r2)
 2005534:	180b883a 	mov	r5,r3
 2005538:	200531c1 	jmpi	200531c <_fflush_r>
 200553c:	00808074 	movhi	r2,513
 2005540:	10899704 	addi	r2,r2,9820
 2005544:	11000017 	ldw	r4,0(r2)
 2005548:	20063241 	jmpi	2006324 <_fwalk_reent>

0200554c <std>:
 200554c:	00808074 	movhi	r2,513
 2005550:	10a32a04 	addi	r2,r2,-29528
 2005554:	20800b15 	stw	r2,44(r4)
 2005558:	00808074 	movhi	r2,513
 200555c:	10a36504 	addi	r2,r2,-29292
 2005560:	20800815 	stw	r2,32(r4)
 2005564:	00c08074 	movhi	r3,513
 2005568:	18e34604 	addi	r3,r3,-29416
 200556c:	00808074 	movhi	r2,513
 2005570:	10a32c04 	addi	r2,r2,-29520
 2005574:	2140030d 	sth	r5,12(r4)
 2005578:	2180038d 	sth	r6,14(r4)
 200557c:	20c00915 	stw	r3,36(r4)
 2005580:	20800a15 	stw	r2,40(r4)
 2005584:	20000015 	stw	zero,0(r4)
 2005588:	20000115 	stw	zero,4(r4)
 200558c:	20000215 	stw	zero,8(r4)
 2005590:	20000415 	stw	zero,16(r4)
 2005594:	20000515 	stw	zero,20(r4)
 2005598:	20000615 	stw	zero,24(r4)
 200559c:	21000715 	stw	r4,28(r4)
 20055a0:	f800283a 	ret

020055a4 <__sfp_lock_acquire>:
 20055a4:	f800283a 	ret

020055a8 <__sfp_lock_release>:
 20055a8:	f800283a 	ret

020055ac <__sinit_lock_acquire>:
 20055ac:	f800283a 	ret

020055b0 <__sinit_lock_release>:
 20055b0:	f800283a 	ret

020055b4 <__sinit>:
 20055b4:	20800e17 	ldw	r2,56(r4)
 20055b8:	defffd04 	addi	sp,sp,-12
 20055bc:	dc400115 	stw	r17,4(sp)
 20055c0:	dc000015 	stw	r16,0(sp)
 20055c4:	dfc00215 	stw	ra,8(sp)
 20055c8:	04400044 	movi	r17,1
 20055cc:	01400104 	movi	r5,4
 20055d0:	000d883a 	mov	r6,zero
 20055d4:	2021883a 	mov	r16,r4
 20055d8:	2200bb04 	addi	r8,r4,748
 20055dc:	200f883a 	mov	r7,r4
 20055e0:	10000526 	beq	r2,zero,20055f8 <__sinit+0x44>
 20055e4:	dfc00217 	ldw	ra,8(sp)
 20055e8:	dc400117 	ldw	r17,4(sp)
 20055ec:	dc000017 	ldw	r16,0(sp)
 20055f0:	dec00304 	addi	sp,sp,12
 20055f4:	f800283a 	ret
 20055f8:	21000117 	ldw	r4,4(r4)
 20055fc:	00808034 	movhi	r2,512
 2005600:	1095a604 	addi	r2,r2,22168
 2005604:	00c000c4 	movi	r3,3
 2005608:	80800f15 	stw	r2,60(r16)
 200560c:	80c0b915 	stw	r3,740(r16)
 2005610:	8200ba15 	stw	r8,744(r16)
 2005614:	84400e15 	stw	r17,56(r16)
 2005618:	8000b815 	stw	zero,736(r16)
 200561c:	200554c0 	call	200554c <std>
 2005620:	81000217 	ldw	r4,8(r16)
 2005624:	880d883a 	mov	r6,r17
 2005628:	800f883a 	mov	r7,r16
 200562c:	01400284 	movi	r5,10
 2005630:	200554c0 	call	200554c <std>
 2005634:	81000317 	ldw	r4,12(r16)
 2005638:	800f883a 	mov	r7,r16
 200563c:	01400484 	movi	r5,18
 2005640:	01800084 	movi	r6,2
 2005644:	dfc00217 	ldw	ra,8(sp)
 2005648:	dc400117 	ldw	r17,4(sp)
 200564c:	dc000017 	ldw	r16,0(sp)
 2005650:	dec00304 	addi	sp,sp,12
 2005654:	200554c1 	jmpi	200554c <std>

02005658 <__fp_lock>:
 2005658:	0005883a 	mov	r2,zero
 200565c:	f800283a 	ret

02005660 <__fp_unlock>:
 2005660:	0005883a 	mov	r2,zero
 2005664:	f800283a 	ret

02005668 <__fp_unlock_all>:
 2005668:	00808074 	movhi	r2,513
 200566c:	10899604 	addi	r2,r2,9816
 2005670:	11000017 	ldw	r4,0(r2)
 2005674:	01408034 	movhi	r5,512
 2005678:	29559804 	addi	r5,r5,22112
 200567c:	20063ec1 	jmpi	20063ec <_fwalk>

02005680 <__fp_lock_all>:
 2005680:	00808074 	movhi	r2,513
 2005684:	10899604 	addi	r2,r2,9816
 2005688:	11000017 	ldw	r4,0(r2)
 200568c:	01408034 	movhi	r5,512
 2005690:	29559604 	addi	r5,r5,22104
 2005694:	20063ec1 	jmpi	20063ec <_fwalk>

02005698 <_cleanup_r>:
 2005698:	01408074 	movhi	r5,513
 200569c:	296d6504 	addi	r5,r5,-19052
 20056a0:	20063ec1 	jmpi	20063ec <_fwalk>

020056a4 <_cleanup>:
 20056a4:	00808074 	movhi	r2,513
 20056a8:	10899704 	addi	r2,r2,9820
 20056ac:	11000017 	ldw	r4,0(r2)
 20056b0:	20056981 	jmpi	2005698 <_cleanup_r>

020056b4 <__sfmoreglue>:
 20056b4:	defffc04 	addi	sp,sp,-16
 20056b8:	dc400115 	stw	r17,4(sp)
 20056bc:	2c401724 	muli	r17,r5,92
 20056c0:	dc800215 	stw	r18,8(sp)
 20056c4:	2825883a 	mov	r18,r5
 20056c8:	89400304 	addi	r5,r17,12
 20056cc:	dc000015 	stw	r16,0(sp)
 20056d0:	dfc00315 	stw	ra,12(sp)
 20056d4:	20067280 	call	2006728 <_malloc_r>
 20056d8:	0021883a 	mov	r16,zero
 20056dc:	880d883a 	mov	r6,r17
 20056e0:	000b883a 	mov	r5,zero
 20056e4:	10000626 	beq	r2,zero,2005700 <__sfmoreglue+0x4c>
 20056e8:	11000304 	addi	r4,r2,12
 20056ec:	14800115 	stw	r18,4(r2)
 20056f0:	10000015 	stw	zero,0(r2)
 20056f4:	11000215 	stw	r4,8(r2)
 20056f8:	1021883a 	mov	r16,r2
 20056fc:	20071cc0 	call	20071cc <memset>
 2005700:	8005883a 	mov	r2,r16
 2005704:	dfc00317 	ldw	ra,12(sp)
 2005708:	dc800217 	ldw	r18,8(sp)
 200570c:	dc400117 	ldw	r17,4(sp)
 2005710:	dc000017 	ldw	r16,0(sp)
 2005714:	dec00404 	addi	sp,sp,16
 2005718:	f800283a 	ret

0200571c <__sfp>:
 200571c:	defffd04 	addi	sp,sp,-12
 2005720:	00808074 	movhi	r2,513
 2005724:	10899704 	addi	r2,r2,9820
 2005728:	dc000015 	stw	r16,0(sp)
 200572c:	14000017 	ldw	r16,0(r2)
 2005730:	dc400115 	stw	r17,4(sp)
 2005734:	dfc00215 	stw	ra,8(sp)
 2005738:	80800e17 	ldw	r2,56(r16)
 200573c:	2023883a 	mov	r17,r4
 2005740:	10002626 	beq	r2,zero,20057dc <__sfp+0xc0>
 2005744:	8400b804 	addi	r16,r16,736
 2005748:	80800117 	ldw	r2,4(r16)
 200574c:	81000217 	ldw	r4,8(r16)
 2005750:	10ffffc4 	addi	r3,r2,-1
 2005754:	18000916 	blt	r3,zero,200577c <__sfp+0x60>
 2005758:	2080030f 	ldh	r2,12(r4)
 200575c:	10000b26 	beq	r2,zero,200578c <__sfp+0x70>
 2005760:	017fffc4 	movi	r5,-1
 2005764:	00000206 	br	2005770 <__sfp+0x54>
 2005768:	2080030f 	ldh	r2,12(r4)
 200576c:	10000726 	beq	r2,zero,200578c <__sfp+0x70>
 2005770:	18ffffc4 	addi	r3,r3,-1
 2005774:	21001704 	addi	r4,r4,92
 2005778:	197ffb1e 	bne	r3,r5,2005768 <__sfp+0x4c>
 200577c:	80800017 	ldw	r2,0(r16)
 2005780:	10001926 	beq	r2,zero,20057e8 <__sfp+0xcc>
 2005784:	1021883a 	mov	r16,r2
 2005788:	003fef06 	br	2005748 <__sfp+0x2c>
 200578c:	00bfffc4 	movi	r2,-1
 2005790:	00c00044 	movi	r3,1
 2005794:	2080038d 	sth	r2,14(r4)
 2005798:	20c0030d 	sth	r3,12(r4)
 200579c:	20000015 	stw	zero,0(r4)
 20057a0:	20000215 	stw	zero,8(r4)
 20057a4:	20000115 	stw	zero,4(r4)
 20057a8:	20000415 	stw	zero,16(r4)
 20057ac:	20000515 	stw	zero,20(r4)
 20057b0:	20000615 	stw	zero,24(r4)
 20057b4:	20000c15 	stw	zero,48(r4)
 20057b8:	20000d15 	stw	zero,52(r4)
 20057bc:	20001115 	stw	zero,68(r4)
 20057c0:	20001215 	stw	zero,72(r4)
 20057c4:	2005883a 	mov	r2,r4
 20057c8:	dfc00217 	ldw	ra,8(sp)
 20057cc:	dc400117 	ldw	r17,4(sp)
 20057d0:	dc000017 	ldw	r16,0(sp)
 20057d4:	dec00304 	addi	sp,sp,12
 20057d8:	f800283a 	ret
 20057dc:	8009883a 	mov	r4,r16
 20057e0:	20055b40 	call	20055b4 <__sinit>
 20057e4:	003fd706 	br	2005744 <__sfp+0x28>
 20057e8:	8809883a 	mov	r4,r17
 20057ec:	01400104 	movi	r5,4
 20057f0:	20056b40 	call	20056b4 <__sfmoreglue>
 20057f4:	80800015 	stw	r2,0(r16)
 20057f8:	103fe21e 	bne	r2,zero,2005784 <__sfp+0x68>
 20057fc:	00800304 	movi	r2,12
 2005800:	0009883a 	mov	r4,zero
 2005804:	88800015 	stw	r2,0(r17)
 2005808:	003fee06 	br	20057c4 <__sfp+0xa8>

0200580c <_fread_r>:
 200580c:	defff504 	addi	sp,sp,-44
 2005810:	ddc00815 	stw	r23,32(sp)
 2005814:	39af383a 	mul	r23,r7,r6
 2005818:	df000915 	stw	fp,36(sp)
 200581c:	dd800715 	stw	r22,28(sp)
 2005820:	dcc00415 	stw	r19,16(sp)
 2005824:	dc000115 	stw	r16,4(sp)
 2005828:	dfc00a15 	stw	ra,40(sp)
 200582c:	dd400615 	stw	r21,24(sp)
 2005830:	dd000515 	stw	r20,20(sp)
 2005834:	dc800315 	stw	r18,12(sp)
 2005838:	dc400215 	stw	r17,8(sp)
 200583c:	d9800015 	stw	r6,0(sp)
 2005840:	3839883a 	mov	fp,r7
 2005844:	2821883a 	mov	r16,r5
 2005848:	202d883a 	mov	r22,r4
 200584c:	dcc00b17 	ldw	r19,44(sp)
 2005850:	b8005926 	beq	r23,zero,20059b8 <_fread_r+0x1ac>
 2005854:	20000226 	beq	r4,zero,2005860 <_fread_r+0x54>
 2005858:	20800e17 	ldw	r2,56(r4)
 200585c:	10005826 	beq	r2,zero,20059c0 <_fread_r+0x1b4>
 2005860:	9c400117 	ldw	r17,4(r19)
 2005864:	88005916 	blt	r17,zero,20059cc <_fread_r+0x1c0>
 2005868:	9880030b 	ldhu	r2,12(r19)
 200586c:	8029883a 	mov	r20,r16
 2005870:	1080008c 	andi	r2,r2,2
 2005874:	1000221e 	bne	r2,zero,2005900 <_fread_r+0xf4>
 2005878:	b825883a 	mov	r18,r23
 200587c:	00000106 	br	2005884 <_fread_r+0x78>
 2005880:	9c400117 	ldw	r17,4(r19)
 2005884:	a009883a 	mov	r4,r20
 2005888:	880d883a 	mov	r6,r17
 200588c:	8c80542e 	bgeu	r17,r18,20059e0 <_fread_r+0x1d4>
 2005890:	99400017 	ldw	r5,0(r19)
 2005894:	a469883a 	add	r20,r20,r17
 2005898:	9465c83a 	sub	r18,r18,r17
 200589c:	200704c0 	call	200704c <memcpy>
 20058a0:	98800017 	ldw	r2,0(r19)
 20058a4:	b009883a 	mov	r4,r22
 20058a8:	980b883a 	mov	r5,r19
 20058ac:	1461883a 	add	r16,r2,r17
 20058b0:	9c000015 	stw	r16,0(r19)
 20058b4:	200884c0 	call	200884c <__srefill_r>
 20058b8:	103ff126 	beq	r2,zero,2005880 <_fread_r+0x74>
 20058bc:	d9400017 	ldw	r5,0(sp)
 20058c0:	bc89c83a 	sub	r4,r23,r18
 20058c4:	200e4980 	call	200e498 <__udivsi3>
 20058c8:	1039883a 	mov	fp,r2
 20058cc:	e005883a 	mov	r2,fp
 20058d0:	dfc00a17 	ldw	ra,40(sp)
 20058d4:	df000917 	ldw	fp,36(sp)
 20058d8:	ddc00817 	ldw	r23,32(sp)
 20058dc:	dd800717 	ldw	r22,28(sp)
 20058e0:	dd400617 	ldw	r21,24(sp)
 20058e4:	dd000517 	ldw	r20,20(sp)
 20058e8:	dcc00417 	ldw	r19,16(sp)
 20058ec:	dc800317 	ldw	r18,12(sp)
 20058f0:	dc400217 	ldw	r17,8(sp)
 20058f4:	dc000117 	ldw	r16,4(sp)
 20058f8:	dec00b04 	addi	sp,sp,44
 20058fc:	f800283a 	ret
 2005900:	b825883a 	mov	r18,r23
 2005904:	8dc03436 	bltu	r17,r23,20059d8 <_fread_r+0x1cc>
 2005908:	99400017 	ldw	r5,0(r19)
 200590c:	a009883a 	mov	r4,r20
 2005910:	900d883a 	mov	r6,r18
 2005914:	200704c0 	call	200704c <memcpy>
 2005918:	9c000017 	ldw	r16,0(r19)
 200591c:	98800117 	ldw	r2,4(r19)
 2005920:	99400c17 	ldw	r5,48(r19)
 2005924:	84a1883a 	add	r16,r16,r18
 2005928:	14a3c83a 	sub	r17,r2,r18
 200592c:	a4ab883a 	add	r21,r20,r18
 2005930:	9c400115 	stw	r17,4(r19)
 2005934:	9c000015 	stw	r16,0(r19)
 2005938:	bca9c83a 	sub	r20,r23,r18
 200593c:	28000826 	beq	r5,zero,2005960 <_fread_r+0x154>
 2005940:	a03fe226 	beq	r20,zero,20058cc <_fread_r+0xc0>
 2005944:	98801004 	addi	r2,r19,64
 2005948:	28800326 	beq	r5,r2,2005958 <_fread_r+0x14c>
 200594c:	b009883a 	mov	r4,r22
 2005950:	2005b740 	call	2005b74 <_free_r>
 2005954:	9c000017 	ldw	r16,0(r19)
 2005958:	98000c15 	stw	zero,48(r19)
 200595c:	00000106 	br	2005964 <_fread_r+0x158>
 2005960:	a03fda26 	beq	r20,zero,20058cc <_fread_r+0xc0>
 2005964:	9c800417 	ldw	r18,16(r19)
 2005968:	9c400517 	ldw	r17,20(r19)
 200596c:	9d400015 	stw	r21,0(r19)
 2005970:	9d400415 	stw	r21,16(r19)
 2005974:	9d000515 	stw	r20,20(r19)
 2005978:	b009883a 	mov	r4,r22
 200597c:	980b883a 	mov	r5,r19
 2005980:	200884c0 	call	200884c <__srefill_r>
 2005984:	98c00117 	ldw	r3,4(r19)
 2005988:	9c800415 	stw	r18,16(r19)
 200598c:	9c400515 	stw	r17,20(r19)
 2005990:	a8eb883a 	add	r21,r21,r3
 2005994:	9c000015 	stw	r16,0(r19)
 2005998:	a0e9c83a 	sub	r20,r20,r3
 200599c:	98000115 	stw	zero,4(r19)
 20059a0:	103fef26 	beq	r2,zero,2005960 <_fread_r+0x154>
 20059a4:	d9400017 	ldw	r5,0(sp)
 20059a8:	bd09c83a 	sub	r4,r23,r20
 20059ac:	200e4980 	call	200e498 <__udivsi3>
 20059b0:	1039883a 	mov	fp,r2
 20059b4:	003fc506 	br	20058cc <_fread_r+0xc0>
 20059b8:	0039883a 	mov	fp,zero
 20059bc:	003fc306 	br	20058cc <_fread_r+0xc0>
 20059c0:	20055b40 	call	20055b4 <__sinit>
 20059c4:	9c400117 	ldw	r17,4(r19)
 20059c8:	883fa70e 	bge	r17,zero,2005868 <_fread_r+0x5c>
 20059cc:	0023883a 	mov	r17,zero
 20059d0:	98000115 	stw	zero,4(r19)
 20059d4:	003fa406 	br	2005868 <_fread_r+0x5c>
 20059d8:	8825883a 	mov	r18,r17
 20059dc:	003fca06 	br	2005908 <_fread_r+0xfc>
 20059e0:	99400017 	ldw	r5,0(r19)
 20059e4:	900d883a 	mov	r6,r18
 20059e8:	200704c0 	call	200704c <memcpy>
 20059ec:	98c00117 	ldw	r3,4(r19)
 20059f0:	98800017 	ldw	r2,0(r19)
 20059f4:	1c87c83a 	sub	r3,r3,r18
 20059f8:	1485883a 	add	r2,r2,r18
 20059fc:	98800015 	stw	r2,0(r19)
 2005a00:	98c00115 	stw	r3,4(r19)
 2005a04:	003fb106 	br	20058cc <_fread_r+0xc0>

02005a08 <fread>:
 2005a08:	00808074 	movhi	r2,513
 2005a0c:	10899604 	addi	r2,r2,9816
 2005a10:	2017883a 	mov	r11,r4
 2005a14:	11000017 	ldw	r4,0(r2)
 2005a18:	defffe04 	addi	sp,sp,-8
 2005a1c:	3013883a 	mov	r9,r6
 2005a20:	2805883a 	mov	r2,r5
 2005a24:	d9c00015 	stw	r7,0(sp)
 2005a28:	580b883a 	mov	r5,r11
 2005a2c:	100d883a 	mov	r6,r2
 2005a30:	480f883a 	mov	r7,r9
 2005a34:	dfc00115 	stw	ra,4(sp)
 2005a38:	200580c0 	call	200580c <_fread_r>
 2005a3c:	dfc00117 	ldw	ra,4(sp)
 2005a40:	dec00204 	addi	sp,sp,8
 2005a44:	f800283a 	ret

02005a48 <_malloc_trim_r>:
 2005a48:	defffb04 	addi	sp,sp,-20
 2005a4c:	dcc00315 	stw	r19,12(sp)
 2005a50:	04c08074 	movhi	r19,513
 2005a54:	9cc7ee04 	addi	r19,r19,8120
 2005a58:	dc800215 	stw	r18,8(sp)
 2005a5c:	dc400115 	stw	r17,4(sp)
 2005a60:	dc000015 	stw	r16,0(sp)
 2005a64:	2823883a 	mov	r17,r5
 2005a68:	2025883a 	mov	r18,r4
 2005a6c:	dfc00415 	stw	ra,16(sp)
 2005a70:	200f3bc0 	call	200f3bc <__malloc_lock>
 2005a74:	98800217 	ldw	r2,8(r19)
 2005a78:	9009883a 	mov	r4,r18
 2005a7c:	000b883a 	mov	r5,zero
 2005a80:	10c00117 	ldw	r3,4(r2)
 2005a84:	00bfff04 	movi	r2,-4
 2005a88:	18a0703a 	and	r16,r3,r2
 2005a8c:	8463c83a 	sub	r17,r16,r17
 2005a90:	8c43fbc4 	addi	r17,r17,4079
 2005a94:	8822d33a 	srli	r17,r17,12
 2005a98:	0083ffc4 	movi	r2,4095
 2005a9c:	8c7fffc4 	addi	r17,r17,-1
 2005aa0:	8822933a 	slli	r17,r17,12
 2005aa4:	1440060e 	bge	r2,r17,2005ac0 <_malloc_trim_r+0x78>
 2005aa8:	2008a9c0 	call	2008a9c <_sbrk_r>
 2005aac:	98c00217 	ldw	r3,8(r19)
 2005ab0:	9009883a 	mov	r4,r18
 2005ab4:	044bc83a 	sub	r5,zero,r17
 2005ab8:	80c7883a 	add	r3,r16,r3
 2005abc:	10c00926 	beq	r2,r3,2005ae4 <_malloc_trim_r+0x9c>
 2005ac0:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2005ac4:	0005883a 	mov	r2,zero
 2005ac8:	dfc00417 	ldw	ra,16(sp)
 2005acc:	dcc00317 	ldw	r19,12(sp)
 2005ad0:	dc800217 	ldw	r18,8(sp)
 2005ad4:	dc400117 	ldw	r17,4(sp)
 2005ad8:	dc000017 	ldw	r16,0(sp)
 2005adc:	dec00504 	addi	sp,sp,20
 2005ae0:	f800283a 	ret
 2005ae4:	9009883a 	mov	r4,r18
 2005ae8:	2008a9c0 	call	2008a9c <_sbrk_r>
 2005aec:	844dc83a 	sub	r6,r16,r17
 2005af0:	00ffffc4 	movi	r3,-1
 2005af4:	9009883a 	mov	r4,r18
 2005af8:	000b883a 	mov	r5,zero
 2005afc:	01c08074 	movhi	r7,513
 2005b00:	39cc6e04 	addi	r7,r7,12728
 2005b04:	31800054 	ori	r6,r6,1
 2005b08:	10c00926 	beq	r2,r3,2005b30 <_malloc_trim_r+0xe8>
 2005b0c:	38800017 	ldw	r2,0(r7)
 2005b10:	98c00217 	ldw	r3,8(r19)
 2005b14:	9009883a 	mov	r4,r18
 2005b18:	1445c83a 	sub	r2,r2,r17
 2005b1c:	38800015 	stw	r2,0(r7)
 2005b20:	19800115 	stw	r6,4(r3)
 2005b24:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2005b28:	00800044 	movi	r2,1
 2005b2c:	003fe606 	br	2005ac8 <_malloc_trim_r+0x80>
 2005b30:	2008a9c0 	call	2008a9c <_sbrk_r>
 2005b34:	99800217 	ldw	r6,8(r19)
 2005b38:	100f883a 	mov	r7,r2
 2005b3c:	9009883a 	mov	r4,r18
 2005b40:	1187c83a 	sub	r3,r2,r6
 2005b44:	008003c4 	movi	r2,15
 2005b48:	19400054 	ori	r5,r3,1
 2005b4c:	10ffdc0e 	bge	r2,r3,2005ac0 <_malloc_trim_r+0x78>
 2005b50:	00808074 	movhi	r2,513
 2005b54:	10899b04 	addi	r2,r2,9836
 2005b58:	10c00017 	ldw	r3,0(r2)
 2005b5c:	00808074 	movhi	r2,513
 2005b60:	108c6e04 	addi	r2,r2,12728
 2005b64:	31400115 	stw	r5,4(r6)
 2005b68:	38c7c83a 	sub	r3,r7,r3
 2005b6c:	10c00015 	stw	r3,0(r2)
 2005b70:	003fd306 	br	2005ac0 <_malloc_trim_r+0x78>

02005b74 <_free_r>:
 2005b74:	defffd04 	addi	sp,sp,-12
 2005b78:	dc400115 	stw	r17,4(sp)
 2005b7c:	dc000015 	stw	r16,0(sp)
 2005b80:	dfc00215 	stw	ra,8(sp)
 2005b84:	2821883a 	mov	r16,r5
 2005b88:	2023883a 	mov	r17,r4
 2005b8c:	28005a26 	beq	r5,zero,2005cf8 <_free_r+0x184>
 2005b90:	200f3bc0 	call	200f3bc <__malloc_lock>
 2005b94:	823ffe04 	addi	r8,r16,-8
 2005b98:	41400117 	ldw	r5,4(r8)
 2005b9c:	00bfff84 	movi	r2,-2
 2005ba0:	02808074 	movhi	r10,513
 2005ba4:	5287ee04 	addi	r10,r10,8120
 2005ba8:	288e703a 	and	r7,r5,r2
 2005bac:	41cd883a 	add	r6,r8,r7
 2005bb0:	30c00117 	ldw	r3,4(r6)
 2005bb4:	51000217 	ldw	r4,8(r10)
 2005bb8:	00bfff04 	movi	r2,-4
 2005bbc:	1892703a 	and	r9,r3,r2
 2005bc0:	5017883a 	mov	r11,r10
 2005bc4:	31006726 	beq	r6,r4,2005d64 <_free_r+0x1f0>
 2005bc8:	2880004c 	andi	r2,r5,1
 2005bcc:	1005003a 	cmpeq	r2,r2,zero
 2005bd0:	32400115 	stw	r9,4(r6)
 2005bd4:	10001a1e 	bne	r2,zero,2005c40 <_free_r+0xcc>
 2005bd8:	000b883a 	mov	r5,zero
 2005bdc:	3247883a 	add	r3,r6,r9
 2005be0:	18800117 	ldw	r2,4(r3)
 2005be4:	1080004c 	andi	r2,r2,1
 2005be8:	1000231e 	bne	r2,zero,2005c78 <_free_r+0x104>
 2005bec:	280ac03a 	cmpne	r5,r5,zero
 2005bf0:	3a4f883a 	add	r7,r7,r9
 2005bf4:	2800451e 	bne	r5,zero,2005d0c <_free_r+0x198>
 2005bf8:	31000217 	ldw	r4,8(r6)
 2005bfc:	00808074 	movhi	r2,513
 2005c00:	1087f004 	addi	r2,r2,8128
 2005c04:	20807b26 	beq	r4,r2,2005df4 <_free_r+0x280>
 2005c08:	30800317 	ldw	r2,12(r6)
 2005c0c:	3a07883a 	add	r3,r7,r8
 2005c10:	19c00015 	stw	r7,0(r3)
 2005c14:	11000215 	stw	r4,8(r2)
 2005c18:	20800315 	stw	r2,12(r4)
 2005c1c:	38800054 	ori	r2,r7,1
 2005c20:	40800115 	stw	r2,4(r8)
 2005c24:	28001a26 	beq	r5,zero,2005c90 <_free_r+0x11c>
 2005c28:	8809883a 	mov	r4,r17
 2005c2c:	dfc00217 	ldw	ra,8(sp)
 2005c30:	dc400117 	ldw	r17,4(sp)
 2005c34:	dc000017 	ldw	r16,0(sp)
 2005c38:	dec00304 	addi	sp,sp,12
 2005c3c:	200f3dc1 	jmpi	200f3dc <__malloc_unlock>
 2005c40:	80bffe17 	ldw	r2,-8(r16)
 2005c44:	50c00204 	addi	r3,r10,8
 2005c48:	4091c83a 	sub	r8,r8,r2
 2005c4c:	41000217 	ldw	r4,8(r8)
 2005c50:	388f883a 	add	r7,r7,r2
 2005c54:	20c06126 	beq	r4,r3,2005ddc <_free_r+0x268>
 2005c58:	40800317 	ldw	r2,12(r8)
 2005c5c:	3247883a 	add	r3,r6,r9
 2005c60:	000b883a 	mov	r5,zero
 2005c64:	11000215 	stw	r4,8(r2)
 2005c68:	20800315 	stw	r2,12(r4)
 2005c6c:	18800117 	ldw	r2,4(r3)
 2005c70:	1080004c 	andi	r2,r2,1
 2005c74:	103fdd26 	beq	r2,zero,2005bec <_free_r+0x78>
 2005c78:	38800054 	ori	r2,r7,1
 2005c7c:	3a07883a 	add	r3,r7,r8
 2005c80:	280ac03a 	cmpne	r5,r5,zero
 2005c84:	40800115 	stw	r2,4(r8)
 2005c88:	19c00015 	stw	r7,0(r3)
 2005c8c:	283fe61e 	bne	r5,zero,2005c28 <_free_r+0xb4>
 2005c90:	00807fc4 	movi	r2,511
 2005c94:	11c01f2e 	bgeu	r2,r7,2005d14 <_free_r+0x1a0>
 2005c98:	3806d27a 	srli	r3,r7,9
 2005c9c:	1800481e 	bne	r3,zero,2005dc0 <_free_r+0x24c>
 2005ca0:	3804d0fa 	srli	r2,r7,3
 2005ca4:	100690fa 	slli	r3,r2,3
 2005ca8:	1acd883a 	add	r6,r3,r11
 2005cac:	31400217 	ldw	r5,8(r6)
 2005cb0:	31405926 	beq	r6,r5,2005e18 <_free_r+0x2a4>
 2005cb4:	28800117 	ldw	r2,4(r5)
 2005cb8:	00ffff04 	movi	r3,-4
 2005cbc:	10c4703a 	and	r2,r2,r3
 2005cc0:	3880022e 	bgeu	r7,r2,2005ccc <_free_r+0x158>
 2005cc4:	29400217 	ldw	r5,8(r5)
 2005cc8:	317ffa1e 	bne	r6,r5,2005cb4 <_free_r+0x140>
 2005ccc:	29800317 	ldw	r6,12(r5)
 2005cd0:	41800315 	stw	r6,12(r8)
 2005cd4:	41400215 	stw	r5,8(r8)
 2005cd8:	8809883a 	mov	r4,r17
 2005cdc:	2a000315 	stw	r8,12(r5)
 2005ce0:	32000215 	stw	r8,8(r6)
 2005ce4:	dfc00217 	ldw	ra,8(sp)
 2005ce8:	dc400117 	ldw	r17,4(sp)
 2005cec:	dc000017 	ldw	r16,0(sp)
 2005cf0:	dec00304 	addi	sp,sp,12
 2005cf4:	200f3dc1 	jmpi	200f3dc <__malloc_unlock>
 2005cf8:	dfc00217 	ldw	ra,8(sp)
 2005cfc:	dc400117 	ldw	r17,4(sp)
 2005d00:	dc000017 	ldw	r16,0(sp)
 2005d04:	dec00304 	addi	sp,sp,12
 2005d08:	f800283a 	ret
 2005d0c:	31000217 	ldw	r4,8(r6)
 2005d10:	003fbd06 	br	2005c08 <_free_r+0x94>
 2005d14:	3806d0fa 	srli	r3,r7,3
 2005d18:	00800044 	movi	r2,1
 2005d1c:	51400117 	ldw	r5,4(r10)
 2005d20:	180890fa 	slli	r4,r3,3
 2005d24:	1807d0ba 	srai	r3,r3,2
 2005d28:	22c9883a 	add	r4,r4,r11
 2005d2c:	21800217 	ldw	r6,8(r4)
 2005d30:	10c4983a 	sll	r2,r2,r3
 2005d34:	41000315 	stw	r4,12(r8)
 2005d38:	41800215 	stw	r6,8(r8)
 2005d3c:	288ab03a 	or	r5,r5,r2
 2005d40:	22000215 	stw	r8,8(r4)
 2005d44:	8809883a 	mov	r4,r17
 2005d48:	51400115 	stw	r5,4(r10)
 2005d4c:	32000315 	stw	r8,12(r6)
 2005d50:	dfc00217 	ldw	ra,8(sp)
 2005d54:	dc400117 	ldw	r17,4(sp)
 2005d58:	dc000017 	ldw	r16,0(sp)
 2005d5c:	dec00304 	addi	sp,sp,12
 2005d60:	200f3dc1 	jmpi	200f3dc <__malloc_unlock>
 2005d64:	2880004c 	andi	r2,r5,1
 2005d68:	3a4d883a 	add	r6,r7,r9
 2005d6c:	1000071e 	bne	r2,zero,2005d8c <_free_r+0x218>
 2005d70:	80bffe17 	ldw	r2,-8(r16)
 2005d74:	4091c83a 	sub	r8,r8,r2
 2005d78:	41000317 	ldw	r4,12(r8)
 2005d7c:	40c00217 	ldw	r3,8(r8)
 2005d80:	308d883a 	add	r6,r6,r2
 2005d84:	20c00215 	stw	r3,8(r4)
 2005d88:	19000315 	stw	r4,12(r3)
 2005d8c:	00808074 	movhi	r2,513
 2005d90:	10899a04 	addi	r2,r2,9832
 2005d94:	11000017 	ldw	r4,0(r2)
 2005d98:	30c00054 	ori	r3,r6,1
 2005d9c:	52000215 	stw	r8,8(r10)
 2005da0:	40c00115 	stw	r3,4(r8)
 2005da4:	313fa036 	bltu	r6,r4,2005c28 <_free_r+0xb4>
 2005da8:	00808074 	movhi	r2,513
 2005dac:	108c6404 	addi	r2,r2,12688
 2005db0:	11400017 	ldw	r5,0(r2)
 2005db4:	8809883a 	mov	r4,r17
 2005db8:	2005a480 	call	2005a48 <_malloc_trim_r>
 2005dbc:	003f9a06 	br	2005c28 <_free_r+0xb4>
 2005dc0:	00800104 	movi	r2,4
 2005dc4:	10c0072e 	bgeu	r2,r3,2005de4 <_free_r+0x270>
 2005dc8:	00800504 	movi	r2,20
 2005dcc:	10c01936 	bltu	r2,r3,2005e34 <_free_r+0x2c0>
 2005dd0:	188016c4 	addi	r2,r3,91
 2005dd4:	100690fa 	slli	r3,r2,3
 2005dd8:	003fb306 	br	2005ca8 <_free_r+0x134>
 2005ddc:	01400044 	movi	r5,1
 2005de0:	003f7e06 	br	2005bdc <_free_r+0x68>
 2005de4:	3804d1ba 	srli	r2,r7,6
 2005de8:	10800e04 	addi	r2,r2,56
 2005dec:	100690fa 	slli	r3,r2,3
 2005df0:	003fad06 	br	2005ca8 <_free_r+0x134>
 2005df4:	22000315 	stw	r8,12(r4)
 2005df8:	22000215 	stw	r8,8(r4)
 2005dfc:	3a05883a 	add	r2,r7,r8
 2005e00:	38c00054 	ori	r3,r7,1
 2005e04:	11c00015 	stw	r7,0(r2)
 2005e08:	41000215 	stw	r4,8(r8)
 2005e0c:	40c00115 	stw	r3,4(r8)
 2005e10:	41000315 	stw	r4,12(r8)
 2005e14:	003f8406 	br	2005c28 <_free_r+0xb4>
 2005e18:	1005d0ba 	srai	r2,r2,2
 2005e1c:	00c00044 	movi	r3,1
 2005e20:	51000117 	ldw	r4,4(r10)
 2005e24:	1886983a 	sll	r3,r3,r2
 2005e28:	20c8b03a 	or	r4,r4,r3
 2005e2c:	51000115 	stw	r4,4(r10)
 2005e30:	003fa706 	br	2005cd0 <_free_r+0x15c>
 2005e34:	00801504 	movi	r2,84
 2005e38:	10c00436 	bltu	r2,r3,2005e4c <_free_r+0x2d8>
 2005e3c:	3804d33a 	srli	r2,r7,12
 2005e40:	10801b84 	addi	r2,r2,110
 2005e44:	100690fa 	slli	r3,r2,3
 2005e48:	003f9706 	br	2005ca8 <_free_r+0x134>
 2005e4c:	00805504 	movi	r2,340
 2005e50:	10c00436 	bltu	r2,r3,2005e64 <_free_r+0x2f0>
 2005e54:	3804d3fa 	srli	r2,r7,15
 2005e58:	10801dc4 	addi	r2,r2,119
 2005e5c:	100690fa 	slli	r3,r2,3
 2005e60:	003f9106 	br	2005ca8 <_free_r+0x134>
 2005e64:	00815504 	movi	r2,1364
 2005e68:	10c0032e 	bgeu	r2,r3,2005e78 <_free_r+0x304>
 2005e6c:	00801f84 	movi	r2,126
 2005e70:	00c0fc04 	movi	r3,1008
 2005e74:	003f8c06 	br	2005ca8 <_free_r+0x134>
 2005e78:	3804d4ba 	srli	r2,r7,18
 2005e7c:	10801f04 	addi	r2,r2,124
 2005e80:	100690fa 	slli	r3,r2,3
 2005e84:	003f8806 	br	2005ca8 <_free_r+0x134>

02005e88 <__sfvwrite_r>:
 2005e88:	30800217 	ldw	r2,8(r6)
 2005e8c:	defff504 	addi	sp,sp,-44
 2005e90:	df000915 	stw	fp,36(sp)
 2005e94:	dd800715 	stw	r22,28(sp)
 2005e98:	dc800315 	stw	r18,12(sp)
 2005e9c:	dfc00a15 	stw	ra,40(sp)
 2005ea0:	ddc00815 	stw	r23,32(sp)
 2005ea4:	dd400615 	stw	r21,24(sp)
 2005ea8:	dd000515 	stw	r20,20(sp)
 2005eac:	dcc00415 	stw	r19,16(sp)
 2005eb0:	dc400215 	stw	r17,8(sp)
 2005eb4:	dc000115 	stw	r16,4(sp)
 2005eb8:	302d883a 	mov	r22,r6
 2005ebc:	2039883a 	mov	fp,r4
 2005ec0:	2825883a 	mov	r18,r5
 2005ec4:	10001c26 	beq	r2,zero,2005f38 <__sfvwrite_r+0xb0>
 2005ec8:	29c0030b 	ldhu	r7,12(r5)
 2005ecc:	3880020c 	andi	r2,r7,8
 2005ed0:	10002726 	beq	r2,zero,2005f70 <__sfvwrite_r+0xe8>
 2005ed4:	28800417 	ldw	r2,16(r5)
 2005ed8:	10002526 	beq	r2,zero,2005f70 <__sfvwrite_r+0xe8>
 2005edc:	3880008c 	andi	r2,r7,2
 2005ee0:	b5400017 	ldw	r21,0(r22)
 2005ee4:	10002826 	beq	r2,zero,2005f88 <__sfvwrite_r+0x100>
 2005ee8:	0021883a 	mov	r16,zero
 2005eec:	0023883a 	mov	r17,zero
 2005ef0:	880d883a 	mov	r6,r17
 2005ef4:	e009883a 	mov	r4,fp
 2005ef8:	00810004 	movi	r2,1024
 2005efc:	80006e26 	beq	r16,zero,20060b8 <__sfvwrite_r+0x230>
 2005f00:	800f883a 	mov	r7,r16
 2005f04:	91400717 	ldw	r5,28(r18)
 2005f08:	1400012e 	bgeu	r2,r16,2005f10 <__sfvwrite_r+0x88>
 2005f0c:	100f883a 	mov	r7,r2
 2005f10:	90c00917 	ldw	r3,36(r18)
 2005f14:	183ee83a 	callr	r3
 2005f18:	1007883a 	mov	r3,r2
 2005f1c:	80a1c83a 	sub	r16,r16,r2
 2005f20:	88a3883a 	add	r17,r17,r2
 2005f24:	00806d0e 	bge	zero,r2,20060dc <__sfvwrite_r+0x254>
 2005f28:	b0800217 	ldw	r2,8(r22)
 2005f2c:	10c5c83a 	sub	r2,r2,r3
 2005f30:	b0800215 	stw	r2,8(r22)
 2005f34:	103fee1e 	bne	r2,zero,2005ef0 <__sfvwrite_r+0x68>
 2005f38:	0009883a 	mov	r4,zero
 2005f3c:	2005883a 	mov	r2,r4
 2005f40:	dfc00a17 	ldw	ra,40(sp)
 2005f44:	df000917 	ldw	fp,36(sp)
 2005f48:	ddc00817 	ldw	r23,32(sp)
 2005f4c:	dd800717 	ldw	r22,28(sp)
 2005f50:	dd400617 	ldw	r21,24(sp)
 2005f54:	dd000517 	ldw	r20,20(sp)
 2005f58:	dcc00417 	ldw	r19,16(sp)
 2005f5c:	dc800317 	ldw	r18,12(sp)
 2005f60:	dc400217 	ldw	r17,8(sp)
 2005f64:	dc000117 	ldw	r16,4(sp)
 2005f68:	dec00b04 	addi	sp,sp,44
 2005f6c:	f800283a 	ret
 2005f70:	2003a140 	call	2003a14 <__swsetup_r>
 2005f74:	1000e41e 	bne	r2,zero,2006308 <__sfvwrite_r+0x480>
 2005f78:	91c0030b 	ldhu	r7,12(r18)
 2005f7c:	b5400017 	ldw	r21,0(r22)
 2005f80:	3880008c 	andi	r2,r7,2
 2005f84:	103fd81e 	bne	r2,zero,2005ee8 <__sfvwrite_r+0x60>
 2005f88:	3880004c 	andi	r2,r7,1
 2005f8c:	1005003a 	cmpeq	r2,r2,zero
 2005f90:	10005726 	beq	r2,zero,20060f0 <__sfvwrite_r+0x268>
 2005f94:	0029883a 	mov	r20,zero
 2005f98:	002f883a 	mov	r23,zero
 2005f9c:	a0004226 	beq	r20,zero,20060a8 <__sfvwrite_r+0x220>
 2005fa0:	3880800c 	andi	r2,r7,512
 2005fa4:	94000217 	ldw	r16,8(r18)
 2005fa8:	10008b26 	beq	r2,zero,20061d8 <__sfvwrite_r+0x350>
 2005fac:	800d883a 	mov	r6,r16
 2005fb0:	a400a536 	bltu	r20,r16,2006248 <__sfvwrite_r+0x3c0>
 2005fb4:	3881200c 	andi	r2,r7,1152
 2005fb8:	10002726 	beq	r2,zero,2006058 <__sfvwrite_r+0x1d0>
 2005fbc:	90800517 	ldw	r2,20(r18)
 2005fc0:	92000417 	ldw	r8,16(r18)
 2005fc4:	91400017 	ldw	r5,0(r18)
 2005fc8:	1087883a 	add	r3,r2,r2
 2005fcc:	1887883a 	add	r3,r3,r2
 2005fd0:	1808d7fa 	srli	r4,r3,31
 2005fd4:	2a21c83a 	sub	r16,r5,r8
 2005fd8:	80800044 	addi	r2,r16,1
 2005fdc:	20c9883a 	add	r4,r4,r3
 2005fe0:	2027d07a 	srai	r19,r4,1
 2005fe4:	a085883a 	add	r2,r20,r2
 2005fe8:	980d883a 	mov	r6,r19
 2005fec:	9880022e 	bgeu	r19,r2,2005ff8 <__sfvwrite_r+0x170>
 2005ff0:	1027883a 	mov	r19,r2
 2005ff4:	100d883a 	mov	r6,r2
 2005ff8:	3881000c 	andi	r2,r7,1024
 2005ffc:	1000b826 	beq	r2,zero,20062e0 <__sfvwrite_r+0x458>
 2006000:	300b883a 	mov	r5,r6
 2006004:	e009883a 	mov	r4,fp
 2006008:	20067280 	call	2006728 <_malloc_r>
 200600c:	10003126 	beq	r2,zero,20060d4 <__sfvwrite_r+0x24c>
 2006010:	91400417 	ldw	r5,16(r18)
 2006014:	1009883a 	mov	r4,r2
 2006018:	800d883a 	mov	r6,r16
 200601c:	1023883a 	mov	r17,r2
 2006020:	200704c0 	call	200704c <memcpy>
 2006024:	90c0030b 	ldhu	r3,12(r18)
 2006028:	00beffc4 	movi	r2,-1025
 200602c:	1886703a 	and	r3,r3,r2
 2006030:	18c02014 	ori	r3,r3,128
 2006034:	90c0030d 	sth	r3,12(r18)
 2006038:	9c07c83a 	sub	r3,r19,r16
 200603c:	8c05883a 	add	r2,r17,r16
 2006040:	a00d883a 	mov	r6,r20
 2006044:	a021883a 	mov	r16,r20
 2006048:	90800015 	stw	r2,0(r18)
 200604c:	90c00215 	stw	r3,8(r18)
 2006050:	94400415 	stw	r17,16(r18)
 2006054:	94c00515 	stw	r19,20(r18)
 2006058:	91000017 	ldw	r4,0(r18)
 200605c:	b80b883a 	mov	r5,r23
 2006060:	a023883a 	mov	r17,r20
 2006064:	20070ec0 	call	20070ec <memmove>
 2006068:	90c00217 	ldw	r3,8(r18)
 200606c:	90800017 	ldw	r2,0(r18)
 2006070:	a027883a 	mov	r19,r20
 2006074:	1c07c83a 	sub	r3,r3,r16
 2006078:	1405883a 	add	r2,r2,r16
 200607c:	90c00215 	stw	r3,8(r18)
 2006080:	a021883a 	mov	r16,r20
 2006084:	90800015 	stw	r2,0(r18)
 2006088:	b0800217 	ldw	r2,8(r22)
 200608c:	1405c83a 	sub	r2,r2,r16
 2006090:	b0800215 	stw	r2,8(r22)
 2006094:	103fa826 	beq	r2,zero,2005f38 <__sfvwrite_r+0xb0>
 2006098:	a469c83a 	sub	r20,r20,r17
 200609c:	91c0030b 	ldhu	r7,12(r18)
 20060a0:	bcef883a 	add	r23,r23,r19
 20060a4:	a03fbe1e 	bne	r20,zero,2005fa0 <__sfvwrite_r+0x118>
 20060a8:	adc00017 	ldw	r23,0(r21)
 20060ac:	ad000117 	ldw	r20,4(r21)
 20060b0:	ad400204 	addi	r21,r21,8
 20060b4:	003fb906 	br	2005f9c <__sfvwrite_r+0x114>
 20060b8:	ac400017 	ldw	r17,0(r21)
 20060bc:	ac000117 	ldw	r16,4(r21)
 20060c0:	ad400204 	addi	r21,r21,8
 20060c4:	003f8a06 	br	2005ef0 <__sfvwrite_r+0x68>
 20060c8:	91400417 	ldw	r5,16(r18)
 20060cc:	e009883a 	mov	r4,fp
 20060d0:	2005b740 	call	2005b74 <_free_r>
 20060d4:	00800304 	movi	r2,12
 20060d8:	e0800015 	stw	r2,0(fp)
 20060dc:	9080030b 	ldhu	r2,12(r18)
 20060e0:	013fffc4 	movi	r4,-1
 20060e4:	10801014 	ori	r2,r2,64
 20060e8:	9080030d 	sth	r2,12(r18)
 20060ec:	003f9306 	br	2005f3c <__sfvwrite_r+0xb4>
 20060f0:	0027883a 	mov	r19,zero
 20060f4:	002f883a 	mov	r23,zero
 20060f8:	d8000015 	stw	zero,0(sp)
 20060fc:	0029883a 	mov	r20,zero
 2006100:	98001e26 	beq	r19,zero,200617c <__sfvwrite_r+0x2f4>
 2006104:	d8c00017 	ldw	r3,0(sp)
 2006108:	1804c03a 	cmpne	r2,r3,zero
 200610c:	10005e26 	beq	r2,zero,2006288 <__sfvwrite_r+0x400>
 2006110:	9821883a 	mov	r16,r19
 2006114:	a4c0012e 	bgeu	r20,r19,200611c <__sfvwrite_r+0x294>
 2006118:	a021883a 	mov	r16,r20
 200611c:	91000017 	ldw	r4,0(r18)
 2006120:	90800417 	ldw	r2,16(r18)
 2006124:	91800217 	ldw	r6,8(r18)
 2006128:	91c00517 	ldw	r7,20(r18)
 200612c:	1100022e 	bgeu	r2,r4,2006138 <__sfvwrite_r+0x2b0>
 2006130:	31e3883a 	add	r17,r6,r7
 2006134:	8c001616 	blt	r17,r16,2006190 <__sfvwrite_r+0x308>
 2006138:	81c03816 	blt	r16,r7,200621c <__sfvwrite_r+0x394>
 200613c:	90c00917 	ldw	r3,36(r18)
 2006140:	91400717 	ldw	r5,28(r18)
 2006144:	e009883a 	mov	r4,fp
 2006148:	b80d883a 	mov	r6,r23
 200614c:	183ee83a 	callr	r3
 2006150:	1023883a 	mov	r17,r2
 2006154:	00bfe10e 	bge	zero,r2,20060dc <__sfvwrite_r+0x254>
 2006158:	a469c83a 	sub	r20,r20,r17
 200615c:	a0001826 	beq	r20,zero,20061c0 <__sfvwrite_r+0x338>
 2006160:	b0800217 	ldw	r2,8(r22)
 2006164:	1445c83a 	sub	r2,r2,r17
 2006168:	b0800215 	stw	r2,8(r22)
 200616c:	103f7226 	beq	r2,zero,2005f38 <__sfvwrite_r+0xb0>
 2006170:	9c67c83a 	sub	r19,r19,r17
 2006174:	bc6f883a 	add	r23,r23,r17
 2006178:	983fe21e 	bne	r19,zero,2006104 <__sfvwrite_r+0x27c>
 200617c:	adc00017 	ldw	r23,0(r21)
 2006180:	acc00117 	ldw	r19,4(r21)
 2006184:	ad400204 	addi	r21,r21,8
 2006188:	d8000015 	stw	zero,0(sp)
 200618c:	003fdc06 	br	2006100 <__sfvwrite_r+0x278>
 2006190:	b80b883a 	mov	r5,r23
 2006194:	880d883a 	mov	r6,r17
 2006198:	20070ec0 	call	20070ec <memmove>
 200619c:	90c00017 	ldw	r3,0(r18)
 20061a0:	e009883a 	mov	r4,fp
 20061a4:	900b883a 	mov	r5,r18
 20061a8:	1c47883a 	add	r3,r3,r17
 20061ac:	90c00015 	stw	r3,0(r18)
 20061b0:	200531c0 	call	200531c <_fflush_r>
 20061b4:	103fc91e 	bne	r2,zero,20060dc <__sfvwrite_r+0x254>
 20061b8:	a469c83a 	sub	r20,r20,r17
 20061bc:	a03fe81e 	bne	r20,zero,2006160 <__sfvwrite_r+0x2d8>
 20061c0:	e009883a 	mov	r4,fp
 20061c4:	900b883a 	mov	r5,r18
 20061c8:	200531c0 	call	200531c <_fflush_r>
 20061cc:	103fc31e 	bne	r2,zero,20060dc <__sfvwrite_r+0x254>
 20061d0:	d8000015 	stw	zero,0(sp)
 20061d4:	003fe206 	br	2006160 <__sfvwrite_r+0x2d8>
 20061d8:	91000017 	ldw	r4,0(r18)
 20061dc:	90800417 	ldw	r2,16(r18)
 20061e0:	1100022e 	bgeu	r2,r4,20061ec <__sfvwrite_r+0x364>
 20061e4:	8023883a 	mov	r17,r16
 20061e8:	85003136 	bltu	r16,r20,20062b0 <__sfvwrite_r+0x428>
 20061ec:	91c00517 	ldw	r7,20(r18)
 20061f0:	a1c01836 	bltu	r20,r7,2006254 <__sfvwrite_r+0x3cc>
 20061f4:	90c00917 	ldw	r3,36(r18)
 20061f8:	91400717 	ldw	r5,28(r18)
 20061fc:	e009883a 	mov	r4,fp
 2006200:	b80d883a 	mov	r6,r23
 2006204:	183ee83a 	callr	r3
 2006208:	1021883a 	mov	r16,r2
 200620c:	00bfb30e 	bge	zero,r2,20060dc <__sfvwrite_r+0x254>
 2006210:	1023883a 	mov	r17,r2
 2006214:	1027883a 	mov	r19,r2
 2006218:	003f9b06 	br	2006088 <__sfvwrite_r+0x200>
 200621c:	b80b883a 	mov	r5,r23
 2006220:	800d883a 	mov	r6,r16
 2006224:	20070ec0 	call	20070ec <memmove>
 2006228:	90c00217 	ldw	r3,8(r18)
 200622c:	90800017 	ldw	r2,0(r18)
 2006230:	8023883a 	mov	r17,r16
 2006234:	1c07c83a 	sub	r3,r3,r16
 2006238:	1405883a 	add	r2,r2,r16
 200623c:	90c00215 	stw	r3,8(r18)
 2006240:	90800015 	stw	r2,0(r18)
 2006244:	003fc406 	br	2006158 <__sfvwrite_r+0x2d0>
 2006248:	a00d883a 	mov	r6,r20
 200624c:	a021883a 	mov	r16,r20
 2006250:	003f8106 	br	2006058 <__sfvwrite_r+0x1d0>
 2006254:	b80b883a 	mov	r5,r23
 2006258:	a00d883a 	mov	r6,r20
 200625c:	20070ec0 	call	20070ec <memmove>
 2006260:	90c00217 	ldw	r3,8(r18)
 2006264:	90800017 	ldw	r2,0(r18)
 2006268:	a021883a 	mov	r16,r20
 200626c:	1d07c83a 	sub	r3,r3,r20
 2006270:	1505883a 	add	r2,r2,r20
 2006274:	a023883a 	mov	r17,r20
 2006278:	a027883a 	mov	r19,r20
 200627c:	90c00215 	stw	r3,8(r18)
 2006280:	90800015 	stw	r2,0(r18)
 2006284:	003f8006 	br	2006088 <__sfvwrite_r+0x200>
 2006288:	b809883a 	mov	r4,r23
 200628c:	01400284 	movi	r5,10
 2006290:	980d883a 	mov	r6,r19
 2006294:	2006f680 	call	2006f68 <memchr>
 2006298:	10001726 	beq	r2,zero,20062f8 <__sfvwrite_r+0x470>
 200629c:	15c5c83a 	sub	r2,r2,r23
 20062a0:	15000044 	addi	r20,r2,1
 20062a4:	00800044 	movi	r2,1
 20062a8:	d8800015 	stw	r2,0(sp)
 20062ac:	003f9806 	br	2006110 <__sfvwrite_r+0x288>
 20062b0:	b80b883a 	mov	r5,r23
 20062b4:	800d883a 	mov	r6,r16
 20062b8:	20070ec0 	call	20070ec <memmove>
 20062bc:	90c00017 	ldw	r3,0(r18)
 20062c0:	e009883a 	mov	r4,fp
 20062c4:	900b883a 	mov	r5,r18
 20062c8:	1c07883a 	add	r3,r3,r16
 20062cc:	90c00015 	stw	r3,0(r18)
 20062d0:	8027883a 	mov	r19,r16
 20062d4:	200531c0 	call	200531c <_fflush_r>
 20062d8:	103f6b26 	beq	r2,zero,2006088 <__sfvwrite_r+0x200>
 20062dc:	003f7f06 	br	20060dc <__sfvwrite_r+0x254>
 20062e0:	400b883a 	mov	r5,r8
 20062e4:	e009883a 	mov	r4,fp
 20062e8:	20082580 	call	2008258 <_realloc_r>
 20062ec:	103f7626 	beq	r2,zero,20060c8 <__sfvwrite_r+0x240>
 20062f0:	1023883a 	mov	r17,r2
 20062f4:	003f5006 	br	2006038 <__sfvwrite_r+0x1b0>
 20062f8:	00c00044 	movi	r3,1
 20062fc:	9d000044 	addi	r20,r19,1
 2006300:	d8c00015 	stw	r3,0(sp)
 2006304:	003f8206 	br	2006110 <__sfvwrite_r+0x288>
 2006308:	9080030b 	ldhu	r2,12(r18)
 200630c:	00c00244 	movi	r3,9
 2006310:	013fffc4 	movi	r4,-1
 2006314:	10801014 	ori	r2,r2,64
 2006318:	9080030d 	sth	r2,12(r18)
 200631c:	e0c00015 	stw	r3,0(fp)
 2006320:	003f0606 	br	2005f3c <__sfvwrite_r+0xb4>

02006324 <_fwalk_reent>:
 2006324:	defff704 	addi	sp,sp,-36
 2006328:	dcc00315 	stw	r19,12(sp)
 200632c:	24c0b804 	addi	r19,r4,736
 2006330:	dd800615 	stw	r22,24(sp)
 2006334:	dd400515 	stw	r21,20(sp)
 2006338:	dfc00815 	stw	ra,32(sp)
 200633c:	ddc00715 	stw	r23,28(sp)
 2006340:	dd000415 	stw	r20,16(sp)
 2006344:	dc800215 	stw	r18,8(sp)
 2006348:	dc400115 	stw	r17,4(sp)
 200634c:	dc000015 	stw	r16,0(sp)
 2006350:	202b883a 	mov	r21,r4
 2006354:	282d883a 	mov	r22,r5
 2006358:	20055a40 	call	20055a4 <__sfp_lock_acquire>
 200635c:	98002126 	beq	r19,zero,20063e4 <_fwalk_reent+0xc0>
 2006360:	002f883a 	mov	r23,zero
 2006364:	9c800117 	ldw	r18,4(r19)
 2006368:	9c000217 	ldw	r16,8(r19)
 200636c:	90bfffc4 	addi	r2,r18,-1
 2006370:	10000d16 	blt	r2,zero,20063a8 <_fwalk_reent+0x84>
 2006374:	0023883a 	mov	r17,zero
 2006378:	053fffc4 	movi	r20,-1
 200637c:	8080030f 	ldh	r2,12(r16)
 2006380:	8c400044 	addi	r17,r17,1
 2006384:	10000626 	beq	r2,zero,20063a0 <_fwalk_reent+0x7c>
 2006388:	8080038f 	ldh	r2,14(r16)
 200638c:	800b883a 	mov	r5,r16
 2006390:	a809883a 	mov	r4,r21
 2006394:	15000226 	beq	r2,r20,20063a0 <_fwalk_reent+0x7c>
 2006398:	b03ee83a 	callr	r22
 200639c:	b8aeb03a 	or	r23,r23,r2
 20063a0:	84001704 	addi	r16,r16,92
 20063a4:	947ff51e 	bne	r18,r17,200637c <_fwalk_reent+0x58>
 20063a8:	9cc00017 	ldw	r19,0(r19)
 20063ac:	983fed1e 	bne	r19,zero,2006364 <_fwalk_reent+0x40>
 20063b0:	20055a80 	call	20055a8 <__sfp_lock_release>
 20063b4:	b805883a 	mov	r2,r23
 20063b8:	dfc00817 	ldw	ra,32(sp)
 20063bc:	ddc00717 	ldw	r23,28(sp)
 20063c0:	dd800617 	ldw	r22,24(sp)
 20063c4:	dd400517 	ldw	r21,20(sp)
 20063c8:	dd000417 	ldw	r20,16(sp)
 20063cc:	dcc00317 	ldw	r19,12(sp)
 20063d0:	dc800217 	ldw	r18,8(sp)
 20063d4:	dc400117 	ldw	r17,4(sp)
 20063d8:	dc000017 	ldw	r16,0(sp)
 20063dc:	dec00904 	addi	sp,sp,36
 20063e0:	f800283a 	ret
 20063e4:	002f883a 	mov	r23,zero
 20063e8:	003ff106 	br	20063b0 <_fwalk_reent+0x8c>

020063ec <_fwalk>:
 20063ec:	defff804 	addi	sp,sp,-32
 20063f0:	dcc00315 	stw	r19,12(sp)
 20063f4:	24c0b804 	addi	r19,r4,736
 20063f8:	dd400515 	stw	r21,20(sp)
 20063fc:	dfc00715 	stw	ra,28(sp)
 2006400:	dd800615 	stw	r22,24(sp)
 2006404:	dd000415 	stw	r20,16(sp)
 2006408:	dc800215 	stw	r18,8(sp)
 200640c:	dc400115 	stw	r17,4(sp)
 2006410:	dc000015 	stw	r16,0(sp)
 2006414:	282b883a 	mov	r21,r5
 2006418:	20055a40 	call	20055a4 <__sfp_lock_acquire>
 200641c:	98001f26 	beq	r19,zero,200649c <_fwalk+0xb0>
 2006420:	002d883a 	mov	r22,zero
 2006424:	9c800117 	ldw	r18,4(r19)
 2006428:	9c000217 	ldw	r16,8(r19)
 200642c:	90bfffc4 	addi	r2,r18,-1
 2006430:	10000c16 	blt	r2,zero,2006464 <_fwalk+0x78>
 2006434:	0023883a 	mov	r17,zero
 2006438:	053fffc4 	movi	r20,-1
 200643c:	8080030f 	ldh	r2,12(r16)
 2006440:	8c400044 	addi	r17,r17,1
 2006444:	10000526 	beq	r2,zero,200645c <_fwalk+0x70>
 2006448:	8080038f 	ldh	r2,14(r16)
 200644c:	8009883a 	mov	r4,r16
 2006450:	15000226 	beq	r2,r20,200645c <_fwalk+0x70>
 2006454:	a83ee83a 	callr	r21
 2006458:	b0acb03a 	or	r22,r22,r2
 200645c:	84001704 	addi	r16,r16,92
 2006460:	947ff61e 	bne	r18,r17,200643c <_fwalk+0x50>
 2006464:	9cc00017 	ldw	r19,0(r19)
 2006468:	983fee1e 	bne	r19,zero,2006424 <_fwalk+0x38>
 200646c:	20055a80 	call	20055a8 <__sfp_lock_release>
 2006470:	b005883a 	mov	r2,r22
 2006474:	dfc00717 	ldw	ra,28(sp)
 2006478:	dd800617 	ldw	r22,24(sp)
 200647c:	dd400517 	ldw	r21,20(sp)
 2006480:	dd000417 	ldw	r20,16(sp)
 2006484:	dcc00317 	ldw	r19,12(sp)
 2006488:	dc800217 	ldw	r18,8(sp)
 200648c:	dc400117 	ldw	r17,4(sp)
 2006490:	dc000017 	ldw	r16,0(sp)
 2006494:	dec00804 	addi	sp,sp,32
 2006498:	f800283a 	ret
 200649c:	002d883a 	mov	r22,zero
 20064a0:	003ff206 	br	200646c <_fwalk+0x80>

020064a4 <iswspace>:
 20064a4:	00803fc4 	movi	r2,255
 20064a8:	0007883a 	mov	r3,zero
 20064ac:	11000636 	bltu	r2,r4,20064c8 <iswspace+0x24>
 20064b0:	00808074 	movhi	r2,513
 20064b4:	10899504 	addi	r2,r2,9812
 20064b8:	10c00017 	ldw	r3,0(r2)
 20064bc:	1907883a 	add	r3,r3,r4
 20064c0:	18800003 	ldbu	r2,0(r3)
 20064c4:	10c0020c 	andi	r3,r2,8
 20064c8:	1805883a 	mov	r2,r3
 20064cc:	f800283a 	ret

020064d0 <__locale_charset>:
 20064d0:	d0a00417 	ldw	r2,-32752(gp)
 20064d4:	f800283a 	ret

020064d8 <_localeconv_r>:
 20064d8:	00808074 	movhi	r2,513
 20064dc:	10863304 	addi	r2,r2,6348
 20064e0:	f800283a 	ret

020064e4 <localeconv>:
 20064e4:	00808074 	movhi	r2,513
 20064e8:	10899604 	addi	r2,r2,9816
 20064ec:	11000017 	ldw	r4,0(r2)
 20064f0:	20064d81 	jmpi	20064d8 <_localeconv_r>

020064f4 <_setlocale_r>:
 20064f4:	defffc04 	addi	sp,sp,-16
 20064f8:	00c08074 	movhi	r3,513
 20064fc:	18c62e04 	addi	r3,r3,6328
 2006500:	dc800215 	stw	r18,8(sp)
 2006504:	dc400115 	stw	r17,4(sp)
 2006508:	dc000015 	stw	r16,0(sp)
 200650c:	2023883a 	mov	r17,r4
 2006510:	2825883a 	mov	r18,r5
 2006514:	dfc00315 	stw	ra,12(sp)
 2006518:	3021883a 	mov	r16,r6
 200651c:	3009883a 	mov	r4,r6
 2006520:	180b883a 	mov	r5,r3
 2006524:	30000926 	beq	r6,zero,200654c <_setlocale_r+0x58>
 2006528:	2008df40 	call	2008df4 <strcmp>
 200652c:	8009883a 	mov	r4,r16
 2006530:	01408074 	movhi	r5,513
 2006534:	29456e04 	addi	r5,r5,5560
 2006538:	10000b1e 	bne	r2,zero,2006568 <_setlocale_r+0x74>
 200653c:	8c000d15 	stw	r16,52(r17)
 2006540:	8c800c15 	stw	r18,48(r17)
 2006544:	00c08074 	movhi	r3,513
 2006548:	18c62e04 	addi	r3,r3,6328
 200654c:	1805883a 	mov	r2,r3
 2006550:	dfc00317 	ldw	ra,12(sp)
 2006554:	dc800217 	ldw	r18,8(sp)
 2006558:	dc400117 	ldw	r17,4(sp)
 200655c:	dc000017 	ldw	r16,0(sp)
 2006560:	dec00404 	addi	sp,sp,16
 2006564:	f800283a 	ret
 2006568:	2008df40 	call	2008df4 <strcmp>
 200656c:	0007883a 	mov	r3,zero
 2006570:	103ff226 	beq	r2,zero,200653c <_setlocale_r+0x48>
 2006574:	003ff506 	br	200654c <_setlocale_r+0x58>

02006578 <setlocale>:
 2006578:	01808074 	movhi	r6,513
 200657c:	31899604 	addi	r6,r6,9816
 2006580:	2007883a 	mov	r3,r4
 2006584:	31000017 	ldw	r4,0(r6)
 2006588:	280d883a 	mov	r6,r5
 200658c:	180b883a 	mov	r5,r3
 2006590:	20064f41 	jmpi	20064f4 <_setlocale_r>

02006594 <__smakebuf_r>:
 2006594:	2880030b 	ldhu	r2,12(r5)
 2006598:	deffed04 	addi	sp,sp,-76
 200659c:	dc401015 	stw	r17,64(sp)
 20065a0:	1080008c 	andi	r2,r2,2
 20065a4:	dc000f15 	stw	r16,60(sp)
 20065a8:	dfc01215 	stw	ra,72(sp)
 20065ac:	dc801115 	stw	r18,68(sp)
 20065b0:	2821883a 	mov	r16,r5
 20065b4:	2023883a 	mov	r17,r4
 20065b8:	10000b26 	beq	r2,zero,20065e8 <__smakebuf_r+0x54>
 20065bc:	28c010c4 	addi	r3,r5,67
 20065c0:	00800044 	movi	r2,1
 20065c4:	28800515 	stw	r2,20(r5)
 20065c8:	28c00415 	stw	r3,16(r5)
 20065cc:	28c00015 	stw	r3,0(r5)
 20065d0:	dfc01217 	ldw	ra,72(sp)
 20065d4:	dc801117 	ldw	r18,68(sp)
 20065d8:	dc401017 	ldw	r17,64(sp)
 20065dc:	dc000f17 	ldw	r16,60(sp)
 20065e0:	dec01304 	addi	sp,sp,76
 20065e4:	f800283a 	ret
 20065e8:	2940038f 	ldh	r5,14(r5)
 20065ec:	28002116 	blt	r5,zero,2006674 <__smakebuf_r+0xe0>
 20065f0:	d80d883a 	mov	r6,sp
 20065f4:	200b5a80 	call	200b5a8 <_fstat_r>
 20065f8:	10001e16 	blt	r2,zero,2006674 <__smakebuf_r+0xe0>
 20065fc:	d8800117 	ldw	r2,4(sp)
 2006600:	00e00014 	movui	r3,32768
 2006604:	113c000c 	andi	r4,r2,61440
 2006608:	20c03126 	beq	r4,r3,20066d0 <__smakebuf_r+0x13c>
 200660c:	8080030b 	ldhu	r2,12(r16)
 2006610:	00c80004 	movi	r3,8192
 2006614:	10820014 	ori	r2,r2,2048
 2006618:	8080030d 	sth	r2,12(r16)
 200661c:	20c01e26 	beq	r4,r3,2006698 <__smakebuf_r+0x104>
 2006620:	04810004 	movi	r18,1024
 2006624:	8809883a 	mov	r4,r17
 2006628:	900b883a 	mov	r5,r18
 200662c:	20067280 	call	2006728 <_malloc_r>
 2006630:	1009883a 	mov	r4,r2
 2006634:	10003126 	beq	r2,zero,20066fc <__smakebuf_r+0x168>
 2006638:	80c0030b 	ldhu	r3,12(r16)
 200663c:	00808034 	movhi	r2,512
 2006640:	1095a604 	addi	r2,r2,22168
 2006644:	88800f15 	stw	r2,60(r17)
 2006648:	18c02014 	ori	r3,r3,128
 200664c:	84800515 	stw	r18,20(r16)
 2006650:	80c0030d 	sth	r3,12(r16)
 2006654:	81000415 	stw	r4,16(r16)
 2006658:	81000015 	stw	r4,0(r16)
 200665c:	dfc01217 	ldw	ra,72(sp)
 2006660:	dc801117 	ldw	r18,68(sp)
 2006664:	dc401017 	ldw	r17,64(sp)
 2006668:	dc000f17 	ldw	r16,60(sp)
 200666c:	dec01304 	addi	sp,sp,76
 2006670:	f800283a 	ret
 2006674:	80c0030b 	ldhu	r3,12(r16)
 2006678:	1880200c 	andi	r2,r3,128
 200667c:	10000426 	beq	r2,zero,2006690 <__smakebuf_r+0xfc>
 2006680:	04801004 	movi	r18,64
 2006684:	18820014 	ori	r2,r3,2048
 2006688:	8080030d 	sth	r2,12(r16)
 200668c:	003fe506 	br	2006624 <__smakebuf_r+0x90>
 2006690:	04810004 	movi	r18,1024
 2006694:	003ffb06 	br	2006684 <__smakebuf_r+0xf0>
 2006698:	8140038f 	ldh	r5,14(r16)
 200669c:	8809883a 	mov	r4,r17
 20066a0:	200c1a40 	call	200c1a4 <_isatty_r>
 20066a4:	103fde26 	beq	r2,zero,2006620 <__smakebuf_r+0x8c>
 20066a8:	8080030b 	ldhu	r2,12(r16)
 20066ac:	80c010c4 	addi	r3,r16,67
 20066b0:	04810004 	movi	r18,1024
 20066b4:	10800054 	ori	r2,r2,1
 20066b8:	8080030d 	sth	r2,12(r16)
 20066bc:	00800044 	movi	r2,1
 20066c0:	80c00415 	stw	r3,16(r16)
 20066c4:	80800515 	stw	r2,20(r16)
 20066c8:	80c00015 	stw	r3,0(r16)
 20066cc:	003fd506 	br	2006624 <__smakebuf_r+0x90>
 20066d0:	80c00a17 	ldw	r3,40(r16)
 20066d4:	00808074 	movhi	r2,513
 20066d8:	10a32c04 	addi	r2,r2,-29520
 20066dc:	18bfcb1e 	bne	r3,r2,200660c <__smakebuf_r+0x78>
 20066e0:	8080030b 	ldhu	r2,12(r16)
 20066e4:	00c10004 	movi	r3,1024
 20066e8:	1825883a 	mov	r18,r3
 20066ec:	10c4b03a 	or	r2,r2,r3
 20066f0:	8080030d 	sth	r2,12(r16)
 20066f4:	80c01315 	stw	r3,76(r16)
 20066f8:	003fca06 	br	2006624 <__smakebuf_r+0x90>
 20066fc:	8100030b 	ldhu	r4,12(r16)
 2006700:	2080800c 	andi	r2,r4,512
 2006704:	103fb21e 	bne	r2,zero,20065d0 <__smakebuf_r+0x3c>
 2006708:	80c010c4 	addi	r3,r16,67
 200670c:	21000094 	ori	r4,r4,2
 2006710:	00800044 	movi	r2,1
 2006714:	80800515 	stw	r2,20(r16)
 2006718:	8100030d 	sth	r4,12(r16)
 200671c:	80c00415 	stw	r3,16(r16)
 2006720:	80c00015 	stw	r3,0(r16)
 2006724:	003faa06 	br	20065d0 <__smakebuf_r+0x3c>

02006728 <_malloc_r>:
 2006728:	defff604 	addi	sp,sp,-40
 200672c:	28c002c4 	addi	r3,r5,11
 2006730:	00800584 	movi	r2,22
 2006734:	dc800215 	stw	r18,8(sp)
 2006738:	dfc00915 	stw	ra,36(sp)
 200673c:	df000815 	stw	fp,32(sp)
 2006740:	ddc00715 	stw	r23,28(sp)
 2006744:	dd800615 	stw	r22,24(sp)
 2006748:	dd400515 	stw	r21,20(sp)
 200674c:	dd000415 	stw	r20,16(sp)
 2006750:	dcc00315 	stw	r19,12(sp)
 2006754:	dc400115 	stw	r17,4(sp)
 2006758:	dc000015 	stw	r16,0(sp)
 200675c:	2025883a 	mov	r18,r4
 2006760:	10c01236 	bltu	r2,r3,20067ac <_malloc_r+0x84>
 2006764:	04400404 	movi	r17,16
 2006768:	8940142e 	bgeu	r17,r5,20067bc <_malloc_r+0x94>
 200676c:	00800304 	movi	r2,12
 2006770:	0007883a 	mov	r3,zero
 2006774:	90800015 	stw	r2,0(r18)
 2006778:	1805883a 	mov	r2,r3
 200677c:	dfc00917 	ldw	ra,36(sp)
 2006780:	df000817 	ldw	fp,32(sp)
 2006784:	ddc00717 	ldw	r23,28(sp)
 2006788:	dd800617 	ldw	r22,24(sp)
 200678c:	dd400517 	ldw	r21,20(sp)
 2006790:	dd000417 	ldw	r20,16(sp)
 2006794:	dcc00317 	ldw	r19,12(sp)
 2006798:	dc800217 	ldw	r18,8(sp)
 200679c:	dc400117 	ldw	r17,4(sp)
 20067a0:	dc000017 	ldw	r16,0(sp)
 20067a4:	dec00a04 	addi	sp,sp,40
 20067a8:	f800283a 	ret
 20067ac:	00bffe04 	movi	r2,-8
 20067b0:	18a2703a 	and	r17,r3,r2
 20067b4:	883fed16 	blt	r17,zero,200676c <_malloc_r+0x44>
 20067b8:	897fec36 	bltu	r17,r5,200676c <_malloc_r+0x44>
 20067bc:	9009883a 	mov	r4,r18
 20067c0:	200f3bc0 	call	200f3bc <__malloc_lock>
 20067c4:	00807dc4 	movi	r2,503
 20067c8:	14402b2e 	bgeu	r2,r17,2006878 <_malloc_r+0x150>
 20067cc:	8806d27a 	srli	r3,r17,9
 20067d0:	18003f1e 	bne	r3,zero,20068d0 <_malloc_r+0x1a8>
 20067d4:	880cd0fa 	srli	r6,r17,3
 20067d8:	300490fa 	slli	r2,r6,3
 20067dc:	02c08074 	movhi	r11,513
 20067e0:	5ac7ee04 	addi	r11,r11,8120
 20067e4:	12cb883a 	add	r5,r2,r11
 20067e8:	2c000317 	ldw	r16,12(r5)
 20067ec:	580f883a 	mov	r7,r11
 20067f0:	2c00041e 	bne	r5,r16,2006804 <_malloc_r+0xdc>
 20067f4:	00000a06 	br	2006820 <_malloc_r+0xf8>
 20067f8:	1800860e 	bge	r3,zero,2006a14 <_malloc_r+0x2ec>
 20067fc:	84000317 	ldw	r16,12(r16)
 2006800:	2c000726 	beq	r5,r16,2006820 <_malloc_r+0xf8>
 2006804:	80800117 	ldw	r2,4(r16)
 2006808:	00ffff04 	movi	r3,-4
 200680c:	10c8703a 	and	r4,r2,r3
 2006810:	2447c83a 	sub	r3,r4,r17
 2006814:	008003c4 	movi	r2,15
 2006818:	10fff70e 	bge	r2,r3,20067f8 <_malloc_r+0xd0>
 200681c:	31bfffc4 	addi	r6,r6,-1
 2006820:	32400044 	addi	r9,r6,1
 2006824:	02808074 	movhi	r10,513
 2006828:	5287f004 	addi	r10,r10,8128
 200682c:	54000217 	ldw	r16,8(r10)
 2006830:	8280a026 	beq	r16,r10,2006ab4 <_malloc_r+0x38c>
 2006834:	80800117 	ldw	r2,4(r16)
 2006838:	00ffff04 	movi	r3,-4
 200683c:	10ca703a 	and	r5,r2,r3
 2006840:	2c4dc83a 	sub	r6,r5,r17
 2006844:	008003c4 	movi	r2,15
 2006848:	11808316 	blt	r2,r6,2006a58 <_malloc_r+0x330>
 200684c:	52800315 	stw	r10,12(r10)
 2006850:	52800215 	stw	r10,8(r10)
 2006854:	30002916 	blt	r6,zero,20068fc <_malloc_r+0x1d4>
 2006858:	8147883a 	add	r3,r16,r5
 200685c:	18800117 	ldw	r2,4(r3)
 2006860:	9009883a 	mov	r4,r18
 2006864:	10800054 	ori	r2,r2,1
 2006868:	18800115 	stw	r2,4(r3)
 200686c:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2006870:	80c00204 	addi	r3,r16,8
 2006874:	003fc006 	br	2006778 <_malloc_r+0x50>
 2006878:	02c08074 	movhi	r11,513
 200687c:	5ac7ee04 	addi	r11,r11,8120
 2006880:	8ac5883a 	add	r2,r17,r11
 2006884:	14000317 	ldw	r16,12(r2)
 2006888:	580f883a 	mov	r7,r11
 200688c:	8806d0fa 	srli	r3,r17,3
 2006890:	14006c26 	beq	r2,r16,2006a44 <_malloc_r+0x31c>
 2006894:	80c00117 	ldw	r3,4(r16)
 2006898:	00bfff04 	movi	r2,-4
 200689c:	81800317 	ldw	r6,12(r16)
 20068a0:	1886703a 	and	r3,r3,r2
 20068a4:	80c7883a 	add	r3,r16,r3
 20068a8:	18800117 	ldw	r2,4(r3)
 20068ac:	81400217 	ldw	r5,8(r16)
 20068b0:	9009883a 	mov	r4,r18
 20068b4:	10800054 	ori	r2,r2,1
 20068b8:	18800115 	stw	r2,4(r3)
 20068bc:	31400215 	stw	r5,8(r6)
 20068c0:	29800315 	stw	r6,12(r5)
 20068c4:	200f3dc0 	call	200f3dc <__malloc_unlock>
 20068c8:	80c00204 	addi	r3,r16,8
 20068cc:	003faa06 	br	2006778 <_malloc_r+0x50>
 20068d0:	00800104 	movi	r2,4
 20068d4:	10c0052e 	bgeu	r2,r3,20068ec <_malloc_r+0x1c4>
 20068d8:	00800504 	movi	r2,20
 20068dc:	10c07836 	bltu	r2,r3,2006ac0 <_malloc_r+0x398>
 20068e0:	198016c4 	addi	r6,r3,91
 20068e4:	300490fa 	slli	r2,r6,3
 20068e8:	003fbc06 	br	20067dc <_malloc_r+0xb4>
 20068ec:	8804d1ba 	srli	r2,r17,6
 20068f0:	11800e04 	addi	r6,r2,56
 20068f4:	300490fa 	slli	r2,r6,3
 20068f8:	003fb806 	br	20067dc <_malloc_r+0xb4>
 20068fc:	00807fc4 	movi	r2,511
 2006900:	1140bb36 	bltu	r2,r5,2006bf0 <_malloc_r+0x4c8>
 2006904:	2806d0fa 	srli	r3,r5,3
 2006908:	573ffe04 	addi	fp,r10,-8
 200690c:	00800044 	movi	r2,1
 2006910:	180890fa 	slli	r4,r3,3
 2006914:	1807d0ba 	srai	r3,r3,2
 2006918:	e1c00117 	ldw	r7,4(fp)
 200691c:	5909883a 	add	r4,r11,r4
 2006920:	21400217 	ldw	r5,8(r4)
 2006924:	10c4983a 	sll	r2,r2,r3
 2006928:	81000315 	stw	r4,12(r16)
 200692c:	81400215 	stw	r5,8(r16)
 2006930:	388eb03a 	or	r7,r7,r2
 2006934:	2c000315 	stw	r16,12(r5)
 2006938:	24000215 	stw	r16,8(r4)
 200693c:	e1c00115 	stw	r7,4(fp)
 2006940:	4807883a 	mov	r3,r9
 2006944:	4800cd16 	blt	r9,zero,2006c7c <_malloc_r+0x554>
 2006948:	1807d0ba 	srai	r3,r3,2
 200694c:	00800044 	movi	r2,1
 2006950:	10c8983a 	sll	r4,r2,r3
 2006954:	39004436 	bltu	r7,r4,2006a68 <_malloc_r+0x340>
 2006958:	21c4703a 	and	r2,r4,r7
 200695c:	10000a1e 	bne	r2,zero,2006988 <_malloc_r+0x260>
 2006960:	2109883a 	add	r4,r4,r4
 2006964:	00bfff04 	movi	r2,-4
 2006968:	4884703a 	and	r2,r9,r2
 200696c:	3906703a 	and	r3,r7,r4
 2006970:	12400104 	addi	r9,r2,4
 2006974:	1800041e 	bne	r3,zero,2006988 <_malloc_r+0x260>
 2006978:	2109883a 	add	r4,r4,r4
 200697c:	3904703a 	and	r2,r7,r4
 2006980:	4a400104 	addi	r9,r9,4
 2006984:	103ffc26 	beq	r2,zero,2006978 <_malloc_r+0x250>
 2006988:	480490fa 	slli	r2,r9,3
 200698c:	4819883a 	mov	r12,r9
 2006990:	023fff04 	movi	r8,-4
 2006994:	589b883a 	add	r13,r11,r2
 2006998:	6807883a 	mov	r3,r13
 200699c:	014003c4 	movi	r5,15
 20069a0:	1c000317 	ldw	r16,12(r3)
 20069a4:	1c00041e 	bne	r3,r16,20069b8 <_malloc_r+0x290>
 20069a8:	0000a706 	br	2006c48 <_malloc_r+0x520>
 20069ac:	3000ab0e 	bge	r6,zero,2006c5c <_malloc_r+0x534>
 20069b0:	84000317 	ldw	r16,12(r16)
 20069b4:	1c00a426 	beq	r3,r16,2006c48 <_malloc_r+0x520>
 20069b8:	80800117 	ldw	r2,4(r16)
 20069bc:	1204703a 	and	r2,r2,r8
 20069c0:	144dc83a 	sub	r6,r2,r17
 20069c4:	29bff90e 	bge	r5,r6,20069ac <_malloc_r+0x284>
 20069c8:	81000317 	ldw	r4,12(r16)
 20069cc:	80c00217 	ldw	r3,8(r16)
 20069d0:	89400054 	ori	r5,r17,1
 20069d4:	8445883a 	add	r2,r16,r17
 20069d8:	20c00215 	stw	r3,8(r4)
 20069dc:	19000315 	stw	r4,12(r3)
 20069e0:	81400115 	stw	r5,4(r16)
 20069e4:	1187883a 	add	r3,r2,r6
 20069e8:	31000054 	ori	r4,r6,1
 20069ec:	50800315 	stw	r2,12(r10)
 20069f0:	50800215 	stw	r2,8(r10)
 20069f4:	19800015 	stw	r6,0(r3)
 20069f8:	11000115 	stw	r4,4(r2)
 20069fc:	12800215 	stw	r10,8(r2)
 2006a00:	12800315 	stw	r10,12(r2)
 2006a04:	9009883a 	mov	r4,r18
 2006a08:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2006a0c:	80c00204 	addi	r3,r16,8
 2006a10:	003f5906 	br	2006778 <_malloc_r+0x50>
 2006a14:	8109883a 	add	r4,r16,r4
 2006a18:	20800117 	ldw	r2,4(r4)
 2006a1c:	80c00217 	ldw	r3,8(r16)
 2006a20:	81400317 	ldw	r5,12(r16)
 2006a24:	10800054 	ori	r2,r2,1
 2006a28:	20800115 	stw	r2,4(r4)
 2006a2c:	28c00215 	stw	r3,8(r5)
 2006a30:	19400315 	stw	r5,12(r3)
 2006a34:	9009883a 	mov	r4,r18
 2006a38:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2006a3c:	80c00204 	addi	r3,r16,8
 2006a40:	003f4d06 	br	2006778 <_malloc_r+0x50>
 2006a44:	80800204 	addi	r2,r16,8
 2006a48:	14000317 	ldw	r16,12(r2)
 2006a4c:	143f911e 	bne	r2,r16,2006894 <_malloc_r+0x16c>
 2006a50:	1a400084 	addi	r9,r3,2
 2006a54:	003f7306 	br	2006824 <_malloc_r+0xfc>
 2006a58:	88c00054 	ori	r3,r17,1
 2006a5c:	8445883a 	add	r2,r16,r17
 2006a60:	80c00115 	stw	r3,4(r16)
 2006a64:	003fdf06 	br	20069e4 <_malloc_r+0x2bc>
 2006a68:	e4000217 	ldw	r16,8(fp)
 2006a6c:	00bfff04 	movi	r2,-4
 2006a70:	80c00117 	ldw	r3,4(r16)
 2006a74:	802d883a 	mov	r22,r16
 2006a78:	18aa703a 	and	r21,r3,r2
 2006a7c:	ac401636 	bltu	r21,r17,2006ad8 <_malloc_r+0x3b0>
 2006a80:	ac49c83a 	sub	r4,r21,r17
 2006a84:	008003c4 	movi	r2,15
 2006a88:	1100130e 	bge	r2,r4,2006ad8 <_malloc_r+0x3b0>
 2006a8c:	88800054 	ori	r2,r17,1
 2006a90:	8447883a 	add	r3,r16,r17
 2006a94:	80800115 	stw	r2,4(r16)
 2006a98:	20800054 	ori	r2,r4,1
 2006a9c:	18800115 	stw	r2,4(r3)
 2006aa0:	e0c00215 	stw	r3,8(fp)
 2006aa4:	9009883a 	mov	r4,r18
 2006aa8:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2006aac:	80c00204 	addi	r3,r16,8
 2006ab0:	003f3106 	br	2006778 <_malloc_r+0x50>
 2006ab4:	39c00117 	ldw	r7,4(r7)
 2006ab8:	573ffe04 	addi	fp,r10,-8
 2006abc:	003fa006 	br	2006940 <_malloc_r+0x218>
 2006ac0:	00801504 	movi	r2,84
 2006ac4:	10c06736 	bltu	r2,r3,2006c64 <_malloc_r+0x53c>
 2006ac8:	8804d33a 	srli	r2,r17,12
 2006acc:	11801b84 	addi	r6,r2,110
 2006ad0:	300490fa 	slli	r2,r6,3
 2006ad4:	003f4106 	br	20067dc <_malloc_r+0xb4>
 2006ad8:	d0a2cf17 	ldw	r2,-29892(gp)
 2006adc:	d0e00617 	ldw	r3,-32744(gp)
 2006ae0:	053fffc4 	movi	r20,-1
 2006ae4:	10800404 	addi	r2,r2,16
 2006ae8:	88a7883a 	add	r19,r17,r2
 2006aec:	1d000326 	beq	r3,r20,2006afc <_malloc_r+0x3d4>
 2006af0:	98c3ffc4 	addi	r3,r19,4095
 2006af4:	00bc0004 	movi	r2,-4096
 2006af8:	18a6703a 	and	r19,r3,r2
 2006afc:	9009883a 	mov	r4,r18
 2006b00:	980b883a 	mov	r5,r19
 2006b04:	2008a9c0 	call	2008a9c <_sbrk_r>
 2006b08:	1009883a 	mov	r4,r2
 2006b0c:	15000426 	beq	r2,r20,2006b20 <_malloc_r+0x3f8>
 2006b10:	854b883a 	add	r5,r16,r21
 2006b14:	1029883a 	mov	r20,r2
 2006b18:	11405a2e 	bgeu	r2,r5,2006c84 <_malloc_r+0x55c>
 2006b1c:	87000c26 	beq	r16,fp,2006b50 <_malloc_r+0x428>
 2006b20:	e4000217 	ldw	r16,8(fp)
 2006b24:	80c00117 	ldw	r3,4(r16)
 2006b28:	00bfff04 	movi	r2,-4
 2006b2c:	1884703a 	and	r2,r3,r2
 2006b30:	14400336 	bltu	r2,r17,2006b40 <_malloc_r+0x418>
 2006b34:	1449c83a 	sub	r4,r2,r17
 2006b38:	008003c4 	movi	r2,15
 2006b3c:	113fd316 	blt	r2,r4,2006a8c <_malloc_r+0x364>
 2006b40:	9009883a 	mov	r4,r18
 2006b44:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2006b48:	0007883a 	mov	r3,zero
 2006b4c:	003f0a06 	br	2006778 <_malloc_r+0x50>
 2006b50:	05c08074 	movhi	r23,513
 2006b54:	bdcc6e04 	addi	r23,r23,12728
 2006b58:	b8800017 	ldw	r2,0(r23)
 2006b5c:	988d883a 	add	r6,r19,r2
 2006b60:	b9800015 	stw	r6,0(r23)
 2006b64:	d0e00617 	ldw	r3,-32744(gp)
 2006b68:	00bfffc4 	movi	r2,-1
 2006b6c:	18808e26 	beq	r3,r2,2006da8 <_malloc_r+0x680>
 2006b70:	2145c83a 	sub	r2,r4,r5
 2006b74:	3085883a 	add	r2,r6,r2
 2006b78:	b8800015 	stw	r2,0(r23)
 2006b7c:	20c001cc 	andi	r3,r4,7
 2006b80:	18005f1e 	bne	r3,zero,2006d00 <_malloc_r+0x5d8>
 2006b84:	000b883a 	mov	r5,zero
 2006b88:	a4c5883a 	add	r2,r20,r19
 2006b8c:	1083ffcc 	andi	r2,r2,4095
 2006b90:	00c40004 	movi	r3,4096
 2006b94:	1887c83a 	sub	r3,r3,r2
 2006b98:	28e7883a 	add	r19,r5,r3
 2006b9c:	9009883a 	mov	r4,r18
 2006ba0:	980b883a 	mov	r5,r19
 2006ba4:	2008a9c0 	call	2008a9c <_sbrk_r>
 2006ba8:	1007883a 	mov	r3,r2
 2006bac:	00bfffc4 	movi	r2,-1
 2006bb0:	18807a26 	beq	r3,r2,2006d9c <_malloc_r+0x674>
 2006bb4:	1d05c83a 	sub	r2,r3,r20
 2006bb8:	9885883a 	add	r2,r19,r2
 2006bbc:	10c00054 	ori	r3,r2,1
 2006bc0:	b8800017 	ldw	r2,0(r23)
 2006bc4:	a021883a 	mov	r16,r20
 2006bc8:	a0c00115 	stw	r3,4(r20)
 2006bcc:	9885883a 	add	r2,r19,r2
 2006bd0:	b8800015 	stw	r2,0(r23)
 2006bd4:	e5000215 	stw	r20,8(fp)
 2006bd8:	b7003626 	beq	r22,fp,2006cb4 <_malloc_r+0x58c>
 2006bdc:	018003c4 	movi	r6,15
 2006be0:	35404b36 	bltu	r6,r21,2006d10 <_malloc_r+0x5e8>
 2006be4:	00800044 	movi	r2,1
 2006be8:	a0800115 	stw	r2,4(r20)
 2006bec:	003fcd06 	br	2006b24 <_malloc_r+0x3fc>
 2006bf0:	2808d27a 	srli	r4,r5,9
 2006bf4:	2000371e 	bne	r4,zero,2006cd4 <_malloc_r+0x5ac>
 2006bf8:	2808d0fa 	srli	r4,r5,3
 2006bfc:	200690fa 	slli	r3,r4,3
 2006c00:	1ad1883a 	add	r8,r3,r11
 2006c04:	41800217 	ldw	r6,8(r8)
 2006c08:	41805b26 	beq	r8,r6,2006d78 <_malloc_r+0x650>
 2006c0c:	30800117 	ldw	r2,4(r6)
 2006c10:	00ffff04 	movi	r3,-4
 2006c14:	10c4703a 	and	r2,r2,r3
 2006c18:	2880022e 	bgeu	r5,r2,2006c24 <_malloc_r+0x4fc>
 2006c1c:	31800217 	ldw	r6,8(r6)
 2006c20:	41bffa1e 	bne	r8,r6,2006c0c <_malloc_r+0x4e4>
 2006c24:	32000317 	ldw	r8,12(r6)
 2006c28:	39c00117 	ldw	r7,4(r7)
 2006c2c:	82000315 	stw	r8,12(r16)
 2006c30:	81800215 	stw	r6,8(r16)
 2006c34:	07008074 	movhi	fp,513
 2006c38:	e707ee04 	addi	fp,fp,8120
 2006c3c:	34000315 	stw	r16,12(r6)
 2006c40:	44000215 	stw	r16,8(r8)
 2006c44:	003f3e06 	br	2006940 <_malloc_r+0x218>
 2006c48:	63000044 	addi	r12,r12,1
 2006c4c:	608000cc 	andi	r2,r12,3
 2006c50:	10005d26 	beq	r2,zero,2006dc8 <_malloc_r+0x6a0>
 2006c54:	18c00204 	addi	r3,r3,8
 2006c58:	003f5106 	br	20069a0 <_malloc_r+0x278>
 2006c5c:	8089883a 	add	r4,r16,r2
 2006c60:	003f6d06 	br	2006a18 <_malloc_r+0x2f0>
 2006c64:	00805504 	movi	r2,340
 2006c68:	10c02036 	bltu	r2,r3,2006cec <_malloc_r+0x5c4>
 2006c6c:	8804d3fa 	srli	r2,r17,15
 2006c70:	11801dc4 	addi	r6,r2,119
 2006c74:	300490fa 	slli	r2,r6,3
 2006c78:	003ed806 	br	20067dc <_malloc_r+0xb4>
 2006c7c:	48c000c4 	addi	r3,r9,3
 2006c80:	003f3106 	br	2006948 <_malloc_r+0x220>
 2006c84:	05c08074 	movhi	r23,513
 2006c88:	bdcc6e04 	addi	r23,r23,12728
 2006c8c:	b8800017 	ldw	r2,0(r23)
 2006c90:	988d883a 	add	r6,r19,r2
 2006c94:	b9800015 	stw	r6,0(r23)
 2006c98:	293fb21e 	bne	r5,r4,2006b64 <_malloc_r+0x43c>
 2006c9c:	2083ffcc 	andi	r2,r4,4095
 2006ca0:	103fb01e 	bne	r2,zero,2006b64 <_malloc_r+0x43c>
 2006ca4:	e4000217 	ldw	r16,8(fp)
 2006ca8:	9d45883a 	add	r2,r19,r21
 2006cac:	10800054 	ori	r2,r2,1
 2006cb0:	80800115 	stw	r2,4(r16)
 2006cb4:	b8c00017 	ldw	r3,0(r23)
 2006cb8:	d0a2d017 	ldw	r2,-29888(gp)
 2006cbc:	10c0012e 	bgeu	r2,r3,2006cc4 <_malloc_r+0x59c>
 2006cc0:	d0e2d015 	stw	r3,-29888(gp)
 2006cc4:	d0a2d117 	ldw	r2,-29884(gp)
 2006cc8:	10ff962e 	bgeu	r2,r3,2006b24 <_malloc_r+0x3fc>
 2006ccc:	d0e2d115 	stw	r3,-29884(gp)
 2006cd0:	003f9406 	br	2006b24 <_malloc_r+0x3fc>
 2006cd4:	00800104 	movi	r2,4
 2006cd8:	11001e36 	bltu	r2,r4,2006d54 <_malloc_r+0x62c>
 2006cdc:	2804d1ba 	srli	r2,r5,6
 2006ce0:	11000e04 	addi	r4,r2,56
 2006ce4:	200690fa 	slli	r3,r4,3
 2006ce8:	003fc506 	br	2006c00 <_malloc_r+0x4d8>
 2006cec:	00815504 	movi	r2,1364
 2006cf0:	10c01d2e 	bgeu	r2,r3,2006d68 <_malloc_r+0x640>
 2006cf4:	01801f84 	movi	r6,126
 2006cf8:	0080fc04 	movi	r2,1008
 2006cfc:	003eb706 	br	20067dc <_malloc_r+0xb4>
 2006d00:	00800204 	movi	r2,8
 2006d04:	10cbc83a 	sub	r5,r2,r3
 2006d08:	2169883a 	add	r20,r4,r5
 2006d0c:	003f9e06 	br	2006b88 <_malloc_r+0x460>
 2006d10:	00bffe04 	movi	r2,-8
 2006d14:	a93ffd04 	addi	r4,r21,-12
 2006d18:	2088703a 	and	r4,r4,r2
 2006d1c:	b10b883a 	add	r5,r22,r4
 2006d20:	00c00144 	movi	r3,5
 2006d24:	28c00215 	stw	r3,8(r5)
 2006d28:	28c00115 	stw	r3,4(r5)
 2006d2c:	b0800117 	ldw	r2,4(r22)
 2006d30:	1080004c 	andi	r2,r2,1
 2006d34:	2084b03a 	or	r2,r4,r2
 2006d38:	b0800115 	stw	r2,4(r22)
 2006d3c:	313fdd2e 	bgeu	r6,r4,2006cb4 <_malloc_r+0x58c>
 2006d40:	b1400204 	addi	r5,r22,8
 2006d44:	9009883a 	mov	r4,r18
 2006d48:	2005b740 	call	2005b74 <_free_r>
 2006d4c:	e4000217 	ldw	r16,8(fp)
 2006d50:	003fd806 	br	2006cb4 <_malloc_r+0x58c>
 2006d54:	00800504 	movi	r2,20
 2006d58:	11001536 	bltu	r2,r4,2006db0 <_malloc_r+0x688>
 2006d5c:	210016c4 	addi	r4,r4,91
 2006d60:	200690fa 	slli	r3,r4,3
 2006d64:	003fa606 	br	2006c00 <_malloc_r+0x4d8>
 2006d68:	8804d4ba 	srli	r2,r17,18
 2006d6c:	11801f04 	addi	r6,r2,124
 2006d70:	300490fa 	slli	r2,r6,3
 2006d74:	003e9906 	br	20067dc <_malloc_r+0xb4>
 2006d78:	2009d0ba 	srai	r4,r4,2
 2006d7c:	01408074 	movhi	r5,513
 2006d80:	2947ee04 	addi	r5,r5,8120
 2006d84:	00c00044 	movi	r3,1
 2006d88:	28800117 	ldw	r2,4(r5)
 2006d8c:	1906983a 	sll	r3,r3,r4
 2006d90:	10c4b03a 	or	r2,r2,r3
 2006d94:	28800115 	stw	r2,4(r5)
 2006d98:	003fa306 	br	2006c28 <_malloc_r+0x500>
 2006d9c:	0027883a 	mov	r19,zero
 2006da0:	00c00044 	movi	r3,1
 2006da4:	003f8606 	br	2006bc0 <_malloc_r+0x498>
 2006da8:	d1200615 	stw	r4,-32744(gp)
 2006dac:	003f7306 	br	2006b7c <_malloc_r+0x454>
 2006db0:	00801504 	movi	r2,84
 2006db4:	11001936 	bltu	r2,r4,2006e1c <_malloc_r+0x6f4>
 2006db8:	2804d33a 	srli	r2,r5,12
 2006dbc:	11001b84 	addi	r4,r2,110
 2006dc0:	200690fa 	slli	r3,r4,3
 2006dc4:	003f8e06 	br	2006c00 <_malloc_r+0x4d8>
 2006dc8:	480b883a 	mov	r5,r9
 2006dcc:	6807883a 	mov	r3,r13
 2006dd0:	288000cc 	andi	r2,r5,3
 2006dd4:	18fffe04 	addi	r3,r3,-8
 2006dd8:	297fffc4 	addi	r5,r5,-1
 2006ddc:	10001526 	beq	r2,zero,2006e34 <_malloc_r+0x70c>
 2006de0:	18800217 	ldw	r2,8(r3)
 2006de4:	10fffa26 	beq	r2,r3,2006dd0 <_malloc_r+0x6a8>
 2006de8:	2109883a 	add	r4,r4,r4
 2006dec:	393f1e36 	bltu	r7,r4,2006a68 <_malloc_r+0x340>
 2006df0:	203f1d26 	beq	r4,zero,2006a68 <_malloc_r+0x340>
 2006df4:	21c4703a 	and	r2,r4,r7
 2006df8:	10000226 	beq	r2,zero,2006e04 <_malloc_r+0x6dc>
 2006dfc:	6013883a 	mov	r9,r12
 2006e00:	003ee106 	br	2006988 <_malloc_r+0x260>
 2006e04:	2109883a 	add	r4,r4,r4
 2006e08:	3904703a 	and	r2,r7,r4
 2006e0c:	63000104 	addi	r12,r12,4
 2006e10:	103ffc26 	beq	r2,zero,2006e04 <_malloc_r+0x6dc>
 2006e14:	6013883a 	mov	r9,r12
 2006e18:	003edb06 	br	2006988 <_malloc_r+0x260>
 2006e1c:	00805504 	movi	r2,340
 2006e20:	11000836 	bltu	r2,r4,2006e44 <_malloc_r+0x71c>
 2006e24:	2804d3fa 	srli	r2,r5,15
 2006e28:	11001dc4 	addi	r4,r2,119
 2006e2c:	200690fa 	slli	r3,r4,3
 2006e30:	003f7306 	br	2006c00 <_malloc_r+0x4d8>
 2006e34:	0104303a 	nor	r2,zero,r4
 2006e38:	388e703a 	and	r7,r7,r2
 2006e3c:	e1c00115 	stw	r7,4(fp)
 2006e40:	003fe906 	br	2006de8 <_malloc_r+0x6c0>
 2006e44:	00815504 	movi	r2,1364
 2006e48:	1100032e 	bgeu	r2,r4,2006e58 <_malloc_r+0x730>
 2006e4c:	01001f84 	movi	r4,126
 2006e50:	00c0fc04 	movi	r3,1008
 2006e54:	003f6a06 	br	2006c00 <_malloc_r+0x4d8>
 2006e58:	2804d4ba 	srli	r2,r5,18
 2006e5c:	11001f04 	addi	r4,r2,124
 2006e60:	200690fa 	slli	r3,r4,3
 2006e64:	003f6606 	br	2006c00 <_malloc_r+0x4d8>

02006e68 <_mbrtowc_r>:
 2006e68:	defffc04 	addi	sp,sp,-16
 2006e6c:	dc400215 	stw	r17,8(sp)
 2006e70:	dc000115 	stw	r16,4(sp)
 2006e74:	dfc00315 	stw	ra,12(sp)
 2006e78:	dc000417 	ldw	r16,16(sp)
 2006e7c:	2023883a 	mov	r17,r4
 2006e80:	30000f26 	beq	r6,zero,2006ec0 <_mbrtowc_r+0x58>
 2006e84:	dc000015 	stw	r16,0(sp)
 2006e88:	2006f280 	call	2006f28 <_mbtowc_r>
 2006e8c:	1007883a 	mov	r3,r2
 2006e90:	00bfffc4 	movi	r2,-1
 2006e94:	1809883a 	mov	r4,r3
 2006e98:	1880111e 	bne	r3,r2,2006ee0 <_mbrtowc_r+0x78>
 2006e9c:	80000015 	stw	zero,0(r16)
 2006ea0:	00802284 	movi	r2,138
 2006ea4:	88800015 	stw	r2,0(r17)
 2006ea8:	2005883a 	mov	r2,r4
 2006eac:	dfc00317 	ldw	ra,12(sp)
 2006eb0:	dc400217 	ldw	r17,8(sp)
 2006eb4:	dc000117 	ldw	r16,4(sp)
 2006eb8:	dec00404 	addi	sp,sp,16
 2006ebc:	f800283a 	ret
 2006ec0:	000b883a 	mov	r5,zero
 2006ec4:	01808074 	movhi	r6,513
 2006ec8:	31856e04 	addi	r6,r6,5560
 2006ecc:	01c00044 	movi	r7,1
 2006ed0:	dc000015 	stw	r16,0(sp)
 2006ed4:	2006f280 	call	2006f28 <_mbtowc_r>
 2006ed8:	1007883a 	mov	r3,r2
 2006edc:	003fec06 	br	2006e90 <_mbrtowc_r+0x28>
 2006ee0:	1809883a 	mov	r4,r3
 2006ee4:	003ff006 	br	2006ea8 <_mbrtowc_r+0x40>

02006ee8 <mbrtowc>:
 2006ee8:	00808074 	movhi	r2,513
 2006eec:	10899604 	addi	r2,r2,9816
 2006ef0:	2017883a 	mov	r11,r4
 2006ef4:	11000017 	ldw	r4,0(r2)
 2006ef8:	defffe04 	addi	sp,sp,-8
 2006efc:	3013883a 	mov	r9,r6
 2006f00:	2805883a 	mov	r2,r5
 2006f04:	d9c00015 	stw	r7,0(sp)
 2006f08:	580b883a 	mov	r5,r11
 2006f0c:	100d883a 	mov	r6,r2
 2006f10:	480f883a 	mov	r7,r9
 2006f14:	dfc00115 	stw	ra,4(sp)
 2006f18:	2006e680 	call	2006e68 <_mbrtowc_r>
 2006f1c:	dfc00117 	ldw	ra,4(sp)
 2006f20:	dec00204 	addi	sp,sp,8
 2006f24:	f800283a 	ret

02006f28 <_mbtowc_r>:
 2006f28:	deffff04 	addi	sp,sp,-4
 2006f2c:	0005883a 	mov	r2,zero
 2006f30:	28000326 	beq	r5,zero,2006f40 <_mbtowc_r+0x18>
 2006f34:	3000041e 	bne	r6,zero,2006f48 <_mbtowc_r+0x20>
 2006f38:	dec00104 	addi	sp,sp,4
 2006f3c:	f800283a 	ret
 2006f40:	d80b883a 	mov	r5,sp
 2006f44:	303ffc26 	beq	r6,zero,2006f38 <_mbtowc_r+0x10>
 2006f48:	00bfff84 	movi	r2,-2
 2006f4c:	383ffa26 	beq	r7,zero,2006f38 <_mbtowc_r+0x10>
 2006f50:	30800003 	ldbu	r2,0(r6)
 2006f54:	28800015 	stw	r2,0(r5)
 2006f58:	30c00003 	ldbu	r3,0(r6)
 2006f5c:	1804c03a 	cmpne	r2,r3,zero
 2006f60:	dec00104 	addi	sp,sp,4
 2006f64:	f800283a 	ret

02006f68 <memchr>:
 2006f68:	008000c4 	movi	r2,3
 2006f6c:	29403fcc 	andi	r5,r5,255
 2006f70:	2007883a 	mov	r3,r4
 2006f74:	1180022e 	bgeu	r2,r6,2006f80 <memchr+0x18>
 2006f78:	2084703a 	and	r2,r4,r2
 2006f7c:	10000b26 	beq	r2,zero,2006fac <memchr+0x44>
 2006f80:	313fffc4 	addi	r4,r6,-1
 2006f84:	3000051e 	bne	r6,zero,2006f9c <memchr+0x34>
 2006f88:	00002c06 	br	200703c <memchr+0xd4>
 2006f8c:	213fffc4 	addi	r4,r4,-1
 2006f90:	00bfffc4 	movi	r2,-1
 2006f94:	18c00044 	addi	r3,r3,1
 2006f98:	20802826 	beq	r4,r2,200703c <memchr+0xd4>
 2006f9c:	18800003 	ldbu	r2,0(r3)
 2006fa0:	28bffa1e 	bne	r5,r2,2006f8c <memchr+0x24>
 2006fa4:	1805883a 	mov	r2,r3
 2006fa8:	f800283a 	ret
 2006fac:	0011883a 	mov	r8,zero
 2006fb0:	0007883a 	mov	r3,zero
 2006fb4:	01c00104 	movi	r7,4
 2006fb8:	4004923a 	slli	r2,r8,8
 2006fbc:	18c00044 	addi	r3,r3,1
 2006fc0:	1151883a 	add	r8,r2,r5
 2006fc4:	19fffc1e 	bne	r3,r7,2006fb8 <memchr+0x50>
 2006fc8:	02bfbff4 	movhi	r10,65279
 2006fcc:	52bfbfc4 	addi	r10,r10,-257
 2006fd0:	02602074 	movhi	r9,32897
 2006fd4:	4a602004 	addi	r9,r9,-32640
 2006fd8:	02c000c4 	movi	r11,3
 2006fdc:	20800017 	ldw	r2,0(r4)
 2006fe0:	31bfff04 	addi	r6,r6,-4
 2006fe4:	200f883a 	mov	r7,r4
 2006fe8:	1204f03a 	xor	r2,r2,r8
 2006fec:	1287883a 	add	r3,r2,r10
 2006ff0:	1a46703a 	and	r3,r3,r9
 2006ff4:	0084303a 	nor	r2,zero,r2
 2006ff8:	10c4703a 	and	r2,r2,r3
 2006ffc:	10000b26 	beq	r2,zero,200702c <memchr+0xc4>
 2007000:	20800003 	ldbu	r2,0(r4)
 2007004:	28800f26 	beq	r5,r2,2007044 <memchr+0xdc>
 2007008:	20800043 	ldbu	r2,1(r4)
 200700c:	21c00044 	addi	r7,r4,1
 2007010:	28800c26 	beq	r5,r2,2007044 <memchr+0xdc>
 2007014:	20800083 	ldbu	r2,2(r4)
 2007018:	21c00084 	addi	r7,r4,2
 200701c:	28800926 	beq	r5,r2,2007044 <memchr+0xdc>
 2007020:	208000c3 	ldbu	r2,3(r4)
 2007024:	21c000c4 	addi	r7,r4,3
 2007028:	28800626 	beq	r5,r2,2007044 <memchr+0xdc>
 200702c:	21000104 	addi	r4,r4,4
 2007030:	59bfea36 	bltu	r11,r6,2006fdc <memchr+0x74>
 2007034:	2007883a 	mov	r3,r4
 2007038:	003fd106 	br	2006f80 <memchr+0x18>
 200703c:	0005883a 	mov	r2,zero
 2007040:	f800283a 	ret
 2007044:	3805883a 	mov	r2,r7
 2007048:	f800283a 	ret

0200704c <memcpy>:
 200704c:	01c003c4 	movi	r7,15
 2007050:	2007883a 	mov	r3,r4
 2007054:	3980032e 	bgeu	r7,r6,2007064 <memcpy+0x18>
 2007058:	2904b03a 	or	r2,r5,r4
 200705c:	108000cc 	andi	r2,r2,3
 2007060:	10000926 	beq	r2,zero,2007088 <memcpy+0x3c>
 2007064:	30000626 	beq	r6,zero,2007080 <memcpy+0x34>
 2007068:	30cd883a 	add	r6,r6,r3
 200706c:	28800003 	ldbu	r2,0(r5)
 2007070:	29400044 	addi	r5,r5,1
 2007074:	18800005 	stb	r2,0(r3)
 2007078:	18c00044 	addi	r3,r3,1
 200707c:	30fffb1e 	bne	r6,r3,200706c <memcpy+0x20>
 2007080:	2005883a 	mov	r2,r4
 2007084:	f800283a 	ret
 2007088:	3811883a 	mov	r8,r7
 200708c:	200f883a 	mov	r7,r4
 2007090:	28c00017 	ldw	r3,0(r5)
 2007094:	31bffc04 	addi	r6,r6,-16
 2007098:	38c00015 	stw	r3,0(r7)
 200709c:	28800117 	ldw	r2,4(r5)
 20070a0:	38800115 	stw	r2,4(r7)
 20070a4:	28c00217 	ldw	r3,8(r5)
 20070a8:	38c00215 	stw	r3,8(r7)
 20070ac:	28800317 	ldw	r2,12(r5)
 20070b0:	29400404 	addi	r5,r5,16
 20070b4:	38800315 	stw	r2,12(r7)
 20070b8:	39c00404 	addi	r7,r7,16
 20070bc:	41bff436 	bltu	r8,r6,2007090 <memcpy+0x44>
 20070c0:	008000c4 	movi	r2,3
 20070c4:	1180072e 	bgeu	r2,r6,20070e4 <memcpy+0x98>
 20070c8:	1007883a 	mov	r3,r2
 20070cc:	28800017 	ldw	r2,0(r5)
 20070d0:	31bfff04 	addi	r6,r6,-4
 20070d4:	29400104 	addi	r5,r5,4
 20070d8:	38800015 	stw	r2,0(r7)
 20070dc:	39c00104 	addi	r7,r7,4
 20070e0:	19bffa36 	bltu	r3,r6,20070cc <memcpy+0x80>
 20070e4:	3807883a 	mov	r3,r7
 20070e8:	003fde06 	br	2007064 <memcpy+0x18>

020070ec <memmove>:
 20070ec:	2807883a 	mov	r3,r5
 20070f0:	2011883a 	mov	r8,r4
 20070f4:	29000c2e 	bgeu	r5,r4,2007128 <memmove+0x3c>
 20070f8:	298f883a 	add	r7,r5,r6
 20070fc:	21c00a2e 	bgeu	r4,r7,2007128 <memmove+0x3c>
 2007100:	30000726 	beq	r6,zero,2007120 <memmove+0x34>
 2007104:	2187883a 	add	r3,r4,r6
 2007108:	198dc83a 	sub	r6,r3,r6
 200710c:	39ffffc4 	addi	r7,r7,-1
 2007110:	38800003 	ldbu	r2,0(r7)
 2007114:	18ffffc4 	addi	r3,r3,-1
 2007118:	18800005 	stb	r2,0(r3)
 200711c:	19bffb1e 	bne	r3,r6,200710c <memmove+0x20>
 2007120:	2005883a 	mov	r2,r4
 2007124:	f800283a 	ret
 2007128:	01c003c4 	movi	r7,15
 200712c:	39800a36 	bltu	r7,r6,2007158 <memmove+0x6c>
 2007130:	303ffb26 	beq	r6,zero,2007120 <memmove+0x34>
 2007134:	400f883a 	mov	r7,r8
 2007138:	320d883a 	add	r6,r6,r8
 200713c:	28800003 	ldbu	r2,0(r5)
 2007140:	29400044 	addi	r5,r5,1
 2007144:	38800005 	stb	r2,0(r7)
 2007148:	39c00044 	addi	r7,r7,1
 200714c:	39bffb1e 	bne	r7,r6,200713c <memmove+0x50>
 2007150:	2005883a 	mov	r2,r4
 2007154:	f800283a 	ret
 2007158:	1904b03a 	or	r2,r3,r4
 200715c:	108000cc 	andi	r2,r2,3
 2007160:	103ff31e 	bne	r2,zero,2007130 <memmove+0x44>
 2007164:	3811883a 	mov	r8,r7
 2007168:	180b883a 	mov	r5,r3
 200716c:	200f883a 	mov	r7,r4
 2007170:	28c00017 	ldw	r3,0(r5)
 2007174:	31bffc04 	addi	r6,r6,-16
 2007178:	38c00015 	stw	r3,0(r7)
 200717c:	28800117 	ldw	r2,4(r5)
 2007180:	38800115 	stw	r2,4(r7)
 2007184:	28c00217 	ldw	r3,8(r5)
 2007188:	38c00215 	stw	r3,8(r7)
 200718c:	28800317 	ldw	r2,12(r5)
 2007190:	29400404 	addi	r5,r5,16
 2007194:	38800315 	stw	r2,12(r7)
 2007198:	39c00404 	addi	r7,r7,16
 200719c:	41bff436 	bltu	r8,r6,2007170 <memmove+0x84>
 20071a0:	008000c4 	movi	r2,3
 20071a4:	1180072e 	bgeu	r2,r6,20071c4 <memmove+0xd8>
 20071a8:	1007883a 	mov	r3,r2
 20071ac:	28800017 	ldw	r2,0(r5)
 20071b0:	31bfff04 	addi	r6,r6,-4
 20071b4:	29400104 	addi	r5,r5,4
 20071b8:	38800015 	stw	r2,0(r7)
 20071bc:	39c00104 	addi	r7,r7,4
 20071c0:	19bffa36 	bltu	r3,r6,20071ac <memmove+0xc0>
 20071c4:	3811883a 	mov	r8,r7
 20071c8:	003fd906 	br	2007130 <memmove+0x44>

020071cc <memset>:
 20071cc:	008000c4 	movi	r2,3
 20071d0:	29403fcc 	andi	r5,r5,255
 20071d4:	2007883a 	mov	r3,r4
 20071d8:	1180022e 	bgeu	r2,r6,20071e4 <memset+0x18>
 20071dc:	2084703a 	and	r2,r4,r2
 20071e0:	10000826 	beq	r2,zero,2007204 <memset+0x38>
 20071e4:	30000526 	beq	r6,zero,20071fc <memset+0x30>
 20071e8:	2805883a 	mov	r2,r5
 20071ec:	30cd883a 	add	r6,r6,r3
 20071f0:	18800005 	stb	r2,0(r3)
 20071f4:	18c00044 	addi	r3,r3,1
 20071f8:	19bffd1e 	bne	r3,r6,20071f0 <memset+0x24>
 20071fc:	2005883a 	mov	r2,r4
 2007200:	f800283a 	ret
 2007204:	2804923a 	slli	r2,r5,8
 2007208:	020003c4 	movi	r8,15
 200720c:	200f883a 	mov	r7,r4
 2007210:	2884b03a 	or	r2,r5,r2
 2007214:	1006943a 	slli	r3,r2,16
 2007218:	10c6b03a 	or	r3,r2,r3
 200721c:	41800a2e 	bgeu	r8,r6,2007248 <memset+0x7c>
 2007220:	4005883a 	mov	r2,r8
 2007224:	31bffc04 	addi	r6,r6,-16
 2007228:	38c00015 	stw	r3,0(r7)
 200722c:	38c00115 	stw	r3,4(r7)
 2007230:	38c00215 	stw	r3,8(r7)
 2007234:	38c00315 	stw	r3,12(r7)
 2007238:	39c00404 	addi	r7,r7,16
 200723c:	11bff936 	bltu	r2,r6,2007224 <memset+0x58>
 2007240:	008000c4 	movi	r2,3
 2007244:	1180052e 	bgeu	r2,r6,200725c <memset+0x90>
 2007248:	31bfff04 	addi	r6,r6,-4
 200724c:	008000c4 	movi	r2,3
 2007250:	38c00015 	stw	r3,0(r7)
 2007254:	39c00104 	addi	r7,r7,4
 2007258:	11bffb36 	bltu	r2,r6,2007248 <memset+0x7c>
 200725c:	3807883a 	mov	r3,r7
 2007260:	003fe006 	br	20071e4 <memset+0x18>

02007264 <_Bfree>:
 2007264:	28000826 	beq	r5,zero,2007288 <_Bfree+0x24>
 2007268:	28800117 	ldw	r2,4(r5)
 200726c:	21001317 	ldw	r4,76(r4)
 2007270:	1085883a 	add	r2,r2,r2
 2007274:	1085883a 	add	r2,r2,r2
 2007278:	1105883a 	add	r2,r2,r4
 200727c:	10c00017 	ldw	r3,0(r2)
 2007280:	28c00015 	stw	r3,0(r5)
 2007284:	11400015 	stw	r5,0(r2)
 2007288:	f800283a 	ret

0200728c <__hi0bits>:
 200728c:	20bfffec 	andhi	r2,r4,65535
 2007290:	10001426 	beq	r2,zero,20072e4 <__hi0bits+0x58>
 2007294:	0007883a 	mov	r3,zero
 2007298:	20bfc02c 	andhi	r2,r4,65280
 200729c:	1000021e 	bne	r2,zero,20072a8 <__hi0bits+0x1c>
 20072a0:	2008923a 	slli	r4,r4,8
 20072a4:	18c00204 	addi	r3,r3,8
 20072a8:	20bc002c 	andhi	r2,r4,61440
 20072ac:	1000021e 	bne	r2,zero,20072b8 <__hi0bits+0x2c>
 20072b0:	2008913a 	slli	r4,r4,4
 20072b4:	18c00104 	addi	r3,r3,4
 20072b8:	20b0002c 	andhi	r2,r4,49152
 20072bc:	1000031e 	bne	r2,zero,20072cc <__hi0bits+0x40>
 20072c0:	2105883a 	add	r2,r4,r4
 20072c4:	18c00084 	addi	r3,r3,2
 20072c8:	1089883a 	add	r4,r2,r2
 20072cc:	20000316 	blt	r4,zero,20072dc <__hi0bits+0x50>
 20072d0:	2090002c 	andhi	r2,r4,16384
 20072d4:	10000626 	beq	r2,zero,20072f0 <__hi0bits+0x64>
 20072d8:	18c00044 	addi	r3,r3,1
 20072dc:	1805883a 	mov	r2,r3
 20072e0:	f800283a 	ret
 20072e4:	2008943a 	slli	r4,r4,16
 20072e8:	00c00404 	movi	r3,16
 20072ec:	003fea06 	br	2007298 <__hi0bits+0xc>
 20072f0:	00c00804 	movi	r3,32
 20072f4:	1805883a 	mov	r2,r3
 20072f8:	f800283a 	ret

020072fc <__lo0bits>:
 20072fc:	20c00017 	ldw	r3,0(r4)
 2007300:	188001cc 	andi	r2,r3,7
 2007304:	10000a26 	beq	r2,zero,2007330 <__lo0bits+0x34>
 2007308:	1880004c 	andi	r2,r3,1
 200730c:	1005003a 	cmpeq	r2,r2,zero
 2007310:	10002126 	beq	r2,zero,2007398 <__lo0bits+0x9c>
 2007314:	1880008c 	andi	r2,r3,2
 2007318:	1000251e 	bne	r2,zero,20073b0 <__lo0bits+0xb4>
 200731c:	1804d0ba 	srli	r2,r3,2
 2007320:	01400084 	movi	r5,2
 2007324:	20800015 	stw	r2,0(r4)
 2007328:	2805883a 	mov	r2,r5
 200732c:	f800283a 	ret
 2007330:	18bfffcc 	andi	r2,r3,65535
 2007334:	10001526 	beq	r2,zero,200738c <__lo0bits+0x90>
 2007338:	000b883a 	mov	r5,zero
 200733c:	18803fcc 	andi	r2,r3,255
 2007340:	1000021e 	bne	r2,zero,200734c <__lo0bits+0x50>
 2007344:	1806d23a 	srli	r3,r3,8
 2007348:	29400204 	addi	r5,r5,8
 200734c:	188003cc 	andi	r2,r3,15
 2007350:	1000021e 	bne	r2,zero,200735c <__lo0bits+0x60>
 2007354:	1806d13a 	srli	r3,r3,4
 2007358:	29400104 	addi	r5,r5,4
 200735c:	188000cc 	andi	r2,r3,3
 2007360:	1000021e 	bne	r2,zero,200736c <__lo0bits+0x70>
 2007364:	1806d0ba 	srli	r3,r3,2
 2007368:	29400084 	addi	r5,r5,2
 200736c:	1880004c 	andi	r2,r3,1
 2007370:	1000031e 	bne	r2,zero,2007380 <__lo0bits+0x84>
 2007374:	1806d07a 	srli	r3,r3,1
 2007378:	18000a26 	beq	r3,zero,20073a4 <__lo0bits+0xa8>
 200737c:	29400044 	addi	r5,r5,1
 2007380:	2805883a 	mov	r2,r5
 2007384:	20c00015 	stw	r3,0(r4)
 2007388:	f800283a 	ret
 200738c:	1806d43a 	srli	r3,r3,16
 2007390:	01400404 	movi	r5,16
 2007394:	003fe906 	br	200733c <__lo0bits+0x40>
 2007398:	000b883a 	mov	r5,zero
 200739c:	2805883a 	mov	r2,r5
 20073a0:	f800283a 	ret
 20073a4:	01400804 	movi	r5,32
 20073a8:	2805883a 	mov	r2,r5
 20073ac:	f800283a 	ret
 20073b0:	1804d07a 	srli	r2,r3,1
 20073b4:	01400044 	movi	r5,1
 20073b8:	20800015 	stw	r2,0(r4)
 20073bc:	003fda06 	br	2007328 <__lo0bits+0x2c>

020073c0 <__mcmp>:
 20073c0:	20800417 	ldw	r2,16(r4)
 20073c4:	28c00417 	ldw	r3,16(r5)
 20073c8:	10cfc83a 	sub	r7,r2,r3
 20073cc:	38000c1e 	bne	r7,zero,2007400 <__mcmp+0x40>
 20073d0:	18c5883a 	add	r2,r3,r3
 20073d4:	1085883a 	add	r2,r2,r2
 20073d8:	10c00504 	addi	r3,r2,20
 20073dc:	21000504 	addi	r4,r4,20
 20073e0:	28cb883a 	add	r5,r5,r3
 20073e4:	2085883a 	add	r2,r4,r2
 20073e8:	10bfff04 	addi	r2,r2,-4
 20073ec:	297fff04 	addi	r5,r5,-4
 20073f0:	11800017 	ldw	r6,0(r2)
 20073f4:	28c00017 	ldw	r3,0(r5)
 20073f8:	30c0031e 	bne	r6,r3,2007408 <__mcmp+0x48>
 20073fc:	20bffa36 	bltu	r4,r2,20073e8 <__mcmp+0x28>
 2007400:	3805883a 	mov	r2,r7
 2007404:	f800283a 	ret
 2007408:	30c00336 	bltu	r6,r3,2007418 <__mcmp+0x58>
 200740c:	01c00044 	movi	r7,1
 2007410:	3805883a 	mov	r2,r7
 2007414:	f800283a 	ret
 2007418:	01ffffc4 	movi	r7,-1
 200741c:	003ff806 	br	2007400 <__mcmp+0x40>

02007420 <__ulp>:
 2007420:	295ffc2c 	andhi	r5,r5,32752
 2007424:	013f3034 	movhi	r4,64704
 2007428:	290b883a 	add	r5,r5,r4
 200742c:	0145c83a 	sub	r2,zero,r5
 2007430:	1007d53a 	srai	r3,r2,20
 2007434:	000d883a 	mov	r6,zero
 2007438:	0140040e 	bge	zero,r5,200744c <__ulp+0x2c>
 200743c:	280f883a 	mov	r7,r5
 2007440:	3807883a 	mov	r3,r7
 2007444:	3005883a 	mov	r2,r6
 2007448:	f800283a 	ret
 200744c:	008004c4 	movi	r2,19
 2007450:	193ffb04 	addi	r4,r3,-20
 2007454:	10c00c0e 	bge	r2,r3,2007488 <__ulp+0x68>
 2007458:	008007c4 	movi	r2,31
 200745c:	1107c83a 	sub	r3,r2,r4
 2007460:	00800784 	movi	r2,30
 2007464:	01400044 	movi	r5,1
 2007468:	11000216 	blt	r2,r4,2007474 <__ulp+0x54>
 200746c:	00800044 	movi	r2,1
 2007470:	10ca983a 	sll	r5,r2,r3
 2007474:	000f883a 	mov	r7,zero
 2007478:	280d883a 	mov	r6,r5
 200747c:	3807883a 	mov	r3,r7
 2007480:	3005883a 	mov	r2,r6
 2007484:	f800283a 	ret
 2007488:	00800234 	movhi	r2,8
 200748c:	10cfd83a 	sra	r7,r2,r3
 2007490:	000d883a 	mov	r6,zero
 2007494:	3005883a 	mov	r2,r6
 2007498:	3807883a 	mov	r3,r7
 200749c:	f800283a 	ret

020074a0 <__b2d>:
 20074a0:	20800417 	ldw	r2,16(r4)
 20074a4:	defff904 	addi	sp,sp,-28
 20074a8:	dd000415 	stw	r20,16(sp)
 20074ac:	1085883a 	add	r2,r2,r2
 20074b0:	25000504 	addi	r20,r4,20
 20074b4:	1085883a 	add	r2,r2,r2
 20074b8:	dc000015 	stw	r16,0(sp)
 20074bc:	a0a1883a 	add	r16,r20,r2
 20074c0:	dd400515 	stw	r21,20(sp)
 20074c4:	857fff17 	ldw	r21,-4(r16)
 20074c8:	dc400115 	stw	r17,4(sp)
 20074cc:	dfc00615 	stw	ra,24(sp)
 20074d0:	a809883a 	mov	r4,r21
 20074d4:	2823883a 	mov	r17,r5
 20074d8:	dcc00315 	stw	r19,12(sp)
 20074dc:	dc800215 	stw	r18,8(sp)
 20074e0:	200728c0 	call	200728c <__hi0bits>
 20074e4:	100b883a 	mov	r5,r2
 20074e8:	00800804 	movi	r2,32
 20074ec:	1145c83a 	sub	r2,r2,r5
 20074f0:	88800015 	stw	r2,0(r17)
 20074f4:	00800284 	movi	r2,10
 20074f8:	80ffff04 	addi	r3,r16,-4
 20074fc:	11401416 	blt	r2,r5,2007550 <__b2d+0xb0>
 2007500:	008002c4 	movi	r2,11
 2007504:	1149c83a 	sub	r4,r2,r5
 2007508:	a0c02736 	bltu	r20,r3,20075a8 <__b2d+0x108>
 200750c:	000d883a 	mov	r6,zero
 2007510:	28800544 	addi	r2,r5,21
 2007514:	a906d83a 	srl	r3,r21,r4
 2007518:	a884983a 	sll	r2,r21,r2
 200751c:	1ccffc34 	orhi	r19,r3,16368
 2007520:	11a4b03a 	or	r18,r2,r6
 2007524:	9005883a 	mov	r2,r18
 2007528:	9807883a 	mov	r3,r19
 200752c:	dfc00617 	ldw	ra,24(sp)
 2007530:	dd400517 	ldw	r21,20(sp)
 2007534:	dd000417 	ldw	r20,16(sp)
 2007538:	dcc00317 	ldw	r19,12(sp)
 200753c:	dc800217 	ldw	r18,8(sp)
 2007540:	dc400117 	ldw	r17,4(sp)
 2007544:	dc000017 	ldw	r16,0(sp)
 2007548:	dec00704 	addi	sp,sp,28
 200754c:	f800283a 	ret
 2007550:	a0c00e36 	bltu	r20,r3,200758c <__b2d+0xec>
 2007554:	293ffd44 	addi	r4,r5,-11
 2007558:	000d883a 	mov	r6,zero
 200755c:	20000f26 	beq	r4,zero,200759c <__b2d+0xfc>
 2007560:	00800804 	movi	r2,32
 2007564:	110bc83a 	sub	r5,r2,r4
 2007568:	a0c01236 	bltu	r20,r3,20075b4 <__b2d+0x114>
 200756c:	000f883a 	mov	r7,zero
 2007570:	a904983a 	sll	r2,r21,r4
 2007574:	3146d83a 	srl	r3,r6,r5
 2007578:	3108983a 	sll	r4,r6,r4
 200757c:	108ffc34 	orhi	r2,r2,16368
 2007580:	18a6b03a 	or	r19,r3,r2
 2007584:	3924b03a 	or	r18,r7,r4
 2007588:	003fe606 	br	2007524 <__b2d+0x84>
 200758c:	293ffd44 	addi	r4,r5,-11
 2007590:	81bffe17 	ldw	r6,-8(r16)
 2007594:	80fffe04 	addi	r3,r16,-8
 2007598:	203ff11e 	bne	r4,zero,2007560 <__b2d+0xc0>
 200759c:	accffc34 	orhi	r19,r21,16368
 20075a0:	3025883a 	mov	r18,r6
 20075a4:	003fdf06 	br	2007524 <__b2d+0x84>
 20075a8:	18bfff17 	ldw	r2,-4(r3)
 20075ac:	110cd83a 	srl	r6,r2,r4
 20075b0:	003fd706 	br	2007510 <__b2d+0x70>
 20075b4:	18bfff17 	ldw	r2,-4(r3)
 20075b8:	114ed83a 	srl	r7,r2,r5
 20075bc:	003fec06 	br	2007570 <__b2d+0xd0>

020075c0 <__ratio>:
 20075c0:	defff904 	addi	sp,sp,-28
 20075c4:	dc400215 	stw	r17,8(sp)
 20075c8:	2823883a 	mov	r17,r5
 20075cc:	d80b883a 	mov	r5,sp
 20075d0:	dfc00615 	stw	ra,24(sp)
 20075d4:	dd000515 	stw	r20,20(sp)
 20075d8:	dcc00415 	stw	r19,16(sp)
 20075dc:	dc800315 	stw	r18,12(sp)
 20075e0:	2025883a 	mov	r18,r4
 20075e4:	20074a00 	call	20074a0 <__b2d>
 20075e8:	8809883a 	mov	r4,r17
 20075ec:	d9400104 	addi	r5,sp,4
 20075f0:	1027883a 	mov	r19,r2
 20075f4:	1829883a 	mov	r20,r3
 20075f8:	20074a00 	call	20074a0 <__b2d>
 20075fc:	89000417 	ldw	r4,16(r17)
 2007600:	91c00417 	ldw	r7,16(r18)
 2007604:	d9800117 	ldw	r6,4(sp)
 2007608:	180b883a 	mov	r5,r3
 200760c:	390fc83a 	sub	r7,r7,r4
 2007610:	1009883a 	mov	r4,r2
 2007614:	d8800017 	ldw	r2,0(sp)
 2007618:	380e917a 	slli	r7,r7,5
 200761c:	2011883a 	mov	r8,r4
 2007620:	1185c83a 	sub	r2,r2,r6
 2007624:	11c5883a 	add	r2,r2,r7
 2007628:	1006953a 	slli	r3,r2,20
 200762c:	2813883a 	mov	r9,r5
 2007630:	00800d0e 	bge	zero,r2,2007668 <__ratio+0xa8>
 2007634:	1d29883a 	add	r20,r3,r20
 2007638:	a00b883a 	mov	r5,r20
 200763c:	480f883a 	mov	r7,r9
 2007640:	9809883a 	mov	r4,r19
 2007644:	400d883a 	mov	r6,r8
 2007648:	200d9fc0 	call	200d9fc <__divdf3>
 200764c:	dfc00617 	ldw	ra,24(sp)
 2007650:	dd000517 	ldw	r20,20(sp)
 2007654:	dcc00417 	ldw	r19,16(sp)
 2007658:	dc800317 	ldw	r18,12(sp)
 200765c:	dc400217 	ldw	r17,8(sp)
 2007660:	dec00704 	addi	sp,sp,28
 2007664:	f800283a 	ret
 2007668:	28d3c83a 	sub	r9,r5,r3
 200766c:	003ff206 	br	2007638 <__ratio+0x78>

02007670 <_mprec_log10>:
 2007670:	defffe04 	addi	sp,sp,-8
 2007674:	008005c4 	movi	r2,23
 2007678:	dc000015 	stw	r16,0(sp)
 200767c:	dfc00115 	stw	ra,4(sp)
 2007680:	2021883a 	mov	r16,r4
 2007684:	11000c16 	blt	r2,r4,20076b8 <_mprec_log10+0x48>
 2007688:	200490fa 	slli	r2,r4,3
 200768c:	00c08074 	movhi	r3,513
 2007690:	18c63f04 	addi	r3,r3,6396
 2007694:	10c5883a 	add	r2,r2,r3
 2007698:	12400117 	ldw	r9,4(r2)
 200769c:	12000017 	ldw	r8,0(r2)
 20076a0:	4807883a 	mov	r3,r9
 20076a4:	4005883a 	mov	r2,r8
 20076a8:	dfc00117 	ldw	ra,4(sp)
 20076ac:	dc000017 	ldw	r16,0(sp)
 20076b0:	dec00204 	addi	sp,sp,8
 20076b4:	f800283a 	ret
 20076b8:	0011883a 	mov	r8,zero
 20076bc:	024ffc34 	movhi	r9,16368
 20076c0:	0005883a 	mov	r2,zero
 20076c4:	00d00934 	movhi	r3,16420
 20076c8:	480b883a 	mov	r5,r9
 20076cc:	4009883a 	mov	r4,r8
 20076d0:	180f883a 	mov	r7,r3
 20076d4:	100d883a 	mov	r6,r2
 20076d8:	200d6380 	call	200d638 <__muldf3>
 20076dc:	843fffc4 	addi	r16,r16,-1
 20076e0:	1011883a 	mov	r8,r2
 20076e4:	1813883a 	mov	r9,r3
 20076e8:	803ff51e 	bne	r16,zero,20076c0 <_mprec_log10+0x50>
 20076ec:	4005883a 	mov	r2,r8
 20076f0:	4807883a 	mov	r3,r9
 20076f4:	dfc00117 	ldw	ra,4(sp)
 20076f8:	dc000017 	ldw	r16,0(sp)
 20076fc:	dec00204 	addi	sp,sp,8
 2007700:	f800283a 	ret

02007704 <__copybits>:
 2007704:	297fffc4 	addi	r5,r5,-1
 2007708:	30800417 	ldw	r2,16(r6)
 200770c:	280bd17a 	srai	r5,r5,5
 2007710:	31800504 	addi	r6,r6,20
 2007714:	1085883a 	add	r2,r2,r2
 2007718:	294b883a 	add	r5,r5,r5
 200771c:	294b883a 	add	r5,r5,r5
 2007720:	1085883a 	add	r2,r2,r2
 2007724:	290b883a 	add	r5,r5,r4
 2007728:	3087883a 	add	r3,r6,r2
 200772c:	29400104 	addi	r5,r5,4
 2007730:	30c0052e 	bgeu	r6,r3,2007748 <__copybits+0x44>
 2007734:	30800017 	ldw	r2,0(r6)
 2007738:	31800104 	addi	r6,r6,4
 200773c:	20800015 	stw	r2,0(r4)
 2007740:	21000104 	addi	r4,r4,4
 2007744:	30fffb36 	bltu	r6,r3,2007734 <__copybits+0x30>
 2007748:	2140032e 	bgeu	r4,r5,2007758 <__copybits+0x54>
 200774c:	20000015 	stw	zero,0(r4)
 2007750:	21000104 	addi	r4,r4,4
 2007754:	217ffd36 	bltu	r4,r5,200774c <__copybits+0x48>
 2007758:	f800283a 	ret

0200775c <__any_on>:
 200775c:	20800417 	ldw	r2,16(r4)
 2007760:	2807d17a 	srai	r3,r5,5
 2007764:	21000504 	addi	r4,r4,20
 2007768:	10c00d0e 	bge	r2,r3,20077a0 <__any_on+0x44>
 200776c:	1085883a 	add	r2,r2,r2
 2007770:	1085883a 	add	r2,r2,r2
 2007774:	208d883a 	add	r6,r4,r2
 2007778:	2180182e 	bgeu	r4,r6,20077dc <__any_on+0x80>
 200777c:	30bfff17 	ldw	r2,-4(r6)
 2007780:	30ffff04 	addi	r3,r6,-4
 2007784:	1000041e 	bne	r2,zero,2007798 <__any_on+0x3c>
 2007788:	20c0142e 	bgeu	r4,r3,20077dc <__any_on+0x80>
 200778c:	18ffff04 	addi	r3,r3,-4
 2007790:	18800017 	ldw	r2,0(r3)
 2007794:	103ffc26 	beq	r2,zero,2007788 <__any_on+0x2c>
 2007798:	00800044 	movi	r2,1
 200779c:	f800283a 	ret
 20077a0:	18800a0e 	bge	r3,r2,20077cc <__any_on+0x70>
 20077a4:	294007cc 	andi	r5,r5,31
 20077a8:	28000826 	beq	r5,zero,20077cc <__any_on+0x70>
 20077ac:	18c5883a 	add	r2,r3,r3
 20077b0:	1085883a 	add	r2,r2,r2
 20077b4:	208d883a 	add	r6,r4,r2
 20077b8:	30c00017 	ldw	r3,0(r6)
 20077bc:	1944d83a 	srl	r2,r3,r5
 20077c0:	1144983a 	sll	r2,r2,r5
 20077c4:	18bff41e 	bne	r3,r2,2007798 <__any_on+0x3c>
 20077c8:	003feb06 	br	2007778 <__any_on+0x1c>
 20077cc:	18c5883a 	add	r2,r3,r3
 20077d0:	1085883a 	add	r2,r2,r2
 20077d4:	208d883a 	add	r6,r4,r2
 20077d8:	003fe706 	br	2007778 <__any_on+0x1c>
 20077dc:	0005883a 	mov	r2,zero
 20077e0:	f800283a 	ret

020077e4 <_Balloc>:
 20077e4:	20c01317 	ldw	r3,76(r4)
 20077e8:	defffb04 	addi	sp,sp,-20
 20077ec:	dcc00315 	stw	r19,12(sp)
 20077f0:	dc800215 	stw	r18,8(sp)
 20077f4:	dfc00415 	stw	ra,16(sp)
 20077f8:	2825883a 	mov	r18,r5
 20077fc:	dc400115 	stw	r17,4(sp)
 2007800:	dc000015 	stw	r16,0(sp)
 2007804:	2027883a 	mov	r19,r4
 2007808:	01800404 	movi	r6,16
 200780c:	01400104 	movi	r5,4
 2007810:	18001726 	beq	r3,zero,2007870 <_Balloc+0x8c>
 2007814:	01400044 	movi	r5,1
 2007818:	9485883a 	add	r2,r18,r18
 200781c:	2ca2983a 	sll	r17,r5,r18
 2007820:	1085883a 	add	r2,r2,r2
 2007824:	10c7883a 	add	r3,r2,r3
 2007828:	1c000017 	ldw	r16,0(r3)
 200782c:	8c4d883a 	add	r6,r17,r17
 2007830:	318d883a 	add	r6,r6,r6
 2007834:	9809883a 	mov	r4,r19
 2007838:	31800504 	addi	r6,r6,20
 200783c:	80001226 	beq	r16,zero,2007888 <_Balloc+0xa4>
 2007840:	80800017 	ldw	r2,0(r16)
 2007844:	18800015 	stw	r2,0(r3)
 2007848:	80000415 	stw	zero,16(r16)
 200784c:	80000315 	stw	zero,12(r16)
 2007850:	8005883a 	mov	r2,r16
 2007854:	dfc00417 	ldw	ra,16(sp)
 2007858:	dcc00317 	ldw	r19,12(sp)
 200785c:	dc800217 	ldw	r18,8(sp)
 2007860:	dc400117 	ldw	r17,4(sp)
 2007864:	dc000017 	ldw	r16,0(sp)
 2007868:	dec00504 	addi	sp,sp,20
 200786c:	f800283a 	ret
 2007870:	200b3600 	call	200b360 <_calloc_r>
 2007874:	1007883a 	mov	r3,r2
 2007878:	0021883a 	mov	r16,zero
 200787c:	98801315 	stw	r2,76(r19)
 2007880:	103fe41e 	bne	r2,zero,2007814 <_Balloc+0x30>
 2007884:	003ff206 	br	2007850 <_Balloc+0x6c>
 2007888:	200b3600 	call	200b360 <_calloc_r>
 200788c:	103ff026 	beq	r2,zero,2007850 <_Balloc+0x6c>
 2007890:	1021883a 	mov	r16,r2
 2007894:	14800115 	stw	r18,4(r2)
 2007898:	14400215 	stw	r17,8(r2)
 200789c:	003fea06 	br	2007848 <_Balloc+0x64>

020078a0 <__d2b>:
 20078a0:	defff504 	addi	sp,sp,-44
 20078a4:	dcc00515 	stw	r19,20(sp)
 20078a8:	04c00044 	movi	r19,1
 20078ac:	dc000215 	stw	r16,8(sp)
 20078b0:	2821883a 	mov	r16,r5
 20078b4:	980b883a 	mov	r5,r19
 20078b8:	ddc00915 	stw	r23,36(sp)
 20078bc:	dd800815 	stw	r22,32(sp)
 20078c0:	dd400715 	stw	r21,28(sp)
 20078c4:	dd000615 	stw	r20,24(sp)
 20078c8:	dc800415 	stw	r18,16(sp)
 20078cc:	dc400315 	stw	r17,12(sp)
 20078d0:	dfc00a15 	stw	ra,40(sp)
 20078d4:	3023883a 	mov	r17,r6
 20078d8:	382d883a 	mov	r22,r7
 20078dc:	ddc00b17 	ldw	r23,44(sp)
 20078e0:	20077e40 	call	20077e4 <_Balloc>
 20078e4:	1025883a 	mov	r18,r2
 20078e8:	00a00034 	movhi	r2,32768
 20078ec:	10bfffc4 	addi	r2,r2,-1
 20078f0:	8888703a 	and	r4,r17,r2
 20078f4:	202ad53a 	srli	r21,r4,20
 20078f8:	00800434 	movhi	r2,16
 20078fc:	10bfffc4 	addi	r2,r2,-1
 2007900:	8886703a 	and	r3,r17,r2
 2007904:	a829003a 	cmpeq	r20,r21,zero
 2007908:	800b883a 	mov	r5,r16
 200790c:	d8c00115 	stw	r3,4(sp)
 2007910:	94000504 	addi	r16,r18,20
 2007914:	a000021e 	bne	r20,zero,2007920 <__d2b+0x80>
 2007918:	18c00434 	orhi	r3,r3,16
 200791c:	d8c00115 	stw	r3,4(sp)
 2007920:	28002726 	beq	r5,zero,20079c0 <__d2b+0x120>
 2007924:	d809883a 	mov	r4,sp
 2007928:	d9400015 	stw	r5,0(sp)
 200792c:	20072fc0 	call	20072fc <__lo0bits>
 2007930:	100d883a 	mov	r6,r2
 2007934:	10003526 	beq	r2,zero,2007a0c <__d2b+0x16c>
 2007938:	d8c00117 	ldw	r3,4(sp)
 200793c:	00800804 	movi	r2,32
 2007940:	1185c83a 	sub	r2,r2,r6
 2007944:	d9000017 	ldw	r4,0(sp)
 2007948:	1886983a 	sll	r3,r3,r2
 200794c:	1906b03a 	or	r3,r3,r4
 2007950:	90c00515 	stw	r3,20(r18)
 2007954:	d8c00117 	ldw	r3,4(sp)
 2007958:	1986d83a 	srl	r3,r3,r6
 200795c:	d8c00115 	stw	r3,4(sp)
 2007960:	180b003a 	cmpeq	r5,r3,zero
 2007964:	00800084 	movi	r2,2
 2007968:	114bc83a 	sub	r5,r2,r5
 200796c:	80c00115 	stw	r3,4(r16)
 2007970:	91400415 	stw	r5,16(r18)
 2007974:	a0001a1e 	bne	r20,zero,20079e0 <__d2b+0x140>
 2007978:	3545883a 	add	r2,r6,r21
 200797c:	10bef344 	addi	r2,r2,-1075
 2007980:	00c00d44 	movi	r3,53
 2007984:	b0800015 	stw	r2,0(r22)
 2007988:	1987c83a 	sub	r3,r3,r6
 200798c:	b8c00015 	stw	r3,0(r23)
 2007990:	9005883a 	mov	r2,r18
 2007994:	dfc00a17 	ldw	ra,40(sp)
 2007998:	ddc00917 	ldw	r23,36(sp)
 200799c:	dd800817 	ldw	r22,32(sp)
 20079a0:	dd400717 	ldw	r21,28(sp)
 20079a4:	dd000617 	ldw	r20,24(sp)
 20079a8:	dcc00517 	ldw	r19,20(sp)
 20079ac:	dc800417 	ldw	r18,16(sp)
 20079b0:	dc400317 	ldw	r17,12(sp)
 20079b4:	dc000217 	ldw	r16,8(sp)
 20079b8:	dec00b04 	addi	sp,sp,44
 20079bc:	f800283a 	ret
 20079c0:	d9000104 	addi	r4,sp,4
 20079c4:	20072fc0 	call	20072fc <__lo0bits>
 20079c8:	11800804 	addi	r6,r2,32
 20079cc:	d8800117 	ldw	r2,4(sp)
 20079d0:	94c00415 	stw	r19,16(r18)
 20079d4:	980b883a 	mov	r5,r19
 20079d8:	90800515 	stw	r2,20(r18)
 20079dc:	a03fe626 	beq	r20,zero,2007978 <__d2b+0xd8>
 20079e0:	2945883a 	add	r2,r5,r5
 20079e4:	1085883a 	add	r2,r2,r2
 20079e8:	1405883a 	add	r2,r2,r16
 20079ec:	113fff17 	ldw	r4,-4(r2)
 20079f0:	30fef384 	addi	r3,r6,-1074
 20079f4:	2820917a 	slli	r16,r5,5
 20079f8:	b0c00015 	stw	r3,0(r22)
 20079fc:	200728c0 	call	200728c <__hi0bits>
 2007a00:	80a1c83a 	sub	r16,r16,r2
 2007a04:	bc000015 	stw	r16,0(r23)
 2007a08:	003fe106 	br	2007990 <__d2b+0xf0>
 2007a0c:	d8800017 	ldw	r2,0(sp)
 2007a10:	90800515 	stw	r2,20(r18)
 2007a14:	d8c00117 	ldw	r3,4(sp)
 2007a18:	003fd106 	br	2007960 <__d2b+0xc0>

02007a1c <__mdiff>:
 2007a1c:	defffb04 	addi	sp,sp,-20
 2007a20:	dc000015 	stw	r16,0(sp)
 2007a24:	2821883a 	mov	r16,r5
 2007a28:	dc800215 	stw	r18,8(sp)
 2007a2c:	300b883a 	mov	r5,r6
 2007a30:	2025883a 	mov	r18,r4
 2007a34:	8009883a 	mov	r4,r16
 2007a38:	dc400115 	stw	r17,4(sp)
 2007a3c:	dfc00415 	stw	ra,16(sp)
 2007a40:	dcc00315 	stw	r19,12(sp)
 2007a44:	3023883a 	mov	r17,r6
 2007a48:	20073c00 	call	20073c0 <__mcmp>
 2007a4c:	10004226 	beq	r2,zero,2007b58 <__mdiff+0x13c>
 2007a50:	10005016 	blt	r2,zero,2007b94 <__mdiff+0x178>
 2007a54:	0027883a 	mov	r19,zero
 2007a58:	81400117 	ldw	r5,4(r16)
 2007a5c:	9009883a 	mov	r4,r18
 2007a60:	20077e40 	call	20077e4 <_Balloc>
 2007a64:	1019883a 	mov	r12,r2
 2007a68:	82800417 	ldw	r10,16(r16)
 2007a6c:	88800417 	ldw	r2,16(r17)
 2007a70:	81800504 	addi	r6,r16,20
 2007a74:	5287883a 	add	r3,r10,r10
 2007a78:	1085883a 	add	r2,r2,r2
 2007a7c:	18c7883a 	add	r3,r3,r3
 2007a80:	1085883a 	add	r2,r2,r2
 2007a84:	8a000504 	addi	r8,r17,20
 2007a88:	64c00315 	stw	r19,12(r12)
 2007a8c:	30db883a 	add	r13,r6,r3
 2007a90:	4097883a 	add	r11,r8,r2
 2007a94:	61c00504 	addi	r7,r12,20
 2007a98:	0013883a 	mov	r9,zero
 2007a9c:	31000017 	ldw	r4,0(r6)
 2007aa0:	41400017 	ldw	r5,0(r8)
 2007aa4:	42000104 	addi	r8,r8,4
 2007aa8:	20bfffcc 	andi	r2,r4,65535
 2007aac:	28ffffcc 	andi	r3,r5,65535
 2007ab0:	10c5c83a 	sub	r2,r2,r3
 2007ab4:	1245883a 	add	r2,r2,r9
 2007ab8:	2008d43a 	srli	r4,r4,16
 2007abc:	280ad43a 	srli	r5,r5,16
 2007ac0:	1007d43a 	srai	r3,r2,16
 2007ac4:	3880000d 	sth	r2,0(r7)
 2007ac8:	2149c83a 	sub	r4,r4,r5
 2007acc:	20c9883a 	add	r4,r4,r3
 2007ad0:	3900008d 	sth	r4,2(r7)
 2007ad4:	31800104 	addi	r6,r6,4
 2007ad8:	39c00104 	addi	r7,r7,4
 2007adc:	2013d43a 	srai	r9,r4,16
 2007ae0:	42ffee36 	bltu	r8,r11,2007a9c <__mdiff+0x80>
 2007ae4:	33400c2e 	bgeu	r6,r13,2007b18 <__mdiff+0xfc>
 2007ae8:	30800017 	ldw	r2,0(r6)
 2007aec:	31800104 	addi	r6,r6,4
 2007af0:	10ffffcc 	andi	r3,r2,65535
 2007af4:	1a47883a 	add	r3,r3,r9
 2007af8:	1004d43a 	srli	r2,r2,16
 2007afc:	1809d43a 	srai	r4,r3,16
 2007b00:	38c0000d 	sth	r3,0(r7)
 2007b04:	1105883a 	add	r2,r2,r4
 2007b08:	3880008d 	sth	r2,2(r7)
 2007b0c:	1013d43a 	srai	r9,r2,16
 2007b10:	39c00104 	addi	r7,r7,4
 2007b14:	337ff436 	bltu	r6,r13,2007ae8 <__mdiff+0xcc>
 2007b18:	38bfff17 	ldw	r2,-4(r7)
 2007b1c:	38ffff04 	addi	r3,r7,-4
 2007b20:	1000041e 	bne	r2,zero,2007b34 <__mdiff+0x118>
 2007b24:	18ffff04 	addi	r3,r3,-4
 2007b28:	18800017 	ldw	r2,0(r3)
 2007b2c:	52bfffc4 	addi	r10,r10,-1
 2007b30:	103ffc26 	beq	r2,zero,2007b24 <__mdiff+0x108>
 2007b34:	6005883a 	mov	r2,r12
 2007b38:	62800415 	stw	r10,16(r12)
 2007b3c:	dfc00417 	ldw	ra,16(sp)
 2007b40:	dcc00317 	ldw	r19,12(sp)
 2007b44:	dc800217 	ldw	r18,8(sp)
 2007b48:	dc400117 	ldw	r17,4(sp)
 2007b4c:	dc000017 	ldw	r16,0(sp)
 2007b50:	dec00504 	addi	sp,sp,20
 2007b54:	f800283a 	ret
 2007b58:	9009883a 	mov	r4,r18
 2007b5c:	000b883a 	mov	r5,zero
 2007b60:	20077e40 	call	20077e4 <_Balloc>
 2007b64:	1019883a 	mov	r12,r2
 2007b68:	00800044 	movi	r2,1
 2007b6c:	60800415 	stw	r2,16(r12)
 2007b70:	6005883a 	mov	r2,r12
 2007b74:	60000515 	stw	zero,20(r12)
 2007b78:	dfc00417 	ldw	ra,16(sp)
 2007b7c:	dcc00317 	ldw	r19,12(sp)
 2007b80:	dc800217 	ldw	r18,8(sp)
 2007b84:	dc400117 	ldw	r17,4(sp)
 2007b88:	dc000017 	ldw	r16,0(sp)
 2007b8c:	dec00504 	addi	sp,sp,20
 2007b90:	f800283a 	ret
 2007b94:	880d883a 	mov	r6,r17
 2007b98:	04c00044 	movi	r19,1
 2007b9c:	8023883a 	mov	r17,r16
 2007ba0:	3021883a 	mov	r16,r6
 2007ba4:	003fac06 	br	2007a58 <__mdiff+0x3c>

02007ba8 <__lshift>:
 2007ba8:	defff904 	addi	sp,sp,-28
 2007bac:	28800417 	ldw	r2,16(r5)
 2007bb0:	dc000015 	stw	r16,0(sp)
 2007bb4:	3021d17a 	srai	r16,r6,5
 2007bb8:	28c00217 	ldw	r3,8(r5)
 2007bbc:	10800044 	addi	r2,r2,1
 2007bc0:	dc400115 	stw	r17,4(sp)
 2007bc4:	80a3883a 	add	r17,r16,r2
 2007bc8:	dd400515 	stw	r21,20(sp)
 2007bcc:	dd000415 	stw	r20,16(sp)
 2007bd0:	dc800215 	stw	r18,8(sp)
 2007bd4:	dfc00615 	stw	ra,24(sp)
 2007bd8:	2825883a 	mov	r18,r5
 2007bdc:	dcc00315 	stw	r19,12(sp)
 2007be0:	3029883a 	mov	r20,r6
 2007be4:	202b883a 	mov	r21,r4
 2007be8:	29400117 	ldw	r5,4(r5)
 2007bec:	1c40030e 	bge	r3,r17,2007bfc <__lshift+0x54>
 2007bf0:	18c7883a 	add	r3,r3,r3
 2007bf4:	29400044 	addi	r5,r5,1
 2007bf8:	1c7ffd16 	blt	r3,r17,2007bf0 <__lshift+0x48>
 2007bfc:	a809883a 	mov	r4,r21
 2007c00:	20077e40 	call	20077e4 <_Balloc>
 2007c04:	1027883a 	mov	r19,r2
 2007c08:	11400504 	addi	r5,r2,20
 2007c0c:	0400090e 	bge	zero,r16,2007c34 <__lshift+0x8c>
 2007c10:	2805883a 	mov	r2,r5
 2007c14:	0007883a 	mov	r3,zero
 2007c18:	18c00044 	addi	r3,r3,1
 2007c1c:	10000015 	stw	zero,0(r2)
 2007c20:	10800104 	addi	r2,r2,4
 2007c24:	80fffc1e 	bne	r16,r3,2007c18 <__lshift+0x70>
 2007c28:	8405883a 	add	r2,r16,r16
 2007c2c:	1085883a 	add	r2,r2,r2
 2007c30:	288b883a 	add	r5,r5,r2
 2007c34:	90800417 	ldw	r2,16(r18)
 2007c38:	91000504 	addi	r4,r18,20
 2007c3c:	a18007cc 	andi	r6,r20,31
 2007c40:	1085883a 	add	r2,r2,r2
 2007c44:	1085883a 	add	r2,r2,r2
 2007c48:	208f883a 	add	r7,r4,r2
 2007c4c:	30001e26 	beq	r6,zero,2007cc8 <__lshift+0x120>
 2007c50:	00800804 	movi	r2,32
 2007c54:	1191c83a 	sub	r8,r2,r6
 2007c58:	0007883a 	mov	r3,zero
 2007c5c:	20800017 	ldw	r2,0(r4)
 2007c60:	1184983a 	sll	r2,r2,r6
 2007c64:	1884b03a 	or	r2,r3,r2
 2007c68:	28800015 	stw	r2,0(r5)
 2007c6c:	20c00017 	ldw	r3,0(r4)
 2007c70:	21000104 	addi	r4,r4,4
 2007c74:	29400104 	addi	r5,r5,4
 2007c78:	1a06d83a 	srl	r3,r3,r8
 2007c7c:	21fff736 	bltu	r4,r7,2007c5c <__lshift+0xb4>
 2007c80:	28c00015 	stw	r3,0(r5)
 2007c84:	18000126 	beq	r3,zero,2007c8c <__lshift+0xe4>
 2007c88:	8c400044 	addi	r17,r17,1
 2007c8c:	88bfffc4 	addi	r2,r17,-1
 2007c90:	98800415 	stw	r2,16(r19)
 2007c94:	a809883a 	mov	r4,r21
 2007c98:	900b883a 	mov	r5,r18
 2007c9c:	20072640 	call	2007264 <_Bfree>
 2007ca0:	9805883a 	mov	r2,r19
 2007ca4:	dfc00617 	ldw	ra,24(sp)
 2007ca8:	dd400517 	ldw	r21,20(sp)
 2007cac:	dd000417 	ldw	r20,16(sp)
 2007cb0:	dcc00317 	ldw	r19,12(sp)
 2007cb4:	dc800217 	ldw	r18,8(sp)
 2007cb8:	dc400117 	ldw	r17,4(sp)
 2007cbc:	dc000017 	ldw	r16,0(sp)
 2007cc0:	dec00704 	addi	sp,sp,28
 2007cc4:	f800283a 	ret
 2007cc8:	20800017 	ldw	r2,0(r4)
 2007ccc:	21000104 	addi	r4,r4,4
 2007cd0:	28800015 	stw	r2,0(r5)
 2007cd4:	29400104 	addi	r5,r5,4
 2007cd8:	21ffec2e 	bgeu	r4,r7,2007c8c <__lshift+0xe4>
 2007cdc:	20800017 	ldw	r2,0(r4)
 2007ce0:	21000104 	addi	r4,r4,4
 2007ce4:	28800015 	stw	r2,0(r5)
 2007ce8:	29400104 	addi	r5,r5,4
 2007cec:	21fff636 	bltu	r4,r7,2007cc8 <__lshift+0x120>
 2007cf0:	003fe606 	br	2007c8c <__lshift+0xe4>

02007cf4 <__multiply>:
 2007cf4:	defff904 	addi	sp,sp,-28
 2007cf8:	dcc00315 	stw	r19,12(sp)
 2007cfc:	dc800215 	stw	r18,8(sp)
 2007d00:	2cc00417 	ldw	r19,16(r5)
 2007d04:	34800417 	ldw	r18,16(r6)
 2007d08:	dd000415 	stw	r20,16(sp)
 2007d0c:	dc400115 	stw	r17,4(sp)
 2007d10:	dfc00615 	stw	ra,24(sp)
 2007d14:	dd400515 	stw	r21,20(sp)
 2007d18:	dc000015 	stw	r16,0(sp)
 2007d1c:	2823883a 	mov	r17,r5
 2007d20:	3029883a 	mov	r20,r6
 2007d24:	9c80040e 	bge	r19,r18,2007d38 <__multiply+0x44>
 2007d28:	9027883a 	mov	r19,r18
 2007d2c:	2c800417 	ldw	r18,16(r5)
 2007d30:	2829883a 	mov	r20,r5
 2007d34:	3023883a 	mov	r17,r6
 2007d38:	88800217 	ldw	r2,8(r17)
 2007d3c:	9ca1883a 	add	r16,r19,r18
 2007d40:	89400117 	ldw	r5,4(r17)
 2007d44:	1400010e 	bge	r2,r16,2007d4c <__multiply+0x58>
 2007d48:	29400044 	addi	r5,r5,1
 2007d4c:	20077e40 	call	20077e4 <_Balloc>
 2007d50:	102b883a 	mov	r21,r2
 2007d54:	8405883a 	add	r2,r16,r16
 2007d58:	1085883a 	add	r2,r2,r2
 2007d5c:	a9000504 	addi	r4,r21,20
 2007d60:	209d883a 	add	r14,r4,r2
 2007d64:	2380042e 	bgeu	r4,r14,2007d78 <__multiply+0x84>
 2007d68:	2005883a 	mov	r2,r4
 2007d6c:	10000015 	stw	zero,0(r2)
 2007d70:	10800104 	addi	r2,r2,4
 2007d74:	13bffd36 	bltu	r2,r14,2007d6c <__multiply+0x78>
 2007d78:	9485883a 	add	r2,r18,r18
 2007d7c:	9cc7883a 	add	r3,r19,r19
 2007d80:	a1800504 	addi	r6,r20,20
 2007d84:	1085883a 	add	r2,r2,r2
 2007d88:	8b400504 	addi	r13,r17,20
 2007d8c:	18c7883a 	add	r3,r3,r3
 2007d90:	309f883a 	add	r15,r6,r2
 2007d94:	68d7883a 	add	r11,r13,r3
 2007d98:	33c03b2e 	bgeu	r6,r15,2007e88 <__multiply+0x194>
 2007d9c:	2019883a 	mov	r12,r4
 2007da0:	30800017 	ldw	r2,0(r6)
 2007da4:	127fffcc 	andi	r9,r2,65535
 2007da8:	48001826 	beq	r9,zero,2007e0c <__multiply+0x118>
 2007dac:	6811883a 	mov	r8,r13
 2007db0:	600f883a 	mov	r7,r12
 2007db4:	0015883a 	mov	r10,zero
 2007db8:	40c00017 	ldw	r3,0(r8)
 2007dbc:	39400017 	ldw	r5,0(r7)
 2007dc0:	42000104 	addi	r8,r8,4
 2007dc4:	193fffcc 	andi	r4,r3,65535
 2007dc8:	4909383a 	mul	r4,r9,r4
 2007dcc:	1806d43a 	srli	r3,r3,16
 2007dd0:	28bfffcc 	andi	r2,r5,65535
 2007dd4:	5085883a 	add	r2,r10,r2
 2007dd8:	2089883a 	add	r4,r4,r2
 2007ddc:	48c7383a 	mul	r3,r9,r3
 2007de0:	280ad43a 	srli	r5,r5,16
 2007de4:	2004d43a 	srli	r2,r4,16
 2007de8:	3900000d 	sth	r4,0(r7)
 2007dec:	1947883a 	add	r3,r3,r5
 2007df0:	10c5883a 	add	r2,r2,r3
 2007df4:	3880008d 	sth	r2,2(r7)
 2007df8:	1014d43a 	srli	r10,r2,16
 2007dfc:	39c00104 	addi	r7,r7,4
 2007e00:	42ffed36 	bltu	r8,r11,2007db8 <__multiply+0xc4>
 2007e04:	3a800015 	stw	r10,0(r7)
 2007e08:	30800017 	ldw	r2,0(r6)
 2007e0c:	1012d43a 	srli	r9,r2,16
 2007e10:	48001926 	beq	r9,zero,2007e78 <__multiply+0x184>
 2007e14:	60800017 	ldw	r2,0(r12)
 2007e18:	6811883a 	mov	r8,r13
 2007e1c:	600f883a 	mov	r7,r12
 2007e20:	0015883a 	mov	r10,zero
 2007e24:	100b883a 	mov	r5,r2
 2007e28:	41000017 	ldw	r4,0(r8)
 2007e2c:	2806d43a 	srli	r3,r5,16
 2007e30:	3880000d 	sth	r2,0(r7)
 2007e34:	20bfffcc 	andi	r2,r4,65535
 2007e38:	4885383a 	mul	r2,r9,r2
 2007e3c:	50c7883a 	add	r3,r10,r3
 2007e40:	2008d43a 	srli	r4,r4,16
 2007e44:	10c5883a 	add	r2,r2,r3
 2007e48:	3880008d 	sth	r2,2(r7)
 2007e4c:	39c00104 	addi	r7,r7,4
 2007e50:	39400017 	ldw	r5,0(r7)
 2007e54:	4909383a 	mul	r4,r9,r4
 2007e58:	1004d43a 	srli	r2,r2,16
 2007e5c:	28ffffcc 	andi	r3,r5,65535
 2007e60:	20c9883a 	add	r4,r4,r3
 2007e64:	1105883a 	add	r2,r2,r4
 2007e68:	42000104 	addi	r8,r8,4
 2007e6c:	1014d43a 	srli	r10,r2,16
 2007e70:	42ffed36 	bltu	r8,r11,2007e28 <__multiply+0x134>
 2007e74:	38800015 	stw	r2,0(r7)
 2007e78:	31800104 	addi	r6,r6,4
 2007e7c:	33c0022e 	bgeu	r6,r15,2007e88 <__multiply+0x194>
 2007e80:	63000104 	addi	r12,r12,4
 2007e84:	003fc606 	br	2007da0 <__multiply+0xac>
 2007e88:	0400090e 	bge	zero,r16,2007eb0 <__multiply+0x1bc>
 2007e8c:	70bfff17 	ldw	r2,-4(r14)
 2007e90:	70ffff04 	addi	r3,r14,-4
 2007e94:	10000326 	beq	r2,zero,2007ea4 <__multiply+0x1b0>
 2007e98:	00000506 	br	2007eb0 <__multiply+0x1bc>
 2007e9c:	18800017 	ldw	r2,0(r3)
 2007ea0:	1000031e 	bne	r2,zero,2007eb0 <__multiply+0x1bc>
 2007ea4:	843fffc4 	addi	r16,r16,-1
 2007ea8:	18ffff04 	addi	r3,r3,-4
 2007eac:	803ffb1e 	bne	r16,zero,2007e9c <__multiply+0x1a8>
 2007eb0:	a805883a 	mov	r2,r21
 2007eb4:	ac000415 	stw	r16,16(r21)
 2007eb8:	dfc00617 	ldw	ra,24(sp)
 2007ebc:	dd400517 	ldw	r21,20(sp)
 2007ec0:	dd000417 	ldw	r20,16(sp)
 2007ec4:	dcc00317 	ldw	r19,12(sp)
 2007ec8:	dc800217 	ldw	r18,8(sp)
 2007ecc:	dc400117 	ldw	r17,4(sp)
 2007ed0:	dc000017 	ldw	r16,0(sp)
 2007ed4:	dec00704 	addi	sp,sp,28
 2007ed8:	f800283a 	ret

02007edc <__i2b>:
 2007edc:	defffd04 	addi	sp,sp,-12
 2007ee0:	dc000015 	stw	r16,0(sp)
 2007ee4:	04000044 	movi	r16,1
 2007ee8:	dc800115 	stw	r18,4(sp)
 2007eec:	2825883a 	mov	r18,r5
 2007ef0:	800b883a 	mov	r5,r16
 2007ef4:	dfc00215 	stw	ra,8(sp)
 2007ef8:	20077e40 	call	20077e4 <_Balloc>
 2007efc:	14000415 	stw	r16,16(r2)
 2007f00:	14800515 	stw	r18,20(r2)
 2007f04:	dfc00217 	ldw	ra,8(sp)
 2007f08:	dc800117 	ldw	r18,4(sp)
 2007f0c:	dc000017 	ldw	r16,0(sp)
 2007f10:	dec00304 	addi	sp,sp,12
 2007f14:	f800283a 	ret

02007f18 <__multadd>:
 2007f18:	defffa04 	addi	sp,sp,-24
 2007f1c:	dc800215 	stw	r18,8(sp)
 2007f20:	2c800417 	ldw	r18,16(r5)
 2007f24:	dd000415 	stw	r20,16(sp)
 2007f28:	dcc00315 	stw	r19,12(sp)
 2007f2c:	dc000015 	stw	r16,0(sp)
 2007f30:	dfc00515 	stw	ra,20(sp)
 2007f34:	3821883a 	mov	r16,r7
 2007f38:	dc400115 	stw	r17,4(sp)
 2007f3c:	2827883a 	mov	r19,r5
 2007f40:	2029883a 	mov	r20,r4
 2007f44:	2a000504 	addi	r8,r5,20
 2007f48:	000f883a 	mov	r7,zero
 2007f4c:	40800017 	ldw	r2,0(r8)
 2007f50:	39c00044 	addi	r7,r7,1
 2007f54:	10ffffcc 	andi	r3,r2,65535
 2007f58:	1987383a 	mul	r3,r3,r6
 2007f5c:	1004d43a 	srli	r2,r2,16
 2007f60:	1c07883a 	add	r3,r3,r16
 2007f64:	180ad43a 	srli	r5,r3,16
 2007f68:	1185383a 	mul	r2,r2,r6
 2007f6c:	18ffffcc 	andi	r3,r3,65535
 2007f70:	1145883a 	add	r2,r2,r5
 2007f74:	1008943a 	slli	r4,r2,16
 2007f78:	1020d43a 	srli	r16,r2,16
 2007f7c:	20c9883a 	add	r4,r4,r3
 2007f80:	41000015 	stw	r4,0(r8)
 2007f84:	42000104 	addi	r8,r8,4
 2007f88:	3cbff016 	blt	r7,r18,2007f4c <__multadd+0x34>
 2007f8c:	80000826 	beq	r16,zero,2007fb0 <__multadd+0x98>
 2007f90:	98800217 	ldw	r2,8(r19)
 2007f94:	90800f0e 	bge	r18,r2,2007fd4 <__multadd+0xbc>
 2007f98:	9485883a 	add	r2,r18,r18
 2007f9c:	1085883a 	add	r2,r2,r2
 2007fa0:	14c5883a 	add	r2,r2,r19
 2007fa4:	90c00044 	addi	r3,r18,1
 2007fa8:	14000515 	stw	r16,20(r2)
 2007fac:	98c00415 	stw	r3,16(r19)
 2007fb0:	9805883a 	mov	r2,r19
 2007fb4:	dfc00517 	ldw	ra,20(sp)
 2007fb8:	dd000417 	ldw	r20,16(sp)
 2007fbc:	dcc00317 	ldw	r19,12(sp)
 2007fc0:	dc800217 	ldw	r18,8(sp)
 2007fc4:	dc400117 	ldw	r17,4(sp)
 2007fc8:	dc000017 	ldw	r16,0(sp)
 2007fcc:	dec00604 	addi	sp,sp,24
 2007fd0:	f800283a 	ret
 2007fd4:	99400117 	ldw	r5,4(r19)
 2007fd8:	a009883a 	mov	r4,r20
 2007fdc:	29400044 	addi	r5,r5,1
 2007fe0:	20077e40 	call	20077e4 <_Balloc>
 2007fe4:	99800417 	ldw	r6,16(r19)
 2007fe8:	99400304 	addi	r5,r19,12
 2007fec:	11000304 	addi	r4,r2,12
 2007ff0:	318d883a 	add	r6,r6,r6
 2007ff4:	318d883a 	add	r6,r6,r6
 2007ff8:	31800204 	addi	r6,r6,8
 2007ffc:	1023883a 	mov	r17,r2
 2008000:	200704c0 	call	200704c <memcpy>
 2008004:	980b883a 	mov	r5,r19
 2008008:	a009883a 	mov	r4,r20
 200800c:	20072640 	call	2007264 <_Bfree>
 2008010:	8827883a 	mov	r19,r17
 2008014:	003fe006 	br	2007f98 <__multadd+0x80>

02008018 <__pow5mult>:
 2008018:	defffa04 	addi	sp,sp,-24
 200801c:	308000cc 	andi	r2,r6,3
 2008020:	dd000415 	stw	r20,16(sp)
 2008024:	dcc00315 	stw	r19,12(sp)
 2008028:	dc000015 	stw	r16,0(sp)
 200802c:	dfc00515 	stw	ra,20(sp)
 2008030:	dc800215 	stw	r18,8(sp)
 2008034:	dc400115 	stw	r17,4(sp)
 2008038:	3021883a 	mov	r16,r6
 200803c:	2027883a 	mov	r19,r4
 2008040:	2829883a 	mov	r20,r5
 2008044:	10002b1e 	bne	r2,zero,20080f4 <__pow5mult+0xdc>
 2008048:	8025d0ba 	srai	r18,r16,2
 200804c:	90001b26 	beq	r18,zero,20080bc <__pow5mult+0xa4>
 2008050:	9c001217 	ldw	r16,72(r19)
 2008054:	8000081e 	bne	r16,zero,2008078 <__pow5mult+0x60>
 2008058:	00003006 	br	200811c <__pow5mult+0x104>
 200805c:	800b883a 	mov	r5,r16
 2008060:	800d883a 	mov	r6,r16
 2008064:	9809883a 	mov	r4,r19
 2008068:	90001426 	beq	r18,zero,20080bc <__pow5mult+0xa4>
 200806c:	80800017 	ldw	r2,0(r16)
 2008070:	10001b26 	beq	r2,zero,20080e0 <__pow5mult+0xc8>
 2008074:	1021883a 	mov	r16,r2
 2008078:	9080004c 	andi	r2,r18,1
 200807c:	1005003a 	cmpeq	r2,r2,zero
 2008080:	9025d07a 	srai	r18,r18,1
 2008084:	800d883a 	mov	r6,r16
 2008088:	9809883a 	mov	r4,r19
 200808c:	a00b883a 	mov	r5,r20
 2008090:	103ff21e 	bne	r2,zero,200805c <__pow5mult+0x44>
 2008094:	2007cf40 	call	2007cf4 <__multiply>
 2008098:	a00b883a 	mov	r5,r20
 200809c:	9809883a 	mov	r4,r19
 20080a0:	1023883a 	mov	r17,r2
 20080a4:	20072640 	call	2007264 <_Bfree>
 20080a8:	8829883a 	mov	r20,r17
 20080ac:	800b883a 	mov	r5,r16
 20080b0:	800d883a 	mov	r6,r16
 20080b4:	9809883a 	mov	r4,r19
 20080b8:	903fec1e 	bne	r18,zero,200806c <__pow5mult+0x54>
 20080bc:	a005883a 	mov	r2,r20
 20080c0:	dfc00517 	ldw	ra,20(sp)
 20080c4:	dd000417 	ldw	r20,16(sp)
 20080c8:	dcc00317 	ldw	r19,12(sp)
 20080cc:	dc800217 	ldw	r18,8(sp)
 20080d0:	dc400117 	ldw	r17,4(sp)
 20080d4:	dc000017 	ldw	r16,0(sp)
 20080d8:	dec00604 	addi	sp,sp,24
 20080dc:	f800283a 	ret
 20080e0:	2007cf40 	call	2007cf4 <__multiply>
 20080e4:	80800015 	stw	r2,0(r16)
 20080e8:	1021883a 	mov	r16,r2
 20080ec:	10000015 	stw	zero,0(r2)
 20080f0:	003fe106 	br	2008078 <__pow5mult+0x60>
 20080f4:	1085883a 	add	r2,r2,r2
 20080f8:	00c08074 	movhi	r3,513
 20080fc:	18c68504 	addi	r3,r3,6676
 2008100:	1085883a 	add	r2,r2,r2
 2008104:	10c5883a 	add	r2,r2,r3
 2008108:	11bfff17 	ldw	r6,-4(r2)
 200810c:	000f883a 	mov	r7,zero
 2008110:	2007f180 	call	2007f18 <__multadd>
 2008114:	1029883a 	mov	r20,r2
 2008118:	003fcb06 	br	2008048 <__pow5mult+0x30>
 200811c:	9809883a 	mov	r4,r19
 2008120:	01409c44 	movi	r5,625
 2008124:	2007edc0 	call	2007edc <__i2b>
 2008128:	98801215 	stw	r2,72(r19)
 200812c:	1021883a 	mov	r16,r2
 2008130:	10000015 	stw	zero,0(r2)
 2008134:	003fd006 	br	2008078 <__pow5mult+0x60>

02008138 <__s2b>:
 2008138:	defff904 	addi	sp,sp,-28
 200813c:	dcc00315 	stw	r19,12(sp)
 2008140:	dc800215 	stw	r18,8(sp)
 2008144:	2827883a 	mov	r19,r5
 2008148:	2025883a 	mov	r18,r4
 200814c:	01400244 	movi	r5,9
 2008150:	39000204 	addi	r4,r7,8
 2008154:	dd000415 	stw	r20,16(sp)
 2008158:	dc400115 	stw	r17,4(sp)
 200815c:	dfc00615 	stw	ra,24(sp)
 2008160:	dd400515 	stw	r21,20(sp)
 2008164:	dc000015 	stw	r16,0(sp)
 2008168:	3829883a 	mov	r20,r7
 200816c:	3023883a 	mov	r17,r6
 2008170:	200e3d80 	call	200e3d8 <__divsi3>
 2008174:	00c00044 	movi	r3,1
 2008178:	1880350e 	bge	r3,r2,2008250 <__s2b+0x118>
 200817c:	000b883a 	mov	r5,zero
 2008180:	18c7883a 	add	r3,r3,r3
 2008184:	29400044 	addi	r5,r5,1
 2008188:	18bffd16 	blt	r3,r2,2008180 <__s2b+0x48>
 200818c:	9009883a 	mov	r4,r18
 2008190:	20077e40 	call	20077e4 <_Balloc>
 2008194:	1011883a 	mov	r8,r2
 2008198:	d8800717 	ldw	r2,28(sp)
 200819c:	00c00044 	movi	r3,1
 20081a0:	01800244 	movi	r6,9
 20081a4:	40800515 	stw	r2,20(r8)
 20081a8:	40c00415 	stw	r3,16(r8)
 20081ac:	3440260e 	bge	r6,r17,2008248 <__s2b+0x110>
 20081b0:	3021883a 	mov	r16,r6
 20081b4:	99ab883a 	add	r21,r19,r6
 20081b8:	9c05883a 	add	r2,r19,r16
 20081bc:	11c00007 	ldb	r7,0(r2)
 20081c0:	400b883a 	mov	r5,r8
 20081c4:	9009883a 	mov	r4,r18
 20081c8:	39fff404 	addi	r7,r7,-48
 20081cc:	01800284 	movi	r6,10
 20081d0:	2007f180 	call	2007f18 <__multadd>
 20081d4:	84000044 	addi	r16,r16,1
 20081d8:	1011883a 	mov	r8,r2
 20081dc:	8c3ff61e 	bne	r17,r16,20081b8 <__s2b+0x80>
 20081e0:	ac45883a 	add	r2,r21,r17
 20081e4:	117ffe04 	addi	r5,r2,-8
 20081e8:	880d883a 	mov	r6,r17
 20081ec:	35000c0e 	bge	r6,r20,2008220 <__s2b+0xe8>
 20081f0:	a185c83a 	sub	r2,r20,r6
 20081f4:	2821883a 	mov	r16,r5
 20081f8:	28a3883a 	add	r17,r5,r2
 20081fc:	81c00007 	ldb	r7,0(r16)
 2008200:	400b883a 	mov	r5,r8
 2008204:	9009883a 	mov	r4,r18
 2008208:	39fff404 	addi	r7,r7,-48
 200820c:	01800284 	movi	r6,10
 2008210:	2007f180 	call	2007f18 <__multadd>
 2008214:	84000044 	addi	r16,r16,1
 2008218:	1011883a 	mov	r8,r2
 200821c:	847ff71e 	bne	r16,r17,20081fc <__s2b+0xc4>
 2008220:	4005883a 	mov	r2,r8
 2008224:	dfc00617 	ldw	ra,24(sp)
 2008228:	dd400517 	ldw	r21,20(sp)
 200822c:	dd000417 	ldw	r20,16(sp)
 2008230:	dcc00317 	ldw	r19,12(sp)
 2008234:	dc800217 	ldw	r18,8(sp)
 2008238:	dc400117 	ldw	r17,4(sp)
 200823c:	dc000017 	ldw	r16,0(sp)
 2008240:	dec00704 	addi	sp,sp,28
 2008244:	f800283a 	ret
 2008248:	99400284 	addi	r5,r19,10
 200824c:	003fe706 	br	20081ec <__s2b+0xb4>
 2008250:	000b883a 	mov	r5,zero
 2008254:	003fcd06 	br	200818c <__s2b+0x54>

02008258 <_realloc_r>:
 2008258:	defff404 	addi	sp,sp,-48
 200825c:	dd800815 	stw	r22,32(sp)
 2008260:	dc800415 	stw	r18,16(sp)
 2008264:	dc400315 	stw	r17,12(sp)
 2008268:	dfc00b15 	stw	ra,44(sp)
 200826c:	df000a15 	stw	fp,40(sp)
 2008270:	ddc00915 	stw	r23,36(sp)
 2008274:	dd400715 	stw	r21,28(sp)
 2008278:	dd000615 	stw	r20,24(sp)
 200827c:	dcc00515 	stw	r19,20(sp)
 2008280:	dc000215 	stw	r16,8(sp)
 2008284:	2825883a 	mov	r18,r5
 2008288:	3023883a 	mov	r17,r6
 200828c:	202d883a 	mov	r22,r4
 2008290:	2800c926 	beq	r5,zero,20085b8 <_realloc_r+0x360>
 2008294:	200f3bc0 	call	200f3bc <__malloc_lock>
 2008298:	943ffe04 	addi	r16,r18,-8
 200829c:	88c002c4 	addi	r3,r17,11
 20082a0:	00800584 	movi	r2,22
 20082a4:	82000117 	ldw	r8,4(r16)
 20082a8:	10c01b2e 	bgeu	r2,r3,2008318 <_realloc_r+0xc0>
 20082ac:	00bffe04 	movi	r2,-8
 20082b0:	188e703a 	and	r7,r3,r2
 20082b4:	3839883a 	mov	fp,r7
 20082b8:	38001a16 	blt	r7,zero,2008324 <_realloc_r+0xcc>
 20082bc:	e4401936 	bltu	fp,r17,2008324 <_realloc_r+0xcc>
 20082c0:	013fff04 	movi	r4,-4
 20082c4:	4126703a 	and	r19,r8,r4
 20082c8:	99c02616 	blt	r19,r7,2008364 <_realloc_r+0x10c>
 20082cc:	802b883a 	mov	r21,r16
 20082d0:	9829883a 	mov	r20,r19
 20082d4:	84000204 	addi	r16,r16,8
 20082d8:	a80f883a 	mov	r7,r21
 20082dc:	a70dc83a 	sub	r6,r20,fp
 20082e0:	008003c4 	movi	r2,15
 20082e4:	1180c136 	bltu	r2,r6,20085ec <_realloc_r+0x394>
 20082e8:	38800117 	ldw	r2,4(r7)
 20082ec:	a549883a 	add	r4,r20,r21
 20082f0:	1080004c 	andi	r2,r2,1
 20082f4:	a084b03a 	or	r2,r20,r2
 20082f8:	38800115 	stw	r2,4(r7)
 20082fc:	20c00117 	ldw	r3,4(r4)
 2008300:	18c00054 	ori	r3,r3,1
 2008304:	20c00115 	stw	r3,4(r4)
 2008308:	b009883a 	mov	r4,r22
 200830c:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2008310:	8023883a 	mov	r17,r16
 2008314:	00000606 	br	2008330 <_realloc_r+0xd8>
 2008318:	01c00404 	movi	r7,16
 200831c:	3839883a 	mov	fp,r7
 2008320:	e47fe72e 	bgeu	fp,r17,20082c0 <_realloc_r+0x68>
 2008324:	00800304 	movi	r2,12
 2008328:	0023883a 	mov	r17,zero
 200832c:	b0800015 	stw	r2,0(r22)
 2008330:	8805883a 	mov	r2,r17
 2008334:	dfc00b17 	ldw	ra,44(sp)
 2008338:	df000a17 	ldw	fp,40(sp)
 200833c:	ddc00917 	ldw	r23,36(sp)
 2008340:	dd800817 	ldw	r22,32(sp)
 2008344:	dd400717 	ldw	r21,28(sp)
 2008348:	dd000617 	ldw	r20,24(sp)
 200834c:	dcc00517 	ldw	r19,20(sp)
 2008350:	dc800417 	ldw	r18,16(sp)
 2008354:	dc400317 	ldw	r17,12(sp)
 2008358:	dc000217 	ldw	r16,8(sp)
 200835c:	dec00c04 	addi	sp,sp,48
 2008360:	f800283a 	ret
 2008364:	00808074 	movhi	r2,513
 2008368:	1087ee04 	addi	r2,r2,8120
 200836c:	12400217 	ldw	r9,8(r2)
 2008370:	84cd883a 	add	r6,r16,r19
 2008374:	802b883a 	mov	r21,r16
 2008378:	3240b926 	beq	r6,r9,2008660 <_realloc_r+0x408>
 200837c:	31400117 	ldw	r5,4(r6)
 2008380:	00bfff84 	movi	r2,-2
 2008384:	2884703a 	and	r2,r5,r2
 2008388:	1185883a 	add	r2,r2,r6
 200838c:	10c00117 	ldw	r3,4(r2)
 2008390:	18c0004c 	andi	r3,r3,1
 2008394:	1807003a 	cmpeq	r3,r3,zero
 2008398:	1800a326 	beq	r3,zero,2008628 <_realloc_r+0x3d0>
 200839c:	2908703a 	and	r4,r5,r4
 20083a0:	9929883a 	add	r20,r19,r4
 20083a4:	a1c0a30e 	bge	r20,r7,2008634 <_realloc_r+0x3dc>
 20083a8:	4080004c 	andi	r2,r8,1
 20083ac:	1000551e 	bne	r2,zero,2008504 <_realloc_r+0x2ac>
 20083b0:	80800017 	ldw	r2,0(r16)
 20083b4:	80afc83a 	sub	r23,r16,r2
 20083b8:	b8c00117 	ldw	r3,4(r23)
 20083bc:	00bfff04 	movi	r2,-4
 20083c0:	1884703a 	and	r2,r3,r2
 20083c4:	30002e26 	beq	r6,zero,2008480 <_realloc_r+0x228>
 20083c8:	3240b926 	beq	r6,r9,20086b0 <_realloc_r+0x458>
 20083cc:	98a9883a 	add	r20,r19,r2
 20083d0:	2509883a 	add	r4,r4,r20
 20083d4:	d9000015 	stw	r4,0(sp)
 20083d8:	21c02a16 	blt	r4,r7,2008484 <_realloc_r+0x22c>
 20083dc:	30800317 	ldw	r2,12(r6)
 20083e0:	30c00217 	ldw	r3,8(r6)
 20083e4:	01400904 	movi	r5,36
 20083e8:	99bfff04 	addi	r6,r19,-4
 20083ec:	18800315 	stw	r2,12(r3)
 20083f0:	10c00215 	stw	r3,8(r2)
 20083f4:	b9000317 	ldw	r4,12(r23)
 20083f8:	b8800217 	ldw	r2,8(r23)
 20083fc:	b82b883a 	mov	r21,r23
 2008400:	bc000204 	addi	r16,r23,8
 2008404:	20800215 	stw	r2,8(r4)
 2008408:	11000315 	stw	r4,12(r2)
 200840c:	2980e436 	bltu	r5,r6,20087a0 <_realloc_r+0x548>
 2008410:	008004c4 	movi	r2,19
 2008414:	9009883a 	mov	r4,r18
 2008418:	8011883a 	mov	r8,r16
 200841c:	11800f2e 	bgeu	r2,r6,200845c <_realloc_r+0x204>
 2008420:	90800017 	ldw	r2,0(r18)
 2008424:	ba000404 	addi	r8,r23,16
 2008428:	91000204 	addi	r4,r18,8
 200842c:	b8800215 	stw	r2,8(r23)
 2008430:	90c00117 	ldw	r3,4(r18)
 2008434:	008006c4 	movi	r2,27
 2008438:	b8c00315 	stw	r3,12(r23)
 200843c:	1180072e 	bgeu	r2,r6,200845c <_realloc_r+0x204>
 2008440:	90c00217 	ldw	r3,8(r18)
 2008444:	ba000604 	addi	r8,r23,24
 2008448:	91000404 	addi	r4,r18,16
 200844c:	b8c00415 	stw	r3,16(r23)
 2008450:	90800317 	ldw	r2,12(r18)
 2008454:	b8800515 	stw	r2,20(r23)
 2008458:	3140e726 	beq	r6,r5,20087f8 <_realloc_r+0x5a0>
 200845c:	20800017 	ldw	r2,0(r4)
 2008460:	dd000017 	ldw	r20,0(sp)
 2008464:	b80f883a 	mov	r7,r23
 2008468:	40800015 	stw	r2,0(r8)
 200846c:	20c00117 	ldw	r3,4(r4)
 2008470:	40c00115 	stw	r3,4(r8)
 2008474:	20800217 	ldw	r2,8(r4)
 2008478:	40800215 	stw	r2,8(r8)
 200847c:	003f9706 	br	20082dc <_realloc_r+0x84>
 2008480:	98a9883a 	add	r20,r19,r2
 2008484:	a1c01f16 	blt	r20,r7,2008504 <_realloc_r+0x2ac>
 2008488:	b8c00317 	ldw	r3,12(r23)
 200848c:	b8800217 	ldw	r2,8(r23)
 2008490:	99bfff04 	addi	r6,r19,-4
 2008494:	01400904 	movi	r5,36
 2008498:	b82b883a 	mov	r21,r23
 200849c:	18800215 	stw	r2,8(r3)
 20084a0:	10c00315 	stw	r3,12(r2)
 20084a4:	bc000204 	addi	r16,r23,8
 20084a8:	2980c336 	bltu	r5,r6,20087b8 <_realloc_r+0x560>
 20084ac:	008004c4 	movi	r2,19
 20084b0:	9009883a 	mov	r4,r18
 20084b4:	8011883a 	mov	r8,r16
 20084b8:	11800f2e 	bgeu	r2,r6,20084f8 <_realloc_r+0x2a0>
 20084bc:	90800017 	ldw	r2,0(r18)
 20084c0:	ba000404 	addi	r8,r23,16
 20084c4:	91000204 	addi	r4,r18,8
 20084c8:	b8800215 	stw	r2,8(r23)
 20084cc:	90c00117 	ldw	r3,4(r18)
 20084d0:	008006c4 	movi	r2,27
 20084d4:	b8c00315 	stw	r3,12(r23)
 20084d8:	1180072e 	bgeu	r2,r6,20084f8 <_realloc_r+0x2a0>
 20084dc:	90c00217 	ldw	r3,8(r18)
 20084e0:	ba000604 	addi	r8,r23,24
 20084e4:	91000404 	addi	r4,r18,16
 20084e8:	b8c00415 	stw	r3,16(r23)
 20084ec:	90800317 	ldw	r2,12(r18)
 20084f0:	b8800515 	stw	r2,20(r23)
 20084f4:	3140c726 	beq	r6,r5,2008814 <_realloc_r+0x5bc>
 20084f8:	20800017 	ldw	r2,0(r4)
 20084fc:	b80f883a 	mov	r7,r23
 2008500:	003fd906 	br	2008468 <_realloc_r+0x210>
 2008504:	880b883a 	mov	r5,r17
 2008508:	b009883a 	mov	r4,r22
 200850c:	20067280 	call	2006728 <_malloc_r>
 2008510:	1023883a 	mov	r17,r2
 2008514:	10002526 	beq	r2,zero,20085ac <_realloc_r+0x354>
 2008518:	80800117 	ldw	r2,4(r16)
 200851c:	00ffff84 	movi	r3,-2
 2008520:	893ffe04 	addi	r4,r17,-8
 2008524:	10c4703a 	and	r2,r2,r3
 2008528:	8085883a 	add	r2,r16,r2
 200852c:	20809526 	beq	r4,r2,2008784 <_realloc_r+0x52c>
 2008530:	99bfff04 	addi	r6,r19,-4
 2008534:	01c00904 	movi	r7,36
 2008538:	39804536 	bltu	r7,r6,2008650 <_realloc_r+0x3f8>
 200853c:	008004c4 	movi	r2,19
 2008540:	9009883a 	mov	r4,r18
 2008544:	880b883a 	mov	r5,r17
 2008548:	11800f2e 	bgeu	r2,r6,2008588 <_realloc_r+0x330>
 200854c:	90800017 	ldw	r2,0(r18)
 2008550:	89400204 	addi	r5,r17,8
 2008554:	91000204 	addi	r4,r18,8
 2008558:	88800015 	stw	r2,0(r17)
 200855c:	90c00117 	ldw	r3,4(r18)
 2008560:	008006c4 	movi	r2,27
 2008564:	88c00115 	stw	r3,4(r17)
 2008568:	1180072e 	bgeu	r2,r6,2008588 <_realloc_r+0x330>
 200856c:	90c00217 	ldw	r3,8(r18)
 2008570:	89400404 	addi	r5,r17,16
 2008574:	91000404 	addi	r4,r18,16
 2008578:	88c00215 	stw	r3,8(r17)
 200857c:	90800317 	ldw	r2,12(r18)
 2008580:	88800315 	stw	r2,12(r17)
 2008584:	31c09126 	beq	r6,r7,20087cc <_realloc_r+0x574>
 2008588:	20800017 	ldw	r2,0(r4)
 200858c:	28800015 	stw	r2,0(r5)
 2008590:	20c00117 	ldw	r3,4(r4)
 2008594:	28c00115 	stw	r3,4(r5)
 2008598:	20800217 	ldw	r2,8(r4)
 200859c:	28800215 	stw	r2,8(r5)
 20085a0:	900b883a 	mov	r5,r18
 20085a4:	b009883a 	mov	r4,r22
 20085a8:	2005b740 	call	2005b74 <_free_r>
 20085ac:	b009883a 	mov	r4,r22
 20085b0:	200f3dc0 	call	200f3dc <__malloc_unlock>
 20085b4:	003f5e06 	br	2008330 <_realloc_r+0xd8>
 20085b8:	300b883a 	mov	r5,r6
 20085bc:	dfc00b17 	ldw	ra,44(sp)
 20085c0:	df000a17 	ldw	fp,40(sp)
 20085c4:	ddc00917 	ldw	r23,36(sp)
 20085c8:	dd800817 	ldw	r22,32(sp)
 20085cc:	dd400717 	ldw	r21,28(sp)
 20085d0:	dd000617 	ldw	r20,24(sp)
 20085d4:	dcc00517 	ldw	r19,20(sp)
 20085d8:	dc800417 	ldw	r18,16(sp)
 20085dc:	dc400317 	ldw	r17,12(sp)
 20085e0:	dc000217 	ldw	r16,8(sp)
 20085e4:	dec00c04 	addi	sp,sp,48
 20085e8:	20067281 	jmpi	2006728 <_malloc_r>
 20085ec:	38800117 	ldw	r2,4(r7)
 20085f0:	e54b883a 	add	r5,fp,r21
 20085f4:	31000054 	ori	r4,r6,1
 20085f8:	1080004c 	andi	r2,r2,1
 20085fc:	1704b03a 	or	r2,r2,fp
 2008600:	38800115 	stw	r2,4(r7)
 2008604:	29000115 	stw	r4,4(r5)
 2008608:	2987883a 	add	r3,r5,r6
 200860c:	18800117 	ldw	r2,4(r3)
 2008610:	29400204 	addi	r5,r5,8
 2008614:	b009883a 	mov	r4,r22
 2008618:	10800054 	ori	r2,r2,1
 200861c:	18800115 	stw	r2,4(r3)
 2008620:	2005b740 	call	2005b74 <_free_r>
 2008624:	003f3806 	br	2008308 <_realloc_r+0xb0>
 2008628:	000d883a 	mov	r6,zero
 200862c:	0009883a 	mov	r4,zero
 2008630:	003f5d06 	br	20083a8 <_realloc_r+0x150>
 2008634:	30c00217 	ldw	r3,8(r6)
 2008638:	30800317 	ldw	r2,12(r6)
 200863c:	800f883a 	mov	r7,r16
 2008640:	84000204 	addi	r16,r16,8
 2008644:	10c00215 	stw	r3,8(r2)
 2008648:	18800315 	stw	r2,12(r3)
 200864c:	003f2306 	br	20082dc <_realloc_r+0x84>
 2008650:	8809883a 	mov	r4,r17
 2008654:	900b883a 	mov	r5,r18
 2008658:	20070ec0 	call	20070ec <memmove>
 200865c:	003fd006 	br	20085a0 <_realloc_r+0x348>
 2008660:	30800117 	ldw	r2,4(r6)
 2008664:	e0c00404 	addi	r3,fp,16
 2008668:	1108703a 	and	r4,r2,r4
 200866c:	9905883a 	add	r2,r19,r4
 2008670:	10ff4d16 	blt	r2,r3,20083a8 <_realloc_r+0x150>
 2008674:	1705c83a 	sub	r2,r2,fp
 2008678:	870b883a 	add	r5,r16,fp
 200867c:	10800054 	ori	r2,r2,1
 2008680:	28800115 	stw	r2,4(r5)
 2008684:	80c00117 	ldw	r3,4(r16)
 2008688:	00808074 	movhi	r2,513
 200868c:	1087ee04 	addi	r2,r2,8120
 2008690:	b009883a 	mov	r4,r22
 2008694:	18c0004c 	andi	r3,r3,1
 2008698:	e0c6b03a 	or	r3,fp,r3
 200869c:	11400215 	stw	r5,8(r2)
 20086a0:	80c00115 	stw	r3,4(r16)
 20086a4:	200f3dc0 	call	200f3dc <__malloc_unlock>
 20086a8:	84400204 	addi	r17,r16,8
 20086ac:	003f2006 	br	2008330 <_realloc_r+0xd8>
 20086b0:	98a9883a 	add	r20,r19,r2
 20086b4:	2509883a 	add	r4,r4,r20
 20086b8:	e0800404 	addi	r2,fp,16
 20086bc:	d9000115 	stw	r4,4(sp)
 20086c0:	20bf7016 	blt	r4,r2,2008484 <_realloc_r+0x22c>
 20086c4:	b8c00317 	ldw	r3,12(r23)
 20086c8:	b8800217 	ldw	r2,8(r23)
 20086cc:	99bfff04 	addi	r6,r19,-4
 20086d0:	01400904 	movi	r5,36
 20086d4:	18800215 	stw	r2,8(r3)
 20086d8:	10c00315 	stw	r3,12(r2)
 20086dc:	bc400204 	addi	r17,r23,8
 20086e0:	29804136 	bltu	r5,r6,20087e8 <_realloc_r+0x590>
 20086e4:	008004c4 	movi	r2,19
 20086e8:	9009883a 	mov	r4,r18
 20086ec:	880f883a 	mov	r7,r17
 20086f0:	11800f2e 	bgeu	r2,r6,2008730 <_realloc_r+0x4d8>
 20086f4:	90800017 	ldw	r2,0(r18)
 20086f8:	b9c00404 	addi	r7,r23,16
 20086fc:	91000204 	addi	r4,r18,8
 2008700:	b8800215 	stw	r2,8(r23)
 2008704:	90c00117 	ldw	r3,4(r18)
 2008708:	008006c4 	movi	r2,27
 200870c:	b8c00315 	stw	r3,12(r23)
 2008710:	1180072e 	bgeu	r2,r6,2008730 <_realloc_r+0x4d8>
 2008714:	90c00217 	ldw	r3,8(r18)
 2008718:	b9c00604 	addi	r7,r23,24
 200871c:	91000404 	addi	r4,r18,16
 2008720:	b8c00415 	stw	r3,16(r23)
 2008724:	90800317 	ldw	r2,12(r18)
 2008728:	b8800515 	stw	r2,20(r23)
 200872c:	31404026 	beq	r6,r5,2008830 <_realloc_r+0x5d8>
 2008730:	20800017 	ldw	r2,0(r4)
 2008734:	38800015 	stw	r2,0(r7)
 2008738:	20c00117 	ldw	r3,4(r4)
 200873c:	38c00115 	stw	r3,4(r7)
 2008740:	20800217 	ldw	r2,8(r4)
 2008744:	38800215 	stw	r2,8(r7)
 2008748:	d8c00117 	ldw	r3,4(sp)
 200874c:	bf0b883a 	add	r5,r23,fp
 2008750:	b009883a 	mov	r4,r22
 2008754:	1f05c83a 	sub	r2,r3,fp
 2008758:	10800054 	ori	r2,r2,1
 200875c:	28800115 	stw	r2,4(r5)
 2008760:	b8c00117 	ldw	r3,4(r23)
 2008764:	00808074 	movhi	r2,513
 2008768:	1087ee04 	addi	r2,r2,8120
 200876c:	11400215 	stw	r5,8(r2)
 2008770:	18c0004c 	andi	r3,r3,1
 2008774:	e0c6b03a 	or	r3,fp,r3
 2008778:	b8c00115 	stw	r3,4(r23)
 200877c:	200f3dc0 	call	200f3dc <__malloc_unlock>
 2008780:	003eeb06 	br	2008330 <_realloc_r+0xd8>
 2008784:	20800117 	ldw	r2,4(r4)
 2008788:	00ffff04 	movi	r3,-4
 200878c:	800f883a 	mov	r7,r16
 2008790:	10c4703a 	and	r2,r2,r3
 2008794:	98a9883a 	add	r20,r19,r2
 2008798:	84000204 	addi	r16,r16,8
 200879c:	003ecf06 	br	20082dc <_realloc_r+0x84>
 20087a0:	900b883a 	mov	r5,r18
 20087a4:	8009883a 	mov	r4,r16
 20087a8:	20070ec0 	call	20070ec <memmove>
 20087ac:	dd000017 	ldw	r20,0(sp)
 20087b0:	b80f883a 	mov	r7,r23
 20087b4:	003ec906 	br	20082dc <_realloc_r+0x84>
 20087b8:	900b883a 	mov	r5,r18
 20087bc:	8009883a 	mov	r4,r16
 20087c0:	20070ec0 	call	20070ec <memmove>
 20087c4:	b80f883a 	mov	r7,r23
 20087c8:	003ec406 	br	20082dc <_realloc_r+0x84>
 20087cc:	90c00417 	ldw	r3,16(r18)
 20087d0:	89400604 	addi	r5,r17,24
 20087d4:	91000604 	addi	r4,r18,24
 20087d8:	88c00415 	stw	r3,16(r17)
 20087dc:	90800517 	ldw	r2,20(r18)
 20087e0:	88800515 	stw	r2,20(r17)
 20087e4:	003f6806 	br	2008588 <_realloc_r+0x330>
 20087e8:	900b883a 	mov	r5,r18
 20087ec:	8809883a 	mov	r4,r17
 20087f0:	20070ec0 	call	20070ec <memmove>
 20087f4:	003fd406 	br	2008748 <_realloc_r+0x4f0>
 20087f8:	90c00417 	ldw	r3,16(r18)
 20087fc:	91000604 	addi	r4,r18,24
 2008800:	ba000804 	addi	r8,r23,32
 2008804:	b8c00615 	stw	r3,24(r23)
 2008808:	90800517 	ldw	r2,20(r18)
 200880c:	b8800715 	stw	r2,28(r23)
 2008810:	003f1206 	br	200845c <_realloc_r+0x204>
 2008814:	90c00417 	ldw	r3,16(r18)
 2008818:	91000604 	addi	r4,r18,24
 200881c:	ba000804 	addi	r8,r23,32
 2008820:	b8c00615 	stw	r3,24(r23)
 2008824:	90800517 	ldw	r2,20(r18)
 2008828:	b8800715 	stw	r2,28(r23)
 200882c:	003f3206 	br	20084f8 <_realloc_r+0x2a0>
 2008830:	90c00417 	ldw	r3,16(r18)
 2008834:	91000604 	addi	r4,r18,24
 2008838:	b9c00804 	addi	r7,r23,32
 200883c:	b8c00615 	stw	r3,24(r23)
 2008840:	90800517 	ldw	r2,20(r18)
 2008844:	b8800715 	stw	r2,28(r23)
 2008848:	003fb906 	br	2008730 <_realloc_r+0x4d8>

0200884c <__srefill_r>:
 200884c:	defffd04 	addi	sp,sp,-12
 2008850:	dc400115 	stw	r17,4(sp)
 2008854:	dc000015 	stw	r16,0(sp)
 2008858:	dfc00215 	stw	ra,8(sp)
 200885c:	2023883a 	mov	r17,r4
 2008860:	2821883a 	mov	r16,r5
 2008864:	20000226 	beq	r4,zero,2008870 <__srefill_r+0x24>
 2008868:	20800e17 	ldw	r2,56(r4)
 200886c:	10004126 	beq	r2,zero,2008974 <__srefill_r+0x128>
 2008870:	80c0030b 	ldhu	r3,12(r16)
 2008874:	80000115 	stw	zero,4(r16)
 2008878:	1880080c 	andi	r2,r3,32
 200887c:	1000361e 	bne	r2,zero,2008958 <__srefill_r+0x10c>
 2008880:	1880010c 	andi	r2,r3,4
 2008884:	1000211e 	bne	r2,zero,200890c <__srefill_r+0xc0>
 2008888:	1880040c 	andi	r2,r3,16
 200888c:	10005026 	beq	r2,zero,20089d0 <__srefill_r+0x184>
 2008890:	1880020c 	andi	r2,r3,8
 2008894:	1000541e 	bne	r2,zero,20089e8 <__srefill_r+0x19c>
 2008898:	8080030b 	ldhu	r2,12(r16)
 200889c:	10800114 	ori	r2,r2,4
 20088a0:	8080030d 	sth	r2,12(r16)
 20088a4:	80800417 	ldw	r2,16(r16)
 20088a8:	10004526 	beq	r2,zero,20089c0 <__srefill_r+0x174>
 20088ac:	8080030b 	ldhu	r2,12(r16)
 20088b0:	108000cc 	andi	r2,r2,3
 20088b4:	1000361e 	bne	r2,zero,2008990 <__srefill_r+0x144>
 20088b8:	81800417 	ldw	r6,16(r16)
 20088bc:	80c00817 	ldw	r3,32(r16)
 20088c0:	81400717 	ldw	r5,28(r16)
 20088c4:	81c00517 	ldw	r7,20(r16)
 20088c8:	8809883a 	mov	r4,r17
 20088cc:	81800015 	stw	r6,0(r16)
 20088d0:	183ee83a 	callr	r3
 20088d4:	80c0030b 	ldhu	r3,12(r16)
 20088d8:	1009883a 	mov	r4,r2
 20088dc:	80800115 	stw	r2,4(r16)
 20088e0:	00b7ffc4 	movi	r2,-8193
 20088e4:	1884703a 	and	r2,r3,r2
 20088e8:	8080030d 	sth	r2,12(r16)
 20088ec:	0100230e 	bge	zero,r4,200897c <__srefill_r+0x130>
 20088f0:	0009883a 	mov	r4,zero
 20088f4:	2005883a 	mov	r2,r4
 20088f8:	dfc00217 	ldw	ra,8(sp)
 20088fc:	dc400117 	ldw	r17,4(sp)
 2008900:	dc000017 	ldw	r16,0(sp)
 2008904:	dec00304 	addi	sp,sp,12
 2008908:	f800283a 	ret
 200890c:	81400c17 	ldw	r5,48(r16)
 2008910:	283fe426 	beq	r5,zero,20088a4 <__srefill_r+0x58>
 2008914:	80801004 	addi	r2,r16,64
 2008918:	28800226 	beq	r5,r2,2008924 <__srefill_r+0xd8>
 200891c:	8809883a 	mov	r4,r17
 2008920:	2005b740 	call	2005b74 <_free_r>
 2008924:	80800f17 	ldw	r2,60(r16)
 2008928:	80000c15 	stw	zero,48(r16)
 200892c:	80800115 	stw	r2,4(r16)
 2008930:	103fdc26 	beq	r2,zero,20088a4 <__srefill_r+0x58>
 2008934:	80800e17 	ldw	r2,56(r16)
 2008938:	0009883a 	mov	r4,zero
 200893c:	80800015 	stw	r2,0(r16)
 2008940:	2005883a 	mov	r2,r4
 2008944:	dfc00217 	ldw	ra,8(sp)
 2008948:	dc400117 	ldw	r17,4(sp)
 200894c:	dc000017 	ldw	r16,0(sp)
 2008950:	dec00304 	addi	sp,sp,12
 2008954:	f800283a 	ret
 2008958:	013fffc4 	movi	r4,-1
 200895c:	2005883a 	mov	r2,r4
 2008960:	dfc00217 	ldw	ra,8(sp)
 2008964:	dc400117 	ldw	r17,4(sp)
 2008968:	dc000017 	ldw	r16,0(sp)
 200896c:	dec00304 	addi	sp,sp,12
 2008970:	f800283a 	ret
 2008974:	20055b40 	call	20055b4 <__sinit>
 2008978:	003fbd06 	br	2008870 <__srefill_r+0x24>
 200897c:	20000b1e 	bne	r4,zero,20089ac <__srefill_r+0x160>
 2008980:	10800814 	ori	r2,r2,32
 2008984:	013fffc4 	movi	r4,-1
 2008988:	8080030d 	sth	r2,12(r16)
 200898c:	003fd906 	br	20088f4 <__srefill_r+0xa8>
 2008990:	00808074 	movhi	r2,513
 2008994:	10899704 	addi	r2,r2,9820
 2008998:	11000017 	ldw	r4,0(r2)
 200899c:	01408074 	movhi	r5,513
 20089a0:	29628404 	addi	r5,r5,-30192
 20089a4:	20063ec0 	call	20063ec <_fwalk>
 20089a8:	003fc306 	br	20088b8 <__srefill_r+0x6c>
 20089ac:	10801014 	ori	r2,r2,64
 20089b0:	013fffc4 	movi	r4,-1
 20089b4:	8080030d 	sth	r2,12(r16)
 20089b8:	80000115 	stw	zero,4(r16)
 20089bc:	003fcd06 	br	20088f4 <__srefill_r+0xa8>
 20089c0:	8809883a 	mov	r4,r17
 20089c4:	800b883a 	mov	r5,r16
 20089c8:	20065940 	call	2006594 <__smakebuf_r>
 20089cc:	003fb706 	br	20088ac <__srefill_r+0x60>
 20089d0:	18c01014 	ori	r3,r3,64
 20089d4:	00800244 	movi	r2,9
 20089d8:	013fffc4 	movi	r4,-1
 20089dc:	88800015 	stw	r2,0(r17)
 20089e0:	80c0030d 	sth	r3,12(r16)
 20089e4:	003fc306 	br	20088f4 <__srefill_r+0xa8>
 20089e8:	8809883a 	mov	r4,r17
 20089ec:	800b883a 	mov	r5,r16
 20089f0:	200531c0 	call	200531c <_fflush_r>
 20089f4:	103fd81e 	bne	r2,zero,2008958 <__srefill_r+0x10c>
 20089f8:	8080030b 	ldhu	r2,12(r16)
 20089fc:	80000215 	stw	zero,8(r16)
 2008a00:	80000615 	stw	zero,24(r16)
 2008a04:	10bffdcc 	andi	r2,r2,65527
 2008a08:	8080030d 	sth	r2,12(r16)
 2008a0c:	003fa206 	br	2008898 <__srefill_r+0x4c>

02008a10 <lflush>:
 2008a10:	20c0030b 	ldhu	r3,12(r4)
 2008a14:	01400244 	movi	r5,9
 2008a18:	0005883a 	mov	r2,zero
 2008a1c:	18c0024c 	andi	r3,r3,9
 2008a20:	19400126 	beq	r3,r5,2008a28 <lflush+0x18>
 2008a24:	f800283a 	ret
 2008a28:	20055181 	jmpi	2005518 <fflush>

02008a2c <__isinfd>:
 2008a2c:	200d883a 	mov	r6,r4
 2008a30:	0109c83a 	sub	r4,zero,r4
 2008a34:	2188b03a 	or	r4,r4,r6
 2008a38:	2008d7fa 	srli	r4,r4,31
 2008a3c:	00a00034 	movhi	r2,32768
 2008a40:	10bfffc4 	addi	r2,r2,-1
 2008a44:	1144703a 	and	r2,r2,r5
 2008a48:	2088b03a 	or	r4,r4,r2
 2008a4c:	009ffc34 	movhi	r2,32752
 2008a50:	1105c83a 	sub	r2,r2,r4
 2008a54:	0087c83a 	sub	r3,zero,r2
 2008a58:	10c4b03a 	or	r2,r2,r3
 2008a5c:	1004d7fa 	srli	r2,r2,31
 2008a60:	00c00044 	movi	r3,1
 2008a64:	1885c83a 	sub	r2,r3,r2
 2008a68:	f800283a 	ret

02008a6c <__isnand>:
 2008a6c:	200d883a 	mov	r6,r4
 2008a70:	0109c83a 	sub	r4,zero,r4
 2008a74:	2188b03a 	or	r4,r4,r6
 2008a78:	2008d7fa 	srli	r4,r4,31
 2008a7c:	00a00034 	movhi	r2,32768
 2008a80:	10bfffc4 	addi	r2,r2,-1
 2008a84:	1144703a 	and	r2,r2,r5
 2008a88:	2088b03a 	or	r4,r4,r2
 2008a8c:	009ffc34 	movhi	r2,32752
 2008a90:	1105c83a 	sub	r2,r2,r4
 2008a94:	1004d7fa 	srli	r2,r2,31
 2008a98:	f800283a 	ret

02008a9c <_sbrk_r>:
 2008a9c:	defffd04 	addi	sp,sp,-12
 2008aa0:	dc000015 	stw	r16,0(sp)
 2008aa4:	04008074 	movhi	r16,513
 2008aa8:	840c6704 	addi	r16,r16,12700
 2008aac:	dc400115 	stw	r17,4(sp)
 2008ab0:	80000015 	stw	zero,0(r16)
 2008ab4:	2023883a 	mov	r17,r4
 2008ab8:	2809883a 	mov	r4,r5
 2008abc:	dfc00215 	stw	ra,8(sp)
 2008ac0:	200f5dc0 	call	200f5dc <sbrk>
 2008ac4:	1007883a 	mov	r3,r2
 2008ac8:	00bfffc4 	movi	r2,-1
 2008acc:	18800626 	beq	r3,r2,2008ae8 <_sbrk_r+0x4c>
 2008ad0:	1805883a 	mov	r2,r3
 2008ad4:	dfc00217 	ldw	ra,8(sp)
 2008ad8:	dc400117 	ldw	r17,4(sp)
 2008adc:	dc000017 	ldw	r16,0(sp)
 2008ae0:	dec00304 	addi	sp,sp,12
 2008ae4:	f800283a 	ret
 2008ae8:	80800017 	ldw	r2,0(r16)
 2008aec:	103ff826 	beq	r2,zero,2008ad0 <_sbrk_r+0x34>
 2008af0:	88800015 	stw	r2,0(r17)
 2008af4:	1805883a 	mov	r2,r3
 2008af8:	dfc00217 	ldw	ra,8(sp)
 2008afc:	dc400117 	ldw	r17,4(sp)
 2008b00:	dc000017 	ldw	r16,0(sp)
 2008b04:	dec00304 	addi	sp,sp,12
 2008b08:	f800283a 	ret

02008b0c <__sccl>:
 2008b0c:	28c00003 	ldbu	r3,0(r5)
 2008b10:	00801784 	movi	r2,94
 2008b14:	2a000044 	addi	r8,r5,1
 2008b18:	18802526 	beq	r3,r2,2008bb0 <__sccl+0xa4>
 2008b1c:	180f883a 	mov	r7,r3
 2008b20:	0013883a 	mov	r9,zero
 2008b24:	000d883a 	mov	r6,zero
 2008b28:	0007883a 	mov	r3,zero
 2008b2c:	01404004 	movi	r5,256
 2008b30:	1905883a 	add	r2,r3,r4
 2008b34:	18c00044 	addi	r3,r3,1
 2008b38:	11800005 	stb	r6,0(r2)
 2008b3c:	197ffc1e 	bne	r3,r5,2008b30 <__sccl+0x24>
 2008b40:	38000c26 	beq	r7,zero,2008b74 <__sccl+0x68>
 2008b44:	00800044 	movi	r2,1
 2008b48:	124dc83a 	sub	r6,r2,r9
 2008b4c:	3905883a 	add	r2,r7,r4
 2008b50:	11800005 	stb	r6,0(r2)
 2008b54:	41400044 	addi	r5,r8,1
 2008b58:	02400b44 	movi	r9,45
 2008b5c:	02801744 	movi	r10,93
 2008b60:	28bfffc3 	ldbu	r2,-1(r5)
 2008b64:	2811883a 	mov	r8,r5
 2008b68:	12400726 	beq	r2,r9,2008b88 <__sccl+0x7c>
 2008b6c:	12800226 	beq	r2,r10,2008b78 <__sccl+0x6c>
 2008b70:	1000031e 	bne	r2,zero,2008b80 <__sccl+0x74>
 2008b74:	423fffc4 	addi	r8,r8,-1
 2008b78:	4005883a 	mov	r2,r8
 2008b7c:	f800283a 	ret
 2008b80:	100f883a 	mov	r7,r2
 2008b84:	003ff106 	br	2008b4c <__sccl+0x40>
 2008b88:	28c00003 	ldbu	r3,0(r5)
 2008b8c:	1a800d26 	beq	r3,r10,2008bc4 <__sccl+0xb8>
 2008b90:	19c00c16 	blt	r3,r7,2008bc4 <__sccl+0xb8>
 2008b94:	21c5883a 	add	r2,r4,r7
 2008b98:	39c00044 	addi	r7,r7,1
 2008b9c:	11800045 	stb	r6,1(r2)
 2008ba0:	10800044 	addi	r2,r2,1
 2008ba4:	38fffc16 	blt	r7,r3,2008b98 <__sccl+0x8c>
 2008ba8:	29400084 	addi	r5,r5,2
 2008bac:	003fec06 	br	2008b60 <__sccl+0x54>
 2008bb0:	29c00043 	ldbu	r7,1(r5)
 2008bb4:	02400044 	movi	r9,1
 2008bb8:	2a000084 	addi	r8,r5,2
 2008bbc:	480d883a 	mov	r6,r9
 2008bc0:	003fd906 	br	2008b28 <__sccl+0x1c>
 2008bc4:	01c00b44 	movi	r7,45
 2008bc8:	003fe006 	br	2008b4c <__sccl+0x40>

02008bcc <nanf>:
 2008bcc:	009ff034 	movhi	r2,32704
 2008bd0:	f800283a 	ret

02008bd4 <sprintf>:
 2008bd4:	deffe504 	addi	sp,sp,-108
 2008bd8:	2013883a 	mov	r9,r4
 2008bdc:	dfc01815 	stw	ra,96(sp)
 2008be0:	d9801915 	stw	r6,100(sp)
 2008be4:	d9c01a15 	stw	r7,104(sp)
 2008be8:	d8801904 	addi	r2,sp,100
 2008bec:	d8800015 	stw	r2,0(sp)
 2008bf0:	00808074 	movhi	r2,513
 2008bf4:	10899604 	addi	r2,r2,9816
 2008bf8:	11000017 	ldw	r4,0(r2)
 2008bfc:	d9c00017 	ldw	r7,0(sp)
 2008c00:	00808204 	movi	r2,520
 2008c04:	00e00034 	movhi	r3,32768
 2008c08:	18ffffc4 	addi	r3,r3,-1
 2008c0c:	280d883a 	mov	r6,r5
 2008c10:	d880040d 	sth	r2,16(sp)
 2008c14:	d9400104 	addi	r5,sp,4
 2008c18:	00bfffc4 	movi	r2,-1
 2008c1c:	d8c00615 	stw	r3,24(sp)
 2008c20:	d8c00315 	stw	r3,12(sp)
 2008c24:	da400515 	stw	r9,20(sp)
 2008c28:	d880048d 	sth	r2,18(sp)
 2008c2c:	da400115 	stw	r9,4(sp)
 2008c30:	20003c40 	call	20003c4 <___vfprintf_internal_r>
 2008c34:	d8c00117 	ldw	r3,4(sp)
 2008c38:	18000005 	stb	zero,0(r3)
 2008c3c:	dfc01817 	ldw	ra,96(sp)
 2008c40:	dec01b04 	addi	sp,sp,108
 2008c44:	f800283a 	ret

02008c48 <_sprintf_r>:
 2008c48:	deffe604 	addi	sp,sp,-104
 2008c4c:	2813883a 	mov	r9,r5
 2008c50:	dfc01815 	stw	ra,96(sp)
 2008c54:	d9c01915 	stw	r7,100(sp)
 2008c58:	d8801904 	addi	r2,sp,100
 2008c5c:	d8800015 	stw	r2,0(sp)
 2008c60:	100f883a 	mov	r7,r2
 2008c64:	00808204 	movi	r2,520
 2008c68:	00e00034 	movhi	r3,32768
 2008c6c:	18ffffc4 	addi	r3,r3,-1
 2008c70:	d880040d 	sth	r2,16(sp)
 2008c74:	d9400104 	addi	r5,sp,4
 2008c78:	00bfffc4 	movi	r2,-1
 2008c7c:	d8c00615 	stw	r3,24(sp)
 2008c80:	d8c00315 	stw	r3,12(sp)
 2008c84:	da400515 	stw	r9,20(sp)
 2008c88:	d880048d 	sth	r2,18(sp)
 2008c8c:	da400115 	stw	r9,4(sp)
 2008c90:	20003c40 	call	20003c4 <___vfprintf_internal_r>
 2008c94:	d8c00117 	ldw	r3,4(sp)
 2008c98:	18000005 	stb	zero,0(r3)
 2008c9c:	dfc01817 	ldw	ra,96(sp)
 2008ca0:	dec01a04 	addi	sp,sp,104
 2008ca4:	f800283a 	ret

02008ca8 <__sclose>:
 2008ca8:	2940038f 	ldh	r5,14(r5)
 2008cac:	200b4141 	jmpi	200b414 <_close_r>

02008cb0 <__sseek>:
 2008cb0:	defffe04 	addi	sp,sp,-8
 2008cb4:	dc000015 	stw	r16,0(sp)
 2008cb8:	2821883a 	mov	r16,r5
 2008cbc:	2940038f 	ldh	r5,14(r5)
 2008cc0:	dfc00115 	stw	ra,4(sp)
 2008cc4:	200c2140 	call	200c214 <_lseek_r>
 2008cc8:	1007883a 	mov	r3,r2
 2008ccc:	00bfffc4 	movi	r2,-1
 2008cd0:	18800926 	beq	r3,r2,2008cf8 <__sseek+0x48>
 2008cd4:	8080030b 	ldhu	r2,12(r16)
 2008cd8:	80c01415 	stw	r3,80(r16)
 2008cdc:	10840014 	ori	r2,r2,4096
 2008ce0:	8080030d 	sth	r2,12(r16)
 2008ce4:	1805883a 	mov	r2,r3
 2008ce8:	dfc00117 	ldw	ra,4(sp)
 2008cec:	dc000017 	ldw	r16,0(sp)
 2008cf0:	dec00204 	addi	sp,sp,8
 2008cf4:	f800283a 	ret
 2008cf8:	8080030b 	ldhu	r2,12(r16)
 2008cfc:	10bbffcc 	andi	r2,r2,61439
 2008d00:	8080030d 	sth	r2,12(r16)
 2008d04:	1805883a 	mov	r2,r3
 2008d08:	dfc00117 	ldw	ra,4(sp)
 2008d0c:	dc000017 	ldw	r16,0(sp)
 2008d10:	dec00204 	addi	sp,sp,8
 2008d14:	f800283a 	ret

02008d18 <__swrite>:
 2008d18:	2880030b 	ldhu	r2,12(r5)
 2008d1c:	defffb04 	addi	sp,sp,-20
 2008d20:	dcc00315 	stw	r19,12(sp)
 2008d24:	1080400c 	andi	r2,r2,256
 2008d28:	dc800215 	stw	r18,8(sp)
 2008d2c:	dc400115 	stw	r17,4(sp)
 2008d30:	dc000015 	stw	r16,0(sp)
 2008d34:	3027883a 	mov	r19,r6
 2008d38:	3825883a 	mov	r18,r7
 2008d3c:	dfc00415 	stw	ra,16(sp)
 2008d40:	2821883a 	mov	r16,r5
 2008d44:	000d883a 	mov	r6,zero
 2008d48:	01c00084 	movi	r7,2
 2008d4c:	2023883a 	mov	r17,r4
 2008d50:	10000226 	beq	r2,zero,2008d5c <__swrite+0x44>
 2008d54:	2940038f 	ldh	r5,14(r5)
 2008d58:	200c2140 	call	200c214 <_lseek_r>
 2008d5c:	8080030b 	ldhu	r2,12(r16)
 2008d60:	8140038f 	ldh	r5,14(r16)
 2008d64:	8809883a 	mov	r4,r17
 2008d68:	10bbffcc 	andi	r2,r2,61439
 2008d6c:	980d883a 	mov	r6,r19
 2008d70:	900f883a 	mov	r7,r18
 2008d74:	8080030d 	sth	r2,12(r16)
 2008d78:	dfc00417 	ldw	ra,16(sp)
 2008d7c:	dcc00317 	ldw	r19,12(sp)
 2008d80:	dc800217 	ldw	r18,8(sp)
 2008d84:	dc400117 	ldw	r17,4(sp)
 2008d88:	dc000017 	ldw	r16,0(sp)
 2008d8c:	dec00504 	addi	sp,sp,20
 2008d90:	200b2e81 	jmpi	200b2e8 <_write_r>

02008d94 <__sread>:
 2008d94:	defffe04 	addi	sp,sp,-8
 2008d98:	dc000015 	stw	r16,0(sp)
 2008d9c:	2821883a 	mov	r16,r5
 2008da0:	2940038f 	ldh	r5,14(r5)
 2008da4:	dfc00115 	stw	ra,4(sp)
 2008da8:	200c28c0 	call	200c28c <_read_r>
 2008dac:	1007883a 	mov	r3,r2
 2008db0:	10000816 	blt	r2,zero,2008dd4 <__sread+0x40>
 2008db4:	80801417 	ldw	r2,80(r16)
 2008db8:	10c5883a 	add	r2,r2,r3
 2008dbc:	80801415 	stw	r2,80(r16)
 2008dc0:	1805883a 	mov	r2,r3
 2008dc4:	dfc00117 	ldw	ra,4(sp)
 2008dc8:	dc000017 	ldw	r16,0(sp)
 2008dcc:	dec00204 	addi	sp,sp,8
 2008dd0:	f800283a 	ret
 2008dd4:	8080030b 	ldhu	r2,12(r16)
 2008dd8:	10bbffcc 	andi	r2,r2,61439
 2008ddc:	8080030d 	sth	r2,12(r16)
 2008de0:	1805883a 	mov	r2,r3
 2008de4:	dfc00117 	ldw	ra,4(sp)
 2008de8:	dc000017 	ldw	r16,0(sp)
 2008dec:	dec00204 	addi	sp,sp,8
 2008df0:	f800283a 	ret

02008df4 <strcmp>:
 2008df4:	2144b03a 	or	r2,r4,r5
 2008df8:	108000cc 	andi	r2,r2,3
 2008dfc:	10001d1e 	bne	r2,zero,2008e74 <strcmp+0x80>
 2008e00:	200f883a 	mov	r7,r4
 2008e04:	28800017 	ldw	r2,0(r5)
 2008e08:	21000017 	ldw	r4,0(r4)
 2008e0c:	280d883a 	mov	r6,r5
 2008e10:	2080161e 	bne	r4,r2,2008e6c <strcmp+0x78>
 2008e14:	023fbff4 	movhi	r8,65279
 2008e18:	423fbfc4 	addi	r8,r8,-257
 2008e1c:	2207883a 	add	r3,r4,r8
 2008e20:	01602074 	movhi	r5,32897
 2008e24:	29602004 	addi	r5,r5,-32640
 2008e28:	1946703a 	and	r3,r3,r5
 2008e2c:	0104303a 	nor	r2,zero,r4
 2008e30:	10c4703a 	and	r2,r2,r3
 2008e34:	10001c1e 	bne	r2,zero,2008ea8 <strcmp+0xb4>
 2008e38:	4013883a 	mov	r9,r8
 2008e3c:	2811883a 	mov	r8,r5
 2008e40:	00000106 	br	2008e48 <strcmp+0x54>
 2008e44:	1800181e 	bne	r3,zero,2008ea8 <strcmp+0xb4>
 2008e48:	39c00104 	addi	r7,r7,4
 2008e4c:	39000017 	ldw	r4,0(r7)
 2008e50:	31800104 	addi	r6,r6,4
 2008e54:	31400017 	ldw	r5,0(r6)
 2008e58:	2245883a 	add	r2,r4,r9
 2008e5c:	1204703a 	and	r2,r2,r8
 2008e60:	0106303a 	nor	r3,zero,r4
 2008e64:	1886703a 	and	r3,r3,r2
 2008e68:	217ff626 	beq	r4,r5,2008e44 <strcmp+0x50>
 2008e6c:	3809883a 	mov	r4,r7
 2008e70:	300b883a 	mov	r5,r6
 2008e74:	20c00007 	ldb	r3,0(r4)
 2008e78:	1800051e 	bne	r3,zero,2008e90 <strcmp+0x9c>
 2008e7c:	00000606 	br	2008e98 <strcmp+0xa4>
 2008e80:	21000044 	addi	r4,r4,1
 2008e84:	20c00007 	ldb	r3,0(r4)
 2008e88:	29400044 	addi	r5,r5,1
 2008e8c:	18000226 	beq	r3,zero,2008e98 <strcmp+0xa4>
 2008e90:	28800007 	ldb	r2,0(r5)
 2008e94:	18bffa26 	beq	r3,r2,2008e80 <strcmp+0x8c>
 2008e98:	20c00003 	ldbu	r3,0(r4)
 2008e9c:	28800003 	ldbu	r2,0(r5)
 2008ea0:	1885c83a 	sub	r2,r3,r2
 2008ea4:	f800283a 	ret
 2008ea8:	0005883a 	mov	r2,zero
 2008eac:	f800283a 	ret

02008eb0 <strlen>:
 2008eb0:	208000cc 	andi	r2,r4,3
 2008eb4:	2011883a 	mov	r8,r4
 2008eb8:	1000161e 	bne	r2,zero,2008f14 <strlen+0x64>
 2008ebc:	20c00017 	ldw	r3,0(r4)
 2008ec0:	017fbff4 	movhi	r5,65279
 2008ec4:	297fbfc4 	addi	r5,r5,-257
 2008ec8:	01e02074 	movhi	r7,32897
 2008ecc:	39e02004 	addi	r7,r7,-32640
 2008ed0:	1945883a 	add	r2,r3,r5
 2008ed4:	11c4703a 	and	r2,r2,r7
 2008ed8:	00c6303a 	nor	r3,zero,r3
 2008edc:	1886703a 	and	r3,r3,r2
 2008ee0:	18000c1e 	bne	r3,zero,2008f14 <strlen+0x64>
 2008ee4:	280d883a 	mov	r6,r5
 2008ee8:	380b883a 	mov	r5,r7
 2008eec:	21000104 	addi	r4,r4,4
 2008ef0:	20800017 	ldw	r2,0(r4)
 2008ef4:	1187883a 	add	r3,r2,r6
 2008ef8:	1946703a 	and	r3,r3,r5
 2008efc:	0084303a 	nor	r2,zero,r2
 2008f00:	10c4703a 	and	r2,r2,r3
 2008f04:	103ff926 	beq	r2,zero,2008eec <strlen+0x3c>
 2008f08:	20800007 	ldb	r2,0(r4)
 2008f0c:	10000326 	beq	r2,zero,2008f1c <strlen+0x6c>
 2008f10:	21000044 	addi	r4,r4,1
 2008f14:	20800007 	ldb	r2,0(r4)
 2008f18:	103ffd1e 	bne	r2,zero,2008f10 <strlen+0x60>
 2008f1c:	2205c83a 	sub	r2,r4,r8
 2008f20:	f800283a 	ret

02008f24 <match>:
 2008f24:	21800017 	ldw	r6,0(r4)
 2008f28:	01c01004 	movi	r7,64
 2008f2c:	02001684 	movi	r8,90
 2008f30:	28800007 	ldb	r2,0(r5)
 2008f34:	29400044 	addi	r5,r5,1
 2008f38:	10000826 	beq	r2,zero,2008f5c <match+0x38>
 2008f3c:	31800044 	addi	r6,r6,1
 2008f40:	30c00007 	ldb	r3,0(r6)
 2008f44:	38c0020e 	bge	r7,r3,2008f50 <match+0x2c>
 2008f48:	40c00116 	blt	r8,r3,2008f50 <match+0x2c>
 2008f4c:	18c00804 	addi	r3,r3,32
 2008f50:	18bff726 	beq	r3,r2,2008f30 <match+0xc>
 2008f54:	0005883a 	mov	r2,zero
 2008f58:	f800283a 	ret
 2008f5c:	30800044 	addi	r2,r6,1
 2008f60:	20800015 	stw	r2,0(r4)
 2008f64:	00800044 	movi	r2,1
 2008f68:	f800283a 	ret

02008f6c <_strtod_r>:
 2008f6c:	deffde04 	addi	sp,sp,-136
 2008f70:	df002015 	stw	fp,128(sp)
 2008f74:	dd401d15 	stw	r21,116(sp)
 2008f78:	dc401915 	stw	r17,100(sp)
 2008f7c:	dfc02115 	stw	ra,132(sp)
 2008f80:	ddc01f15 	stw	r23,124(sp)
 2008f84:	dd801e15 	stw	r22,120(sp)
 2008f88:	dd001c15 	stw	r20,112(sp)
 2008f8c:	dcc01b15 	stw	r19,108(sp)
 2008f90:	dc801a15 	stw	r18,104(sp)
 2008f94:	dc001815 	stw	r16,96(sp)
 2008f98:	2823883a 	mov	r17,r5
 2008f9c:	202b883a 	mov	r21,r4
 2008fa0:	d9801515 	stw	r6,84(sp)
 2008fa4:	d8000915 	stw	zero,36(sp)
 2008fa8:	d8000a15 	stw	zero,40(sp)
 2008fac:	d9400415 	stw	r5,16(sp)
 2008fb0:	df000904 	addi	fp,sp,36
 2008fb4:	da000417 	ldw	r8,16(sp)
 2008fb8:	00800b44 	movi	r2,45
 2008fbc:	40c00003 	ldbu	r3,0(r8)
 2008fc0:	10c03536 	bltu	r2,r3,2009098 <_strtod_r+0x12c>
 2008fc4:	18c5883a 	add	r2,r3,r3
 2008fc8:	1085883a 	add	r2,r2,r2
 2008fcc:	00c08074 	movhi	r3,513
 2008fd0:	18e3f804 	addi	r3,r3,-28704
 2008fd4:	10c5883a 	add	r2,r2,r3
 2008fd8:	11000017 	ldw	r4,0(r2)
 2008fdc:	2000683a 	jmp	r4
 2008fe0:	020091d4 	movui	r8,583
 2008fe4:	02009098 	cmpnei	r8,zero,578
 2008fe8:	02009098 	cmpnei	r8,zero,578
 2008fec:	02009098 	cmpnei	r8,zero,578
 2008ff0:	02009098 	cmpnei	r8,zero,578
 2008ff4:	02009098 	cmpnei	r8,zero,578
 2008ff8:	02009098 	cmpnei	r8,zero,578
 2008ffc:	02009098 	cmpnei	r8,zero,578
 2009000:	02009098 	cmpnei	r8,zero,578
 2009004:	020094ec 	andhi	r8,zero,595
 2009008:	020094ec 	andhi	r8,zero,595
 200900c:	020094ec 	andhi	r8,zero,595
 2009010:	020094ec 	andhi	r8,zero,595
 2009014:	020094ec 	andhi	r8,zero,595
 2009018:	02009098 	cmpnei	r8,zero,578
 200901c:	02009098 	cmpnei	r8,zero,578
 2009020:	02009098 	cmpnei	r8,zero,578
 2009024:	02009098 	cmpnei	r8,zero,578
 2009028:	02009098 	cmpnei	r8,zero,578
 200902c:	02009098 	cmpnei	r8,zero,578
 2009030:	02009098 	cmpnei	r8,zero,578
 2009034:	02009098 	cmpnei	r8,zero,578
 2009038:	02009098 	cmpnei	r8,zero,578
 200903c:	02009098 	cmpnei	r8,zero,578
 2009040:	02009098 	cmpnei	r8,zero,578
 2009044:	02009098 	cmpnei	r8,zero,578
 2009048:	02009098 	cmpnei	r8,zero,578
 200904c:	02009098 	cmpnei	r8,zero,578
 2009050:	02009098 	cmpnei	r8,zero,578
 2009054:	02009098 	cmpnei	r8,zero,578
 2009058:	02009098 	cmpnei	r8,zero,578
 200905c:	02009098 	cmpnei	r8,zero,578
 2009060:	020094ec 	andhi	r8,zero,595
 2009064:	02009098 	cmpnei	r8,zero,578
 2009068:	02009098 	cmpnei	r8,zero,578
 200906c:	02009098 	cmpnei	r8,zero,578
 2009070:	02009098 	cmpnei	r8,zero,578
 2009074:	02009098 	cmpnei	r8,zero,578
 2009078:	02009098 	cmpnei	r8,zero,578
 200907c:	02009098 	cmpnei	r8,zero,578
 2009080:	02009098 	cmpnei	r8,zero,578
 2009084:	02009098 	cmpnei	r8,zero,578
 2009088:	02009098 	cmpnei	r8,zero,578
 200908c:	020094cc 	andi	r8,zero,595
 2009090:	02009098 	cmpnei	r8,zero,578
 2009094:	020094f8 	rdprs	r8,zero,595
 2009098:	d8001115 	stw	zero,68(sp)
 200909c:	40c00007 	ldb	r3,0(r8)
 20090a0:	00800c04 	movi	r2,48
 20090a4:	1880d026 	beq	r3,r2,20093e8 <_strtod_r+0x47c>
 20090a8:	001f883a 	mov	r15,zero
 20090ac:	41000007 	ldb	r4,0(r8)
 20090b0:	00c00bc4 	movi	r3,47
 20090b4:	402d883a 	mov	r22,r8
 20090b8:	1903470e 	bge	r3,r4,2009dd8 <_strtod_r+0xe6c>
 20090bc:	00800e44 	movi	r2,57
 20090c0:	11034516 	blt	r2,r4,2009dd8 <_strtod_r+0xe6c>
 20090c4:	180f883a 	mov	r7,r3
 20090c8:	1013883a 	mov	r9,r2
 20090cc:	4007883a 	mov	r3,r8
 20090d0:	000d883a 	mov	r6,zero
 20090d4:	0029883a 	mov	r20,zero
 20090d8:	0021883a 	mov	r16,zero
 20090dc:	01400204 	movi	r5,8
 20090e0:	028003c4 	movi	r10,15
 20090e4:	29803116 	blt	r5,r6,20091ac <_strtod_r+0x240>
 20090e8:	a08002a4 	muli	r2,r20,10
 20090ec:	1105883a 	add	r2,r2,r4
 20090f0:	153ff404 	addi	r20,r2,-48
 20090f4:	1a000044 	addi	r8,r3,1
 20090f8:	da000415 	stw	r8,16(sp)
 20090fc:	41000007 	ldb	r4,0(r8)
 2009100:	31800044 	addi	r6,r6,1
 2009104:	4007883a 	mov	r3,r8
 2009108:	3900010e 	bge	r7,r4,2009110 <_strtod_r+0x1a4>
 200910c:	493ff50e 	bge	r9,r4,20090e4 <_strtod_r+0x178>
 2009110:	00800b84 	movi	r2,46
 2009114:	2080c126 	beq	r4,r2,200941c <_strtod_r+0x4b0>
 2009118:	3027883a 	mov	r19,r6
 200911c:	0025883a 	mov	r18,zero
 2009120:	0015883a 	mov	r10,zero
 2009124:	000f883a 	mov	r7,zero
 2009128:	00801944 	movi	r2,101
 200912c:	20802426 	beq	r4,r2,20091c0 <_strtod_r+0x254>
 2009130:	00801144 	movi	r2,69
 2009134:	20802226 	beq	r4,r2,20091c0 <_strtod_r+0x254>
 2009138:	9816c03a 	cmpne	r11,r19,zero
 200913c:	000b883a 	mov	r5,zero
 2009140:	5800631e 	bne	r11,zero,20092d0 <_strtod_r+0x364>
 2009144:	3800c126 	beq	r7,zero,200944c <_strtod_r+0x4e0>
 2009148:	d8c01517 	ldw	r3,84(sp)
 200914c:	18000226 	beq	r3,zero,2009158 <_strtod_r+0x1ec>
 2009150:	d8800417 	ldw	r2,16(sp)
 2009154:	18800015 	stw	r2,0(r3)
 2009158:	d9001117 	ldw	r4,68(sp)
 200915c:	2005003a 	cmpeq	r2,r4,zero
 2009160:	10001f1e 	bne	r2,zero,20091e0 <_strtod_r+0x274>
 2009164:	e0800017 	ldw	r2,0(fp)
 2009168:	e0c00117 	ldw	r3,4(fp)
 200916c:	1009883a 	mov	r4,r2
 2009170:	1960003c 	xorhi	r5,r3,32768
 2009174:	2005883a 	mov	r2,r4
 2009178:	2807883a 	mov	r3,r5
 200917c:	dfc02117 	ldw	ra,132(sp)
 2009180:	df002017 	ldw	fp,128(sp)
 2009184:	ddc01f17 	ldw	r23,124(sp)
 2009188:	dd801e17 	ldw	r22,120(sp)
 200918c:	dd401d17 	ldw	r21,116(sp)
 2009190:	dd001c17 	ldw	r20,112(sp)
 2009194:	dcc01b17 	ldw	r19,108(sp)
 2009198:	dc801a17 	ldw	r18,104(sp)
 200919c:	dc401917 	ldw	r17,100(sp)
 20091a0:	dc001817 	ldw	r16,96(sp)
 20091a4:	dec02204 	addi	sp,sp,136
 20091a8:	f800283a 	ret
 20091ac:	51bfd116 	blt	r10,r6,20090f4 <_strtod_r+0x188>
 20091b0:	808002a4 	muli	r2,r16,10
 20091b4:	1105883a 	add	r2,r2,r4
 20091b8:	143ff404 	addi	r16,r2,-48
 20091bc:	003fcd06 	br	20090f4 <_strtod_r+0x188>
 20091c0:	9816c03a 	cmpne	r11,r19,zero
 20091c4:	5800091e 	bne	r11,zero,20091ec <_strtod_r+0x280>
 20091c8:	3800081e 	bne	r7,zero,20091ec <_strtod_r+0x280>
 20091cc:	7805003a 	cmpeq	r2,r15,zero
 20091d0:	10000626 	beq	r2,zero,20091ec <_strtod_r+0x280>
 20091d4:	d8001115 	stw	zero,68(sp)
 20091d8:	dc400415 	stw	r17,16(sp)
 20091dc:	003fda06 	br	2009148 <_strtod_r+0x1dc>
 20091e0:	e1000017 	ldw	r4,0(fp)
 20091e4:	e1400117 	ldw	r5,4(fp)
 20091e8:	003fe206 	br	2009174 <_strtod_r+0x208>
 20091ec:	dc400417 	ldw	r17,16(sp)
 20091f0:	00800ac4 	movi	r2,43
 20091f4:	8a000044 	addi	r8,r17,1
 20091f8:	da000415 	stw	r8,16(sp)
 20091fc:	88c00047 	ldb	r3,1(r17)
 2009200:	4009883a 	mov	r4,r8
 2009204:	1880bf26 	beq	r3,r2,2009504 <_strtod_r+0x598>
 2009208:	00800b44 	movi	r2,45
 200920c:	18834526 	beq	r3,r2,2009f24 <_strtod_r+0xfb8>
 2009210:	1809883a 	mov	r4,r3
 2009214:	20fff404 	addi	r3,r4,-48
 2009218:	00800244 	movi	r2,9
 200921c:	001d883a 	mov	r14,zero
 2009220:	10c0bf36 	bltu	r2,r3,2009520 <_strtod_r+0x5b4>
 2009224:	00800c04 	movi	r2,48
 2009228:	2080061e 	bne	r4,r2,2009244 <_strtod_r+0x2d8>
 200922c:	da000417 	ldw	r8,16(sp)
 2009230:	2005883a 	mov	r2,r4
 2009234:	42000044 	addi	r8,r8,1
 2009238:	da000415 	stw	r8,16(sp)
 200923c:	41000007 	ldb	r4,0(r8)
 2009240:	20bffc26 	beq	r4,r2,2009234 <_strtod_r+0x2c8>
 2009244:	20fff3c4 	addi	r3,r4,-49
 2009248:	00800204 	movi	r2,8
 200924c:	10ffbb36 	bltu	r2,r3,200913c <_strtod_r+0x1d0>
 2009250:	da000417 	ldw	r8,16(sp)
 2009254:	227ff404 	addi	r9,r4,-48
 2009258:	03000bc4 	movi	r12,47
 200925c:	4007883a 	mov	r3,r8
 2009260:	42000044 	addi	r8,r8,1
 2009264:	da000415 	stw	r8,16(sp)
 2009268:	41000007 	ldb	r4,0(r8)
 200926c:	61000d0e 	bge	r12,r4,20092a4 <_strtod_r+0x338>
 2009270:	00800e44 	movi	r2,57
 2009274:	11000b16 	blt	r2,r4,20092a4 <_strtod_r+0x338>
 2009278:	601b883a 	mov	r13,r12
 200927c:	1019883a 	mov	r12,r2
 2009280:	00000106 	br	2009288 <_strtod_r+0x31c>
 2009284:	61000716 	blt	r12,r4,20092a4 <_strtod_r+0x338>
 2009288:	488002a4 	muli	r2,r9,10
 200928c:	42000044 	addi	r8,r8,1
 2009290:	da000415 	stw	r8,16(sp)
 2009294:	2085883a 	add	r2,r4,r2
 2009298:	41000007 	ldb	r4,0(r8)
 200929c:	127ff404 	addi	r9,r2,-48
 20092a0:	693ff816 	blt	r13,r4,2009284 <_strtod_r+0x318>
 20092a4:	40c7c83a 	sub	r3,r8,r3
 20092a8:	00800204 	movi	r2,8
 20092ac:	10c2e416 	blt	r2,r3,2009e40 <_strtod_r+0xed4>
 20092b0:	009387c4 	movi	r2,19999
 20092b4:	480b883a 	mov	r5,r9
 20092b8:	1240010e 	bge	r2,r9,20092c0 <_strtod_r+0x354>
 20092bc:	100b883a 	mov	r5,r2
 20092c0:	7005003a 	cmpeq	r2,r14,zero
 20092c4:	103f9e1e 	bne	r2,zero,2009140 <_strtod_r+0x1d4>
 20092c8:	014bc83a 	sub	r5,zero,r5
 20092cc:	583f9d26 	beq	r11,zero,2009144 <_strtod_r+0x1d8>
 20092d0:	2a8bc83a 	sub	r5,r5,r10
 20092d4:	d9400f15 	stw	r5,60(sp)
 20092d8:	30007a1e 	bne	r6,zero,20094c4 <_strtod_r+0x558>
 20092dc:	dcc01215 	stw	r19,72(sp)
 20092e0:	00800404 	movi	r2,16
 20092e4:	9825883a 	mov	r18,r19
 20092e8:	14c0010e 	bge	r2,r19,20092f0 <_strtod_r+0x384>
 20092ec:	1025883a 	mov	r18,r2
 20092f0:	a009883a 	mov	r4,r20
 20092f4:	200e1c80 	call	200e1c8 <__floatunsidf>
 20092f8:	100f883a 	mov	r7,r2
 20092fc:	e0800015 	stw	r2,0(fp)
 2009300:	00800244 	movi	r2,9
 2009304:	e0c00115 	stw	r3,4(fp)
 2009308:	1480160e 	bge	r2,r18,2009364 <_strtod_r+0x3f8>
 200930c:	900c90fa 	slli	r6,r18,3
 2009310:	01008074 	movhi	r4,513
 2009314:	21063f04 	addi	r4,r4,6396
 2009318:	180b883a 	mov	r5,r3
 200931c:	310d883a 	add	r6,r6,r4
 2009320:	30ffef17 	ldw	r3,-68(r6)
 2009324:	30bfee17 	ldw	r2,-72(r6)
 2009328:	3809883a 	mov	r4,r7
 200932c:	180f883a 	mov	r7,r3
 2009330:	100d883a 	mov	r6,r2
 2009334:	200d6380 	call	200d638 <__muldf3>
 2009338:	8009883a 	mov	r4,r16
 200933c:	1823883a 	mov	r17,r3
 2009340:	1021883a 	mov	r16,r2
 2009344:	200e1c80 	call	200e1c8 <__floatunsidf>
 2009348:	880b883a 	mov	r5,r17
 200934c:	180f883a 	mov	r7,r3
 2009350:	8009883a 	mov	r4,r16
 2009354:	100d883a 	mov	r6,r2
 2009358:	200d5c40 	call	200d5c4 <__adddf3>
 200935c:	e0c00115 	stw	r3,4(fp)
 2009360:	e0800015 	stw	r2,0(fp)
 2009364:	010003c4 	movi	r4,15
 2009368:	24c09816 	blt	r4,r19,20095cc <_strtod_r+0x660>
 200936c:	d9800f17 	ldw	r6,60(sp)
 2009370:	303f7526 	beq	r6,zero,2009148 <_strtod_r+0x1dc>
 2009374:	0183be0e 	bge	zero,r6,200a270 <_strtod_r+0x1304>
 2009378:	00800584 	movi	r2,22
 200937c:	1182b20e 	bge	r2,r6,2009e48 <_strtod_r+0xedc>
 2009380:	d8c00f17 	ldw	r3,60(sp)
 2009384:	24e3c83a 	sub	r17,r4,r19
 2009388:	88800584 	addi	r2,r17,22
 200938c:	10c08f16 	blt	r2,r3,20095cc <_strtod_r+0x660>
 2009390:	880890fa 	slli	r4,r17,3
 2009394:	04008074 	movhi	r16,513
 2009398:	84063f04 	addi	r16,r16,6396
 200939c:	e0800017 	ldw	r2,0(fp)
 20093a0:	2409883a 	add	r4,r4,r16
 20093a4:	22000017 	ldw	r8,0(r4)
 20093a8:	22400117 	ldw	r9,4(r4)
 20093ac:	e0c00117 	ldw	r3,4(fp)
 20093b0:	1009883a 	mov	r4,r2
 20093b4:	480f883a 	mov	r7,r9
 20093b8:	180b883a 	mov	r5,r3
 20093bc:	400d883a 	mov	r6,r8
 20093c0:	200d6380 	call	200d638 <__muldf3>
 20093c4:	d9000f17 	ldw	r4,60(sp)
 20093c8:	180b883a 	mov	r5,r3
 20093cc:	2455c83a 	sub	r10,r4,r17
 20093d0:	501490fa 	slli	r10,r10,3
 20093d4:	1009883a 	mov	r4,r2
 20093d8:	5415883a 	add	r10,r10,r16
 20093dc:	52000017 	ldw	r8,0(r10)
 20093e0:	52400117 	ldw	r9,4(r10)
 20093e4:	0002a206 	br	2009e70 <_strtod_r+0xf04>
 20093e8:	40c00047 	ldb	r3,1(r8)
 20093ec:	00801604 	movi	r2,88
 20093f0:	18804e26 	beq	r3,r2,200952c <_strtod_r+0x5c0>
 20093f4:	00801e04 	movi	r2,120
 20093f8:	18804c26 	beq	r3,r2,200952c <_strtod_r+0x5c0>
 20093fc:	42000044 	addi	r8,r8,1
 2009400:	da000415 	stw	r8,16(sp)
 2009404:	40c00007 	ldb	r3,0(r8)
 2009408:	00800c04 	movi	r2,48
 200940c:	18bffb26 	beq	r3,r2,20093fc <_strtod_r+0x490>
 2009410:	183f4d26 	beq	r3,zero,2009148 <_strtod_r+0x1dc>
 2009414:	03c00044 	movi	r15,1
 2009418:	003f2406 	br	20090ac <_strtod_r+0x140>
 200941c:	42000044 	addi	r8,r8,1
 2009420:	da000415 	stw	r8,16(sp)
 2009424:	19000047 	ldb	r4,1(r3)
 2009428:	3000b726 	beq	r6,zero,2009708 <_strtod_r+0x79c>
 200942c:	3027883a 	mov	r19,r6
 2009430:	0015883a 	mov	r10,zero
 2009434:	000f883a 	mov	r7,zero
 2009438:	227ff404 	addi	r9,r4,-48
 200943c:	00800244 	movi	r2,9
 2009440:	1242592e 	bgeu	r2,r9,2009da8 <_strtod_r+0xe3c>
 2009444:	04800044 	movi	r18,1
 2009448:	003f3706 	br	2009128 <_strtod_r+0x1bc>
 200944c:	7804c03a 	cmpne	r2,r15,zero
 2009450:	103f3d1e 	bne	r2,zero,2009148 <_strtod_r+0x1dc>
 2009454:	9004c03a 	cmpne	r2,r18,zero
 2009458:	103f5e1e 	bne	r2,zero,20091d4 <_strtod_r+0x268>
 200945c:	00801384 	movi	r2,78
 2009460:	2083a226 	beq	r4,r2,200a2ec <_strtod_r+0x1380>
 2009464:	11039d16 	blt	r2,r4,200a2dc <_strtod_r+0x1370>
 2009468:	00801244 	movi	r2,73
 200946c:	20bf591e 	bne	r4,r2,20091d4 <_strtod_r+0x268>
 2009470:	dc000404 	addi	r16,sp,16
 2009474:	8009883a 	mov	r4,r16
 2009478:	01408074 	movhi	r5,513
 200947c:	29468804 	addi	r5,r5,6688
 2009480:	2008f240 	call	2008f24 <match>
 2009484:	103f5326 	beq	r2,zero,20091d4 <_strtod_r+0x268>
 2009488:	d8800417 	ldw	r2,16(sp)
 200948c:	8009883a 	mov	r4,r16
 2009490:	01408074 	movhi	r5,513
 2009494:	29468904 	addi	r5,r5,6692
 2009498:	123fffc4 	addi	r8,r2,-1
 200949c:	da000415 	stw	r8,16(sp)
 20094a0:	2008f240 	call	2008f24 <match>
 20094a4:	1000031e 	bne	r2,zero,20094b4 <_strtod_r+0x548>
 20094a8:	d8800417 	ldw	r2,16(sp)
 20094ac:	12000044 	addi	r8,r2,1
 20094b0:	da000415 	stw	r8,16(sp)
 20094b4:	019ffc34 	movhi	r6,32752
 20094b8:	e1800115 	stw	r6,4(fp)
 20094bc:	e0000015 	stw	zero,0(fp)
 20094c0:	003f2106 	br	2009148 <_strtod_r+0x1dc>
 20094c4:	d9801215 	stw	r6,72(sp)
 20094c8:	003f8506 	br	20092e0 <_strtod_r+0x374>
 20094cc:	d8001115 	stw	zero,68(sp)
 20094d0:	42000044 	addi	r8,r8,1
 20094d4:	da000415 	stw	r8,16(sp)
 20094d8:	40800007 	ldb	r2,0(r8)
 20094dc:	103eef1e 	bne	r2,zero,200909c <_strtod_r+0x130>
 20094e0:	d8001115 	stw	zero,68(sp)
 20094e4:	dc400415 	stw	r17,16(sp)
 20094e8:	003f1706 	br	2009148 <_strtod_r+0x1dc>
 20094ec:	42000044 	addi	r8,r8,1
 20094f0:	da000415 	stw	r8,16(sp)
 20094f4:	003eaf06 	br	2008fb4 <_strtod_r+0x48>
 20094f8:	00800044 	movi	r2,1
 20094fc:	d8801115 	stw	r2,68(sp)
 2009500:	003ff306 	br	20094d0 <_strtod_r+0x564>
 2009504:	001d883a 	mov	r14,zero
 2009508:	42000044 	addi	r8,r8,1
 200950c:	da000415 	stw	r8,16(sp)
 2009510:	21000047 	ldb	r4,1(r4)
 2009514:	00800244 	movi	r2,9
 2009518:	20fff404 	addi	r3,r4,-48
 200951c:	10ff412e 	bgeu	r2,r3,2009224 <_strtod_r+0x2b8>
 2009520:	000b883a 	mov	r5,zero
 2009524:	dc400415 	stw	r17,16(sp)
 2009528:	003f0506 	br	2009140 <_strtod_r+0x1d4>
 200952c:	d8c01117 	ldw	r3,68(sp)
 2009530:	04808074 	movhi	r18,513
 2009534:	9488f504 	addi	r18,r18,9172
 2009538:	d8800504 	addi	r2,sp,20
 200953c:	a809883a 	mov	r4,r21
 2009540:	d9400404 	addi	r5,sp,16
 2009544:	900d883a 	mov	r6,r18
 2009548:	d9c00604 	addi	r7,sp,24
 200954c:	d8800015 	stw	r2,0(sp)
 2009550:	d8c00115 	stw	r3,4(sp)
 2009554:	200b7580 	call	200b758 <__gethex>
 2009558:	140001cc 	andi	r16,r2,7
 200955c:	1027883a 	mov	r19,r2
 2009560:	803ef926 	beq	r16,zero,2009148 <_strtod_r+0x1dc>
 2009564:	05000184 	movi	r20,6
 2009568:	853f1a26 	beq	r16,r20,20091d4 <_strtod_r+0x268>
 200956c:	d9800517 	ldw	r6,20(sp)
 2009570:	30000626 	beq	r6,zero,200958c <_strtod_r+0x620>
 2009574:	91400017 	ldw	r5,0(r18)
 2009578:	d9000d04 	addi	r4,sp,52
 200957c:	20077040 	call	2007704 <__copybits>
 2009580:	d9400517 	ldw	r5,20(sp)
 2009584:	a809883a 	mov	r4,r21
 2009588:	20072640 	call	2007264 <_Bfree>
 200958c:	d9400617 	ldw	r5,24(sp)
 2009590:	a4024136 	bltu	r20,r16,2009e98 <_strtod_r+0xf2c>
 2009594:	8405883a 	add	r2,r16,r16
 2009598:	1085883a 	add	r2,r2,r2
 200959c:	00c08074 	movhi	r3,513
 20095a0:	18e56c04 	addi	r3,r3,-27216
 20095a4:	10c5883a 	add	r2,r2,r3
 20095a8:	11000017 	ldw	r4,0(r2)
 20095ac:	2000683a 	jmp	r4
 20095b0:	02009ed8 	cmpnei	r8,zero,635
 20095b4:	02009ee4 	muli	r8,zero,635
 20095b8:	02009e88 	cmpgei	r8,zero,634
 20095bc:	02009eb0 	cmpltui	r8,zero,634
 20095c0:	02009ec0 	call	2009ec <__reset-0x1dff614>
 20095c4:	02009ee4 	muli	r8,zero,635
 20095c8:	02009ed8 	cmpnei	r8,zero,635
 20095cc:	d8c00f17 	ldw	r3,60(sp)
 20095d0:	9c85c83a 	sub	r2,r19,r18
 20095d4:	18a1883a 	add	r16,r3,r2
 20095d8:	0402d00e 	bge	zero,r16,200a11c <_strtod_r+0x11b0>
 20095dc:	814003cc 	andi	r5,r16,15
 20095e0:	28000f26 	beq	r5,zero,2009620 <_strtod_r+0x6b4>
 20095e4:	280a90fa 	slli	r5,r5,3
 20095e8:	01008074 	movhi	r4,513
 20095ec:	21063f04 	addi	r4,r4,6396
 20095f0:	e0800017 	ldw	r2,0(fp)
 20095f4:	290b883a 	add	r5,r5,r4
 20095f8:	2a000017 	ldw	r8,0(r5)
 20095fc:	e0c00117 	ldw	r3,4(fp)
 2009600:	2a400117 	ldw	r9,4(r5)
 2009604:	1009883a 	mov	r4,r2
 2009608:	180b883a 	mov	r5,r3
 200960c:	480f883a 	mov	r7,r9
 2009610:	400d883a 	mov	r6,r8
 2009614:	200d6380 	call	200d638 <__muldf3>
 2009618:	e0c00115 	stw	r3,4(fp)
 200961c:	e0800015 	stw	r2,0(fp)
 2009620:	00bffc04 	movi	r2,-16
 2009624:	808c703a 	and	r6,r16,r2
 2009628:	30005b26 	beq	r6,zero,2009798 <_strtod_r+0x82c>
 200962c:	00804d04 	movi	r2,308
 2009630:	1181fd16 	blt	r2,r6,2009e28 <_strtod_r+0xebc>
 2009634:	3021d13a 	srai	r16,r6,4
 2009638:	00800044 	movi	r2,1
 200963c:	1403610e 	bge	r2,r16,200a3c4 <_strtod_r+0x1458>
 2009640:	102f883a 	mov	r23,r2
 2009644:	0025883a 	mov	r18,zero
 2009648:	04408074 	movhi	r17,513
 200964c:	8c467104 	addi	r17,r17,6596
 2009650:	8080004c 	andi	r2,r16,1
 2009654:	1005003a 	cmpeq	r2,r2,zero
 2009658:	1000091e 	bne	r2,zero,2009680 <_strtod_r+0x714>
 200965c:	e0800017 	ldw	r2,0(fp)
 2009660:	e0c00117 	ldw	r3,4(fp)
 2009664:	89800017 	ldw	r6,0(r17)
 2009668:	89c00117 	ldw	r7,4(r17)
 200966c:	180b883a 	mov	r5,r3
 2009670:	1009883a 	mov	r4,r2
 2009674:	200d6380 	call	200d638 <__muldf3>
 2009678:	e0c00115 	stw	r3,4(fp)
 200967c:	e0800015 	stw	r2,0(fp)
 2009680:	8021d07a 	srai	r16,r16,1
 2009684:	94800044 	addi	r18,r18,1
 2009688:	8c400204 	addi	r17,r17,8
 200968c:	bc3ff016 	blt	r23,r16,2009650 <_strtod_r+0x6e4>
 2009690:	900e90fa 	slli	r7,r18,3
 2009694:	01808074 	movhi	r6,513
 2009698:	31867104 	addi	r6,r6,6596
 200969c:	e2000117 	ldw	r8,4(fp)
 20096a0:	398f883a 	add	r7,r7,r6
 20096a4:	38800017 	ldw	r2,0(r7)
 20096a8:	38c00117 	ldw	r3,4(r7)
 20096ac:	e1000017 	ldw	r4,0(fp)
 20096b0:	01bf2c34 	movhi	r6,64688
 20096b4:	418d883a 	add	r6,r8,r6
 20096b8:	300b883a 	mov	r5,r6
 20096bc:	180f883a 	mov	r7,r3
 20096c0:	100d883a 	mov	r6,r2
 20096c4:	200d6380 	call	200d638 <__muldf3>
 20096c8:	1009883a 	mov	r4,r2
 20096cc:	180b883a 	mov	r5,r3
 20096d0:	199ffc2c 	andhi	r6,r3,32752
 20096d4:	009f2834 	movhi	r2,31904
 20096d8:	e1000015 	stw	r4,0(fp)
 20096dc:	e1400115 	stw	r5,4(fp)
 20096e0:	1181d136 	bltu	r2,r6,2009e28 <_strtod_r+0xebc>
 20096e4:	009f2434 	movhi	r2,31888
 20096e8:	1183202e 	bgeu	r2,r6,200a36c <_strtod_r+0x1400>
 20096ec:	d8001415 	stw	zero,80(sp)
 20096f0:	019ffc34 	movhi	r6,32752
 20096f4:	31bfffc4 	addi	r6,r6,-1
 20096f8:	01ffffc4 	movi	r7,-1
 20096fc:	e1800115 	stw	r6,4(fp)
 2009700:	e1c00015 	stw	r7,0(fp)
 2009704:	00002506 	br	200979c <_strtod_r+0x830>
 2009708:	00800c04 	movi	r2,48
 200970c:	2083151e 	bne	r4,r2,200a364 <_strtod_r+0x13f8>
 2009710:	2005883a 	mov	r2,r4
 2009714:	000f883a 	mov	r7,zero
 2009718:	42000044 	addi	r8,r8,1
 200971c:	da000415 	stw	r8,16(sp)
 2009720:	41000007 	ldb	r4,0(r8)
 2009724:	39c00044 	addi	r7,r7,1
 2009728:	20bffb26 	beq	r4,r2,2009718 <_strtod_r+0x7ac>
 200972c:	20fff3c4 	addi	r3,r4,-49
 2009730:	00800204 	movi	r2,8
 2009734:	10c1b836 	bltu	r2,r3,2009e18 <_strtod_r+0xeac>
 2009738:	dd800417 	ldw	r22,16(sp)
 200973c:	3815883a 	mov	r10,r7
 2009740:	227ff404 	addi	r9,r4,-48
 2009744:	b011883a 	mov	r8,r22
 2009748:	0027883a 	mov	r19,zero
 200974c:	01c00044 	movi	r7,1
 2009750:	4801fe26 	beq	r9,zero,2009f4c <_strtod_r+0xfe0>
 2009754:	00800044 	movi	r2,1
 2009758:	51d5883a 	add	r10,r10,r7
 200975c:	11c31f0e 	bge	r2,r7,200a3dc <_strtod_r+0x1470>
 2009760:	1009883a 	mov	r4,r2
 2009764:	9807883a 	mov	r3,r19
 2009768:	02c00204 	movi	r11,8
 200976c:	03000404 	movi	r12,16
 2009770:	00000306 	br	2009780 <_strtod_r+0x814>
 2009774:	a50002a4 	muli	r20,r20,10
 2009778:	21000044 	addi	r4,r4,1
 200977c:	21c1eb26 	beq	r4,r7,2009f2c <_strtod_r+0xfc0>
 2009780:	18c00044 	addi	r3,r3,1
 2009784:	18bfffc4 	addi	r2,r3,-1
 2009788:	58bffa0e 	bge	r11,r2,2009774 <_strtod_r+0x808>
 200978c:	60fffa16 	blt	r12,r3,2009778 <_strtod_r+0x80c>
 2009790:	840002a4 	muli	r16,r16,10
 2009794:	003ff806 	br	2009778 <_strtod_r+0x80c>
 2009798:	d8001415 	stw	zero,80(sp)
 200979c:	d9801217 	ldw	r6,72(sp)
 20097a0:	a809883a 	mov	r4,r21
 20097a4:	b00b883a 	mov	r5,r22
 20097a8:	980f883a 	mov	r7,r19
 20097ac:	dd000015 	stw	r20,0(sp)
 20097b0:	20081380 	call	2008138 <__s2b>
 20097b4:	d9800f17 	ldw	r6,60(sp)
 20097b8:	11000304 	addi	r4,r2,12
 20097bc:	d8801015 	stw	r2,64(sp)
 20097c0:	300c803a 	cmplt	r6,r6,zero
 20097c4:	d9001715 	stw	r4,92(sp)
 20097c8:	d9801615 	stw	r6,88(sp)
 20097cc:	d8801017 	ldw	r2,64(sp)
 20097d0:	a809883a 	mov	r4,r21
 20097d4:	11400117 	ldw	r5,4(r2)
 20097d8:	20077e40 	call	20077e4 <_Balloc>
 20097dc:	d8c01017 	ldw	r3,64(sp)
 20097e0:	d9401717 	ldw	r5,92(sp)
 20097e4:	11000304 	addi	r4,r2,12
 20097e8:	19800417 	ldw	r6,16(r3)
 20097ec:	102f883a 	mov	r23,r2
 20097f0:	318d883a 	add	r6,r6,r6
 20097f4:	318d883a 	add	r6,r6,r6
 20097f8:	31800204 	addi	r6,r6,8
 20097fc:	200704c0 	call	200704c <memcpy>
 2009800:	e2000017 	ldw	r8,0(fp)
 2009804:	e2400117 	ldw	r9,4(fp)
 2009808:	d9800304 	addi	r6,sp,12
 200980c:	400b883a 	mov	r5,r8
 2009810:	a809883a 	mov	r4,r21
 2009814:	d9c00204 	addi	r7,sp,8
 2009818:	d9800015 	stw	r6,0(sp)
 200981c:	480d883a 	mov	r6,r9
 2009820:	20078a00 	call	20078a0 <__d2b>
 2009824:	a809883a 	mov	r4,r21
 2009828:	01400044 	movi	r5,1
 200982c:	d8800515 	stw	r2,20(sp)
 2009830:	2007edc0 	call	2007edc <__i2b>
 2009834:	102d883a 	mov	r22,r2
 2009838:	d8801617 	ldw	r2,88(sp)
 200983c:	1001051e 	bne	r2,zero,2009c54 <_strtod_r+0xce8>
 2009840:	dd000f17 	ldw	r20,60(sp)
 2009844:	000f883a 	mov	r7,zero
 2009848:	0013883a 	mov	r9,zero
 200984c:	a011883a 	mov	r8,r20
 2009850:	d8800217 	ldw	r2,8(sp)
 2009854:	1000fd16 	blt	r2,zero,2009c4c <_strtod_r+0xce0>
 2009858:	388f883a 	add	r7,r7,r2
 200985c:	d9801417 	ldw	r6,80(sp)
 2009860:	d9400317 	ldw	r5,12(sp)
 2009864:	00ff0084 	movi	r3,-1022
 2009868:	1189c83a 	sub	r4,r2,r6
 200986c:	2145883a 	add	r2,r4,r5
 2009870:	10bfffc4 	addi	r2,r2,-1
 2009874:	10c09f0e 	bge	r2,r3,2009af4 <_strtod_r+0xb88>
 2009878:	21810cc4 	addi	r6,r4,1075
 200987c:	d8c01417 	ldw	r3,80(sp)
 2009880:	4185883a 	add	r2,r8,r6
 2009884:	39a1883a 	add	r16,r7,r6
 2009888:	18a5883a 	add	r18,r3,r2
 200988c:	3807883a 	mov	r3,r7
 2009890:	81c0010e 	bge	r16,r7,2009898 <_strtod_r+0x92c>
 2009894:	8007883a 	mov	r3,r16
 2009898:	9005883a 	mov	r2,r18
 200989c:	1c80010e 	bge	r3,r18,20098a4 <_strtod_r+0x938>
 20098a0:	1805883a 	mov	r2,r3
 20098a4:	0080e70e 	bge	zero,r2,2009c44 <_strtod_r+0xcd8>
 20098a8:	38a7c83a 	sub	r19,r7,r2
 20098ac:	80a1c83a 	sub	r16,r16,r2
 20098b0:	90a5c83a 	sub	r18,r18,r2
 20098b4:	02400e0e 	bge	zero,r9,20098f0 <_strtod_r+0x984>
 20098b8:	480d883a 	mov	r6,r9
 20098bc:	b00b883a 	mov	r5,r22
 20098c0:	a809883a 	mov	r4,r21
 20098c4:	20080180 	call	2008018 <__pow5mult>
 20098c8:	d9800517 	ldw	r6,20(sp)
 20098cc:	a809883a 	mov	r4,r21
 20098d0:	100b883a 	mov	r5,r2
 20098d4:	102d883a 	mov	r22,r2
 20098d8:	2007cf40 	call	2007cf4 <__multiply>
 20098dc:	d9400517 	ldw	r5,20(sp)
 20098e0:	1023883a 	mov	r17,r2
 20098e4:	a809883a 	mov	r4,r21
 20098e8:	20072640 	call	2007264 <_Bfree>
 20098ec:	dc400515 	stw	r17,20(sp)
 20098f0:	0400050e 	bge	zero,r16,2009908 <_strtod_r+0x99c>
 20098f4:	d9400517 	ldw	r5,20(sp)
 20098f8:	800d883a 	mov	r6,r16
 20098fc:	a809883a 	mov	r4,r21
 2009900:	2007ba80 	call	2007ba8 <__lshift>
 2009904:	d8800515 	stw	r2,20(sp)
 2009908:	a000741e 	bne	r20,zero,2009adc <_strtod_r+0xb70>
 200990c:	0480050e 	bge	zero,r18,2009924 <_strtod_r+0x9b8>
 2009910:	b80b883a 	mov	r5,r23
 2009914:	900d883a 	mov	r6,r18
 2009918:	a809883a 	mov	r4,r21
 200991c:	2007ba80 	call	2007ba8 <__lshift>
 2009920:	102f883a 	mov	r23,r2
 2009924:	04c0050e 	bge	zero,r19,200993c <_strtod_r+0x9d0>
 2009928:	b00b883a 	mov	r5,r22
 200992c:	980d883a 	mov	r6,r19
 2009930:	a809883a 	mov	r4,r21
 2009934:	2007ba80 	call	2007ba8 <__lshift>
 2009938:	102d883a 	mov	r22,r2
 200993c:	d9400517 	ldw	r5,20(sp)
 2009940:	a809883a 	mov	r4,r21
 2009944:	b80d883a 	mov	r6,r23
 2009948:	2007a1c0 	call	2007a1c <__mdiff>
 200994c:	11000317 	ldw	r4,12(r2)
 2009950:	b00b883a 	mov	r5,r22
 2009954:	10000315 	stw	zero,12(r2)
 2009958:	d9001315 	stw	r4,76(sp)
 200995c:	1009883a 	mov	r4,r2
 2009960:	1029883a 	mov	r20,r2
 2009964:	20073c00 	call	20073c0 <__mcmp>
 2009968:	10017c16 	blt	r2,zero,2009f5c <_strtod_r+0xff0>
 200996c:	1001af26 	beq	r2,zero,200a02c <_strtod_r+0x10c0>
 2009970:	a009883a 	mov	r4,r20
 2009974:	b00b883a 	mov	r5,r22
 2009978:	20075c00 	call	20075c0 <__ratio>
 200997c:	0011883a 	mov	r8,zero
 2009980:	02500034 	movhi	r9,16384
 2009984:	480f883a 	mov	r7,r9
 2009988:	1009883a 	mov	r4,r2
 200998c:	180b883a 	mov	r5,r3
 2009990:	400d883a 	mov	r6,r8
 2009994:	1021883a 	mov	r16,r2
 2009998:	1823883a 	mov	r17,r3
 200999c:	200defc0 	call	200defc <__ledf2>
 20099a0:	00805716 	blt	zero,r2,2009b00 <_strtod_r+0xb94>
 20099a4:	d9801317 	ldw	r6,76(sp)
 20099a8:	3025003a 	cmpeq	r18,r6,zero
 20099ac:	90008b1e 	bne	r18,zero,2009bdc <_strtod_r+0xc70>
 20099b0:	008ffc34 	movhi	r2,16368
 20099b4:	0021883a 	mov	r16,zero
 20099b8:	1023883a 	mov	r17,r2
 20099bc:	d8000715 	stw	zero,28(sp)
 20099c0:	d8800815 	stw	r2,32(sp)
 20099c4:	e1c00117 	ldw	r7,4(fp)
 20099c8:	009ff834 	movhi	r2,32736
 20099cc:	3cdffc2c 	andhi	r19,r7,32752
 20099d0:	98805e26 	beq	r19,r2,2009b4c <_strtod_r+0xbe0>
 20099d4:	d8801417 	ldw	r2,80(sp)
 20099d8:	10001b26 	beq	r2,zero,2009a48 <_strtod_r+0xadc>
 20099dc:	0081a834 	movhi	r2,1696
 20099e0:	14c01936 	bltu	r2,r19,2009a48 <_strtod_r+0xadc>
 20099e4:	00bff034 	movhi	r2,65472
 20099e8:	00d07834 	movhi	r3,16864
 20099ec:	18ffffc4 	addi	r3,r3,-1
 20099f0:	180f883a 	mov	r7,r3
 20099f4:	8009883a 	mov	r4,r16
 20099f8:	880b883a 	mov	r5,r17
 20099fc:	100d883a 	mov	r6,r2
 2009a00:	200defc0 	call	200defc <__ledf2>
 2009a04:	00800b16 	blt	zero,r2,2009a34 <_strtod_r+0xac8>
 2009a08:	880b883a 	mov	r5,r17
 2009a0c:	8009883a 	mov	r4,r16
 2009a10:	200c39c0 	call	200c39c <__fixunsdfsi>
 2009a14:	1000df1e 	bne	r2,zero,2009d94 <_strtod_r+0xe28>
 2009a18:	0021883a 	mov	r16,zero
 2009a1c:	044ffc34 	movhi	r17,16368
 2009a20:	9000d91e 	bne	r18,zero,2009d88 <_strtod_r+0xe1c>
 2009a24:	8005883a 	mov	r2,r16
 2009a28:	8807883a 	mov	r3,r17
 2009a2c:	d8c00815 	stw	r3,32(sp)
 2009a30:	d8800715 	stw	r2,28(sp)
 2009a34:	d8800817 	ldw	r2,32(sp)
 2009a38:	00c1ac34 	movhi	r3,1712
 2009a3c:	14c5c83a 	sub	r2,r2,r19
 2009a40:	10c5883a 	add	r2,r2,r3
 2009a44:	d8800815 	stw	r2,32(sp)
 2009a48:	e0800017 	ldw	r2,0(fp)
 2009a4c:	e0c00117 	ldw	r3,4(fp)
 2009a50:	1009883a 	mov	r4,r2
 2009a54:	180b883a 	mov	r5,r3
 2009a58:	20074200 	call	2007420 <__ulp>
 2009a5c:	d9800717 	ldw	r6,28(sp)
 2009a60:	d9c00817 	ldw	r7,32(sp)
 2009a64:	180b883a 	mov	r5,r3
 2009a68:	1009883a 	mov	r4,r2
 2009a6c:	200d6380 	call	200d638 <__muldf3>
 2009a70:	e2000017 	ldw	r8,0(fp)
 2009a74:	e2400117 	ldw	r9,4(fp)
 2009a78:	180b883a 	mov	r5,r3
 2009a7c:	1009883a 	mov	r4,r2
 2009a80:	480f883a 	mov	r7,r9
 2009a84:	400d883a 	mov	r6,r8
 2009a88:	200d5c40 	call	200d5c4 <__adddf3>
 2009a8c:	e0c00115 	stw	r3,4(fp)
 2009a90:	e0800015 	stw	r2,0(fp)
 2009a94:	d8c01417 	ldw	r3,80(sp)
 2009a98:	e4800117 	ldw	r18,4(fp)
 2009a9c:	1800021e 	bne	r3,zero,2009aa8 <_strtod_r+0xb3c>
 2009aa0:	909ffc2c 	andhi	r2,r18,32752
 2009aa4:	98807b26 	beq	r19,r2,2009c94 <_strtod_r+0xd28>
 2009aa8:	d9400517 	ldw	r5,20(sp)
 2009aac:	a809883a 	mov	r4,r21
 2009ab0:	20072640 	call	2007264 <_Bfree>
 2009ab4:	a809883a 	mov	r4,r21
 2009ab8:	b80b883a 	mov	r5,r23
 2009abc:	20072640 	call	2007264 <_Bfree>
 2009ac0:	a809883a 	mov	r4,r21
 2009ac4:	b00b883a 	mov	r5,r22
 2009ac8:	20072640 	call	2007264 <_Bfree>
 2009acc:	a809883a 	mov	r4,r21
 2009ad0:	a00b883a 	mov	r5,r20
 2009ad4:	20072640 	call	2007264 <_Bfree>
 2009ad8:	003f3c06 	br	20097cc <_strtod_r+0x860>
 2009adc:	b80b883a 	mov	r5,r23
 2009ae0:	a00d883a 	mov	r6,r20
 2009ae4:	a809883a 	mov	r4,r21
 2009ae8:	20080180 	call	2008018 <__pow5mult>
 2009aec:	102f883a 	mov	r23,r2
 2009af0:	003f8606 	br	200990c <_strtod_r+0x9a0>
 2009af4:	00800d84 	movi	r2,54
 2009af8:	114dc83a 	sub	r6,r2,r5
 2009afc:	003f5f06 	br	200987c <_strtod_r+0x910>
 2009b00:	0005883a 	mov	r2,zero
 2009b04:	00cff834 	movhi	r3,16352
 2009b08:	880b883a 	mov	r5,r17
 2009b0c:	8009883a 	mov	r4,r16
 2009b10:	100d883a 	mov	r6,r2
 2009b14:	180f883a 	mov	r7,r3
 2009b18:	200d6380 	call	200d638 <__muldf3>
 2009b1c:	d9801317 	ldw	r6,76(sp)
 2009b20:	1021883a 	mov	r16,r2
 2009b24:	1823883a 	mov	r17,r3
 2009b28:	3025003a 	cmpeq	r18,r6,zero
 2009b2c:	90000126 	beq	r18,zero,2009b34 <_strtod_r+0xbc8>
 2009b30:	18e0003c 	xorhi	r3,r3,32768
 2009b34:	d8800715 	stw	r2,28(sp)
 2009b38:	d8c00815 	stw	r3,32(sp)
 2009b3c:	e1c00117 	ldw	r7,4(fp)
 2009b40:	009ff834 	movhi	r2,32736
 2009b44:	3cdffc2c 	andhi	r19,r7,32752
 2009b48:	98bfa21e 	bne	r19,r2,20099d4 <_strtod_r+0xa68>
 2009b4c:	e1000017 	ldw	r4,0(fp)
 2009b50:	01bf2c34 	movhi	r6,64688
 2009b54:	398d883a 	add	r6,r7,r6
 2009b58:	d9000b15 	stw	r4,44(sp)
 2009b5c:	d9c00c15 	stw	r7,48(sp)
 2009b60:	300b883a 	mov	r5,r6
 2009b64:	e1800115 	stw	r6,4(fp)
 2009b68:	20074200 	call	2007420 <__ulp>
 2009b6c:	d9800717 	ldw	r6,28(sp)
 2009b70:	d9c00817 	ldw	r7,32(sp)
 2009b74:	180b883a 	mov	r5,r3
 2009b78:	1009883a 	mov	r4,r2
 2009b7c:	200d6380 	call	200d638 <__muldf3>
 2009b80:	e2000017 	ldw	r8,0(fp)
 2009b84:	e2400117 	ldw	r9,4(fp)
 2009b88:	180b883a 	mov	r5,r3
 2009b8c:	1009883a 	mov	r4,r2
 2009b90:	480f883a 	mov	r7,r9
 2009b94:	400d883a 	mov	r6,r8
 2009b98:	200d5c40 	call	200d5c4 <__adddf3>
 2009b9c:	1009883a 	mov	r4,r2
 2009ba0:	180b883a 	mov	r5,r3
 2009ba4:	009f2834 	movhi	r2,31904
 2009ba8:	10bfffc4 	addi	r2,r2,-1
 2009bac:	18dffc2c 	andhi	r3,r3,32752
 2009bb0:	e1000015 	stw	r4,0(fp)
 2009bb4:	e1400115 	stw	r5,4(fp)
 2009bb8:	10c06f2e 	bgeu	r2,r3,2009d78 <_strtod_r+0xe0c>
 2009bbc:	d8800c17 	ldw	r2,48(sp)
 2009bc0:	011ffc34 	movhi	r4,32752
 2009bc4:	213fffc4 	addi	r4,r4,-1
 2009bc8:	11007a26 	beq	r2,r4,2009db4 <_strtod_r+0xe48>
 2009bcc:	01ffffc4 	movi	r7,-1
 2009bd0:	e1000115 	stw	r4,4(fp)
 2009bd4:	e1c00015 	stw	r7,0(fp)
 2009bd8:	003fb306 	br	2009aa8 <_strtod_r+0xb3c>
 2009bdc:	e0c00017 	ldw	r3,0(fp)
 2009be0:	1800221e 	bne	r3,zero,2009c6c <_strtod_r+0xd00>
 2009be4:	e0800117 	ldw	r2,4(fp)
 2009be8:	00c00434 	movhi	r3,16
 2009bec:	18ffffc4 	addi	r3,r3,-1
 2009bf0:	10c4703a 	and	r2,r2,r3
 2009bf4:	1000211e 	bne	r2,zero,2009c7c <_strtod_r+0xd10>
 2009bf8:	0005883a 	mov	r2,zero
 2009bfc:	00cffc34 	movhi	r3,16368
 2009c00:	180f883a 	mov	r7,r3
 2009c04:	8009883a 	mov	r4,r16
 2009c08:	880b883a 	mov	r5,r17
 2009c0c:	100d883a 	mov	r6,r2
 2009c10:	200de740 	call	200de74 <__ltdf2>
 2009c14:	10013c16 	blt	r2,zero,200a108 <_strtod_r+0x119c>
 2009c18:	0005883a 	mov	r2,zero
 2009c1c:	00cff834 	movhi	r3,16352
 2009c20:	880b883a 	mov	r5,r17
 2009c24:	8009883a 	mov	r4,r16
 2009c28:	180f883a 	mov	r7,r3
 2009c2c:	100d883a 	mov	r6,r2
 2009c30:	200d6380 	call	200d638 <__muldf3>
 2009c34:	1823883a 	mov	r17,r3
 2009c38:	1021883a 	mov	r16,r2
 2009c3c:	18e0003c 	xorhi	r3,r3,32768
 2009c40:	003fbc06 	br	2009b34 <_strtod_r+0xbc8>
 2009c44:	3827883a 	mov	r19,r7
 2009c48:	003f1a06 	br	20098b4 <_strtod_r+0x948>
 2009c4c:	4091c83a 	sub	r8,r8,r2
 2009c50:	003f0206 	br	200985c <_strtod_r+0x8f0>
 2009c54:	d8c00f17 	ldw	r3,60(sp)
 2009c58:	0011883a 	mov	r8,zero
 2009c5c:	0029883a 	mov	r20,zero
 2009c60:	00d3c83a 	sub	r9,zero,r3
 2009c64:	480f883a 	mov	r7,r9
 2009c68:	003ef906 	br	2009850 <_strtod_r+0x8e4>
 2009c6c:	00800044 	movi	r2,1
 2009c70:	1880021e 	bne	r3,r2,2009c7c <_strtod_r+0xd10>
 2009c74:	e0800117 	ldw	r2,4(fp)
 2009c78:	1000a526 	beq	r2,zero,2009f10 <_strtod_r+0xfa4>
 2009c7c:	00affc34 	movhi	r2,49136
 2009c80:	0021883a 	mov	r16,zero
 2009c84:	044ffc34 	movhi	r17,16368
 2009c88:	d8800815 	stw	r2,32(sp)
 2009c8c:	d8000715 	stw	zero,28(sp)
 2009c90:	003f4c06 	br	20099c4 <_strtod_r+0xa58>
 2009c94:	880b883a 	mov	r5,r17
 2009c98:	8009883a 	mov	r4,r16
 2009c9c:	200e07c0 	call	200e07c <__fixdfsi>
 2009ca0:	1009883a 	mov	r4,r2
 2009ca4:	200df840 	call	200df84 <__floatsidf>
 2009ca8:	880b883a 	mov	r5,r17
 2009cac:	8009883a 	mov	r4,r16
 2009cb0:	100d883a 	mov	r6,r2
 2009cb4:	180f883a 	mov	r7,r3
 2009cb8:	200d5440 	call	200d544 <__subdf3>
 2009cbc:	d9001317 	ldw	r4,76(sp)
 2009cc0:	100b883a 	mov	r5,r2
 2009cc4:	180d883a 	mov	r6,r3
 2009cc8:	1021883a 	mov	r16,r2
 2009ccc:	1823883a 	mov	r17,r3
 2009cd0:	2000061e 	bne	r4,zero,2009cec <_strtod_r+0xd80>
 2009cd4:	e0800017 	ldw	r2,0(fp)
 2009cd8:	1000041e 	bne	r2,zero,2009cec <_strtod_r+0xd80>
 2009cdc:	00c00434 	movhi	r3,16
 2009ce0:	18ffffc4 	addi	r3,r3,-1
 2009ce4:	90c4703a 	and	r2,r18,r3
 2009ce8:	10004026 	beq	r2,zero,2009dec <_strtod_r+0xe80>
 2009cec:	00a52834 	movhi	r2,38048
 2009cf0:	108d6544 	addi	r2,r2,13717
 2009cf4:	00cff834 	movhi	r3,16352
 2009cf8:	18ffffc4 	addi	r3,r3,-1
 2009cfc:	180f883a 	mov	r7,r3
 2009d00:	8009883a 	mov	r4,r16
 2009d04:	880b883a 	mov	r5,r17
 2009d08:	100d883a 	mov	r6,r2
 2009d0c:	200de740 	call	200de74 <__ltdf2>
 2009d10:	10000916 	blt	r2,zero,2009d38 <_strtod_r+0xdcc>
 2009d14:	008d6c34 	movhi	r2,13744
 2009d18:	10b94d44 	addi	r2,r2,-6859
 2009d1c:	00cff834 	movhi	r3,16352
 2009d20:	880b883a 	mov	r5,r17
 2009d24:	180f883a 	mov	r7,r3
 2009d28:	8009883a 	mov	r4,r16
 2009d2c:	100d883a 	mov	r6,r2
 2009d30:	200dd640 	call	200dd64 <__gtdf2>
 2009d34:	00bf5c0e 	bge	zero,r2,2009aa8 <_strtod_r+0xb3c>
 2009d38:	d9400517 	ldw	r5,20(sp)
 2009d3c:	a809883a 	mov	r4,r21
 2009d40:	20072640 	call	2007264 <_Bfree>
 2009d44:	a809883a 	mov	r4,r21
 2009d48:	b80b883a 	mov	r5,r23
 2009d4c:	20072640 	call	2007264 <_Bfree>
 2009d50:	a809883a 	mov	r4,r21
 2009d54:	b00b883a 	mov	r5,r22
 2009d58:	20072640 	call	2007264 <_Bfree>
 2009d5c:	d9401017 	ldw	r5,64(sp)
 2009d60:	a809883a 	mov	r4,r21
 2009d64:	20072640 	call	2007264 <_Bfree>
 2009d68:	a809883a 	mov	r4,r21
 2009d6c:	a00b883a 	mov	r5,r20
 2009d70:	20072640 	call	2007264 <_Bfree>
 2009d74:	003cf406 	br	2009148 <_strtod_r+0x1dc>
 2009d78:	0080d434 	movhi	r2,848
 2009d7c:	288d883a 	add	r6,r5,r2
 2009d80:	e1800115 	stw	r6,4(fp)
 2009d84:	003f4306 	br	2009a94 <_strtod_r+0xb28>
 2009d88:	8005883a 	mov	r2,r16
 2009d8c:	88e0003c 	xorhi	r3,r17,32768
 2009d90:	003f2606 	br	2009a2c <_strtod_r+0xac0>
 2009d94:	1009883a 	mov	r4,r2
 2009d98:	200e1c80 	call	200e1c8 <__floatunsidf>
 2009d9c:	1021883a 	mov	r16,r2
 2009da0:	1823883a 	mov	r17,r3
 2009da4:	003f1e06 	br	2009a20 <_strtod_r+0xab4>
 2009da8:	da000417 	ldw	r8,16(sp)
 2009dac:	39c00044 	addi	r7,r7,1
 2009db0:	003e6706 	br	2009750 <_strtod_r+0x7e4>
 2009db4:	d8c00b17 	ldw	r3,44(sp)
 2009db8:	00bfffc4 	movi	r2,-1
 2009dbc:	18bf831e 	bne	r3,r2,2009bcc <_strtod_r+0xc60>
 2009dc0:	00c00884 	movi	r3,34
 2009dc4:	a8c00015 	stw	r3,0(r21)
 2009dc8:	009ffc34 	movhi	r2,32752
 2009dcc:	e0800115 	stw	r2,4(fp)
 2009dd0:	e0000015 	stw	zero,0(fp)
 2009dd4:	003fd806 	br	2009d38 <_strtod_r+0xdcc>
 2009dd8:	4007883a 	mov	r3,r8
 2009ddc:	000d883a 	mov	r6,zero
 2009de0:	0029883a 	mov	r20,zero
 2009de4:	0021883a 	mov	r16,zero
 2009de8:	003cc906 	br	2009110 <_strtod_r+0x1a4>
 2009dec:	00a52834 	movhi	r2,38048
 2009df0:	108d6544 	addi	r2,r2,13717
 2009df4:	00cff434 	movhi	r3,16336
 2009df8:	18ffffc4 	addi	r3,r3,-1
 2009dfc:	2809883a 	mov	r4,r5
 2009e00:	180f883a 	mov	r7,r3
 2009e04:	300b883a 	mov	r5,r6
 2009e08:	100d883a 	mov	r6,r2
 2009e0c:	200de740 	call	200de74 <__ltdf2>
 2009e10:	103f250e 	bge	r2,zero,2009aa8 <_strtod_r+0xb3c>
 2009e14:	003fc806 	br	2009d38 <_strtod_r+0xdcc>
 2009e18:	0027883a 	mov	r19,zero
 2009e1c:	04800044 	movi	r18,1
 2009e20:	0015883a 	mov	r10,zero
 2009e24:	003cc006 	br	2009128 <_strtod_r+0x1bc>
 2009e28:	00800884 	movi	r2,34
 2009e2c:	a8800015 	stw	r2,0(r21)
 2009e30:	019ffc34 	movhi	r6,32752
 2009e34:	e1800115 	stw	r6,4(fp)
 2009e38:	e0000015 	stw	zero,0(fp)
 2009e3c:	003cc206 	br	2009148 <_strtod_r+0x1dc>
 2009e40:	015387c4 	movi	r5,19999
 2009e44:	003d1e06 	br	20092c0 <_strtod_r+0x354>
 2009e48:	300a90fa 	slli	r5,r6,3
 2009e4c:	e0800017 	ldw	r2,0(fp)
 2009e50:	e0c00117 	ldw	r3,4(fp)
 2009e54:	01008074 	movhi	r4,513
 2009e58:	21063f04 	addi	r4,r4,6396
 2009e5c:	290b883a 	add	r5,r5,r4
 2009e60:	2a000017 	ldw	r8,0(r5)
 2009e64:	2a400117 	ldw	r9,4(r5)
 2009e68:	1009883a 	mov	r4,r2
 2009e6c:	180b883a 	mov	r5,r3
 2009e70:	480f883a 	mov	r7,r9
 2009e74:	400d883a 	mov	r6,r8
 2009e78:	200d6380 	call	200d638 <__muldf3>
 2009e7c:	e0c00115 	stw	r3,4(fp)
 2009e80:	e0800015 	stw	r2,0(fp)
 2009e84:	003cb006 	br	2009148 <_strtod_r+0x1dc>
 2009e88:	d8800d17 	ldw	r2,52(sp)
 2009e8c:	e0800015 	stw	r2,0(fp)
 2009e90:	d8c00e17 	ldw	r3,56(sp)
 2009e94:	e0c00115 	stw	r3,4(fp)
 2009e98:	9880020c 	andi	r2,r19,8
 2009e9c:	103caa26 	beq	r2,zero,2009148 <_strtod_r+0x1dc>
 2009ea0:	e0800117 	ldw	r2,4(fp)
 2009ea4:	10a00034 	orhi	r2,r2,32768
 2009ea8:	e0800115 	stw	r2,4(fp)
 2009eac:	003ca606 	br	2009148 <_strtod_r+0x1dc>
 2009eb0:	009ffc34 	movhi	r2,32752
 2009eb4:	e0800115 	stw	r2,4(fp)
 2009eb8:	e0000015 	stw	zero,0(fp)
 2009ebc:	003ff606 	br	2009e98 <_strtod_r+0xf2c>
 2009ec0:	00a00034 	movhi	r2,32768
 2009ec4:	10bfffc4 	addi	r2,r2,-1
 2009ec8:	00ffffc4 	movi	r3,-1
 2009ecc:	e0800115 	stw	r2,4(fp)
 2009ed0:	e0c00015 	stw	r3,0(fp)
 2009ed4:	003ff006 	br	2009e98 <_strtod_r+0xf2c>
 2009ed8:	e0000115 	stw	zero,4(fp)
 2009edc:	e0000015 	stw	zero,0(fp)
 2009ee0:	003fed06 	br	2009e98 <_strtod_r+0xf2c>
 2009ee4:	d8800e17 	ldw	r2,56(sp)
 2009ee8:	29010cc4 	addi	r4,r5,1075
 2009eec:	00fffc34 	movhi	r3,65520
 2009ef0:	18ffffc4 	addi	r3,r3,-1
 2009ef4:	2008953a 	slli	r4,r4,20
 2009ef8:	10c4703a 	and	r2,r2,r3
 2009efc:	d8c00d17 	ldw	r3,52(sp)
 2009f00:	1104b03a 	or	r2,r2,r4
 2009f04:	e0800115 	stw	r2,4(fp)
 2009f08:	e0c00015 	stw	r3,0(fp)
 2009f0c:	003fe206 	br	2009e98 <_strtod_r+0xf2c>
 2009f10:	00800884 	movi	r2,34
 2009f14:	a8800015 	stw	r2,0(r21)
 2009f18:	e0000015 	stw	zero,0(fp)
 2009f1c:	e0000115 	stw	zero,4(fp)
 2009f20:	003f8506 	br	2009d38 <_strtod_r+0xdcc>
 2009f24:	03800044 	movi	r14,1
 2009f28:	003d7706 	br	2009508 <_strtod_r+0x59c>
 2009f2c:	99c5883a 	add	r2,r19,r7
 2009f30:	11ffffc4 	addi	r7,r2,-1
 2009f34:	00800204 	movi	r2,8
 2009f38:	3cc00044 	addi	r19,r7,1
 2009f3c:	11c0df16 	blt	r2,r7,200a2bc <_strtod_r+0x1350>
 2009f40:	a08002a4 	muli	r2,r20,10
 2009f44:	000f883a 	mov	r7,zero
 2009f48:	1269883a 	add	r20,r2,r9
 2009f4c:	42000044 	addi	r8,r8,1
 2009f50:	da000415 	stw	r8,16(sp)
 2009f54:	41000007 	ldb	r4,0(r8)
 2009f58:	003d3706 	br	2009438 <_strtod_r+0x4cc>
 2009f5c:	d9801317 	ldw	r6,76(sp)
 2009f60:	3000511e 	bne	r6,zero,200a0a8 <_strtod_r+0x113c>
 2009f64:	e0800017 	ldw	r2,0(fp)
 2009f68:	1000d81e 	bne	r2,zero,200a2cc <_strtod_r+0x1360>
 2009f6c:	e0c00117 	ldw	r3,4(fp)
 2009f70:	01000434 	movhi	r4,16
 2009f74:	213fffc4 	addi	r4,r4,-1
 2009f78:	1904703a 	and	r2,r3,r4
 2009f7c:	1000b01e 	bne	r2,zero,200a240 <_strtod_r+0x12d4>
 2009f80:	18dffc2c 	andhi	r3,r3,32752
 2009f84:	0081ac34 	movhi	r2,1712
 2009f88:	10c1102e 	bgeu	r2,r3,200a3cc <_strtod_r+0x1460>
 2009f8c:	a0800517 	ldw	r2,20(r20)
 2009f90:	1000031e 	bne	r2,zero,2009fa0 <_strtod_r+0x1034>
 2009f94:	a0c00417 	ldw	r3,16(r20)
 2009f98:	00800044 	movi	r2,1
 2009f9c:	10c0420e 	bge	r2,r3,200a0a8 <_strtod_r+0x113c>
 2009fa0:	a00b883a 	mov	r5,r20
 2009fa4:	a809883a 	mov	r4,r21
 2009fa8:	01800044 	movi	r6,1
 2009fac:	2007ba80 	call	2007ba8 <__lshift>
 2009fb0:	1009883a 	mov	r4,r2
 2009fb4:	b00b883a 	mov	r5,r22
 2009fb8:	1029883a 	mov	r20,r2
 2009fbc:	20073c00 	call	20073c0 <__mcmp>
 2009fc0:	0080c20e 	bge	zero,r2,200a2cc <_strtod_r+0x1360>
 2009fc4:	e1800117 	ldw	r6,4(fp)
 2009fc8:	d9001417 	ldw	r4,80(sp)
 2009fcc:	2013003a 	cmpeq	r9,r4,zero
 2009fd0:	4800ef1e 	bne	r9,zero,200a390 <_strtod_r+0x1424>
 2009fd4:	30dffc2c 	andhi	r3,r6,32752
 2009fd8:	0081ac34 	movhi	r2,1712
 2009fdc:	10c0ec36 	bltu	r2,r3,200a390 <_strtod_r+0x1424>
 2009fe0:	0080dc34 	movhi	r2,880
 2009fe4:	10ffca2e 	bgeu	r2,r3,2009f10 <_strtod_r+0xfa4>
 2009fe8:	e0800017 	ldw	r2,0(fp)
 2009fec:	e0c00117 	ldw	r3,4(fp)
 2009ff0:	020e5434 	movhi	r8,14672
 2009ff4:	000d883a 	mov	r6,zero
 2009ff8:	400f883a 	mov	r7,r8
 2009ffc:	180b883a 	mov	r5,r3
 200a000:	1009883a 	mov	r4,r2
 200a004:	da000c15 	stw	r8,48(sp)
 200a008:	d8000b15 	stw	zero,44(sp)
 200a00c:	200d6380 	call	200d638 <__muldf3>
 200a010:	e0800015 	stw	r2,0(fp)
 200a014:	e0c00115 	stw	r3,4(fp)
 200a018:	183f471e 	bne	r3,zero,2009d38 <_strtod_r+0xdcc>
 200a01c:	103f461e 	bne	r2,zero,2009d38 <_strtod_r+0xdcc>
 200a020:	00800884 	movi	r2,34
 200a024:	a8800015 	stw	r2,0(r21)
 200a028:	003f4306 	br	2009d38 <_strtod_r+0xdcc>
 200a02c:	d8801317 	ldw	r2,76(sp)
 200a030:	1025003a 	cmpeq	r18,r2,zero
 200a034:	9000861e 	bne	r18,zero,200a250 <_strtod_r+0x12e4>
 200a038:	e1400117 	ldw	r5,4(fp)
 200a03c:	00c00434 	movhi	r3,16
 200a040:	18ffffc4 	addi	r3,r3,-1
 200a044:	28c4703a 	and	r2,r5,r3
 200a048:	10c01b26 	beq	r2,r3,200a0b8 <_strtod_r+0x114c>
 200a04c:	e1c00017 	ldw	r7,0(fp)
 200a050:	3880004c 	andi	r2,r7,1
 200a054:	1005003a 	cmpeq	r2,r2,zero
 200a058:	1000791e 	bne	r2,zero,200a240 <_strtod_r+0x12d4>
 200a05c:	9000b126 	beq	r18,zero,200a324 <_strtod_r+0x13b8>
 200a060:	e4400117 	ldw	r17,4(fp)
 200a064:	3809883a 	mov	r4,r7
 200a068:	3821883a 	mov	r16,r7
 200a06c:	880b883a 	mov	r5,r17
 200a070:	20074200 	call	2007420 <__ulp>
 200a074:	180f883a 	mov	r7,r3
 200a078:	880b883a 	mov	r5,r17
 200a07c:	8009883a 	mov	r4,r16
 200a080:	100d883a 	mov	r6,r2
 200a084:	200d5440 	call	200d544 <__subdf3>
 200a088:	1009883a 	mov	r4,r2
 200a08c:	000d883a 	mov	r6,zero
 200a090:	000f883a 	mov	r7,zero
 200a094:	180b883a 	mov	r5,r3
 200a098:	e0800015 	stw	r2,0(fp)
 200a09c:	e0c00115 	stw	r3,4(fp)
 200a0a0:	200dcdc0 	call	200dcdc <__nedf2>
 200a0a4:	103f9a26 	beq	r2,zero,2009f10 <_strtod_r+0xfa4>
 200a0a8:	d9001417 	ldw	r4,80(sp)
 200a0ac:	2013003a 	cmpeq	r9,r4,zero
 200a0b0:	483f211e 	bne	r9,zero,2009d38 <_strtod_r+0xdcc>
 200a0b4:	003fcc06 	br	2009fe8 <_strtod_r+0x107c>
 200a0b8:	d9001417 	ldw	r4,80(sp)
 200a0bc:	e1c00017 	ldw	r7,0(fp)
 200a0c0:	2013003a 	cmpeq	r9,r4,zero
 200a0c4:	4800bd1e 	bne	r9,zero,200a3bc <_strtod_r+0x1450>
 200a0c8:	28dffc2c 	andhi	r3,r5,32752
 200a0cc:	0081a834 	movhi	r2,1696
 200a0d0:	10c0ba36 	bltu	r2,r3,200a3bc <_strtod_r+0x1450>
 200a0d4:	1804d53a 	srli	r2,r3,20
 200a0d8:	00c01ac4 	movi	r3,107
 200a0dc:	013fffc4 	movi	r4,-1
 200a0e0:	1887c83a 	sub	r3,r3,r2
 200a0e4:	20c4983a 	sll	r2,r4,r3
 200a0e8:	11ffd91e 	bne	r2,r7,200a050 <_strtod_r+0x10e4>
 200a0ec:	28dffc2c 	andhi	r3,r5,32752
 200a0f0:	00800434 	movhi	r2,16
 200a0f4:	188d883a 	add	r6,r3,r2
 200a0f8:	e1800115 	stw	r6,4(fp)
 200a0fc:	e0000015 	stw	zero,0(fp)
 200a100:	483f0d1e 	bne	r9,zero,2009d38 <_strtod_r+0xdcc>
 200a104:	003fb806 	br	2009fe8 <_strtod_r+0x107c>
 200a108:	0021883a 	mov	r16,zero
 200a10c:	0005883a 	mov	r2,zero
 200a110:	044ff834 	movhi	r17,16352
 200a114:	00eff834 	movhi	r3,49120
 200a118:	003e8606 	br	2009b34 <_strtod_r+0xbc8>
 200a11c:	803d9e26 	beq	r16,zero,2009798 <_strtod_r+0x82c>
 200a120:	0421c83a 	sub	r16,zero,r16
 200a124:	814003cc 	andi	r5,r16,15
 200a128:	28000f26 	beq	r5,zero,200a168 <_strtod_r+0x11fc>
 200a12c:	280a90fa 	slli	r5,r5,3
 200a130:	01008074 	movhi	r4,513
 200a134:	21063f04 	addi	r4,r4,6396
 200a138:	e0800017 	ldw	r2,0(fp)
 200a13c:	290b883a 	add	r5,r5,r4
 200a140:	2a000017 	ldw	r8,0(r5)
 200a144:	e0c00117 	ldw	r3,4(fp)
 200a148:	2a400117 	ldw	r9,4(r5)
 200a14c:	1009883a 	mov	r4,r2
 200a150:	180b883a 	mov	r5,r3
 200a154:	480f883a 	mov	r7,r9
 200a158:	400d883a 	mov	r6,r8
 200a15c:	200d9fc0 	call	200d9fc <__divdf3>
 200a160:	e0c00115 	stw	r3,4(fp)
 200a164:	e0800015 	stw	r2,0(fp)
 200a168:	8021d13a 	srai	r16,r16,4
 200a16c:	803d8a26 	beq	r16,zero,2009798 <_strtod_r+0x82c>
 200a170:	008007c4 	movi	r2,31
 200a174:	14002d16 	blt	r2,r16,200a22c <_strtod_r+0x12c0>
 200a178:	8080040c 	andi	r2,r16,16
 200a17c:	10009926 	beq	r2,zero,200a3e4 <_strtod_r+0x1478>
 200a180:	00801a84 	movi	r2,106
 200a184:	d8801415 	stw	r2,80(sp)
 200a188:	0400110e 	bge	zero,r16,200a1d0 <_strtod_r+0x1264>
 200a18c:	04408074 	movhi	r17,513
 200a190:	8c468c04 	addi	r17,r17,6704
 200a194:	8080004c 	andi	r2,r16,1
 200a198:	1005003a 	cmpeq	r2,r2,zero
 200a19c:	1000091e 	bne	r2,zero,200a1c4 <_strtod_r+0x1258>
 200a1a0:	e0800017 	ldw	r2,0(fp)
 200a1a4:	e0c00117 	ldw	r3,4(fp)
 200a1a8:	89800017 	ldw	r6,0(r17)
 200a1ac:	89c00117 	ldw	r7,4(r17)
 200a1b0:	180b883a 	mov	r5,r3
 200a1b4:	1009883a 	mov	r4,r2
 200a1b8:	200d6380 	call	200d638 <__muldf3>
 200a1bc:	e0c00115 	stw	r3,4(fp)
 200a1c0:	e0800015 	stw	r2,0(fp)
 200a1c4:	8021d07a 	srai	r16,r16,1
 200a1c8:	8c400204 	addi	r17,r17,8
 200a1cc:	043ff116 	blt	zero,r16,200a194 <_strtod_r+0x1228>
 200a1d0:	d8c01417 	ldw	r3,80(sp)
 200a1d4:	18000d26 	beq	r3,zero,200a20c <_strtod_r+0x12a0>
 200a1d8:	e1000117 	ldw	r4,4(fp)
 200a1dc:	00c01ac4 	movi	r3,107
 200a1e0:	209ffc2c 	andhi	r2,r4,32752
 200a1e4:	1004d53a 	srli	r2,r2,20
 200a1e8:	1887c83a 	sub	r3,r3,r2
 200a1ec:	00c0070e 	bge	zero,r3,200a20c <_strtod_r+0x12a0>
 200a1f0:	008007c4 	movi	r2,31
 200a1f4:	10c0900e 	bge	r2,r3,200a438 <_strtod_r+0x14cc>
 200a1f8:	00800d04 	movi	r2,52
 200a1fc:	e0000015 	stw	zero,0(fp)
 200a200:	10c0870e 	bge	r2,r3,200a420 <_strtod_r+0x14b4>
 200a204:	0180dc34 	movhi	r6,880
 200a208:	e1800115 	stw	r6,4(fp)
 200a20c:	e0800017 	ldw	r2,0(fp)
 200a210:	e0c00117 	ldw	r3,4(fp)
 200a214:	000d883a 	mov	r6,zero
 200a218:	000f883a 	mov	r7,zero
 200a21c:	180b883a 	mov	r5,r3
 200a220:	1009883a 	mov	r4,r2
 200a224:	200dcdc0 	call	200dcdc <__nedf2>
 200a228:	103d5c1e 	bne	r2,zero,200979c <_strtod_r+0x830>
 200a22c:	00800884 	movi	r2,34
 200a230:	a8800015 	stw	r2,0(r21)
 200a234:	e0000015 	stw	zero,0(fp)
 200a238:	e0000115 	stw	zero,4(fp)
 200a23c:	003bc206 	br	2009148 <_strtod_r+0x1dc>
 200a240:	d8801417 	ldw	r2,80(sp)
 200a244:	1013003a 	cmpeq	r9,r2,zero
 200a248:	483ebb1e 	bne	r9,zero,2009d38 <_strtod_r+0xdcc>
 200a24c:	003f6606 	br	2009fe8 <_strtod_r+0x107c>
 200a250:	e1800117 	ldw	r6,4(fp)
 200a254:	00c00434 	movhi	r3,16
 200a258:	18ffffc4 	addi	r3,r3,-1
 200a25c:	30c4703a 	and	r2,r6,r3
 200a260:	103f7a1e 	bne	r2,zero,200a04c <_strtod_r+0x10e0>
 200a264:	e1c00017 	ldw	r7,0(fp)
 200a268:	383f791e 	bne	r7,zero,200a050 <_strtod_r+0x10e4>
 200a26c:	003f5606 	br	2009fc8 <_strtod_r+0x105c>
 200a270:	d9800f17 	ldw	r6,60(sp)
 200a274:	00bffa84 	movi	r2,-22
 200a278:	30bcd416 	blt	r6,r2,20095cc <_strtod_r+0x660>
 200a27c:	317ffe24 	muli	r5,r6,-8
 200a280:	01008074 	movhi	r4,513
 200a284:	21063f04 	addi	r4,r4,6396
 200a288:	e0800017 	ldw	r2,0(fp)
 200a28c:	290b883a 	add	r5,r5,r4
 200a290:	2a000017 	ldw	r8,0(r5)
 200a294:	e0c00117 	ldw	r3,4(fp)
 200a298:	2a400117 	ldw	r9,4(r5)
 200a29c:	1009883a 	mov	r4,r2
 200a2a0:	180b883a 	mov	r5,r3
 200a2a4:	480f883a 	mov	r7,r9
 200a2a8:	400d883a 	mov	r6,r8
 200a2ac:	200d9fc0 	call	200d9fc <__divdf3>
 200a2b0:	e0c00115 	stw	r3,4(fp)
 200a2b4:	e0800015 	stw	r2,0(fp)
 200a2b8:	003ba306 	br	2009148 <_strtod_r+0x1dc>
 200a2bc:	00800404 	movi	r2,16
 200a2c0:	14c02f0e 	bge	r2,r19,200a380 <_strtod_r+0x1414>
 200a2c4:	000f883a 	mov	r7,zero
 200a2c8:	003f2006 	br	2009f4c <_strtod_r+0xfe0>
 200a2cc:	d9801417 	ldw	r6,80(sp)
 200a2d0:	3013003a 	cmpeq	r9,r6,zero
 200a2d4:	483e981e 	bne	r9,zero,2009d38 <_strtod_r+0xdcc>
 200a2d8:	003f4306 	br	2009fe8 <_strtod_r+0x107c>
 200a2dc:	00801a44 	movi	r2,105
 200a2e0:	20bc6326 	beq	r4,r2,2009470 <_strtod_r+0x504>
 200a2e4:	00801b84 	movi	r2,110
 200a2e8:	20bbba1e 	bne	r4,r2,20091d4 <_strtod_r+0x268>
 200a2ec:	dc000404 	addi	r16,sp,16
 200a2f0:	8009883a 	mov	r4,r16
 200a2f4:	01408074 	movhi	r5,513
 200a2f8:	29468b04 	addi	r5,r5,6700
 200a2fc:	2008f240 	call	2008f24 <match>
 200a300:	103bb426 	beq	r2,zero,20091d4 <_strtod_r+0x268>
 200a304:	d8800417 	ldw	r2,16(sp)
 200a308:	00c00a04 	movi	r3,40
 200a30c:	11000007 	ldb	r4,0(r2)
 200a310:	20c03626 	beq	r4,r3,200a3ec <_strtod_r+0x1480>
 200a314:	01bffe34 	movhi	r6,65528
 200a318:	e1800115 	stw	r6,4(fp)
 200a31c:	e0000015 	stw	zero,0(fp)
 200a320:	003b8906 	br	2009148 <_strtod_r+0x1dc>
 200a324:	e4400117 	ldw	r17,4(fp)
 200a328:	3809883a 	mov	r4,r7
 200a32c:	3821883a 	mov	r16,r7
 200a330:	880b883a 	mov	r5,r17
 200a334:	20074200 	call	2007420 <__ulp>
 200a338:	100d883a 	mov	r6,r2
 200a33c:	880b883a 	mov	r5,r17
 200a340:	180f883a 	mov	r7,r3
 200a344:	8009883a 	mov	r4,r16
 200a348:	200d5c40 	call	200d5c4 <__adddf3>
 200a34c:	d9801417 	ldw	r6,80(sp)
 200a350:	e0c00115 	stw	r3,4(fp)
 200a354:	e0800015 	stw	r2,0(fp)
 200a358:	3013003a 	cmpeq	r9,r6,zero
 200a35c:	483e761e 	bne	r9,zero,2009d38 <_strtod_r+0xdcc>
 200a360:	003f2106 	br	2009fe8 <_strtod_r+0x107c>
 200a364:	000f883a 	mov	r7,zero
 200a368:	003cf006 	br	200972c <_strtod_r+0x7c0>
 200a36c:	0080d434 	movhi	r2,848
 200a370:	188d883a 	add	r6,r3,r2
 200a374:	d8001415 	stw	zero,80(sp)
 200a378:	e1800115 	stw	r6,4(fp)
 200a37c:	003d0706 	br	200979c <_strtod_r+0x830>
 200a380:	808002a4 	muli	r2,r16,10
 200a384:	000f883a 	mov	r7,zero
 200a388:	1261883a 	add	r16,r2,r9
 200a38c:	003eef06 	br	2009f4c <_strtod_r+0xfe0>
 200a390:	309ffc2c 	andhi	r2,r6,32752
 200a394:	00fffc34 	movhi	r3,65520
 200a398:	10c5883a 	add	r2,r2,r3
 200a39c:	00c00434 	movhi	r3,16
 200a3a0:	18ffffc4 	addi	r3,r3,-1
 200a3a4:	10ccb03a 	or	r6,r2,r3
 200a3a8:	01ffffc4 	movi	r7,-1
 200a3ac:	e1800115 	stw	r6,4(fp)
 200a3b0:	e1c00015 	stw	r7,0(fp)
 200a3b4:	483e601e 	bne	r9,zero,2009d38 <_strtod_r+0xdcc>
 200a3b8:	003f0b06 	br	2009fe8 <_strtod_r+0x107c>
 200a3bc:	00bfffc4 	movi	r2,-1
 200a3c0:	003f4906 	br	200a0e8 <_strtod_r+0x117c>
 200a3c4:	0025883a 	mov	r18,zero
 200a3c8:	003cb106 	br	2009690 <_strtod_r+0x724>
 200a3cc:	d8c01417 	ldw	r3,80(sp)
 200a3d0:	1813003a 	cmpeq	r9,r3,zero
 200a3d4:	483e581e 	bne	r9,zero,2009d38 <_strtod_r+0xdcc>
 200a3d8:	003f0306 	br	2009fe8 <_strtod_r+0x107c>
 200a3dc:	980f883a 	mov	r7,r19
 200a3e0:	003ed406 	br	2009f34 <_strtod_r+0xfc8>
 200a3e4:	d8001415 	stw	zero,80(sp)
 200a3e8:	003f6706 	br	200a188 <_strtod_r+0x121c>
 200a3ec:	8009883a 	mov	r4,r16
 200a3f0:	01408074 	movhi	r5,513
 200a3f4:	2948f004 	addi	r5,r5,9152
 200a3f8:	d9800d04 	addi	r6,sp,52
 200a3fc:	200bf5c0 	call	200bf5c <__hexnan>
 200a400:	00c00144 	movi	r3,5
 200a404:	10ffc31e 	bne	r2,r3,200a314 <_strtod_r+0x13a8>
 200a408:	d8800e17 	ldw	r2,56(sp)
 200a40c:	d9c00d17 	ldw	r7,52(sp)
 200a410:	119ffc34 	orhi	r6,r2,32752
 200a414:	e1800115 	stw	r6,4(fp)
 200a418:	e1c00015 	stw	r7,0(fp)
 200a41c:	003b4a06 	br	2009148 <_strtod_r+0x1dc>
 200a420:	18fff804 	addi	r3,r3,-32
 200a424:	00bfffc4 	movi	r2,-1
 200a428:	10c4983a 	sll	r2,r2,r3
 200a42c:	208c703a 	and	r6,r4,r2
 200a430:	e1800115 	stw	r6,4(fp)
 200a434:	003f7506 	br	200a20c <_strtod_r+0x12a0>
 200a438:	00bfffc4 	movi	r2,-1
 200a43c:	10c4983a 	sll	r2,r2,r3
 200a440:	e0c00017 	ldw	r3,0(fp)
 200a444:	188e703a 	and	r7,r3,r2
 200a448:	e1c00015 	stw	r7,0(fp)
 200a44c:	003f6f06 	br	200a20c <_strtod_r+0x12a0>

0200a450 <strtof>:
 200a450:	defffa04 	addi	sp,sp,-24
 200a454:	dd000415 	stw	r20,16(sp)
 200a458:	05008074 	movhi	r20,513
 200a45c:	a5099604 	addi	r20,r20,9816
 200a460:	2007883a 	mov	r3,r4
 200a464:	a1000017 	ldw	r4,0(r20)
 200a468:	280d883a 	mov	r6,r5
 200a46c:	180b883a 	mov	r5,r3
 200a470:	dfc00515 	stw	ra,20(sp)
 200a474:	dcc00315 	stw	r19,12(sp)
 200a478:	dc800215 	stw	r18,8(sp)
 200a47c:	dc400115 	stw	r17,4(sp)
 200a480:	dc000015 	stw	r16,0(sp)
 200a484:	2008f6c0 	call	2008f6c <_strtod_r>
 200a488:	180b883a 	mov	r5,r3
 200a48c:	1009883a 	mov	r4,r2
 200a490:	1823883a 	mov	r17,r3
 200a494:	1021883a 	mov	r16,r2
 200a498:	200e1540 	call	200e154 <__truncdfsf2>
 200a49c:	1009883a 	mov	r4,r2
 200a4a0:	000b883a 	mov	r5,zero
 200a4a4:	1025883a 	mov	r18,r2
 200a4a8:	1027883a 	mov	r19,r2
 200a4ac:	200cfcc0 	call	200cfcc <__nesf2>
 200a4b0:	000d883a 	mov	r6,zero
 200a4b4:	000f883a 	mov	r7,zero
 200a4b8:	8009883a 	mov	r4,r16
 200a4bc:	880b883a 	mov	r5,r17
 200a4c0:	10000e1e 	bne	r2,zero,200a4fc <strtof+0xac>
 200a4c4:	200dcdc0 	call	200dcdc <__nedf2>
 200a4c8:	10000c26 	beq	r2,zero,200a4fc <strtof+0xac>
 200a4cc:	a0c00017 	ldw	r3,0(r20)
 200a4d0:	00800884 	movi	r2,34
 200a4d4:	18800015 	stw	r2,0(r3)
 200a4d8:	9805883a 	mov	r2,r19
 200a4dc:	dfc00517 	ldw	ra,20(sp)
 200a4e0:	dd000417 	ldw	r20,16(sp)
 200a4e4:	dcc00317 	ldw	r19,12(sp)
 200a4e8:	dc800217 	ldw	r18,8(sp)
 200a4ec:	dc400117 	ldw	r17,4(sp)
 200a4f0:	dc000017 	ldw	r16,0(sp)
 200a4f4:	dec00604 	addi	sp,sp,24
 200a4f8:	f800283a 	ret
 200a4fc:	9009883a 	mov	r4,r18
 200a500:	015fe034 	movhi	r5,32640
 200a504:	297fffc4 	addi	r5,r5,-1
 200a508:	200d0440 	call	200d044 <__gtsf2>
 200a50c:	00ffffc4 	movi	r3,-1
 200a510:	011ffc34 	movhi	r4,32752
 200a514:	213fffc4 	addi	r4,r4,-1
 200a518:	200f883a 	mov	r7,r4
 200a51c:	180d883a 	mov	r6,r3
 200a520:	8009883a 	mov	r4,r16
 200a524:	880b883a 	mov	r5,r17
 200a528:	00800f16 	blt	zero,r2,200a568 <strtof+0x118>
 200a52c:	9009883a 	mov	r4,r18
 200a530:	017fe034 	movhi	r5,65408
 200a534:	297fffc4 	addi	r5,r5,-1
 200a538:	200d0bc0 	call	200d0bc <__ltsf2>
 200a53c:	023fffc4 	movi	r8,-1
 200a540:	027ffc34 	movhi	r9,65520
 200a544:	4a7fffc4 	addi	r9,r9,-1
 200a548:	880b883a 	mov	r5,r17
 200a54c:	480f883a 	mov	r7,r9
 200a550:	8009883a 	mov	r4,r16
 200a554:	400d883a 	mov	r6,r8
 200a558:	103fdf0e 	bge	r2,zero,200a4d8 <strtof+0x88>
 200a55c:	200de740 	call	200de74 <__ltdf2>
 200a560:	103fda0e 	bge	r2,zero,200a4cc <strtof+0x7c>
 200a564:	003fdc06 	br	200a4d8 <strtof+0x88>
 200a568:	200dd640 	call	200dd64 <__gtdf2>
 200a56c:	00bfd70e 	bge	zero,r2,200a4cc <strtof+0x7c>
 200a570:	003fee06 	br	200a52c <strtof+0xdc>

0200a574 <strtod>:
 200a574:	01808074 	movhi	r6,513
 200a578:	31899604 	addi	r6,r6,9816
 200a57c:	2007883a 	mov	r3,r4
 200a580:	31000017 	ldw	r4,0(r6)
 200a584:	280d883a 	mov	r6,r5
 200a588:	180b883a 	mov	r5,r3
 200a58c:	2008f6c1 	jmpi	2008f6c <_strtod_r>

0200a590 <_strtol_r>:
 200a590:	defff304 	addi	sp,sp,-52
 200a594:	00808074 	movhi	r2,513
 200a598:	10899504 	addi	r2,r2,9812
 200a59c:	dcc00615 	stw	r19,24(sp)
 200a5a0:	14c00017 	ldw	r19,0(r2)
 200a5a4:	ddc00a15 	stw	r23,40(sp)
 200a5a8:	dc000315 	stw	r16,12(sp)
 200a5ac:	dfc00c15 	stw	ra,48(sp)
 200a5b0:	df000b15 	stw	fp,44(sp)
 200a5b4:	dd800915 	stw	r22,36(sp)
 200a5b8:	dd400815 	stw	r21,32(sp)
 200a5bc:	dd000715 	stw	r20,28(sp)
 200a5c0:	dc800515 	stw	r18,20(sp)
 200a5c4:	dc400415 	stw	r17,16(sp)
 200a5c8:	282f883a 	mov	r23,r5
 200a5cc:	d9000015 	stw	r4,0(sp)
 200a5d0:	d9800115 	stw	r6,4(sp)
 200a5d4:	2821883a 	mov	r16,r5
 200a5d8:	84400007 	ldb	r17,0(r16)
 200a5dc:	84000044 	addi	r16,r16,1
 200a5e0:	9c47883a 	add	r3,r19,r17
 200a5e4:	18800003 	ldbu	r2,0(r3)
 200a5e8:	1080020c 	andi	r2,r2,8
 200a5ec:	103ffa1e 	bne	r2,zero,200a5d8 <_strtol_r+0x48>
 200a5f0:	00800b44 	movi	r2,45
 200a5f4:	88805c26 	beq	r17,r2,200a768 <_strtol_r+0x1d8>
 200a5f8:	00800ac4 	movi	r2,43
 200a5fc:	88805726 	beq	r17,r2,200a75c <_strtol_r+0x1cc>
 200a600:	0039883a 	mov	fp,zero
 200a604:	3807003a 	cmpeq	r3,r7,zero
 200a608:	1800431e 	bne	r3,zero,200a718 <_strtol_r+0x188>
 200a60c:	00800404 	movi	r2,16
 200a610:	38804126 	beq	r7,r2,200a718 <_strtol_r+0x188>
 200a614:	3829883a 	mov	r20,r7
 200a618:	e02cc03a 	cmpne	r22,fp,zero
 200a61c:	b0004b1e 	bne	r22,zero,200a74c <_strtol_r+0x1bc>
 200a620:	04a00034 	movhi	r18,32768
 200a624:	94bfffc4 	addi	r18,r18,-1
 200a628:	9009883a 	mov	r4,r18
 200a62c:	a00b883a 	mov	r5,r20
 200a630:	d9c00215 	stw	r7,8(sp)
 200a634:	200e4a00 	call	200e4a0 <__umodsi3>
 200a638:	9009883a 	mov	r4,r18
 200a63c:	a00b883a 	mov	r5,r20
 200a640:	102b883a 	mov	r21,r2
 200a644:	200e4980 	call	200e498 <__udivsi3>
 200a648:	1011883a 	mov	r8,r2
 200a64c:	9c45883a 	add	r2,r19,r17
 200a650:	11000003 	ldbu	r4,0(r2)
 200a654:	000b883a 	mov	r5,zero
 200a658:	000d883a 	mov	r6,zero
 200a65c:	20c0010c 	andi	r3,r4,4
 200a660:	d9c00217 	ldw	r7,8(sp)
 200a664:	18000e26 	beq	r3,zero,200a6a0 <_strtol_r+0x110>
 200a668:	88fff404 	addi	r3,r17,-48
 200a66c:	19c0140e 	bge	r3,r7,200a6c0 <_strtol_r+0x130>
 200a670:	30003116 	blt	r6,zero,200a738 <_strtol_r+0x1a8>
 200a674:	41403036 	bltu	r8,r5,200a738 <_strtol_r+0x1a8>
 200a678:	2a002e26 	beq	r5,r8,200a734 <_strtol_r+0x1a4>
 200a67c:	2d05383a 	mul	r2,r5,r20
 200a680:	01800044 	movi	r6,1
 200a684:	10cb883a 	add	r5,r2,r3
 200a688:	84400007 	ldb	r17,0(r16)
 200a68c:	84000044 	addi	r16,r16,1
 200a690:	9c45883a 	add	r2,r19,r17
 200a694:	11000003 	ldbu	r4,0(r2)
 200a698:	20c0010c 	andi	r3,r4,4
 200a69c:	183ff21e 	bne	r3,zero,200a668 <_strtol_r+0xd8>
 200a6a0:	208000cc 	andi	r2,r4,3
 200a6a4:	10000626 	beq	r2,zero,200a6c0 <_strtol_r+0x130>
 200a6a8:	2080004c 	andi	r2,r4,1
 200a6ac:	1005003a 	cmpeq	r2,r2,zero
 200a6b0:	1000231e 	bne	r2,zero,200a740 <_strtol_r+0x1b0>
 200a6b4:	00800dc4 	movi	r2,55
 200a6b8:	8887c83a 	sub	r3,r17,r2
 200a6bc:	19ffec16 	blt	r3,r7,200a670 <_strtol_r+0xe0>
 200a6c0:	30002d16 	blt	r6,zero,200a778 <_strtol_r+0x1e8>
 200a6c4:	b000231e 	bne	r22,zero,200a754 <_strtol_r+0x1c4>
 200a6c8:	2807883a 	mov	r3,r5
 200a6cc:	d8800117 	ldw	r2,4(sp)
 200a6d0:	10000426 	beq	r2,zero,200a6e4 <_strtol_r+0x154>
 200a6d4:	30000126 	beq	r6,zero,200a6dc <_strtol_r+0x14c>
 200a6d8:	85ffffc4 	addi	r23,r16,-1
 200a6dc:	d9000117 	ldw	r4,4(sp)
 200a6e0:	25c00015 	stw	r23,0(r4)
 200a6e4:	1805883a 	mov	r2,r3
 200a6e8:	dfc00c17 	ldw	ra,48(sp)
 200a6ec:	df000b17 	ldw	fp,44(sp)
 200a6f0:	ddc00a17 	ldw	r23,40(sp)
 200a6f4:	dd800917 	ldw	r22,36(sp)
 200a6f8:	dd400817 	ldw	r21,32(sp)
 200a6fc:	dd000717 	ldw	r20,28(sp)
 200a700:	dcc00617 	ldw	r19,24(sp)
 200a704:	dc800517 	ldw	r18,20(sp)
 200a708:	dc400417 	ldw	r17,16(sp)
 200a70c:	dc000317 	ldw	r16,12(sp)
 200a710:	dec00d04 	addi	sp,sp,52
 200a714:	f800283a 	ret
 200a718:	00800c04 	movi	r2,48
 200a71c:	88801d26 	beq	r17,r2,200a794 <_strtol_r+0x204>
 200a720:	183fbc26 	beq	r3,zero,200a614 <_strtol_r+0x84>
 200a724:	00800c04 	movi	r2,48
 200a728:	88802726 	beq	r17,r2,200a7c8 <_strtol_r+0x238>
 200a72c:	01c00284 	movi	r7,10
 200a730:	003fb806 	br	200a614 <_strtol_r+0x84>
 200a734:	a8ffd10e 	bge	r21,r3,200a67c <_strtol_r+0xec>
 200a738:	01bfffc4 	movi	r6,-1
 200a73c:	003fd206 	br	200a688 <_strtol_r+0xf8>
 200a740:	008015c4 	movi	r2,87
 200a744:	8887c83a 	sub	r3,r17,r2
 200a748:	003fdc06 	br	200a6bc <_strtol_r+0x12c>
 200a74c:	04a00034 	movhi	r18,32768
 200a750:	003fb506 	br	200a628 <_strtol_r+0x98>
 200a754:	0147c83a 	sub	r3,zero,r5
 200a758:	003fdc06 	br	200a6cc <_strtol_r+0x13c>
 200a75c:	84400007 	ldb	r17,0(r16)
 200a760:	84000044 	addi	r16,r16,1
 200a764:	003fa606 	br	200a600 <_strtol_r+0x70>
 200a768:	84400007 	ldb	r17,0(r16)
 200a76c:	07000044 	movi	fp,1
 200a770:	84000044 	addi	r16,r16,1
 200a774:	003fa306 	br	200a604 <_strtol_r+0x74>
 200a778:	e005003a 	cmpeq	r2,fp,zero
 200a77c:	10000f1e 	bne	r2,zero,200a7bc <_strtol_r+0x22c>
 200a780:	00e00034 	movhi	r3,32768
 200a784:	d9000017 	ldw	r4,0(sp)
 200a788:	00800884 	movi	r2,34
 200a78c:	20800015 	stw	r2,0(r4)
 200a790:	003fce06 	br	200a6cc <_strtol_r+0x13c>
 200a794:	81000007 	ldb	r4,0(r16)
 200a798:	00801e04 	movi	r2,120
 200a79c:	20800226 	beq	r4,r2,200a7a8 <_strtol_r+0x218>
 200a7a0:	00801604 	movi	r2,88
 200a7a4:	20bfde1e 	bne	r4,r2,200a720 <_strtol_r+0x190>
 200a7a8:	84400047 	ldb	r17,1(r16)
 200a7ac:	01c00404 	movi	r7,16
 200a7b0:	84000084 	addi	r16,r16,2
 200a7b4:	3829883a 	mov	r20,r7
 200a7b8:	003f9706 	br	200a618 <_strtol_r+0x88>
 200a7bc:	00e00034 	movhi	r3,32768
 200a7c0:	18ffffc4 	addi	r3,r3,-1
 200a7c4:	003fef06 	br	200a784 <_strtol_r+0x1f4>
 200a7c8:	01c00204 	movi	r7,8
 200a7cc:	3829883a 	mov	r20,r7
 200a7d0:	003f9106 	br	200a618 <_strtol_r+0x88>

0200a7d4 <strtol>:
 200a7d4:	00808074 	movhi	r2,513
 200a7d8:	10899604 	addi	r2,r2,9816
 200a7dc:	2013883a 	mov	r9,r4
 200a7e0:	11000017 	ldw	r4,0(r2)
 200a7e4:	2805883a 	mov	r2,r5
 200a7e8:	300f883a 	mov	r7,r6
 200a7ec:	480b883a 	mov	r5,r9
 200a7f0:	100d883a 	mov	r6,r2
 200a7f4:	200a5901 	jmpi	200a590 <_strtol_r>

0200a7f8 <_strtoll_r>:
 200a7f8:	defff004 	addi	sp,sp,-64
 200a7fc:	00808074 	movhi	r2,513
 200a800:	10899504 	addi	r2,r2,9812
 200a804:	df000e15 	stw	fp,56(sp)
 200a808:	17000017 	ldw	fp,0(r2)
 200a80c:	ddc00d15 	stw	r23,52(sp)
 200a810:	dd000a15 	stw	r20,40(sp)
 200a814:	dfc00f15 	stw	ra,60(sp)
 200a818:	dd800c15 	stw	r22,48(sp)
 200a81c:	dd400b15 	stw	r21,44(sp)
 200a820:	dcc00915 	stw	r19,36(sp)
 200a824:	dc800815 	stw	r18,32(sp)
 200a828:	dc400715 	stw	r17,28(sp)
 200a82c:	dc000615 	stw	r16,24(sp)
 200a830:	d9400315 	stw	r5,12(sp)
 200a834:	d9000215 	stw	r4,8(sp)
 200a838:	d9800415 	stw	r6,16(sp)
 200a83c:	382f883a 	mov	r23,r7
 200a840:	2829883a 	mov	r20,r5
 200a844:	a4c00007 	ldb	r19,0(r20)
 200a848:	a5000044 	addi	r20,r20,1
 200a84c:	e4c7883a 	add	r3,fp,r19
 200a850:	18800003 	ldbu	r2,0(r3)
 200a854:	1080020c 	andi	r2,r2,8
 200a858:	103ffa1e 	bne	r2,zero,200a844 <_strtoll_r+0x4c>
 200a85c:	00800b44 	movi	r2,45
 200a860:	98808826 	beq	r19,r2,200aa84 <_strtoll_r+0x28c>
 200a864:	00800ac4 	movi	r2,43
 200a868:	98808326 	beq	r19,r2,200aa78 <_strtoll_r+0x280>
 200a86c:	d8000115 	stw	zero,4(sp)
 200a870:	b807003a 	cmpeq	r3,r23,zero
 200a874:	18005f1e 	bne	r3,zero,200a9f4 <_strtoll_r+0x1fc>
 200a878:	00800404 	movi	r2,16
 200a87c:	b8805d26 	beq	r23,r2,200a9f4 <_strtoll_r+0x1fc>
 200a880:	b82dd7fa 	srai	r22,r23,31
 200a884:	b82b883a 	mov	r21,r23
 200a888:	d8c00117 	ldw	r3,4(sp)
 200a88c:	1806c03a 	cmpne	r3,r3,zero
 200a890:	d8c00515 	stw	r3,20(sp)
 200a894:	1800631e 	bne	r3,zero,200aa24 <_strtoll_r+0x22c>
 200a898:	043fffc4 	movi	r16,-1
 200a89c:	04600034 	movhi	r17,32768
 200a8a0:	8c7fffc4 	addi	r17,r17,-1
 200a8a4:	880b883a 	mov	r5,r17
 200a8a8:	8009883a 	mov	r4,r16
 200a8ac:	a80d883a 	mov	r6,r21
 200a8b0:	b00f883a 	mov	r7,r22
 200a8b4:	200ca1c0 	call	200ca1c <__umoddi3>
 200a8b8:	880b883a 	mov	r5,r17
 200a8bc:	8009883a 	mov	r4,r16
 200a8c0:	b00f883a 	mov	r7,r22
 200a8c4:	a80d883a 	mov	r6,r21
 200a8c8:	d8800015 	stw	r2,0(sp)
 200a8cc:	200c4400 	call	200c440 <__udivdi3>
 200a8d0:	1023883a 	mov	r17,r2
 200a8d4:	e4c5883a 	add	r2,fp,r19
 200a8d8:	11000003 	ldbu	r4,0(r2)
 200a8dc:	1825883a 	mov	r18,r3
 200a8e0:	0015883a 	mov	r10,zero
 200a8e4:	20c0010c 	andi	r3,r4,4
 200a8e8:	0017883a 	mov	r11,zero
 200a8ec:	000f883a 	mov	r7,zero
 200a8f0:	18001a26 	beq	r3,zero,200a95c <_strtoll_r+0x164>
 200a8f4:	9c3ff404 	addi	r16,r19,-48
 200a8f8:	85c0200e 	bge	r16,r23,200a97c <_strtoll_r+0x184>
 200a8fc:	38003b16 	blt	r7,zero,200a9ec <_strtoll_r+0x1f4>
 200a900:	92c03a36 	bltu	r18,r11,200a9ec <_strtoll_r+0x1f4>
 200a904:	5c803826 	beq	r11,r18,200a9e8 <_strtoll_r+0x1f0>
 200a908:	54404c26 	beq	r10,r17,200aa3c <_strtoll_r+0x244>
 200a90c:	580b883a 	mov	r5,r11
 200a910:	5009883a 	mov	r4,r10
 200a914:	a80d883a 	mov	r6,r21
 200a918:	b00f883a 	mov	r7,r22
 200a91c:	200c3040 	call	200c304 <__muldi3>
 200a920:	8013d7fa 	srai	r9,r16,31
 200a924:	100d883a 	mov	r6,r2
 200a928:	1405883a 	add	r2,r2,r16
 200a92c:	118d803a 	cmpltu	r6,r2,r6
 200a930:	1a47883a 	add	r3,r3,r9
 200a934:	30cd883a 	add	r6,r6,r3
 200a938:	1015883a 	mov	r10,r2
 200a93c:	3017883a 	mov	r11,r6
 200a940:	01c00044 	movi	r7,1
 200a944:	a4c00007 	ldb	r19,0(r20)
 200a948:	a5000044 	addi	r20,r20,1
 200a94c:	e4c5883a 	add	r2,fp,r19
 200a950:	11000003 	ldbu	r4,0(r2)
 200a954:	20c0010c 	andi	r3,r4,4
 200a958:	183fe61e 	bne	r3,zero,200a8f4 <_strtoll_r+0xfc>
 200a95c:	208000cc 	andi	r2,r4,3
 200a960:	10000626 	beq	r2,zero,200a97c <_strtoll_r+0x184>
 200a964:	2080004c 	andi	r2,r4,1
 200a968:	1005003a 	cmpeq	r2,r2,zero
 200a96c:	1000301e 	bne	r2,zero,200aa30 <_strtoll_r+0x238>
 200a970:	02000dc4 	movi	r8,55
 200a974:	9a21c83a 	sub	r16,r19,r8
 200a978:	85ffe016 	blt	r16,r23,200a8fc <_strtoll_r+0x104>
 200a97c:	38004616 	blt	r7,zero,200aa98 <_strtoll_r+0x2a0>
 200a980:	d8800517 	ldw	r2,20(sp)
 200a984:	1000341e 	bne	r2,zero,200aa58 <_strtoll_r+0x260>
 200a988:	500b883a 	mov	r5,r10
 200a98c:	580d883a 	mov	r6,r11
 200a990:	d8c00417 	ldw	r3,16(sp)
 200a994:	18000626 	beq	r3,zero,200a9b0 <_strtoll_r+0x1b8>
 200a998:	38000226 	beq	r7,zero,200a9a4 <_strtoll_r+0x1ac>
 200a99c:	a53fffc4 	addi	r20,r20,-1
 200a9a0:	dd000315 	stw	r20,12(sp)
 200a9a4:	d8c00317 	ldw	r3,12(sp)
 200a9a8:	d8800417 	ldw	r2,16(sp)
 200a9ac:	10c00015 	stw	r3,0(r2)
 200a9b0:	2805883a 	mov	r2,r5
 200a9b4:	3007883a 	mov	r3,r6
 200a9b8:	dfc00f17 	ldw	ra,60(sp)
 200a9bc:	df000e17 	ldw	fp,56(sp)
 200a9c0:	ddc00d17 	ldw	r23,52(sp)
 200a9c4:	dd800c17 	ldw	r22,48(sp)
 200a9c8:	dd400b17 	ldw	r21,44(sp)
 200a9cc:	dd000a17 	ldw	r20,40(sp)
 200a9d0:	dcc00917 	ldw	r19,36(sp)
 200a9d4:	dc800817 	ldw	r18,32(sp)
 200a9d8:	dc400717 	ldw	r17,28(sp)
 200a9dc:	dc000617 	ldw	r16,24(sp)
 200a9e0:	dec01004 	addi	sp,sp,64
 200a9e4:	f800283a 	ret
 200a9e8:	8abfc72e 	bgeu	r17,r10,200a908 <_strtoll_r+0x110>
 200a9ec:	01ffffc4 	movi	r7,-1
 200a9f0:	003fd406 	br	200a944 <_strtoll_r+0x14c>
 200a9f4:	00800c04 	movi	r2,48
 200a9f8:	98803226 	beq	r19,r2,200aac4 <_strtoll_r+0x2cc>
 200a9fc:	183fa026 	beq	r3,zero,200a880 <_strtoll_r+0x88>
 200aa00:	00800c04 	movi	r2,48
 200aa04:	98803e26 	beq	r19,r2,200ab00 <_strtoll_r+0x308>
 200aa08:	d8c00117 	ldw	r3,4(sp)
 200aa0c:	05c00284 	movi	r23,10
 200aa10:	b82b883a 	mov	r21,r23
 200aa14:	1806c03a 	cmpne	r3,r3,zero
 200aa18:	002d883a 	mov	r22,zero
 200aa1c:	d8c00515 	stw	r3,20(sp)
 200aa20:	183f9d26 	beq	r3,zero,200a898 <_strtoll_r+0xa0>
 200aa24:	0021883a 	mov	r16,zero
 200aa28:	04600034 	movhi	r17,32768
 200aa2c:	003f9d06 	br	200a8a4 <_strtoll_r+0xac>
 200aa30:	020015c4 	movi	r8,87
 200aa34:	9a21c83a 	sub	r16,r19,r8
 200aa38:	003fcf06 	br	200a978 <_strtoll_r+0x180>
 200aa3c:	5cbfb31e 	bne	r11,r18,200a90c <_strtoll_r+0x114>
 200aa40:	d8800017 	ldw	r2,0(sp)
 200aa44:	143fb10e 	bge	r2,r16,200a90c <_strtoll_r+0x114>
 200aa48:	8815883a 	mov	r10,r17
 200aa4c:	9017883a 	mov	r11,r18
 200aa50:	01ffffc4 	movi	r7,-1
 200aa54:	003fbb06 	br	200a944 <_strtoll_r+0x14c>
 200aa58:	0009883a 	mov	r4,zero
 200aa5c:	2285c83a 	sub	r2,r4,r10
 200aa60:	2089803a 	cmpltu	r4,r4,r2
 200aa64:	02c7c83a 	sub	r3,zero,r11
 200aa68:	1909c83a 	sub	r4,r3,r4
 200aa6c:	100b883a 	mov	r5,r2
 200aa70:	200d883a 	mov	r6,r4
 200aa74:	003fc606 	br	200a990 <_strtoll_r+0x198>
 200aa78:	a4c00007 	ldb	r19,0(r20)
 200aa7c:	a5000044 	addi	r20,r20,1
 200aa80:	003f7a06 	br	200a86c <_strtoll_r+0x74>
 200aa84:	a4c00007 	ldb	r19,0(r20)
 200aa88:	00800044 	movi	r2,1
 200aa8c:	a5000044 	addi	r20,r20,1
 200aa90:	d8800115 	stw	r2,4(sp)
 200aa94:	003f7606 	br	200a870 <_strtoll_r+0x78>
 200aa98:	d8c00117 	ldw	r3,4(sp)
 200aa9c:	1805003a 	cmpeq	r2,r3,zero
 200aaa0:	1000131e 	bne	r2,zero,200aaf0 <_strtoll_r+0x2f8>
 200aaa4:	0005883a 	mov	r2,zero
 200aaa8:	00e00034 	movhi	r3,32768
 200aaac:	100b883a 	mov	r5,r2
 200aab0:	180d883a 	mov	r6,r3
 200aab4:	d8c00217 	ldw	r3,8(sp)
 200aab8:	00800884 	movi	r2,34
 200aabc:	18800015 	stw	r2,0(r3)
 200aac0:	003fb306 	br	200a990 <_strtoll_r+0x198>
 200aac4:	a1000007 	ldb	r4,0(r20)
 200aac8:	00801e04 	movi	r2,120
 200aacc:	20800226 	beq	r4,r2,200aad8 <_strtoll_r+0x2e0>
 200aad0:	00801604 	movi	r2,88
 200aad4:	20bfc91e 	bne	r4,r2,200a9fc <_strtoll_r+0x204>
 200aad8:	a4c00047 	ldb	r19,1(r20)
 200aadc:	05c00404 	movi	r23,16
 200aae0:	b82b883a 	mov	r21,r23
 200aae4:	a5000084 	addi	r20,r20,2
 200aae8:	002d883a 	mov	r22,zero
 200aaec:	003f6606 	br	200a888 <_strtoll_r+0x90>
 200aaf0:	017fffc4 	movi	r5,-1
 200aaf4:	01a00034 	movhi	r6,32768
 200aaf8:	31bfffc4 	addi	r6,r6,-1
 200aafc:	003fed06 	br	200aab4 <_strtoll_r+0x2bc>
 200ab00:	05c00204 	movi	r23,8
 200ab04:	b82b883a 	mov	r21,r23
 200ab08:	002d883a 	mov	r22,zero
 200ab0c:	003f5e06 	br	200a888 <_strtoll_r+0x90>

0200ab10 <_strtoul_r>:
 200ab10:	defff604 	addi	sp,sp,-40
 200ab14:	00808074 	movhi	r2,513
 200ab18:	10899504 	addi	r2,r2,9812
 200ab1c:	dd000415 	stw	r20,16(sp)
 200ab20:	15000017 	ldw	r20,0(r2)
 200ab24:	ddc00715 	stw	r23,28(sp)
 200ab28:	dd800615 	stw	r22,24(sp)
 200ab2c:	dd400515 	stw	r21,20(sp)
 200ab30:	dc800215 	stw	r18,8(sp)
 200ab34:	dc000015 	stw	r16,0(sp)
 200ab38:	dfc00915 	stw	ra,36(sp)
 200ab3c:	df000815 	stw	fp,32(sp)
 200ab40:	dcc00315 	stw	r19,12(sp)
 200ab44:	dc400115 	stw	r17,4(sp)
 200ab48:	282b883a 	mov	r21,r5
 200ab4c:	202f883a 	mov	r23,r4
 200ab50:	302d883a 	mov	r22,r6
 200ab54:	3825883a 	mov	r18,r7
 200ab58:	2821883a 	mov	r16,r5
 200ab5c:	84400007 	ldb	r17,0(r16)
 200ab60:	84000044 	addi	r16,r16,1
 200ab64:	a447883a 	add	r3,r20,r17
 200ab68:	18800003 	ldbu	r2,0(r3)
 200ab6c:	1080020c 	andi	r2,r2,8
 200ab70:	103ffa1e 	bne	r2,zero,200ab5c <_strtoul_r+0x4c>
 200ab74:	00800b44 	movi	r2,45
 200ab78:	88805626 	beq	r17,r2,200acd4 <_strtoul_r+0x1c4>
 200ab7c:	00800ac4 	movi	r2,43
 200ab80:	88805126 	beq	r17,r2,200acc8 <_strtoul_r+0x1b8>
 200ab84:	0039883a 	mov	fp,zero
 200ab88:	9007003a 	cmpeq	r3,r18,zero
 200ab8c:	18003b1e 	bne	r3,zero,200ac7c <_strtoul_r+0x16c>
 200ab90:	00800404 	movi	r2,16
 200ab94:	90803926 	beq	r18,r2,200ac7c <_strtoul_r+0x16c>
 200ab98:	013fffc4 	movi	r4,-1
 200ab9c:	900b883a 	mov	r5,r18
 200aba0:	200e4980 	call	200e498 <__udivsi3>
 200aba4:	013fffc4 	movi	r4,-1
 200aba8:	900b883a 	mov	r5,r18
 200abac:	1027883a 	mov	r19,r2
 200abb0:	200e4a00 	call	200e4a0 <__umodsi3>
 200abb4:	1011883a 	mov	r8,r2
 200abb8:	900f883a 	mov	r7,r18
 200abbc:	a445883a 	add	r2,r20,r17
 200abc0:	11000003 	ldbu	r4,0(r2)
 200abc4:	000b883a 	mov	r5,zero
 200abc8:	000d883a 	mov	r6,zero
 200abcc:	20c0010c 	andi	r3,r4,4
 200abd0:	18000e26 	beq	r3,zero,200ac0c <_strtoul_r+0xfc>
 200abd4:	88fff404 	addi	r3,r17,-48
 200abd8:	1c80140e 	bge	r3,r18,200ac2c <_strtoul_r+0x11c>
 200abdc:	30003316 	blt	r6,zero,200acac <_strtoul_r+0x19c>
 200abe0:	99403236 	bltu	r19,r5,200acac <_strtoul_r+0x19c>
 200abe4:	2cc03026 	beq	r5,r19,200aca8 <_strtoul_r+0x198>
 200abe8:	29c5383a 	mul	r2,r5,r7
 200abec:	01800044 	movi	r6,1
 200abf0:	10cb883a 	add	r5,r2,r3
 200abf4:	84400007 	ldb	r17,0(r16)
 200abf8:	84000044 	addi	r16,r16,1
 200abfc:	a445883a 	add	r2,r20,r17
 200ac00:	11000003 	ldbu	r4,0(r2)
 200ac04:	20c0010c 	andi	r3,r4,4
 200ac08:	183ff21e 	bne	r3,zero,200abd4 <_strtoul_r+0xc4>
 200ac0c:	208000cc 	andi	r2,r4,3
 200ac10:	10000626 	beq	r2,zero,200ac2c <_strtoul_r+0x11c>
 200ac14:	2080004c 	andi	r2,r4,1
 200ac18:	1005003a 	cmpeq	r2,r2,zero
 200ac1c:	1000251e 	bne	r2,zero,200acb4 <_strtoul_r+0x1a4>
 200ac20:	00800dc4 	movi	r2,55
 200ac24:	8887c83a 	sub	r3,r17,r2
 200ac28:	1cbfec16 	blt	r3,r18,200abdc <_strtoul_r+0xcc>
 200ac2c:	3000400e 	bge	r6,zero,200ad30 <_strtoul_r+0x220>
 200ac30:	00800884 	movi	r2,34
 200ac34:	017fffc4 	movi	r5,-1
 200ac38:	b8800015 	stw	r2,0(r23)
 200ac3c:	b0000226 	beq	r22,zero,200ac48 <_strtoul_r+0x138>
 200ac40:	30001f1e 	bne	r6,zero,200acc0 <_strtoul_r+0x1b0>
 200ac44:	b5400015 	stw	r21,0(r22)
 200ac48:	2805883a 	mov	r2,r5
 200ac4c:	dfc00917 	ldw	ra,36(sp)
 200ac50:	df000817 	ldw	fp,32(sp)
 200ac54:	ddc00717 	ldw	r23,28(sp)
 200ac58:	dd800617 	ldw	r22,24(sp)
 200ac5c:	dd400517 	ldw	r21,20(sp)
 200ac60:	dd000417 	ldw	r20,16(sp)
 200ac64:	dcc00317 	ldw	r19,12(sp)
 200ac68:	dc800217 	ldw	r18,8(sp)
 200ac6c:	dc400117 	ldw	r17,4(sp)
 200ac70:	dc000017 	ldw	r16,0(sp)
 200ac74:	dec00a04 	addi	sp,sp,40
 200ac78:	f800283a 	ret
 200ac7c:	00800c04 	movi	r2,48
 200ac80:	88801826 	beq	r17,r2,200ace4 <_strtoul_r+0x1d4>
 200ac84:	183fc426 	beq	r3,zero,200ab98 <_strtoul_r+0x88>
 200ac88:	00800c04 	movi	r2,48
 200ac8c:	88802226 	beq	r17,r2,200ad18 <_strtoul_r+0x208>
 200ac90:	04800284 	movi	r18,10
 200ac94:	900f883a 	mov	r7,r18
 200ac98:	04c666b4 	movhi	r19,6554
 200ac9c:	9ce66644 	addi	r19,r19,-26215
 200aca0:	02000144 	movi	r8,5
 200aca4:	003fc506 	br	200abbc <_strtoul_r+0xac>
 200aca8:	40ffcf0e 	bge	r8,r3,200abe8 <_strtoul_r+0xd8>
 200acac:	01bfffc4 	movi	r6,-1
 200acb0:	003fd006 	br	200abf4 <_strtoul_r+0xe4>
 200acb4:	008015c4 	movi	r2,87
 200acb8:	8887c83a 	sub	r3,r17,r2
 200acbc:	003fda06 	br	200ac28 <_strtoul_r+0x118>
 200acc0:	857fffc4 	addi	r21,r16,-1
 200acc4:	003fdf06 	br	200ac44 <_strtoul_r+0x134>
 200acc8:	84400007 	ldb	r17,0(r16)
 200accc:	84000044 	addi	r16,r16,1
 200acd0:	003fac06 	br	200ab84 <_strtoul_r+0x74>
 200acd4:	84400007 	ldb	r17,0(r16)
 200acd8:	07000044 	movi	fp,1
 200acdc:	84000044 	addi	r16,r16,1
 200ace0:	003fa906 	br	200ab88 <_strtoul_r+0x78>
 200ace4:	81000007 	ldb	r4,0(r16)
 200ace8:	00801e04 	movi	r2,120
 200acec:	20800226 	beq	r4,r2,200acf8 <_strtoul_r+0x1e8>
 200acf0:	00801604 	movi	r2,88
 200acf4:	20bfe31e 	bne	r4,r2,200ac84 <_strtoul_r+0x174>
 200acf8:	84400047 	ldb	r17,1(r16)
 200acfc:	04800404 	movi	r18,16
 200ad00:	84000084 	addi	r16,r16,2
 200ad04:	900f883a 	mov	r7,r18
 200ad08:	04c40034 	movhi	r19,4096
 200ad0c:	9cffffc4 	addi	r19,r19,-1
 200ad10:	020003c4 	movi	r8,15
 200ad14:	003fa906 	br	200abbc <_strtoul_r+0xac>
 200ad18:	04800204 	movi	r18,8
 200ad1c:	900f883a 	mov	r7,r18
 200ad20:	04c80034 	movhi	r19,8192
 200ad24:	9cffffc4 	addi	r19,r19,-1
 200ad28:	020001c4 	movi	r8,7
 200ad2c:	003fa306 	br	200abbc <_strtoul_r+0xac>
 200ad30:	e005003a 	cmpeq	r2,fp,zero
 200ad34:	103fc11e 	bne	r2,zero,200ac3c <_strtoul_r+0x12c>
 200ad38:	014bc83a 	sub	r5,zero,r5
 200ad3c:	003fbf06 	br	200ac3c <_strtoul_r+0x12c>

0200ad40 <strtoul>:
 200ad40:	00808074 	movhi	r2,513
 200ad44:	10899604 	addi	r2,r2,9816
 200ad48:	2013883a 	mov	r9,r4
 200ad4c:	11000017 	ldw	r4,0(r2)
 200ad50:	2805883a 	mov	r2,r5
 200ad54:	300f883a 	mov	r7,r6
 200ad58:	480b883a 	mov	r5,r9
 200ad5c:	100d883a 	mov	r6,r2
 200ad60:	200ab101 	jmpi	200ab10 <_strtoul_r>

0200ad64 <_strtoull_r>:
 200ad64:	defff104 	addi	sp,sp,-60
 200ad68:	00808074 	movhi	r2,513
 200ad6c:	10899504 	addi	r2,r2,9812
 200ad70:	df000d15 	stw	fp,52(sp)
 200ad74:	17000017 	ldw	fp,0(r2)
 200ad78:	ddc00c15 	stw	r23,48(sp)
 200ad7c:	dcc00815 	stw	r19,32(sp)
 200ad80:	dfc00e15 	stw	ra,56(sp)
 200ad84:	dd800b15 	stw	r22,44(sp)
 200ad88:	dd400a15 	stw	r21,40(sp)
 200ad8c:	dd000915 	stw	r20,36(sp)
 200ad90:	dc800715 	stw	r18,28(sp)
 200ad94:	dc400615 	stw	r17,24(sp)
 200ad98:	dc000515 	stw	r16,20(sp)
 200ad9c:	d9400215 	stw	r5,8(sp)
 200ada0:	d9000115 	stw	r4,4(sp)
 200ada4:	d9800315 	stw	r6,12(sp)
 200ada8:	382f883a 	mov	r23,r7
 200adac:	2827883a 	mov	r19,r5
 200adb0:	9d000007 	ldb	r20,0(r19)
 200adb4:	9cc00044 	addi	r19,r19,1
 200adb8:	e507883a 	add	r3,fp,r20
 200adbc:	18800003 	ldbu	r2,0(r3)
 200adc0:	1080020c 	andi	r2,r2,8
 200adc4:	103ffa1e 	bne	r2,zero,200adb0 <_strtoull_r+0x4c>
 200adc8:	00800b44 	movi	r2,45
 200adcc:	a0807a26 	beq	r20,r2,200afb8 <_strtoull_r+0x254>
 200add0:	00800ac4 	movi	r2,43
 200add4:	a0807526 	beq	r20,r2,200afac <_strtoull_r+0x248>
 200add8:	d8000015 	stw	zero,0(sp)
 200addc:	b807003a 	cmpeq	r3,r23,zero
 200ade0:	18005a1e 	bne	r3,zero,200af4c <_strtoull_r+0x1e8>
 200ade4:	00800404 	movi	r2,16
 200ade8:	b8805826 	beq	r23,r2,200af4c <_strtoull_r+0x1e8>
 200adec:	b82dd7fa 	srai	r22,r23,31
 200adf0:	043fffc4 	movi	r16,-1
 200adf4:	8009883a 	mov	r4,r16
 200adf8:	800b883a 	mov	r5,r16
 200adfc:	b80d883a 	mov	r6,r23
 200ae00:	b00f883a 	mov	r7,r22
 200ae04:	200c4400 	call	200c440 <__udivdi3>
 200ae08:	8009883a 	mov	r4,r16
 200ae0c:	800b883a 	mov	r5,r16
 200ae10:	b80d883a 	mov	r6,r23
 200ae14:	b00f883a 	mov	r7,r22
 200ae18:	1023883a 	mov	r17,r2
 200ae1c:	1825883a 	mov	r18,r3
 200ae20:	200ca1c0 	call	200ca1c <__umoddi3>
 200ae24:	b82b883a 	mov	r21,r23
 200ae28:	1019883a 	mov	r12,r2
 200ae2c:	e505883a 	add	r2,fp,r20
 200ae30:	11000003 	ldbu	r4,0(r2)
 200ae34:	0015883a 	mov	r10,zero
 200ae38:	0017883a 	mov	r11,zero
 200ae3c:	20c0010c 	andi	r3,r4,4
 200ae40:	000d883a 	mov	r6,zero
 200ae44:	18001c26 	beq	r3,zero,200aeb8 <_strtoull_r+0x154>
 200ae48:	a43ff404 	addi	r16,r20,-48
 200ae4c:	85c0220e 	bge	r16,r23,200aed8 <_strtoull_r+0x174>
 200ae50:	30003c16 	blt	r6,zero,200af44 <_strtoull_r+0x1e0>
 200ae54:	92c03b36 	bltu	r18,r11,200af44 <_strtoull_r+0x1e0>
 200ae58:	5c803926 	beq	r11,r18,200af40 <_strtoull_r+0x1dc>
 200ae5c:	54404c26 	beq	r10,r17,200af90 <_strtoull_r+0x22c>
 200ae60:	580b883a 	mov	r5,r11
 200ae64:	5009883a 	mov	r4,r10
 200ae68:	a80d883a 	mov	r6,r21
 200ae6c:	b00f883a 	mov	r7,r22
 200ae70:	db000415 	stw	r12,16(sp)
 200ae74:	200c3040 	call	200c304 <__muldi3>
 200ae78:	8013d7fa 	srai	r9,r16,31
 200ae7c:	100d883a 	mov	r6,r2
 200ae80:	1405883a 	add	r2,r2,r16
 200ae84:	118d803a 	cmpltu	r6,r2,r6
 200ae88:	1a47883a 	add	r3,r3,r9
 200ae8c:	db000417 	ldw	r12,16(sp)
 200ae90:	30cd883a 	add	r6,r6,r3
 200ae94:	3017883a 	mov	r11,r6
 200ae98:	1015883a 	mov	r10,r2
 200ae9c:	01800044 	movi	r6,1
 200aea0:	9d000007 	ldb	r20,0(r19)
 200aea4:	9cc00044 	addi	r19,r19,1
 200aea8:	e505883a 	add	r2,fp,r20
 200aeac:	11000003 	ldbu	r4,0(r2)
 200aeb0:	20c0010c 	andi	r3,r4,4
 200aeb4:	183fe41e 	bne	r3,zero,200ae48 <_strtoull_r+0xe4>
 200aeb8:	208000cc 	andi	r2,r4,3
 200aebc:	10000626 	beq	r2,zero,200aed8 <_strtoull_r+0x174>
 200aec0:	2080004c 	andi	r2,r4,1
 200aec4:	1005003a 	cmpeq	r2,r2,zero
 200aec8:	10002e1e 	bne	r2,zero,200af84 <_strtoull_r+0x220>
 200aecc:	02000dc4 	movi	r8,55
 200aed0:	a221c83a 	sub	r16,r20,r8
 200aed4:	85ffde16 	blt	r16,r23,200ae50 <_strtoull_r+0xec>
 200aed8:	3000530e 	bge	r6,zero,200b028 <_strtoull_r+0x2c4>
 200aedc:	d8c00117 	ldw	r3,4(sp)
 200aee0:	02bfffc4 	movi	r10,-1
 200aee4:	00800884 	movi	r2,34
 200aee8:	5017883a 	mov	r11,r10
 200aeec:	18800015 	stw	r2,0(r3)
 200aef0:	d8800317 	ldw	r2,12(sp)
 200aef4:	10000426 	beq	r2,zero,200af08 <_strtoull_r+0x1a4>
 200aef8:	3000291e 	bne	r6,zero,200afa0 <_strtoull_r+0x23c>
 200aefc:	d8800217 	ldw	r2,8(sp)
 200af00:	d8c00317 	ldw	r3,12(sp)
 200af04:	18800015 	stw	r2,0(r3)
 200af08:	5005883a 	mov	r2,r10
 200af0c:	5807883a 	mov	r3,r11
 200af10:	dfc00e17 	ldw	ra,56(sp)
 200af14:	df000d17 	ldw	fp,52(sp)
 200af18:	ddc00c17 	ldw	r23,48(sp)
 200af1c:	dd800b17 	ldw	r22,44(sp)
 200af20:	dd400a17 	ldw	r21,40(sp)
 200af24:	dd000917 	ldw	r20,36(sp)
 200af28:	dcc00817 	ldw	r19,32(sp)
 200af2c:	dc800717 	ldw	r18,28(sp)
 200af30:	dc400617 	ldw	r17,24(sp)
 200af34:	dc000517 	ldw	r16,20(sp)
 200af38:	dec00f04 	addi	sp,sp,60
 200af3c:	f800283a 	ret
 200af40:	8abfc62e 	bgeu	r17,r10,200ae5c <_strtoull_r+0xf8>
 200af44:	01bfffc4 	movi	r6,-1
 200af48:	003fd506 	br	200aea0 <_strtoull_r+0x13c>
 200af4c:	00800c04 	movi	r2,48
 200af50:	a0801e26 	beq	r20,r2,200afcc <_strtoull_r+0x268>
 200af54:	183fa526 	beq	r3,zero,200adec <_strtoull_r+0x88>
 200af58:	00800c04 	movi	r2,48
 200af5c:	a0802a26 	beq	r20,r2,200b008 <_strtoull_r+0x2a4>
 200af60:	05c00284 	movi	r23,10
 200af64:	b82b883a 	mov	r21,r23
 200af68:	046666b4 	movhi	r17,39322
 200af6c:	8c666644 	addi	r17,r17,-26215
 200af70:	002d883a 	mov	r22,zero
 200af74:	048666b4 	movhi	r18,6554
 200af78:	94a66644 	addi	r18,r18,-26215
 200af7c:	03000144 	movi	r12,5
 200af80:	003faa06 	br	200ae2c <_strtoull_r+0xc8>
 200af84:	020015c4 	movi	r8,87
 200af88:	a221c83a 	sub	r16,r20,r8
 200af8c:	003fd106 	br	200aed4 <_strtoull_r+0x170>
 200af90:	5cbfb31e 	bne	r11,r18,200ae60 <_strtoull_r+0xfc>
 200af94:	643fb20e 	bge	r12,r16,200ae60 <_strtoull_r+0xfc>
 200af98:	01bfffc4 	movi	r6,-1
 200af9c:	003fc006 	br	200aea0 <_strtoull_r+0x13c>
 200afa0:	9cffffc4 	addi	r19,r19,-1
 200afa4:	dcc00215 	stw	r19,8(sp)
 200afa8:	003fd406 	br	200aefc <_strtoull_r+0x198>
 200afac:	9d000007 	ldb	r20,0(r19)
 200afb0:	9cc00044 	addi	r19,r19,1
 200afb4:	003f8806 	br	200add8 <_strtoull_r+0x74>
 200afb8:	9d000007 	ldb	r20,0(r19)
 200afbc:	00800044 	movi	r2,1
 200afc0:	9cc00044 	addi	r19,r19,1
 200afc4:	d8800015 	stw	r2,0(sp)
 200afc8:	003f8406 	br	200addc <_strtoull_r+0x78>
 200afcc:	99000007 	ldb	r4,0(r19)
 200afd0:	00801e04 	movi	r2,120
 200afd4:	20800226 	beq	r4,r2,200afe0 <_strtoull_r+0x27c>
 200afd8:	00801604 	movi	r2,88
 200afdc:	20bfdd1e 	bne	r4,r2,200af54 <_strtoull_r+0x1f0>
 200afe0:	9d000047 	ldb	r20,1(r19)
 200afe4:	05c00404 	movi	r23,16
 200afe8:	b82b883a 	mov	r21,r23
 200afec:	047fffc4 	movi	r17,-1
 200aff0:	9cc00084 	addi	r19,r19,2
 200aff4:	002d883a 	mov	r22,zero
 200aff8:	04840034 	movhi	r18,4096
 200affc:	94bfffc4 	addi	r18,r18,-1
 200b000:	030003c4 	movi	r12,15
 200b004:	003f8906 	br	200ae2c <_strtoull_r+0xc8>
 200b008:	05c00204 	movi	r23,8
 200b00c:	b82b883a 	mov	r21,r23
 200b010:	047fffc4 	movi	r17,-1
 200b014:	002d883a 	mov	r22,zero
 200b018:	04880034 	movhi	r18,8192
 200b01c:	94bfffc4 	addi	r18,r18,-1
 200b020:	030001c4 	movi	r12,7
 200b024:	003f8106 	br	200ae2c <_strtoull_r+0xc8>
 200b028:	d8c00017 	ldw	r3,0(sp)
 200b02c:	1805003a 	cmpeq	r2,r3,zero
 200b030:	103faf1e 	bne	r2,zero,200aef0 <_strtoull_r+0x18c>
 200b034:	0009883a 	mov	r4,zero
 200b038:	2285c83a 	sub	r2,r4,r10
 200b03c:	02c7c83a 	sub	r3,zero,r11
 200b040:	2089803a 	cmpltu	r4,r4,r2
 200b044:	1909c83a 	sub	r4,r3,r4
 200b048:	1015883a 	mov	r10,r2
 200b04c:	2017883a 	mov	r11,r4
 200b050:	003fa706 	br	200aef0 <_strtoull_r+0x18c>

0200b054 <__submore>:
 200b054:	defffa04 	addi	sp,sp,-24
 200b058:	28c00c17 	ldw	r3,48(r5)
 200b05c:	dc800215 	stw	r18,8(sp)
 200b060:	2825883a 	mov	r18,r5
 200b064:	dc000015 	stw	r16,0(sp)
 200b068:	90801004 	addi	r2,r18,64
 200b06c:	04010004 	movi	r16,1024
 200b070:	dfc00515 	stw	ra,20(sp)
 200b074:	dd000415 	stw	r20,16(sp)
 200b078:	dcc00315 	stw	r19,12(sp)
 200b07c:	dc400115 	stw	r17,4(sp)
 200b080:	800b883a 	mov	r5,r16
 200b084:	18801b26 	beq	r3,r2,200b0f4 <__submore+0xa0>
 200b088:	94400d17 	ldw	r17,52(r18)
 200b08c:	180b883a 	mov	r5,r3
 200b090:	8c69883a 	add	r20,r17,r17
 200b094:	a00d883a 	mov	r6,r20
 200b098:	20082580 	call	2008258 <_realloc_r>
 200b09c:	1467883a 	add	r19,r2,r17
 200b0a0:	1021883a 	mov	r16,r2
 200b0a4:	880d883a 	mov	r6,r17
 200b0a8:	9809883a 	mov	r4,r19
 200b0ac:	100b883a 	mov	r5,r2
 200b0b0:	10000e26 	beq	r2,zero,200b0ec <__submore+0x98>
 200b0b4:	200704c0 	call	200704c <memcpy>
 200b0b8:	000d883a 	mov	r6,zero
 200b0bc:	95000d15 	stw	r20,52(r18)
 200b0c0:	94c00015 	stw	r19,0(r18)
 200b0c4:	94000c15 	stw	r16,48(r18)
 200b0c8:	3005883a 	mov	r2,r6
 200b0cc:	dfc00517 	ldw	ra,20(sp)
 200b0d0:	dd000417 	ldw	r20,16(sp)
 200b0d4:	dcc00317 	ldw	r19,12(sp)
 200b0d8:	dc800217 	ldw	r18,8(sp)
 200b0dc:	dc400117 	ldw	r17,4(sp)
 200b0e0:	dc000017 	ldw	r16,0(sp)
 200b0e4:	dec00604 	addi	sp,sp,24
 200b0e8:	f800283a 	ret
 200b0ec:	01bfffc4 	movi	r6,-1
 200b0f0:	003ff506 	br	200b0c8 <__submore+0x74>
 200b0f4:	20067280 	call	2006728 <_malloc_r>
 200b0f8:	1009883a 	mov	r4,r2
 200b0fc:	1140ff44 	addi	r5,r2,1021
 200b100:	000d883a 	mov	r6,zero
 200b104:	103ff926 	beq	r2,zero,200b0ec <__submore+0x98>
 200b108:	90801083 	ldbu	r2,66(r18)
 200b10c:	94000d15 	stw	r16,52(r18)
 200b110:	91000c15 	stw	r4,48(r18)
 200b114:	28800085 	stb	r2,2(r5)
 200b118:	90c01043 	ldbu	r3,65(r18)
 200b11c:	28c00045 	stb	r3,1(r5)
 200b120:	90801003 	ldbu	r2,64(r18)
 200b124:	2080ff45 	stb	r2,1021(r4)
 200b128:	91400015 	stw	r5,0(r18)
 200b12c:	003fe606 	br	200b0c8 <__submore+0x74>

0200b130 <_ungetc_r>:
 200b130:	defffc04 	addi	sp,sp,-16
 200b134:	00bfffc4 	movi	r2,-1
 200b138:	dc400215 	stw	r17,8(sp)
 200b13c:	dc000115 	stw	r16,4(sp)
 200b140:	dfc00315 	stw	ra,12(sp)
 200b144:	2821883a 	mov	r16,r5
 200b148:	2023883a 	mov	r17,r4
 200b14c:	28801826 	beq	r5,r2,200b1b0 <_ungetc_r+0x80>
 200b150:	20000226 	beq	r4,zero,200b15c <_ungetc_r+0x2c>
 200b154:	20800e17 	ldw	r2,56(r4)
 200b158:	10001b26 	beq	r2,zero,200b1c8 <_ungetc_r+0x98>
 200b15c:	3100030b 	ldhu	r4,12(r6)
 200b160:	00bff7c4 	movi	r2,-33
 200b164:	2084703a 	and	r2,r4,r2
 200b168:	117fffcc 	andi	r5,r2,65535
 200b16c:	28c0010c 	andi	r3,r5,4
 200b170:	1009883a 	mov	r4,r2
 200b174:	3080030d 	sth	r2,12(r6)
 200b178:	18003526 	beq	r3,zero,200b250 <_ungetc_r+0x120>
 200b17c:	30800c17 	ldw	r2,48(r6)
 200b180:	84003fcc 	andi	r16,r16,255
 200b184:	10001426 	beq	r2,zero,200b1d8 <_ungetc_r+0xa8>
 200b188:	30c00117 	ldw	r3,4(r6)
 200b18c:	30800d17 	ldw	r2,52(r6)
 200b190:	1880380e 	bge	r3,r2,200b274 <_ungetc_r+0x144>
 200b194:	30c00017 	ldw	r3,0(r6)
 200b198:	19ffffc4 	addi	r7,r3,-1
 200b19c:	31c00015 	stw	r7,0(r6)
 200b1a0:	1c3fffc5 	stb	r16,-1(r3)
 200b1a4:	30800117 	ldw	r2,4(r6)
 200b1a8:	10800044 	addi	r2,r2,1
 200b1ac:	30800115 	stw	r2,4(r6)
 200b1b0:	8005883a 	mov	r2,r16
 200b1b4:	dfc00317 	ldw	ra,12(sp)
 200b1b8:	dc400217 	ldw	r17,8(sp)
 200b1bc:	dc000117 	ldw	r16,4(sp)
 200b1c0:	dec00404 	addi	sp,sp,16
 200b1c4:	f800283a 	ret
 200b1c8:	d9800015 	stw	r6,0(sp)
 200b1cc:	20055b40 	call	20055b4 <__sinit>
 200b1d0:	d9800017 	ldw	r6,0(sp)
 200b1d4:	003fe106 	br	200b15c <_ungetc_r+0x2c>
 200b1d8:	30800417 	ldw	r2,16(r6)
 200b1dc:	10002326 	beq	r2,zero,200b26c <_ungetc_r+0x13c>
 200b1e0:	31c00017 	ldw	r7,0(r6)
 200b1e4:	11c0022e 	bgeu	r2,r7,200b1f0 <_ungetc_r+0xc0>
 200b1e8:	38bfffc3 	ldbu	r2,-1(r7)
 200b1ec:	80801226 	beq	r16,r2,200b238 <_ungetc_r+0x108>
 200b1f0:	30c00117 	ldw	r3,4(r6)
 200b1f4:	00800044 	movi	r2,1
 200b1f8:	30800115 	stw	r2,4(r6)
 200b1fc:	008000c4 	movi	r2,3
 200b200:	31001004 	addi	r4,r6,64
 200b204:	31401084 	addi	r5,r6,66
 200b208:	30800d15 	stw	r2,52(r6)
 200b20c:	8005883a 	mov	r2,r16
 200b210:	30c00f15 	stw	r3,60(r6)
 200b214:	31c00e15 	stw	r7,56(r6)
 200b218:	31000c15 	stw	r4,48(r6)
 200b21c:	31400015 	stw	r5,0(r6)
 200b220:	34001085 	stb	r16,66(r6)
 200b224:	dfc00317 	ldw	ra,12(sp)
 200b228:	dc400217 	ldw	r17,8(sp)
 200b22c:	dc000117 	ldw	r16,4(sp)
 200b230:	dec00404 	addi	sp,sp,16
 200b234:	f800283a 	ret
 200b238:	30800117 	ldw	r2,4(r6)
 200b23c:	39ffffc4 	addi	r7,r7,-1
 200b240:	31c00015 	stw	r7,0(r6)
 200b244:	10800044 	addi	r2,r2,1
 200b248:	30800115 	stw	r2,4(r6)
 200b24c:	003fd806 	br	200b1b0 <_ungetc_r+0x80>
 200b250:	2880040c 	andi	r2,r5,16
 200b254:	10000d26 	beq	r2,zero,200b28c <_ungetc_r+0x15c>
 200b258:	2880020c 	andi	r2,r5,8
 200b25c:	10000d1e 	bne	r2,zero,200b294 <_ungetc_r+0x164>
 200b260:	20800114 	ori	r2,r4,4
 200b264:	3080030d 	sth	r2,12(r6)
 200b268:	003fc406 	br	200b17c <_ungetc_r+0x4c>
 200b26c:	31c00017 	ldw	r7,0(r6)
 200b270:	003fdf06 	br	200b1f0 <_ungetc_r+0xc0>
 200b274:	300b883a 	mov	r5,r6
 200b278:	8809883a 	mov	r4,r17
 200b27c:	d9800015 	stw	r6,0(sp)
 200b280:	200b0540 	call	200b054 <__submore>
 200b284:	d9800017 	ldw	r6,0(sp)
 200b288:	103fc226 	beq	r2,zero,200b194 <_ungetc_r+0x64>
 200b28c:	043fffc4 	movi	r16,-1
 200b290:	003fc706 	br	200b1b0 <_ungetc_r+0x80>
 200b294:	300b883a 	mov	r5,r6
 200b298:	8809883a 	mov	r4,r17
 200b29c:	d9800015 	stw	r6,0(sp)
 200b2a0:	200531c0 	call	200531c <_fflush_r>
 200b2a4:	d9800017 	ldw	r6,0(sp)
 200b2a8:	103ff81e 	bne	r2,zero,200b28c <_ungetc_r+0x15c>
 200b2ac:	3100030b 	ldhu	r4,12(r6)
 200b2b0:	00bffdc4 	movi	r2,-9
 200b2b4:	30000215 	stw	zero,8(r6)
 200b2b8:	2084703a 	and	r2,r4,r2
 200b2bc:	1009883a 	mov	r4,r2
 200b2c0:	3080030d 	sth	r2,12(r6)
 200b2c4:	30000615 	stw	zero,24(r6)
 200b2c8:	003fe506 	br	200b260 <_ungetc_r+0x130>

0200b2cc <ungetc>:
 200b2cc:	01808074 	movhi	r6,513
 200b2d0:	31899604 	addi	r6,r6,9816
 200b2d4:	2007883a 	mov	r3,r4
 200b2d8:	31000017 	ldw	r4,0(r6)
 200b2dc:	280d883a 	mov	r6,r5
 200b2e0:	180b883a 	mov	r5,r3
 200b2e4:	200b1301 	jmpi	200b130 <_ungetc_r>

0200b2e8 <_write_r>:
 200b2e8:	defffd04 	addi	sp,sp,-12
 200b2ec:	dc000015 	stw	r16,0(sp)
 200b2f0:	04008074 	movhi	r16,513
 200b2f4:	840c6704 	addi	r16,r16,12700
 200b2f8:	dc400115 	stw	r17,4(sp)
 200b2fc:	80000015 	stw	zero,0(r16)
 200b300:	2023883a 	mov	r17,r4
 200b304:	2809883a 	mov	r4,r5
 200b308:	300b883a 	mov	r5,r6
 200b30c:	380d883a 	mov	r6,r7
 200b310:	dfc00215 	stw	ra,8(sp)
 200b314:	200f6980 	call	200f698 <write>
 200b318:	1007883a 	mov	r3,r2
 200b31c:	00bfffc4 	movi	r2,-1
 200b320:	18800626 	beq	r3,r2,200b33c <_write_r+0x54>
 200b324:	1805883a 	mov	r2,r3
 200b328:	dfc00217 	ldw	ra,8(sp)
 200b32c:	dc400117 	ldw	r17,4(sp)
 200b330:	dc000017 	ldw	r16,0(sp)
 200b334:	dec00304 	addi	sp,sp,12
 200b338:	f800283a 	ret
 200b33c:	80800017 	ldw	r2,0(r16)
 200b340:	103ff826 	beq	r2,zero,200b324 <_write_r+0x3c>
 200b344:	88800015 	stw	r2,0(r17)
 200b348:	1805883a 	mov	r2,r3
 200b34c:	dfc00217 	ldw	ra,8(sp)
 200b350:	dc400117 	ldw	r17,4(sp)
 200b354:	dc000017 	ldw	r16,0(sp)
 200b358:	dec00304 	addi	sp,sp,12
 200b35c:	f800283a 	ret

0200b360 <_calloc_r>:
 200b360:	298b383a 	mul	r5,r5,r6
 200b364:	defffe04 	addi	sp,sp,-8
 200b368:	dc000015 	stw	r16,0(sp)
 200b36c:	dfc00115 	stw	ra,4(sp)
 200b370:	20067280 	call	2006728 <_malloc_r>
 200b374:	1021883a 	mov	r16,r2
 200b378:	01c00904 	movi	r7,36
 200b37c:	10000d26 	beq	r2,zero,200b3b4 <_calloc_r+0x54>
 200b380:	10ffff17 	ldw	r3,-4(r2)
 200b384:	1009883a 	mov	r4,r2
 200b388:	00bfff04 	movi	r2,-4
 200b38c:	1886703a 	and	r3,r3,r2
 200b390:	1887883a 	add	r3,r3,r2
 200b394:	180d883a 	mov	r6,r3
 200b398:	000b883a 	mov	r5,zero
 200b39c:	38c01736 	bltu	r7,r3,200b3fc <_calloc_r+0x9c>
 200b3a0:	008004c4 	movi	r2,19
 200b3a4:	10c00836 	bltu	r2,r3,200b3c8 <_calloc_r+0x68>
 200b3a8:	20000215 	stw	zero,8(r4)
 200b3ac:	20000015 	stw	zero,0(r4)
 200b3b0:	20000115 	stw	zero,4(r4)
 200b3b4:	8005883a 	mov	r2,r16
 200b3b8:	dfc00117 	ldw	ra,4(sp)
 200b3bc:	dc000017 	ldw	r16,0(sp)
 200b3c0:	dec00204 	addi	sp,sp,8
 200b3c4:	f800283a 	ret
 200b3c8:	008006c4 	movi	r2,27
 200b3cc:	80000015 	stw	zero,0(r16)
 200b3d0:	80000115 	stw	zero,4(r16)
 200b3d4:	81000204 	addi	r4,r16,8
 200b3d8:	10fff32e 	bgeu	r2,r3,200b3a8 <_calloc_r+0x48>
 200b3dc:	80000215 	stw	zero,8(r16)
 200b3e0:	80000315 	stw	zero,12(r16)
 200b3e4:	81000404 	addi	r4,r16,16
 200b3e8:	19ffef1e 	bne	r3,r7,200b3a8 <_calloc_r+0x48>
 200b3ec:	81000604 	addi	r4,r16,24
 200b3f0:	80000415 	stw	zero,16(r16)
 200b3f4:	80000515 	stw	zero,20(r16)
 200b3f8:	003feb06 	br	200b3a8 <_calloc_r+0x48>
 200b3fc:	20071cc0 	call	20071cc <memset>
 200b400:	8005883a 	mov	r2,r16
 200b404:	dfc00117 	ldw	ra,4(sp)
 200b408:	dc000017 	ldw	r16,0(sp)
 200b40c:	dec00204 	addi	sp,sp,8
 200b410:	f800283a 	ret

0200b414 <_close_r>:
 200b414:	defffd04 	addi	sp,sp,-12
 200b418:	dc000015 	stw	r16,0(sp)
 200b41c:	04008074 	movhi	r16,513
 200b420:	840c6704 	addi	r16,r16,12700
 200b424:	dc400115 	stw	r17,4(sp)
 200b428:	80000015 	stw	zero,0(r16)
 200b42c:	2023883a 	mov	r17,r4
 200b430:	2809883a 	mov	r4,r5
 200b434:	dfc00215 	stw	ra,8(sp)
 200b438:	200ed380 	call	200ed38 <close>
 200b43c:	1007883a 	mov	r3,r2
 200b440:	00bfffc4 	movi	r2,-1
 200b444:	18800626 	beq	r3,r2,200b460 <_close_r+0x4c>
 200b448:	1805883a 	mov	r2,r3
 200b44c:	dfc00217 	ldw	ra,8(sp)
 200b450:	dc400117 	ldw	r17,4(sp)
 200b454:	dc000017 	ldw	r16,0(sp)
 200b458:	dec00304 	addi	sp,sp,12
 200b45c:	f800283a 	ret
 200b460:	80800017 	ldw	r2,0(r16)
 200b464:	103ff826 	beq	r2,zero,200b448 <_close_r+0x34>
 200b468:	88800015 	stw	r2,0(r17)
 200b46c:	1805883a 	mov	r2,r3
 200b470:	dfc00217 	ldw	ra,8(sp)
 200b474:	dc400117 	ldw	r17,4(sp)
 200b478:	dc000017 	ldw	r16,0(sp)
 200b47c:	dec00304 	addi	sp,sp,12
 200b480:	f800283a 	ret

0200b484 <_fclose_r>:
 200b484:	defffc04 	addi	sp,sp,-16
 200b488:	dc400115 	stw	r17,4(sp)
 200b48c:	dc000015 	stw	r16,0(sp)
 200b490:	dfc00315 	stw	ra,12(sp)
 200b494:	dc800215 	stw	r18,8(sp)
 200b498:	2821883a 	mov	r16,r5
 200b49c:	2023883a 	mov	r17,r4
 200b4a0:	28002926 	beq	r5,zero,200b548 <_fclose_r+0xc4>
 200b4a4:	20055a40 	call	20055a4 <__sfp_lock_acquire>
 200b4a8:	88000226 	beq	r17,zero,200b4b4 <_fclose_r+0x30>
 200b4ac:	88800e17 	ldw	r2,56(r17)
 200b4b0:	10002d26 	beq	r2,zero,200b568 <_fclose_r+0xe4>
 200b4b4:	8080030f 	ldh	r2,12(r16)
 200b4b8:	10002226 	beq	r2,zero,200b544 <_fclose_r+0xc0>
 200b4bc:	8809883a 	mov	r4,r17
 200b4c0:	800b883a 	mov	r5,r16
 200b4c4:	200531c0 	call	200531c <_fflush_r>
 200b4c8:	1025883a 	mov	r18,r2
 200b4cc:	80800b17 	ldw	r2,44(r16)
 200b4d0:	10000426 	beq	r2,zero,200b4e4 <_fclose_r+0x60>
 200b4d4:	81400717 	ldw	r5,28(r16)
 200b4d8:	8809883a 	mov	r4,r17
 200b4dc:	103ee83a 	callr	r2
 200b4e0:	10002a16 	blt	r2,zero,200b58c <_fclose_r+0x108>
 200b4e4:	8080030b 	ldhu	r2,12(r16)
 200b4e8:	1080200c 	andi	r2,r2,128
 200b4ec:	1000231e 	bne	r2,zero,200b57c <_fclose_r+0xf8>
 200b4f0:	81400c17 	ldw	r5,48(r16)
 200b4f4:	28000526 	beq	r5,zero,200b50c <_fclose_r+0x88>
 200b4f8:	80801004 	addi	r2,r16,64
 200b4fc:	28800226 	beq	r5,r2,200b508 <_fclose_r+0x84>
 200b500:	8809883a 	mov	r4,r17
 200b504:	2005b740 	call	2005b74 <_free_r>
 200b508:	80000c15 	stw	zero,48(r16)
 200b50c:	81401117 	ldw	r5,68(r16)
 200b510:	28000326 	beq	r5,zero,200b520 <_fclose_r+0x9c>
 200b514:	8809883a 	mov	r4,r17
 200b518:	2005b740 	call	2005b74 <_free_r>
 200b51c:	80001115 	stw	zero,68(r16)
 200b520:	8000030d 	sth	zero,12(r16)
 200b524:	20055a80 	call	20055a8 <__sfp_lock_release>
 200b528:	9005883a 	mov	r2,r18
 200b52c:	dfc00317 	ldw	ra,12(sp)
 200b530:	dc800217 	ldw	r18,8(sp)
 200b534:	dc400117 	ldw	r17,4(sp)
 200b538:	dc000017 	ldw	r16,0(sp)
 200b53c:	dec00404 	addi	sp,sp,16
 200b540:	f800283a 	ret
 200b544:	20055a80 	call	20055a8 <__sfp_lock_release>
 200b548:	0025883a 	mov	r18,zero
 200b54c:	9005883a 	mov	r2,r18
 200b550:	dfc00317 	ldw	ra,12(sp)
 200b554:	dc800217 	ldw	r18,8(sp)
 200b558:	dc400117 	ldw	r17,4(sp)
 200b55c:	dc000017 	ldw	r16,0(sp)
 200b560:	dec00404 	addi	sp,sp,16
 200b564:	f800283a 	ret
 200b568:	8809883a 	mov	r4,r17
 200b56c:	20055b40 	call	20055b4 <__sinit>
 200b570:	8080030f 	ldh	r2,12(r16)
 200b574:	103fd11e 	bne	r2,zero,200b4bc <_fclose_r+0x38>
 200b578:	003ff206 	br	200b544 <_fclose_r+0xc0>
 200b57c:	81400417 	ldw	r5,16(r16)
 200b580:	8809883a 	mov	r4,r17
 200b584:	2005b740 	call	2005b74 <_free_r>
 200b588:	003fd906 	br	200b4f0 <_fclose_r+0x6c>
 200b58c:	04bfffc4 	movi	r18,-1
 200b590:	003fd406 	br	200b4e4 <_fclose_r+0x60>

0200b594 <fclose>:
 200b594:	00808074 	movhi	r2,513
 200b598:	10899604 	addi	r2,r2,9816
 200b59c:	200b883a 	mov	r5,r4
 200b5a0:	11000017 	ldw	r4,0(r2)
 200b5a4:	200b4841 	jmpi	200b484 <_fclose_r>

0200b5a8 <_fstat_r>:
 200b5a8:	defffd04 	addi	sp,sp,-12
 200b5ac:	dc000015 	stw	r16,0(sp)
 200b5b0:	04008074 	movhi	r16,513
 200b5b4:	840c6704 	addi	r16,r16,12700
 200b5b8:	dc400115 	stw	r17,4(sp)
 200b5bc:	80000015 	stw	zero,0(r16)
 200b5c0:	2023883a 	mov	r17,r4
 200b5c4:	2809883a 	mov	r4,r5
 200b5c8:	300b883a 	mov	r5,r6
 200b5cc:	dfc00215 	stw	ra,8(sp)
 200b5d0:	200eec00 	call	200eec0 <fstat>
 200b5d4:	1007883a 	mov	r3,r2
 200b5d8:	00bfffc4 	movi	r2,-1
 200b5dc:	18800626 	beq	r3,r2,200b5f8 <_fstat_r+0x50>
 200b5e0:	1805883a 	mov	r2,r3
 200b5e4:	dfc00217 	ldw	ra,8(sp)
 200b5e8:	dc400117 	ldw	r17,4(sp)
 200b5ec:	dc000017 	ldw	r16,0(sp)
 200b5f0:	dec00304 	addi	sp,sp,12
 200b5f4:	f800283a 	ret
 200b5f8:	80800017 	ldw	r2,0(r16)
 200b5fc:	103ff826 	beq	r2,zero,200b5e0 <_fstat_r+0x38>
 200b600:	88800015 	stw	r2,0(r17)
 200b604:	1805883a 	mov	r2,r3
 200b608:	dfc00217 	ldw	ra,8(sp)
 200b60c:	dc400117 	ldw	r17,4(sp)
 200b610:	dc000017 	ldw	r16,0(sp)
 200b614:	dec00304 	addi	sp,sp,12
 200b618:	f800283a 	ret

0200b61c <htinit>:
 200b61c:	28800003 	ldbu	r2,0(r5)
 200b620:	10000626 	beq	r2,zero,200b63c <htinit+0x20>
 200b624:	1105883a 	add	r2,r2,r4
 200b628:	11800005 	stb	r6,0(r2)
 200b62c:	28800043 	ldbu	r2,1(r5)
 200b630:	31800044 	addi	r6,r6,1
 200b634:	29400044 	addi	r5,r5,1
 200b638:	103ffa1e 	bne	r2,zero,200b624 <htinit+0x8>
 200b63c:	f800283a 	ret

0200b640 <__hexdig_init>:
 200b640:	defffd04 	addi	sp,sp,-12
 200b644:	dc400015 	stw	r17,0(sp)
 200b648:	04408074 	movhi	r17,513
 200b64c:	8c4c7804 	addi	r17,r17,12768
 200b650:	dcc00115 	stw	r19,4(sp)
 200b654:	8809883a 	mov	r4,r17
 200b658:	04c00684 	movi	r19,26
 200b65c:	01408074 	movhi	r5,513
 200b660:	29469604 	addi	r5,r5,6744
 200b664:	01800404 	movi	r6,16
 200b668:	dfc00215 	stw	ra,8(sp)
 200b66c:	200b61c0 	call	200b61c <htinit>
 200b670:	980d883a 	mov	r6,r19
 200b674:	8809883a 	mov	r4,r17
 200b678:	01408074 	movhi	r5,513
 200b67c:	29469904 	addi	r5,r5,6756
 200b680:	200b61c0 	call	200b61c <htinit>
 200b684:	8809883a 	mov	r4,r17
 200b688:	980d883a 	mov	r6,r19
 200b68c:	01408074 	movhi	r5,513
 200b690:	29469b04 	addi	r5,r5,6764
 200b694:	dfc00217 	ldw	ra,8(sp)
 200b698:	dcc00117 	ldw	r19,4(sp)
 200b69c:	dc400017 	ldw	r17,0(sp)
 200b6a0:	dec00304 	addi	sp,sp,12
 200b6a4:	200b61c1 	jmpi	200b61c <htinit>

0200b6a8 <rshift>:
 200b6a8:	2807d17a 	srai	r3,r5,5
 200b6ac:	20800417 	ldw	r2,16(r4)
 200b6b0:	22400504 	addi	r9,r4,20
 200b6b4:	480f883a 	mov	r7,r9
 200b6b8:	1880190e 	bge	r3,r2,200b720 <rshift+0x78>
 200b6bc:	1085883a 	add	r2,r2,r2
 200b6c0:	18c7883a 	add	r3,r3,r3
 200b6c4:	1085883a 	add	r2,r2,r2
 200b6c8:	18c7883a 	add	r3,r3,r3
 200b6cc:	294007cc 	andi	r5,r5,31
 200b6d0:	4891883a 	add	r8,r9,r2
 200b6d4:	48cd883a 	add	r6,r9,r3
 200b6d8:	28001726 	beq	r5,zero,200b738 <rshift+0x90>
 200b6dc:	30c00017 	ldw	r3,0(r6)
 200b6e0:	00800804 	movi	r2,32
 200b6e4:	31800104 	addi	r6,r6,4
 200b6e8:	1155c83a 	sub	r10,r2,r5
 200b6ec:	1946d83a 	srl	r3,r3,r5
 200b6f0:	3200092e 	bgeu	r6,r8,200b718 <rshift+0x70>
 200b6f4:	30800017 	ldw	r2,0(r6)
 200b6f8:	1284983a 	sll	r2,r2,r10
 200b6fc:	10c4b03a 	or	r2,r2,r3
 200b700:	38800015 	stw	r2,0(r7)
 200b704:	30c00017 	ldw	r3,0(r6)
 200b708:	31800104 	addi	r6,r6,4
 200b70c:	39c00104 	addi	r7,r7,4
 200b710:	1946d83a 	srl	r3,r3,r5
 200b714:	323ff736 	bltu	r6,r8,200b6f4 <rshift+0x4c>
 200b718:	38c00015 	stw	r3,0(r7)
 200b71c:	18000c1e 	bne	r3,zero,200b750 <rshift+0xa8>
 200b720:	3a45c83a 	sub	r2,r7,r9
 200b724:	1005d0ba 	srai	r2,r2,2
 200b728:	20800415 	stw	r2,16(r4)
 200b72c:	1000011e 	bne	r2,zero,200b734 <rshift+0x8c>
 200b730:	20000515 	stw	zero,20(r4)
 200b734:	f800283a 	ret
 200b738:	323ff92e 	bgeu	r6,r8,200b720 <rshift+0x78>
 200b73c:	30800017 	ldw	r2,0(r6)
 200b740:	31800104 	addi	r6,r6,4
 200b744:	38800015 	stw	r2,0(r7)
 200b748:	39c00104 	addi	r7,r7,4
 200b74c:	003ffa06 	br	200b738 <rshift+0x90>
 200b750:	39c00104 	addi	r7,r7,4
 200b754:	003ff206 	br	200b720 <rshift+0x78>

0200b758 <__gethex>:
 200b758:	defff304 	addi	sp,sp,-52
 200b75c:	dd400815 	stw	r21,32(sp)
 200b760:	dd000715 	stw	r20,28(sp)
 200b764:	dcc00615 	stw	r19,24(sp)
 200b768:	dc400415 	stw	r17,16(sp)
 200b76c:	dfc00c15 	stw	ra,48(sp)
 200b770:	df000b15 	stw	fp,44(sp)
 200b774:	ddc00a15 	stw	r23,40(sp)
 200b778:	dd800915 	stw	r22,36(sp)
 200b77c:	dc800515 	stw	r18,20(sp)
 200b780:	dc000315 	stw	r16,12(sp)
 200b784:	04408074 	movhi	r17,513
 200b788:	8c4c7804 	addi	r17,r17,12768
 200b78c:	88800c03 	ldbu	r2,48(r17)
 200b790:	202b883a 	mov	r21,r4
 200b794:	2827883a 	mov	r19,r5
 200b798:	3029883a 	mov	r20,r6
 200b79c:	d9c00115 	stw	r7,4(sp)
 200b7a0:	10006e26 	beq	r2,zero,200b95c <__gethex+0x204>
 200b7a4:	99800017 	ldw	r6,0(r19)
 200b7a8:	00800c04 	movi	r2,48
 200b7ac:	31000083 	ldbu	r4,2(r6)
 200b7b0:	30c00084 	addi	r3,r6,2
 200b7b4:	20806f1e 	bne	r4,r2,200b974 <__gethex+0x21c>
 200b7b8:	200b883a 	mov	r5,r4
 200b7bc:	3007883a 	mov	r3,r6
 200b7c0:	188000c3 	ldbu	r2,3(r3)
 200b7c4:	18c00044 	addi	r3,r3,1
 200b7c8:	1009883a 	mov	r4,r2
 200b7cc:	117ffc26 	beq	r2,r5,200b7c0 <__gethex+0x68>
 200b7d0:	1997c83a 	sub	r11,r3,r6
 200b7d4:	19400084 	addi	r5,r3,2
 200b7d8:	2445883a 	add	r2,r4,r17
 200b7dc:	10c00003 	ldbu	r3,0(r2)
 200b7e0:	18002d26 	beq	r3,zero,200b898 <__gethex+0x140>
 200b7e4:	29000003 	ldbu	r4,0(r5)
 200b7e8:	2825883a 	mov	r18,r5
 200b7ec:	000d883a 	mov	r6,zero
 200b7f0:	0013883a 	mov	r9,zero
 200b7f4:	21003fcc 	andi	r4,r4,255
 200b7f8:	2445883a 	add	r2,r4,r17
 200b7fc:	10c00003 	ldbu	r3,0(r2)
 200b800:	18000526 	beq	r3,zero,200b818 <__gethex+0xc0>
 200b804:	29400044 	addi	r5,r5,1
 200b808:	29000003 	ldbu	r4,0(r5)
 200b80c:	2445883a 	add	r2,r4,r17
 200b810:	10c00003 	ldbu	r3,0(r2)
 200b814:	183ffb1e 	bne	r3,zero,200b804 <__gethex+0xac>
 200b818:	00800b84 	movi	r2,46
 200b81c:	20805826 	beq	r4,r2,200b980 <__gethex+0x228>
 200b820:	30007a26 	beq	r6,zero,200ba0c <__gethex+0x2b4>
 200b824:	2985c83a 	sub	r2,r5,r6
 200b828:	1085883a 	add	r2,r2,r2
 200b82c:	1085883a 	add	r2,r2,r2
 200b830:	00adc83a 	sub	r22,zero,r2
 200b834:	2821883a 	mov	r16,r5
 200b838:	80c00003 	ldbu	r3,0(r16)
 200b83c:	00801404 	movi	r2,80
 200b840:	18801e26 	beq	r3,r2,200b8bc <__gethex+0x164>
 200b844:	00801c04 	movi	r2,112
 200b848:	18801c26 	beq	r3,r2,200b8bc <__gethex+0x164>
 200b84c:	800d883a 	mov	r6,r16
 200b850:	4805003a 	cmpeq	r2,r9,zero
 200b854:	99800015 	stw	r6,0(r19)
 200b858:	1000861e 	bne	r2,zero,200ba74 <__gethex+0x31c>
 200b85c:	58003d26 	beq	r11,zero,200b954 <__gethex+0x1fc>
 200b860:	0025883a 	mov	r18,zero
 200b864:	9005883a 	mov	r2,r18
 200b868:	dfc00c17 	ldw	ra,48(sp)
 200b86c:	df000b17 	ldw	fp,44(sp)
 200b870:	ddc00a17 	ldw	r23,40(sp)
 200b874:	dd800917 	ldw	r22,36(sp)
 200b878:	dd400817 	ldw	r21,32(sp)
 200b87c:	dd000717 	ldw	r20,28(sp)
 200b880:	dcc00617 	ldw	r19,24(sp)
 200b884:	dc800517 	ldw	r18,20(sp)
 200b888:	dc400417 	ldw	r17,16(sp)
 200b88c:	dc000317 	ldw	r16,12(sp)
 200b890:	dec00d04 	addi	sp,sp,52
 200b894:	f800283a 	ret
 200b898:	00800b84 	movi	r2,46
 200b89c:	20804a26 	beq	r4,r2,200b9c8 <__gethex+0x270>
 200b8a0:	2821883a 	mov	r16,r5
 200b8a4:	80c00003 	ldbu	r3,0(r16)
 200b8a8:	00801404 	movi	r2,80
 200b8ac:	2825883a 	mov	r18,r5
 200b8b0:	02400044 	movi	r9,1
 200b8b4:	002d883a 	mov	r22,zero
 200b8b8:	18bfe21e 	bne	r3,r2,200b844 <__gethex+0xec>
 200b8bc:	80c00043 	ldbu	r3,1(r16)
 200b8c0:	00800ac4 	movi	r2,43
 200b8c4:	81000044 	addi	r4,r16,1
 200b8c8:	18804a26 	beq	r3,r2,200b9f4 <__gethex+0x29c>
 200b8cc:	00800b44 	movi	r2,45
 200b8d0:	18804c26 	beq	r3,r2,200ba04 <__gethex+0x2ac>
 200b8d4:	0015883a 	mov	r10,zero
 200b8d8:	1c45883a 	add	r2,r3,r17
 200b8dc:	10800003 	ldbu	r2,0(r2)
 200b8e0:	103fda26 	beq	r2,zero,200b84c <__gethex+0xf4>
 200b8e4:	02000644 	movi	r8,25
 200b8e8:	40bfd816 	blt	r8,r2,200b84c <__gethex+0xf4>
 200b8ec:	20c00043 	ldbu	r3,1(r4)
 200b8f0:	11fffc04 	addi	r7,r2,-16
 200b8f4:	00808074 	movhi	r2,513
 200b8f8:	108c7804 	addi	r2,r2,12768
 200b8fc:	1887883a 	add	r3,r3,r2
 200b900:	18800003 	ldbu	r2,0(r3)
 200b904:	21800044 	addi	r6,r4,1
 200b908:	10000d26 	beq	r2,zero,200b940 <__gethex+0x1e8>
 200b90c:	100b883a 	mov	r5,r2
 200b910:	4080020e 	bge	r8,r2,200b91c <__gethex+0x1c4>
 200b914:	00000a06 	br	200b940 <__gethex+0x1e8>
 200b918:	41000916 	blt	r8,r4,200b940 <__gethex+0x1e8>
 200b91c:	31800044 	addi	r6,r6,1
 200b920:	30800003 	ldbu	r2,0(r6)
 200b924:	38c002a4 	muli	r3,r7,10
 200b928:	1445883a 	add	r2,r2,r17
 200b92c:	11000003 	ldbu	r4,0(r2)
 200b930:	1947883a 	add	r3,r3,r5
 200b934:	19fffc04 	addi	r7,r3,-16
 200b938:	200b883a 	mov	r5,r4
 200b93c:	203ff61e 	bne	r4,zero,200b918 <__gethex+0x1c0>
 200b940:	5005003a 	cmpeq	r2,r10,zero
 200b944:	1000011e 	bne	r2,zero,200b94c <__gethex+0x1f4>
 200b948:	01cfc83a 	sub	r7,zero,r7
 200b94c:	b1ed883a 	add	r22,r22,r7
 200b950:	003fbf06 	br	200b850 <__gethex+0xf8>
 200b954:	04800184 	movi	r18,6
 200b958:	003fc206 	br	200b864 <__gethex+0x10c>
 200b95c:	200b6400 	call	200b640 <__hexdig_init>
 200b960:	99800017 	ldw	r6,0(r19)
 200b964:	00800c04 	movi	r2,48
 200b968:	31000083 	ldbu	r4,2(r6)
 200b96c:	30c00084 	addi	r3,r6,2
 200b970:	20bf9126 	beq	r4,r2,200b7b8 <__gethex+0x60>
 200b974:	180b883a 	mov	r5,r3
 200b978:	0017883a 	mov	r11,zero
 200b97c:	003f9606 	br	200b7d8 <__gethex+0x80>
 200b980:	303fa81e 	bne	r6,zero,200b824 <__gethex+0xcc>
 200b984:	29400044 	addi	r5,r5,1
 200b988:	28800003 	ldbu	r2,0(r5)
 200b98c:	1445883a 	add	r2,r2,r17
 200b990:	10c00003 	ldbu	r3,0(r2)
 200b994:	1800ad26 	beq	r3,zero,200bc4c <__gethex+0x4f4>
 200b998:	2809883a 	mov	r4,r5
 200b99c:	21000044 	addi	r4,r4,1
 200b9a0:	20800003 	ldbu	r2,0(r4)
 200b9a4:	1445883a 	add	r2,r2,r17
 200b9a8:	10c00003 	ldbu	r3,0(r2)
 200b9ac:	183ffb1e 	bne	r3,zero,200b99c <__gethex+0x244>
 200b9b0:	2145c83a 	sub	r2,r4,r5
 200b9b4:	1085883a 	add	r2,r2,r2
 200b9b8:	1085883a 	add	r2,r2,r2
 200b9bc:	00adc83a 	sub	r22,zero,r2
 200b9c0:	200b883a 	mov	r5,r4
 200b9c4:	003f9b06 	br	200b834 <__gethex+0xdc>
 200b9c8:	29000043 	ldbu	r4,1(r5)
 200b9cc:	00808074 	movhi	r2,513
 200b9d0:	108c7804 	addi	r2,r2,12768
 200b9d4:	2c000044 	addi	r16,r5,1
 200b9d8:	2085883a 	add	r2,r4,r2
 200b9dc:	10c00003 	ldbu	r3,0(r2)
 200b9e0:	18000d1e 	bne	r3,zero,200ba18 <__gethex+0x2c0>
 200b9e4:	2825883a 	mov	r18,r5
 200b9e8:	02400044 	movi	r9,1
 200b9ec:	002d883a 	mov	r22,zero
 200b9f0:	003f9106 	br	200b838 <__gethex+0xe0>
 200b9f4:	0015883a 	mov	r10,zero
 200b9f8:	21000044 	addi	r4,r4,1
 200b9fc:	20c00003 	ldbu	r3,0(r4)
 200ba00:	003fb506 	br	200b8d8 <__gethex+0x180>
 200ba04:	02800044 	movi	r10,1
 200ba08:	003ffb06 	br	200b9f8 <__gethex+0x2a0>
 200ba0c:	2821883a 	mov	r16,r5
 200ba10:	002d883a 	mov	r22,zero
 200ba14:	003f8806 	br	200b838 <__gethex+0xe0>
 200ba18:	00800c04 	movi	r2,48
 200ba1c:	20800e1e 	bne	r4,r2,200ba58 <__gethex+0x300>
 200ba20:	2007883a 	mov	r3,r4
 200ba24:	800b883a 	mov	r5,r16
 200ba28:	29400044 	addi	r5,r5,1
 200ba2c:	29000003 	ldbu	r4,0(r5)
 200ba30:	20803fcc 	andi	r2,r4,255
 200ba34:	10fffc26 	beq	r2,r3,200ba28 <__gethex+0x2d0>
 200ba38:	1445883a 	add	r2,r2,r17
 200ba3c:	10c00003 	ldbu	r3,0(r2)
 200ba40:	1800071e 	bne	r3,zero,200ba60 <__gethex+0x308>
 200ba44:	02c00044 	movi	r11,1
 200ba48:	800d883a 	mov	r6,r16
 200ba4c:	2825883a 	mov	r18,r5
 200ba50:	5813883a 	mov	r9,r11
 200ba54:	003f6706 	br	200b7f4 <__gethex+0x9c>
 200ba58:	81000003 	ldbu	r4,0(r16)
 200ba5c:	800b883a 	mov	r5,r16
 200ba60:	800d883a 	mov	r6,r16
 200ba64:	2825883a 	mov	r18,r5
 200ba68:	02c00044 	movi	r11,1
 200ba6c:	0013883a 	mov	r9,zero
 200ba70:	003f6006 	br	200b7f4 <__gethex+0x9c>
 200ba74:	8485c83a 	sub	r2,r16,r18
 200ba78:	10bfffc4 	addi	r2,r2,-1
 200ba7c:	00c001c4 	movi	r3,7
 200ba80:	1880700e 	bge	r3,r2,200bc44 <__gethex+0x4ec>
 200ba84:	000b883a 	mov	r5,zero
 200ba88:	1005d07a 	srai	r2,r2,1
 200ba8c:	29400044 	addi	r5,r5,1
 200ba90:	18bffd16 	blt	r3,r2,200ba88 <__gethex+0x330>
 200ba94:	a809883a 	mov	r4,r21
 200ba98:	20077e40 	call	20077e4 <_Balloc>
 200ba9c:	1027883a 	mov	r19,r2
 200baa0:	10800504 	addi	r2,r2,20
 200baa4:	d8800215 	stw	r2,8(sp)
 200baa8:	9400522e 	bgeu	r18,r16,200bbf4 <__gethex+0x49c>
 200baac:	da000217 	ldw	r8,8(sp)
 200bab0:	800b883a 	mov	r5,r16
 200bab4:	000f883a 	mov	r7,zero
 200bab8:	0009883a 	mov	r4,zero
 200babc:	02400b84 	movi	r9,46
 200bac0:	02800804 	movi	r10,32
 200bac4:	297fffc4 	addi	r5,r5,-1
 200bac8:	28c00003 	ldbu	r3,0(r5)
 200bacc:	1a400826 	beq	r3,r9,200baf0 <__gethex+0x398>
 200bad0:	380d883a 	mov	r6,r7
 200bad4:	3a802726 	beq	r7,r10,200bb74 <__gethex+0x41c>
 200bad8:	39c00104 	addi	r7,r7,4
 200badc:	1c47883a 	add	r3,r3,r17
 200bae0:	18800003 	ldbu	r2,0(r3)
 200bae4:	108003cc 	andi	r2,r2,15
 200bae8:	1184983a 	sll	r2,r2,r6
 200baec:	2088b03a 	or	r4,r4,r2
 200baf0:	917ff436 	bltu	r18,r5,200bac4 <__gethex+0x36c>
 200baf4:	d8c00217 	ldw	r3,8(sp)
 200baf8:	40800104 	addi	r2,r8,4
 200bafc:	41000015 	stw	r4,0(r8)
 200bb00:	10c5c83a 	sub	r2,r2,r3
 200bb04:	1021d0ba 	srai	r16,r2,2
 200bb08:	9c000415 	stw	r16,16(r19)
 200bb0c:	200728c0 	call	200728c <__hi0bits>
 200bb10:	8006917a 	slli	r3,r16,5
 200bb14:	a5c00017 	ldw	r23,0(r20)
 200bb18:	1885c83a 	sub	r2,r3,r2
 200bb1c:	b8801c16 	blt	r23,r2,200bb90 <__gethex+0x438>
 200bb20:	15c00a16 	blt	r2,r23,200bb4c <__gethex+0x3f4>
 200bb24:	0039883a 	mov	fp,zero
 200bb28:	a0800217 	ldw	r2,8(r20)
 200bb2c:	1580340e 	bge	r2,r22,200bc00 <__gethex+0x4a8>
 200bb30:	a809883a 	mov	r4,r21
 200bb34:	980b883a 	mov	r5,r19
 200bb38:	20072640 	call	2007264 <_Bfree>
 200bb3c:	d8c00d17 	ldw	r3,52(sp)
 200bb40:	048028c4 	movi	r18,163
 200bb44:	18000015 	stw	zero,0(r3)
 200bb48:	003f4606 	br	200b864 <__gethex+0x10c>
 200bb4c:	b8a1c83a 	sub	r16,r23,r2
 200bb50:	980b883a 	mov	r5,r19
 200bb54:	a809883a 	mov	r4,r21
 200bb58:	800d883a 	mov	r6,r16
 200bb5c:	2007ba80 	call	2007ba8 <__lshift>
 200bb60:	1027883a 	mov	r19,r2
 200bb64:	b42dc83a 	sub	r22,r22,r16
 200bb68:	10800504 	addi	r2,r2,20
 200bb6c:	d8800215 	stw	r2,8(sp)
 200bb70:	003fec06 	br	200bb24 <__gethex+0x3cc>
 200bb74:	41000015 	stw	r4,0(r8)
 200bb78:	28c00003 	ldbu	r3,0(r5)
 200bb7c:	01c00104 	movi	r7,4
 200bb80:	000d883a 	mov	r6,zero
 200bb84:	41d1883a 	add	r8,r8,r7
 200bb88:	0009883a 	mov	r4,zero
 200bb8c:	003fd306 	br	200badc <__gethex+0x384>
 200bb90:	15e1c83a 	sub	r16,r2,r23
 200bb94:	9809883a 	mov	r4,r19
 200bb98:	800b883a 	mov	r5,r16
 200bb9c:	200775c0 	call	200775c <__any_on>
 200bba0:	1000061e 	bne	r2,zero,200bbbc <__gethex+0x464>
 200bba4:	0039883a 	mov	fp,zero
 200bba8:	9809883a 	mov	r4,r19
 200bbac:	800b883a 	mov	r5,r16
 200bbb0:	200b6a80 	call	200b6a8 <rshift>
 200bbb4:	b42d883a 	add	r22,r22,r16
 200bbb8:	003fdb06 	br	200bb28 <__gethex+0x3d0>
 200bbbc:	817fffc4 	addi	r5,r16,-1
 200bbc0:	2805d17a 	srai	r2,r5,5
 200bbc4:	d8c00217 	ldw	r3,8(sp)
 200bbc8:	290007cc 	andi	r4,r5,31
 200bbcc:	1085883a 	add	r2,r2,r2
 200bbd0:	1085883a 	add	r2,r2,r2
 200bbd4:	01800044 	movi	r6,1
 200bbd8:	10c5883a 	add	r2,r2,r3
 200bbdc:	3108983a 	sll	r4,r6,r4
 200bbe0:	10c00017 	ldw	r3,0(r2)
 200bbe4:	20c8703a 	and	r4,r4,r3
 200bbe8:	20001a1e 	bne	r4,zero,200bc54 <__gethex+0x4fc>
 200bbec:	3039883a 	mov	fp,r6
 200bbf0:	003fed06 	br	200bba8 <__gethex+0x450>
 200bbf4:	1011883a 	mov	r8,r2
 200bbf8:	0009883a 	mov	r4,zero
 200bbfc:	003fbd06 	br	200baf4 <__gethex+0x39c>
 200bc00:	a1000117 	ldw	r4,4(r20)
 200bc04:	b1001a16 	blt	r22,r4,200bc70 <__gethex+0x518>
 200bc08:	04800044 	movi	r18,1
 200bc0c:	e0000826 	beq	fp,zero,200bc30 <__gethex+0x4d8>
 200bc10:	a1000317 	ldw	r4,12(r20)
 200bc14:	00800084 	movi	r2,2
 200bc18:	20809426 	beq	r4,r2,200be6c <__gethex+0x714>
 200bc1c:	008000c4 	movi	r2,3
 200bc20:	20805826 	beq	r4,r2,200bd84 <__gethex+0x62c>
 200bc24:	00800044 	movi	r2,1
 200bc28:	20803f26 	beq	r4,r2,200bd28 <__gethex+0x5d0>
 200bc2c:	94800414 	ori	r18,r18,16
 200bc30:	d8800d17 	ldw	r2,52(sp)
 200bc34:	d8c00117 	ldw	r3,4(sp)
 200bc38:	14c00015 	stw	r19,0(r2)
 200bc3c:	1d800015 	stw	r22,0(r3)
 200bc40:	003f0806 	br	200b864 <__gethex+0x10c>
 200bc44:	000b883a 	mov	r5,zero
 200bc48:	003f9206 	br	200ba94 <__gethex+0x33c>
 200bc4c:	002d883a 	mov	r22,zero
 200bc50:	003ef806 	br	200b834 <__gethex+0xdc>
 200bc54:	3140160e 	bge	r6,r5,200bcb0 <__gethex+0x558>
 200bc58:	9809883a 	mov	r4,r19
 200bc5c:	817fff84 	addi	r5,r16,-2
 200bc60:	200775c0 	call	200775c <__any_on>
 200bc64:	10001226 	beq	r2,zero,200bcb0 <__gethex+0x558>
 200bc68:	070000c4 	movi	fp,3
 200bc6c:	003fce06 	br	200bba8 <__gethex+0x450>
 200bc70:	25a3c83a 	sub	r17,r4,r22
 200bc74:	8dc01016 	blt	r17,r23,200bcb8 <__gethex+0x560>
 200bc78:	a0c00317 	ldw	r3,12(r20)
 200bc7c:	00800084 	movi	r2,2
 200bc80:	18809326 	beq	r3,r2,200bed0 <__gethex+0x778>
 200bc84:	008000c4 	movi	r2,3
 200bc88:	18808e26 	beq	r3,r2,200bec4 <__gethex+0x76c>
 200bc8c:	00800044 	movi	r2,1
 200bc90:	18807b26 	beq	r3,r2,200be80 <__gethex+0x728>
 200bc94:	a809883a 	mov	r4,r21
 200bc98:	980b883a 	mov	r5,r19
 200bc9c:	20072640 	call	2007264 <_Bfree>
 200bca0:	d8c00d17 	ldw	r3,52(sp)
 200bca4:	04801404 	movi	r18,80
 200bca8:	18000015 	stw	zero,0(r3)
 200bcac:	003eed06 	br	200b864 <__gethex+0x10c>
 200bcb0:	07000084 	movi	fp,2
 200bcb4:	003fbc06 	br	200bba8 <__gethex+0x450>
 200bcb8:	8c3fffc4 	addi	r16,r17,-1
 200bcbc:	e0001426 	beq	fp,zero,200bd10 <__gethex+0x5b8>
 200bcc0:	07000044 	movi	fp,1
 200bcc4:	8005d17a 	srai	r2,r16,5
 200bcc8:	d8c00217 	ldw	r3,8(sp)
 200bccc:	814007cc 	andi	r5,r16,31
 200bcd0:	1085883a 	add	r2,r2,r2
 200bcd4:	1085883a 	add	r2,r2,r2
 200bcd8:	10c5883a 	add	r2,r2,r3
 200bcdc:	00c00044 	movi	r3,1
 200bce0:	1946983a 	sll	r3,r3,r5
 200bce4:	11000017 	ldw	r4,0(r2)
 200bce8:	1906703a 	and	r3,r3,r4
 200bcec:	18000126 	beq	r3,zero,200bcf4 <__gethex+0x59c>
 200bcf0:	e7000094 	ori	fp,fp,2
 200bcf4:	880b883a 	mov	r5,r17
 200bcf8:	9809883a 	mov	r4,r19
 200bcfc:	200b6a80 	call	200b6a8 <rshift>
 200bd00:	a5800117 	ldw	r22,4(r20)
 200bd04:	bc6fc83a 	sub	r23,r23,r17
 200bd08:	04800084 	movi	r18,2
 200bd0c:	003fbf06 	br	200bc0c <__gethex+0x4b4>
 200bd10:	043fec0e 	bge	zero,r16,200bcc4 <__gethex+0x56c>
 200bd14:	9809883a 	mov	r4,r19
 200bd18:	800b883a 	mov	r5,r16
 200bd1c:	200775c0 	call	200775c <__any_on>
 200bd20:	1039883a 	mov	fp,r2
 200bd24:	003fe706 	br	200bcc4 <__gethex+0x56c>
 200bd28:	e080008c 	andi	r2,fp,2
 200bd2c:	103fbf26 	beq	r2,zero,200bc2c <__gethex+0x4d4>
 200bd30:	d8c00217 	ldw	r3,8(sp)
 200bd34:	18800017 	ldw	r2,0(r3)
 200bd38:	e084b03a 	or	r2,fp,r2
 200bd3c:	1104703a 	and	r2,r2,r4
 200bd40:	103fba26 	beq	r2,zero,200bc2c <__gethex+0x4d4>
 200bd44:	9c000417 	ldw	r16,16(r19)
 200bd48:	d8c00217 	ldw	r3,8(sp)
 200bd4c:	017fffc4 	movi	r5,-1
 200bd50:	8405883a 	add	r2,r16,r16
 200bd54:	10b9883a 	add	fp,r2,r2
 200bd58:	1f09883a 	add	r4,r3,fp
 200bd5c:	dc000015 	stw	r16,0(sp)
 200bd60:	00000306 	br	200bd70 <__gethex+0x618>
 200bd64:	18000015 	stw	zero,0(r3)
 200bd68:	18c00104 	addi	r3,r3,4
 200bd6c:	1900082e 	bgeu	r3,r4,200bd90 <__gethex+0x638>
 200bd70:	18800017 	ldw	r2,0(r3)
 200bd74:	117ffb26 	beq	r2,r5,200bd64 <__gethex+0x60c>
 200bd78:	10800044 	addi	r2,r2,1
 200bd7c:	18800015 	stw	r2,0(r3)
 200bd80:	00001f06 	br	200be00 <__gethex+0x6a8>
 200bd84:	d8800e17 	ldw	r2,56(sp)
 200bd88:	103fa826 	beq	r2,zero,200bc2c <__gethex+0x4d4>
 200bd8c:	003fed06 	br	200bd44 <__gethex+0x5ec>
 200bd90:	98800217 	ldw	r2,8(r19)
 200bd94:	80801316 	blt	r16,r2,200bde4 <__gethex+0x68c>
 200bd98:	99400117 	ldw	r5,4(r19)
 200bd9c:	a809883a 	mov	r4,r21
 200bda0:	29400044 	addi	r5,r5,1
 200bda4:	20077e40 	call	20077e4 <_Balloc>
 200bda8:	99800417 	ldw	r6,16(r19)
 200bdac:	99400304 	addi	r5,r19,12
 200bdb0:	11000304 	addi	r4,r2,12
 200bdb4:	318d883a 	add	r6,r6,r6
 200bdb8:	318d883a 	add	r6,r6,r6
 200bdbc:	31800204 	addi	r6,r6,8
 200bdc0:	1023883a 	mov	r17,r2
 200bdc4:	200704c0 	call	200704c <memcpy>
 200bdc8:	980b883a 	mov	r5,r19
 200bdcc:	a809883a 	mov	r4,r21
 200bdd0:	20072640 	call	2007264 <_Bfree>
 200bdd4:	8c000417 	ldw	r16,16(r17)
 200bdd8:	88800504 	addi	r2,r17,20
 200bddc:	8827883a 	mov	r19,r17
 200bde0:	d8800215 	stw	r2,8(sp)
 200bde4:	8405883a 	add	r2,r16,r16
 200bde8:	1085883a 	add	r2,r2,r2
 200bdec:	14c5883a 	add	r2,r2,r19
 200bdf0:	84000044 	addi	r16,r16,1
 200bdf4:	00c00044 	movi	r3,1
 200bdf8:	10c00515 	stw	r3,20(r2)
 200bdfc:	9c000415 	stw	r16,16(r19)
 200be00:	00800084 	movi	r2,2
 200be04:	90801426 	beq	r18,r2,200be58 <__gethex+0x700>
 200be08:	d8800017 	ldw	r2,0(sp)
 200be0c:	14000b16 	blt	r2,r16,200be3c <__gethex+0x6e4>
 200be10:	bc0007cc 	andi	r16,r23,31
 200be14:	8000021e 	bne	r16,zero,200be20 <__gethex+0x6c8>
 200be18:	94800814 	ori	r18,r18,32
 200be1c:	003f8406 	br	200bc30 <__gethex+0x4d8>
 200be20:	d8c00217 	ldw	r3,8(sp)
 200be24:	1f05883a 	add	r2,r3,fp
 200be28:	113fff17 	ldw	r4,-4(r2)
 200be2c:	200728c0 	call	200728c <__hi0bits>
 200be30:	00c00804 	movi	r3,32
 200be34:	1c07c83a 	sub	r3,r3,r16
 200be38:	10fff70e 	bge	r2,r3,200be18 <__gethex+0x6c0>
 200be3c:	9809883a 	mov	r4,r19
 200be40:	01400044 	movi	r5,1
 200be44:	200b6a80 	call	200b6a8 <rshift>
 200be48:	a0800217 	ldw	r2,8(r20)
 200be4c:	b5800044 	addi	r22,r22,1
 200be50:	15bf3716 	blt	r2,r22,200bb30 <__gethex+0x3d8>
 200be54:	003ff006 	br	200be18 <__gethex+0x6c0>
 200be58:	a0800017 	ldw	r2,0(r20)
 200be5c:	10bfffc4 	addi	r2,r2,-1
 200be60:	b8801e26 	beq	r23,r2,200bedc <__gethex+0x784>
 200be64:	04800884 	movi	r18,34
 200be68:	003f7106 	br	200bc30 <__gethex+0x4d8>
 200be6c:	d8c00e17 	ldw	r3,56(sp)
 200be70:	00800044 	movi	r2,1
 200be74:	10c5c83a 	sub	r2,r2,r3
 200be78:	103f6c26 	beq	r2,zero,200bc2c <__gethex+0x4d4>
 200be7c:	003fb106 	br	200bd44 <__gethex+0x5ec>
 200be80:	bc7f841e 	bne	r23,r17,200bc94 <__gethex+0x53c>
 200be84:	1dc0050e 	bge	r3,r23,200be9c <__gethex+0x744>
 200be88:	b8cbc83a 	sub	r5,r23,r3
 200be8c:	9809883a 	mov	r4,r19
 200be90:	200775c0 	call	200775c <__any_on>
 200be94:	103f7f26 	beq	r2,zero,200bc94 <__gethex+0x53c>
 200be98:	a1000117 	ldw	r4,4(r20)
 200be9c:	d8800117 	ldw	r2,4(sp)
 200bea0:	d8c00217 	ldw	r3,8(sp)
 200bea4:	04000044 	movi	r16,1
 200bea8:	11000015 	stw	r4,0(r2)
 200beac:	d8800d17 	ldw	r2,52(sp)
 200beb0:	04801884 	movi	r18,98
 200beb4:	1c000015 	stw	r16,0(r3)
 200beb8:	14c00015 	stw	r19,0(r2)
 200bebc:	9c000415 	stw	r16,16(r19)
 200bec0:	003e6806 	br	200b864 <__gethex+0x10c>
 200bec4:	d8c00e17 	ldw	r3,56(sp)
 200bec8:	183f7226 	beq	r3,zero,200bc94 <__gethex+0x53c>
 200becc:	003ff306 	br	200be9c <__gethex+0x744>
 200bed0:	d8800e17 	ldw	r2,56(sp)
 200bed4:	103ff126 	beq	r2,zero,200be9c <__gethex+0x744>
 200bed8:	003f6e06 	br	200bc94 <__gethex+0x53c>
 200bedc:	b805d17a 	srai	r2,r23,5
 200bee0:	d8c00217 	ldw	r3,8(sp)
 200bee4:	b94007cc 	andi	r5,r23,31
 200bee8:	1085883a 	add	r2,r2,r2
 200beec:	1085883a 	add	r2,r2,r2
 200bef0:	10c5883a 	add	r2,r2,r3
 200bef4:	00c00044 	movi	r3,1
 200bef8:	1946983a 	sll	r3,r3,r5
 200befc:	11000017 	ldw	r4,0(r2)
 200bf00:	1906703a 	and	r3,r3,r4
 200bf04:	183fd726 	beq	r3,zero,200be64 <__gethex+0x70c>
 200bf08:	04800844 	movi	r18,33
 200bf0c:	003f4806 	br	200bc30 <__gethex+0x4d8>

0200bf10 <L_shift>:
 200bf10:	00800204 	movi	r2,8
 200bf14:	1185c83a 	sub	r2,r2,r6
 200bf18:	1085883a 	add	r2,r2,r2
 200bf1c:	21c00017 	ldw	r7,0(r4)
 200bf20:	1093883a 	add	r9,r2,r2
 200bf24:	00800804 	movi	r2,32
 200bf28:	200d883a 	mov	r6,r4
 200bf2c:	1251c83a 	sub	r8,r2,r9
 200bf30:	31800104 	addi	r6,r6,4
 200bf34:	3805883a 	mov	r2,r7
 200bf38:	31c00017 	ldw	r7,0(r6)
 200bf3c:	3a08983a 	sll	r4,r7,r8
 200bf40:	3a46d83a 	srl	r3,r7,r9
 200bf44:	1104b03a 	or	r2,r2,r4
 200bf48:	180f883a 	mov	r7,r3
 200bf4c:	30bfff15 	stw	r2,-4(r6)
 200bf50:	30c00015 	stw	r3,0(r6)
 200bf54:	317ff636 	bltu	r6,r5,200bf30 <L_shift+0x20>
 200bf58:	f800283a 	ret

0200bf5c <__hexnan>:
 200bf5c:	defff404 	addi	sp,sp,-48
 200bf60:	dd800815 	stw	r22,32(sp)
 200bf64:	05808074 	movhi	r22,513
 200bf68:	b58c7804 	addi	r22,r22,12768
 200bf6c:	b0800c03 	ldbu	r2,48(r22)
 200bf70:	dcc00515 	stw	r19,20(sp)
 200bf74:	dc000215 	stw	r16,8(sp)
 200bf78:	dfc00b15 	stw	ra,44(sp)
 200bf7c:	df000a15 	stw	fp,40(sp)
 200bf80:	ddc00915 	stw	r23,36(sp)
 200bf84:	dd400715 	stw	r21,28(sp)
 200bf88:	dd000615 	stw	r20,24(sp)
 200bf8c:	dc800415 	stw	r18,16(sp)
 200bf90:	dc400315 	stw	r17,12(sp)
 200bf94:	d9000115 	stw	r4,4(sp)
 200bf98:	2821883a 	mov	r16,r5
 200bf9c:	3027883a 	mov	r19,r6
 200bfa0:	10007426 	beq	r2,zero,200c174 <__hexnan+0x218>
 200bfa4:	80c00017 	ldw	r3,0(r16)
 200bfa8:	1805d17a 	srai	r2,r3,5
 200bfac:	18c007cc 	andi	r3,r3,31
 200bfb0:	1839003a 	cmpeq	fp,r3,zero
 200bfb4:	1085883a 	add	r2,r2,r2
 200bfb8:	1085883a 	add	r2,r2,r2
 200bfbc:	d8c00015 	stw	r3,0(sp)
 200bfc0:	14c5883a 	add	r2,r2,r19
 200bfc4:	e000011e 	bne	fp,zero,200bfcc <__hexnan+0x70>
 200bfc8:	10800104 	addi	r2,r2,4
 200bfcc:	d8c00117 	ldw	r3,4(sp)
 200bfd0:	153fff04 	addi	r20,r2,-4
 200bfd4:	a021883a 	mov	r16,r20
 200bfd8:	1c400017 	ldw	r17,0(r3)
 200bfdc:	a02b883a 	mov	r21,r20
 200bfe0:	0025883a 	mov	r18,zero
 200bfe4:	002f883a 	mov	r23,zero
 200bfe8:	000d883a 	mov	r6,zero
 200bfec:	103fff15 	stw	zero,-4(r2)
 200bff0:	8c400044 	addi	r17,r17,1
 200bff4:	89000003 	ldbu	r4,0(r17)
 200bff8:	20000e26 	beq	r4,zero,200c034 <__hexnan+0xd8>
 200bffc:	2585883a 	add	r2,r4,r22
 200c000:	10c00003 	ldbu	r3,0(r2)
 200c004:	18002e1e 	bne	r3,zero,200c0c0 <__hexnan+0x164>
 200c008:	00800804 	movi	r2,32
 200c00c:	11005536 	bltu	r2,r4,200c164 <__hexnan+0x208>
 200c010:	bcbff70e 	bge	r23,r18,200bff0 <__hexnan+0x94>
 200c014:	8540022e 	bgeu	r16,r21,200c020 <__hexnan+0xc4>
 200c018:	008001c4 	movi	r2,7
 200c01c:	11803c0e 	bge	r2,r6,200c110 <__hexnan+0x1b4>
 200c020:	9c003536 	bltu	r19,r16,200c0f8 <__hexnan+0x19c>
 200c024:	8c400044 	addi	r17,r17,1
 200c028:	89000003 	ldbu	r4,0(r17)
 200c02c:	01800204 	movi	r6,8
 200c030:	203ff21e 	bne	r4,zero,200bffc <__hexnan+0xa0>
 200c034:	90004d26 	beq	r18,zero,200c16c <__hexnan+0x210>
 200c038:	85404336 	bltu	r16,r21,200c148 <__hexnan+0x1ec>
 200c03c:	9c00382e 	bgeu	r19,r16,200c120 <__hexnan+0x1c4>
 200c040:	9807883a 	mov	r3,r19
 200c044:	80800017 	ldw	r2,0(r16)
 200c048:	84000104 	addi	r16,r16,4
 200c04c:	18800015 	stw	r2,0(r3)
 200c050:	18c00104 	addi	r3,r3,4
 200c054:	a43ffb2e 	bgeu	r20,r16,200c044 <__hexnan+0xe8>
 200c058:	18000015 	stw	zero,0(r3)
 200c05c:	18c00104 	addi	r3,r3,4
 200c060:	a0fffd2e 	bgeu	r20,r3,200c058 <__hexnan+0xfc>
 200c064:	a0800017 	ldw	r2,0(r20)
 200c068:	1000071e 	bne	r2,zero,200c088 <__hexnan+0x12c>
 200c06c:	9d004326 	beq	r19,r20,200c17c <__hexnan+0x220>
 200c070:	a007883a 	mov	r3,r20
 200c074:	00000106 	br	200c07c <__hexnan+0x120>
 200c078:	98c04026 	beq	r19,r3,200c17c <__hexnan+0x220>
 200c07c:	18ffff04 	addi	r3,r3,-4
 200c080:	18800017 	ldw	r2,0(r3)
 200c084:	103ffc26 	beq	r2,zero,200c078 <__hexnan+0x11c>
 200c088:	00c00144 	movi	r3,5
 200c08c:	1805883a 	mov	r2,r3
 200c090:	dfc00b17 	ldw	ra,44(sp)
 200c094:	df000a17 	ldw	fp,40(sp)
 200c098:	ddc00917 	ldw	r23,36(sp)
 200c09c:	dd800817 	ldw	r22,32(sp)
 200c0a0:	dd400717 	ldw	r21,28(sp)
 200c0a4:	dd000617 	ldw	r20,24(sp)
 200c0a8:	dcc00517 	ldw	r19,20(sp)
 200c0ac:	dc800417 	ldw	r18,16(sp)
 200c0b0:	dc400317 	ldw	r17,12(sp)
 200c0b4:	dc000217 	ldw	r16,8(sp)
 200c0b8:	dec00c04 	addi	sp,sp,48
 200c0bc:	f800283a 	ret
 200c0c0:	31800044 	addi	r6,r6,1
 200c0c4:	00800204 	movi	r2,8
 200c0c8:	94800044 	addi	r18,r18,1
 200c0cc:	1180040e 	bge	r2,r6,200c0e0 <__hexnan+0x184>
 200c0d0:	9c3fc72e 	bgeu	r19,r16,200bff0 <__hexnan+0x94>
 200c0d4:	843fff04 	addi	r16,r16,-4
 200c0d8:	80000015 	stw	zero,0(r16)
 200c0dc:	01800044 	movi	r6,1
 200c0e0:	80800017 	ldw	r2,0(r16)
 200c0e4:	18c003cc 	andi	r3,r3,15
 200c0e8:	1004913a 	slli	r2,r2,4
 200c0ec:	10c4b03a 	or	r2,r2,r3
 200c0f0:	80800015 	stw	r2,0(r16)
 200c0f4:	003fbe06 	br	200bff0 <__hexnan+0x94>
 200c0f8:	843fff04 	addi	r16,r16,-4
 200c0fc:	802b883a 	mov	r21,r16
 200c100:	902f883a 	mov	r23,r18
 200c104:	000d883a 	mov	r6,zero
 200c108:	80000015 	stw	zero,0(r16)
 200c10c:	003fb806 	br	200bff0 <__hexnan+0x94>
 200c110:	8009883a 	mov	r4,r16
 200c114:	a80b883a 	mov	r5,r21
 200c118:	200bf100 	call	200bf10 <L_shift>
 200c11c:	003fc006 	br	200c020 <__hexnan+0xc4>
 200c120:	e03fd01e 	bne	fp,zero,200c064 <__hexnan+0x108>
 200c124:	d8c00017 	ldw	r3,0(sp)
 200c128:	00800804 	movi	r2,32
 200c12c:	10c5c83a 	sub	r2,r2,r3
 200c130:	00ffffc4 	movi	r3,-1
 200c134:	1886d83a 	srl	r3,r3,r2
 200c138:	a0800017 	ldw	r2,0(r20)
 200c13c:	10c4703a 	and	r2,r2,r3
 200c140:	a0800015 	stw	r2,0(r20)
 200c144:	003fc806 	br	200c068 <__hexnan+0x10c>
 200c148:	008001c4 	movi	r2,7
 200c14c:	11bfbb16 	blt	r2,r6,200c03c <__hexnan+0xe0>
 200c150:	a80b883a 	mov	r5,r21
 200c154:	8009883a 	mov	r4,r16
 200c158:	200bf100 	call	200bf10 <L_shift>
 200c15c:	9c3ff02e 	bgeu	r19,r16,200c120 <__hexnan+0x1c4>
 200c160:	003fb706 	br	200c040 <__hexnan+0xe4>
 200c164:	00800a44 	movi	r2,41
 200c168:	20800826 	beq	r4,r2,200c18c <__hexnan+0x230>
 200c16c:	00c00104 	movi	r3,4
 200c170:	003fc606 	br	200c08c <__hexnan+0x130>
 200c174:	200b6400 	call	200b640 <__hexdig_init>
 200c178:	003f8a06 	br	200bfa4 <__hexnan+0x48>
 200c17c:	00800044 	movi	r2,1
 200c180:	00c00144 	movi	r3,5
 200c184:	98800015 	stw	r2,0(r19)
 200c188:	003fc006 	br	200c08c <__hexnan+0x130>
 200c18c:	903ff726 	beq	r18,zero,200c16c <__hexnan+0x210>
 200c190:	d8c00117 	ldw	r3,4(sp)
 200c194:	88800044 	addi	r2,r17,1
 200c198:	18800015 	stw	r2,0(r3)
 200c19c:	857fa72e 	bgeu	r16,r21,200c03c <__hexnan+0xe0>
 200c1a0:	003fe906 	br	200c148 <__hexnan+0x1ec>

0200c1a4 <_isatty_r>:
 200c1a4:	defffd04 	addi	sp,sp,-12
 200c1a8:	dc000015 	stw	r16,0(sp)
 200c1ac:	04008074 	movhi	r16,513
 200c1b0:	840c6704 	addi	r16,r16,12700
 200c1b4:	dc400115 	stw	r17,4(sp)
 200c1b8:	80000015 	stw	zero,0(r16)
 200c1bc:	2023883a 	mov	r17,r4
 200c1c0:	2809883a 	mov	r4,r5
 200c1c4:	dfc00215 	stw	ra,8(sp)
 200c1c8:	200eff40 	call	200eff4 <isatty>
 200c1cc:	1007883a 	mov	r3,r2
 200c1d0:	00bfffc4 	movi	r2,-1
 200c1d4:	18800626 	beq	r3,r2,200c1f0 <_isatty_r+0x4c>
 200c1d8:	1805883a 	mov	r2,r3
 200c1dc:	dfc00217 	ldw	ra,8(sp)
 200c1e0:	dc400117 	ldw	r17,4(sp)
 200c1e4:	dc000017 	ldw	r16,0(sp)
 200c1e8:	dec00304 	addi	sp,sp,12
 200c1ec:	f800283a 	ret
 200c1f0:	80800017 	ldw	r2,0(r16)
 200c1f4:	103ff826 	beq	r2,zero,200c1d8 <_isatty_r+0x34>
 200c1f8:	88800015 	stw	r2,0(r17)
 200c1fc:	1805883a 	mov	r2,r3
 200c200:	dfc00217 	ldw	ra,8(sp)
 200c204:	dc400117 	ldw	r17,4(sp)
 200c208:	dc000017 	ldw	r16,0(sp)
 200c20c:	dec00304 	addi	sp,sp,12
 200c210:	f800283a 	ret

0200c214 <_lseek_r>:
 200c214:	defffd04 	addi	sp,sp,-12
 200c218:	dc000015 	stw	r16,0(sp)
 200c21c:	04008074 	movhi	r16,513
 200c220:	840c6704 	addi	r16,r16,12700
 200c224:	dc400115 	stw	r17,4(sp)
 200c228:	80000015 	stw	zero,0(r16)
 200c22c:	2023883a 	mov	r17,r4
 200c230:	2809883a 	mov	r4,r5
 200c234:	300b883a 	mov	r5,r6
 200c238:	380d883a 	mov	r6,r7
 200c23c:	dfc00215 	stw	ra,8(sp)
 200c240:	200f2000 	call	200f200 <lseek>
 200c244:	1007883a 	mov	r3,r2
 200c248:	00bfffc4 	movi	r2,-1
 200c24c:	18800626 	beq	r3,r2,200c268 <_lseek_r+0x54>
 200c250:	1805883a 	mov	r2,r3
 200c254:	dfc00217 	ldw	ra,8(sp)
 200c258:	dc400117 	ldw	r17,4(sp)
 200c25c:	dc000017 	ldw	r16,0(sp)
 200c260:	dec00304 	addi	sp,sp,12
 200c264:	f800283a 	ret
 200c268:	80800017 	ldw	r2,0(r16)
 200c26c:	103ff826 	beq	r2,zero,200c250 <_lseek_r+0x3c>
 200c270:	88800015 	stw	r2,0(r17)
 200c274:	1805883a 	mov	r2,r3
 200c278:	dfc00217 	ldw	ra,8(sp)
 200c27c:	dc400117 	ldw	r17,4(sp)
 200c280:	dc000017 	ldw	r16,0(sp)
 200c284:	dec00304 	addi	sp,sp,12
 200c288:	f800283a 	ret

0200c28c <_read_r>:
 200c28c:	defffd04 	addi	sp,sp,-12
 200c290:	dc000015 	stw	r16,0(sp)
 200c294:	04008074 	movhi	r16,513
 200c298:	840c6704 	addi	r16,r16,12700
 200c29c:	dc400115 	stw	r17,4(sp)
 200c2a0:	80000015 	stw	zero,0(r16)
 200c2a4:	2023883a 	mov	r17,r4
 200c2a8:	2809883a 	mov	r4,r5
 200c2ac:	300b883a 	mov	r5,r6
 200c2b0:	380d883a 	mov	r6,r7
 200c2b4:	dfc00215 	stw	ra,8(sp)
 200c2b8:	200f3fc0 	call	200f3fc <read>
 200c2bc:	1007883a 	mov	r3,r2
 200c2c0:	00bfffc4 	movi	r2,-1
 200c2c4:	18800626 	beq	r3,r2,200c2e0 <_read_r+0x54>
 200c2c8:	1805883a 	mov	r2,r3
 200c2cc:	dfc00217 	ldw	ra,8(sp)
 200c2d0:	dc400117 	ldw	r17,4(sp)
 200c2d4:	dc000017 	ldw	r16,0(sp)
 200c2d8:	dec00304 	addi	sp,sp,12
 200c2dc:	f800283a 	ret
 200c2e0:	80800017 	ldw	r2,0(r16)
 200c2e4:	103ff826 	beq	r2,zero,200c2c8 <_read_r+0x3c>
 200c2e8:	88800015 	stw	r2,0(r17)
 200c2ec:	1805883a 	mov	r2,r3
 200c2f0:	dfc00217 	ldw	ra,8(sp)
 200c2f4:	dc400117 	ldw	r17,4(sp)
 200c2f8:	dc000017 	ldw	r16,0(sp)
 200c2fc:	dec00304 	addi	sp,sp,12
 200c300:	f800283a 	ret

0200c304 <__muldi3>:
 200c304:	2011883a 	mov	r8,r4
 200c308:	427fffcc 	andi	r9,r8,65535
 200c30c:	4018d43a 	srli	r12,r8,16
 200c310:	32bfffcc 	andi	r10,r6,65535
 200c314:	3016d43a 	srli	r11,r6,16
 200c318:	4a85383a 	mul	r2,r9,r10
 200c31c:	6295383a 	mul	r10,r12,r10
 200c320:	4ad3383a 	mul	r9,r9,r11
 200c324:	113fffcc 	andi	r4,r2,65535
 200c328:	1004d43a 	srli	r2,r2,16
 200c32c:	4a93883a 	add	r9,r9,r10
 200c330:	3807883a 	mov	r3,r7
 200c334:	1245883a 	add	r2,r2,r9
 200c338:	280f883a 	mov	r7,r5
 200c33c:	180b883a 	mov	r5,r3
 200c340:	1006943a 	slli	r3,r2,16
 200c344:	defffd04 	addi	sp,sp,-12
 200c348:	dc800215 	stw	r18,8(sp)
 200c34c:	1907883a 	add	r3,r3,r4
 200c350:	dc400115 	stw	r17,4(sp)
 200c354:	dc000015 	stw	r16,0(sp)
 200c358:	4165383a 	mul	r18,r8,r5
 200c35c:	31e3383a 	mul	r17,r6,r7
 200c360:	1012d43a 	srli	r9,r2,16
 200c364:	62d9383a 	mul	r12,r12,r11
 200c368:	181f883a 	mov	r15,r3
 200c36c:	1280022e 	bgeu	r2,r10,200c378 <__muldi3+0x74>
 200c370:	00800074 	movhi	r2,1
 200c374:	6099883a 	add	r12,r12,r2
 200c378:	624d883a 	add	r6,r12,r9
 200c37c:	9187883a 	add	r3,r18,r6
 200c380:	88c7883a 	add	r3,r17,r3
 200c384:	7805883a 	mov	r2,r15
 200c388:	dc800217 	ldw	r18,8(sp)
 200c38c:	dc400117 	ldw	r17,4(sp)
 200c390:	dc000017 	ldw	r16,0(sp)
 200c394:	dec00304 	addi	sp,sp,12
 200c398:	f800283a 	ret

0200c39c <__fixunsdfsi>:
 200c39c:	defffb04 	addi	sp,sp,-20
 200c3a0:	dc400115 	stw	r17,4(sp)
 200c3a4:	dc000015 	stw	r16,0(sp)
 200c3a8:	04507834 	movhi	r17,16864
 200c3ac:	0021883a 	mov	r16,zero
 200c3b0:	800d883a 	mov	r6,r16
 200c3b4:	880f883a 	mov	r7,r17
 200c3b8:	dcc00315 	stw	r19,12(sp)
 200c3bc:	dc800215 	stw	r18,8(sp)
 200c3c0:	2827883a 	mov	r19,r5
 200c3c4:	2025883a 	mov	r18,r4
 200c3c8:	dfc00415 	stw	ra,16(sp)
 200c3cc:	200ddec0 	call	200ddec <__gedf2>
 200c3d0:	000d883a 	mov	r6,zero
 200c3d4:	880f883a 	mov	r7,r17
 200c3d8:	980b883a 	mov	r5,r19
 200c3dc:	9009883a 	mov	r4,r18
 200c3e0:	10000d16 	blt	r2,zero,200c418 <__fixunsdfsi+0x7c>
 200c3e4:	200d5440 	call	200d544 <__subdf3>
 200c3e8:	180b883a 	mov	r5,r3
 200c3ec:	1009883a 	mov	r4,r2
 200c3f0:	200e07c0 	call	200e07c <__fixdfsi>
 200c3f4:	00e00034 	movhi	r3,32768
 200c3f8:	10c5883a 	add	r2,r2,r3
 200c3fc:	dfc00417 	ldw	ra,16(sp)
 200c400:	dcc00317 	ldw	r19,12(sp)
 200c404:	dc800217 	ldw	r18,8(sp)
 200c408:	dc400117 	ldw	r17,4(sp)
 200c40c:	dc000017 	ldw	r16,0(sp)
 200c410:	dec00504 	addi	sp,sp,20
 200c414:	f800283a 	ret
 200c418:	980b883a 	mov	r5,r19
 200c41c:	9009883a 	mov	r4,r18
 200c420:	200e07c0 	call	200e07c <__fixdfsi>
 200c424:	dfc00417 	ldw	ra,16(sp)
 200c428:	dcc00317 	ldw	r19,12(sp)
 200c42c:	dc800217 	ldw	r18,8(sp)
 200c430:	dc400117 	ldw	r17,4(sp)
 200c434:	dc000017 	ldw	r16,0(sp)
 200c438:	dec00504 	addi	sp,sp,20
 200c43c:	f800283a 	ret

0200c440 <__udivdi3>:
 200c440:	defff004 	addi	sp,sp,-64
 200c444:	2005883a 	mov	r2,r4
 200c448:	3011883a 	mov	r8,r6
 200c44c:	df000e15 	stw	fp,56(sp)
 200c450:	dd000a15 	stw	r20,40(sp)
 200c454:	dc000615 	stw	r16,24(sp)
 200c458:	dfc00f15 	stw	ra,60(sp)
 200c45c:	ddc00d15 	stw	r23,52(sp)
 200c460:	dd800c15 	stw	r22,48(sp)
 200c464:	dd400b15 	stw	r21,44(sp)
 200c468:	dcc00915 	stw	r19,36(sp)
 200c46c:	dc800815 	stw	r18,32(sp)
 200c470:	dc400715 	stw	r17,28(sp)
 200c474:	4021883a 	mov	r16,r8
 200c478:	1039883a 	mov	fp,r2
 200c47c:	2829883a 	mov	r20,r5
 200c480:	38003b1e 	bne	r7,zero,200c570 <__udivdi3+0x130>
 200c484:	2a005c36 	bltu	r5,r8,200c5f8 <__udivdi3+0x1b8>
 200c488:	4000a626 	beq	r8,zero,200c724 <__udivdi3+0x2e4>
 200c48c:	00bfffd4 	movui	r2,65535
 200c490:	14009e36 	bltu	r2,r16,200c70c <__udivdi3+0x2cc>
 200c494:	00803fc4 	movi	r2,255
 200c498:	14013d36 	bltu	r2,r16,200c990 <__udivdi3+0x550>
 200c49c:	000b883a 	mov	r5,zero
 200c4a0:	0005883a 	mov	r2,zero
 200c4a4:	8084d83a 	srl	r2,r16,r2
 200c4a8:	01008074 	movhi	r4,513
 200c4ac:	2106a204 	addi	r4,r4,6792
 200c4b0:	01800804 	movi	r6,32
 200c4b4:	1105883a 	add	r2,r2,r4
 200c4b8:	10c00003 	ldbu	r3,0(r2)
 200c4bc:	28c7883a 	add	r3,r5,r3
 200c4c0:	30edc83a 	sub	r22,r6,r3
 200c4c4:	b000ee1e 	bne	r22,zero,200c880 <__udivdi3+0x440>
 200c4c8:	802ad43a 	srli	r21,r16,16
 200c4cc:	00800044 	movi	r2,1
 200c4d0:	a423c83a 	sub	r17,r20,r16
 200c4d4:	85ffffcc 	andi	r23,r16,65535
 200c4d8:	d8800315 	stw	r2,12(sp)
 200c4dc:	8809883a 	mov	r4,r17
 200c4e0:	a80b883a 	mov	r5,r21
 200c4e4:	200e4980 	call	200e498 <__udivsi3>
 200c4e8:	8809883a 	mov	r4,r17
 200c4ec:	a80b883a 	mov	r5,r21
 200c4f0:	102d883a 	mov	r22,r2
 200c4f4:	200e4a00 	call	200e4a0 <__umodsi3>
 200c4f8:	1004943a 	slli	r2,r2,16
 200c4fc:	e006d43a 	srli	r3,fp,16
 200c500:	bda3383a 	mul	r17,r23,r22
 200c504:	10c4b03a 	or	r2,r2,r3
 200c508:	1440042e 	bgeu	r2,r17,200c51c <__udivdi3+0xdc>
 200c50c:	1405883a 	add	r2,r2,r16
 200c510:	b5bfffc4 	addi	r22,r22,-1
 200c514:	14000136 	bltu	r2,r16,200c51c <__udivdi3+0xdc>
 200c518:	14413d36 	bltu	r2,r17,200ca10 <__udivdi3+0x5d0>
 200c51c:	1463c83a 	sub	r17,r2,r17
 200c520:	8809883a 	mov	r4,r17
 200c524:	a80b883a 	mov	r5,r21
 200c528:	200e4980 	call	200e498 <__udivsi3>
 200c52c:	8809883a 	mov	r4,r17
 200c530:	a80b883a 	mov	r5,r21
 200c534:	1029883a 	mov	r20,r2
 200c538:	200e4a00 	call	200e4a0 <__umodsi3>
 200c53c:	1004943a 	slli	r2,r2,16
 200c540:	bd09383a 	mul	r4,r23,r20
 200c544:	e0ffffcc 	andi	r3,fp,65535
 200c548:	10c4b03a 	or	r2,r2,r3
 200c54c:	1100042e 	bgeu	r2,r4,200c560 <__udivdi3+0x120>
 200c550:	8085883a 	add	r2,r16,r2
 200c554:	a53fffc4 	addi	r20,r20,-1
 200c558:	14000136 	bltu	r2,r16,200c560 <__udivdi3+0x120>
 200c55c:	11012036 	bltu	r2,r4,200c9e0 <__udivdi3+0x5a0>
 200c560:	b004943a 	slli	r2,r22,16
 200c564:	d9000317 	ldw	r4,12(sp)
 200c568:	a084b03a 	or	r2,r20,r2
 200c56c:	00001506 	br	200c5c4 <__udivdi3+0x184>
 200c570:	380d883a 	mov	r6,r7
 200c574:	29c06236 	bltu	r5,r7,200c700 <__udivdi3+0x2c0>
 200c578:	00bfffd4 	movui	r2,65535
 200c57c:	11c05a36 	bltu	r2,r7,200c6e8 <__udivdi3+0x2a8>
 200c580:	00803fc4 	movi	r2,255
 200c584:	11c0fc36 	bltu	r2,r7,200c978 <__udivdi3+0x538>
 200c588:	000b883a 	mov	r5,zero
 200c58c:	0005883a 	mov	r2,zero
 200c590:	3084d83a 	srl	r2,r6,r2
 200c594:	01008074 	movhi	r4,513
 200c598:	2106a204 	addi	r4,r4,6792
 200c59c:	01c00804 	movi	r7,32
 200c5a0:	1105883a 	add	r2,r2,r4
 200c5a4:	10c00003 	ldbu	r3,0(r2)
 200c5a8:	28c7883a 	add	r3,r5,r3
 200c5ac:	38efc83a 	sub	r23,r7,r3
 200c5b0:	b800691e 	bne	r23,zero,200c758 <__udivdi3+0x318>
 200c5b4:	35000136 	bltu	r6,r20,200c5bc <__udivdi3+0x17c>
 200c5b8:	e4005136 	bltu	fp,r16,200c700 <__udivdi3+0x2c0>
 200c5bc:	00800044 	movi	r2,1
 200c5c0:	0009883a 	mov	r4,zero
 200c5c4:	2007883a 	mov	r3,r4
 200c5c8:	dfc00f17 	ldw	ra,60(sp)
 200c5cc:	df000e17 	ldw	fp,56(sp)
 200c5d0:	ddc00d17 	ldw	r23,52(sp)
 200c5d4:	dd800c17 	ldw	r22,48(sp)
 200c5d8:	dd400b17 	ldw	r21,44(sp)
 200c5dc:	dd000a17 	ldw	r20,40(sp)
 200c5e0:	dcc00917 	ldw	r19,36(sp)
 200c5e4:	dc800817 	ldw	r18,32(sp)
 200c5e8:	dc400717 	ldw	r17,28(sp)
 200c5ec:	dc000617 	ldw	r16,24(sp)
 200c5f0:	dec01004 	addi	sp,sp,64
 200c5f4:	f800283a 	ret
 200c5f8:	00bfffd4 	movui	r2,65535
 200c5fc:	12005036 	bltu	r2,r8,200c740 <__udivdi3+0x300>
 200c600:	00803fc4 	movi	r2,255
 200c604:	1200e836 	bltu	r2,r8,200c9a8 <__udivdi3+0x568>
 200c608:	000b883a 	mov	r5,zero
 200c60c:	0005883a 	mov	r2,zero
 200c610:	8084d83a 	srl	r2,r16,r2
 200c614:	01008074 	movhi	r4,513
 200c618:	2106a204 	addi	r4,r4,6792
 200c61c:	01800804 	movi	r6,32
 200c620:	1105883a 	add	r2,r2,r4
 200c624:	10c00003 	ldbu	r3,0(r2)
 200c628:	28c7883a 	add	r3,r5,r3
 200c62c:	30cbc83a 	sub	r5,r6,r3
 200c630:	28000626 	beq	r5,zero,200c64c <__udivdi3+0x20c>
 200c634:	3145c83a 	sub	r2,r6,r5
 200c638:	e084d83a 	srl	r2,fp,r2
 200c63c:	a146983a 	sll	r3,r20,r5
 200c640:	e178983a 	sll	fp,fp,r5
 200c644:	8160983a 	sll	r16,r16,r5
 200c648:	18a8b03a 	or	r20,r3,r2
 200c64c:	802ad43a 	srli	r21,r16,16
 200c650:	a009883a 	mov	r4,r20
 200c654:	85ffffcc 	andi	r23,r16,65535
 200c658:	a80b883a 	mov	r5,r21
 200c65c:	200e4980 	call	200e498 <__udivsi3>
 200c660:	a009883a 	mov	r4,r20
 200c664:	a80b883a 	mov	r5,r21
 200c668:	102d883a 	mov	r22,r2
 200c66c:	200e4a00 	call	200e4a0 <__umodsi3>
 200c670:	1004943a 	slli	r2,r2,16
 200c674:	e006d43a 	srli	r3,fp,16
 200c678:	bda3383a 	mul	r17,r23,r22
 200c67c:	10c4b03a 	or	r2,r2,r3
 200c680:	1440042e 	bgeu	r2,r17,200c694 <__udivdi3+0x254>
 200c684:	1405883a 	add	r2,r2,r16
 200c688:	b5bfffc4 	addi	r22,r22,-1
 200c68c:	14000136 	bltu	r2,r16,200c694 <__udivdi3+0x254>
 200c690:	1440d536 	bltu	r2,r17,200c9e8 <__udivdi3+0x5a8>
 200c694:	1463c83a 	sub	r17,r2,r17
 200c698:	8809883a 	mov	r4,r17
 200c69c:	a80b883a 	mov	r5,r21
 200c6a0:	200e4980 	call	200e498 <__udivsi3>
 200c6a4:	8809883a 	mov	r4,r17
 200c6a8:	a80b883a 	mov	r5,r21
 200c6ac:	1029883a 	mov	r20,r2
 200c6b0:	200e4a00 	call	200e4a0 <__umodsi3>
 200c6b4:	1004943a 	slli	r2,r2,16
 200c6b8:	bd09383a 	mul	r4,r23,r20
 200c6bc:	e0ffffcc 	andi	r3,fp,65535
 200c6c0:	10c4b03a 	or	r2,r2,r3
 200c6c4:	1100042e 	bgeu	r2,r4,200c6d8 <__udivdi3+0x298>
 200c6c8:	8085883a 	add	r2,r16,r2
 200c6cc:	a53fffc4 	addi	r20,r20,-1
 200c6d0:	14000136 	bltu	r2,r16,200c6d8 <__udivdi3+0x298>
 200c6d4:	1100c736 	bltu	r2,r4,200c9f4 <__udivdi3+0x5b4>
 200c6d8:	b004943a 	slli	r2,r22,16
 200c6dc:	0009883a 	mov	r4,zero
 200c6e0:	a084b03a 	or	r2,r20,r2
 200c6e4:	003fb706 	br	200c5c4 <__udivdi3+0x184>
 200c6e8:	00804034 	movhi	r2,256
 200c6ec:	10bfffc4 	addi	r2,r2,-1
 200c6f0:	11c0a436 	bltu	r2,r7,200c984 <__udivdi3+0x544>
 200c6f4:	01400404 	movi	r5,16
 200c6f8:	2805883a 	mov	r2,r5
 200c6fc:	003fa406 	br	200c590 <__udivdi3+0x150>
 200c700:	0005883a 	mov	r2,zero
 200c704:	0009883a 	mov	r4,zero
 200c708:	003fae06 	br	200c5c4 <__udivdi3+0x184>
 200c70c:	00804034 	movhi	r2,256
 200c710:	10bfffc4 	addi	r2,r2,-1
 200c714:	1400a136 	bltu	r2,r16,200c99c <__udivdi3+0x55c>
 200c718:	01400404 	movi	r5,16
 200c71c:	2805883a 	mov	r2,r5
 200c720:	003f6006 	br	200c4a4 <__udivdi3+0x64>
 200c724:	01000044 	movi	r4,1
 200c728:	000b883a 	mov	r5,zero
 200c72c:	200e4980 	call	200e498 <__udivsi3>
 200c730:	1021883a 	mov	r16,r2
 200c734:	00bfffd4 	movui	r2,65535
 200c738:	143ff436 	bltu	r2,r16,200c70c <__udivdi3+0x2cc>
 200c73c:	003f5506 	br	200c494 <__udivdi3+0x54>
 200c740:	00804034 	movhi	r2,256
 200c744:	10bfffc4 	addi	r2,r2,-1
 200c748:	12009a36 	bltu	r2,r8,200c9b4 <__udivdi3+0x574>
 200c74c:	01400404 	movi	r5,16
 200c750:	2805883a 	mov	r2,r5
 200c754:	003fae06 	br	200c610 <__udivdi3+0x1d0>
 200c758:	3dc5c83a 	sub	r2,r7,r23
 200c75c:	35c8983a 	sll	r4,r6,r23
 200c760:	8086d83a 	srl	r3,r16,r2
 200c764:	a0a2d83a 	srl	r17,r20,r2
 200c768:	e084d83a 	srl	r2,fp,r2
 200c76c:	20eab03a 	or	r21,r4,r3
 200c770:	a82cd43a 	srli	r22,r21,16
 200c774:	a5c6983a 	sll	r3,r20,r23
 200c778:	8809883a 	mov	r4,r17
 200c77c:	b00b883a 	mov	r5,r22
 200c780:	1886b03a 	or	r3,r3,r2
 200c784:	d8c00215 	stw	r3,8(sp)
 200c788:	200e4980 	call	200e498 <__udivsi3>
 200c78c:	8809883a 	mov	r4,r17
 200c790:	b00b883a 	mov	r5,r22
 200c794:	1029883a 	mov	r20,r2
 200c798:	200e4a00 	call	200e4a0 <__umodsi3>
 200c79c:	a8ffffcc 	andi	r3,r21,65535
 200c7a0:	d8c00515 	stw	r3,20(sp)
 200c7a4:	d9000217 	ldw	r4,8(sp)
 200c7a8:	d9400517 	ldw	r5,20(sp)
 200c7ac:	1004943a 	slli	r2,r2,16
 200c7b0:	2006d43a 	srli	r3,r4,16
 200c7b4:	85e0983a 	sll	r16,r16,r23
 200c7b8:	2d23383a 	mul	r17,r5,r20
 200c7bc:	10c4b03a 	or	r2,r2,r3
 200c7c0:	dc000015 	stw	r16,0(sp)
 200c7c4:	1440032e 	bgeu	r2,r17,200c7d4 <__udivdi3+0x394>
 200c7c8:	1545883a 	add	r2,r2,r21
 200c7cc:	a53fffc4 	addi	r20,r20,-1
 200c7d0:	15407f2e 	bgeu	r2,r21,200c9d0 <__udivdi3+0x590>
 200c7d4:	1463c83a 	sub	r17,r2,r17
 200c7d8:	8809883a 	mov	r4,r17
 200c7dc:	b00b883a 	mov	r5,r22
 200c7e0:	200e4980 	call	200e498 <__udivsi3>
 200c7e4:	8809883a 	mov	r4,r17
 200c7e8:	b00b883a 	mov	r5,r22
 200c7ec:	1021883a 	mov	r16,r2
 200c7f0:	200e4a00 	call	200e4a0 <__umodsi3>
 200c7f4:	d8c00517 	ldw	r3,20(sp)
 200c7f8:	d9000217 	ldw	r4,8(sp)
 200c7fc:	1004943a 	slli	r2,r2,16
 200c800:	1c0f383a 	mul	r7,r3,r16
 200c804:	20ffffcc 	andi	r3,r4,65535
 200c808:	10e2b03a 	or	r17,r2,r3
 200c80c:	89c0032e 	bgeu	r17,r7,200c81c <__udivdi3+0x3dc>
 200c810:	8d63883a 	add	r17,r17,r21
 200c814:	843fffc4 	addi	r16,r16,-1
 200c818:	8d40692e 	bgeu	r17,r21,200c9c0 <__udivdi3+0x580>
 200c81c:	a008943a 	slli	r4,r20,16
 200c820:	d9400017 	ldw	r5,0(sp)
 200c824:	89e3c83a 	sub	r17,r17,r7
 200c828:	8110b03a 	or	r8,r16,r4
 200c82c:	280cd43a 	srli	r6,r5,16
 200c830:	28ffffcc 	andi	r3,r5,65535
 200c834:	40bfffcc 	andi	r2,r8,65535
 200c838:	400ad43a 	srli	r5,r8,16
 200c83c:	10d3383a 	mul	r9,r2,r3
 200c840:	1185383a 	mul	r2,r2,r6
 200c844:	28c7383a 	mul	r3,r5,r3
 200c848:	4808d43a 	srli	r4,r9,16
 200c84c:	298b383a 	mul	r5,r5,r6
 200c850:	10c5883a 	add	r2,r2,r3
 200c854:	2089883a 	add	r4,r4,r2
 200c858:	20c0022e 	bgeu	r4,r3,200c864 <__udivdi3+0x424>
 200c85c:	00800074 	movhi	r2,1
 200c860:	288b883a 	add	r5,r5,r2
 200c864:	2004d43a 	srli	r2,r4,16
 200c868:	288b883a 	add	r5,r5,r2
 200c86c:	89403f36 	bltu	r17,r5,200c96c <__udivdi3+0x52c>
 200c870:	89403926 	beq	r17,r5,200c958 <__udivdi3+0x518>
 200c874:	4005883a 	mov	r2,r8
 200c878:	0009883a 	mov	r4,zero
 200c87c:	003f5106 	br	200c5c4 <__udivdi3+0x184>
 200c880:	85a0983a 	sll	r16,r16,r22
 200c884:	3585c83a 	sub	r2,r6,r22
 200c888:	a0a2d83a 	srl	r17,r20,r2
 200c88c:	802ad43a 	srli	r21,r16,16
 200c890:	e084d83a 	srl	r2,fp,r2
 200c894:	a586983a 	sll	r3,r20,r22
 200c898:	8809883a 	mov	r4,r17
 200c89c:	a80b883a 	mov	r5,r21
 200c8a0:	1886b03a 	or	r3,r3,r2
 200c8a4:	d8c00115 	stw	r3,4(sp)
 200c8a8:	200e4980 	call	200e498 <__udivsi3>
 200c8ac:	8809883a 	mov	r4,r17
 200c8b0:	a80b883a 	mov	r5,r21
 200c8b4:	d8800415 	stw	r2,16(sp)
 200c8b8:	200e4a00 	call	200e4a0 <__umodsi3>
 200c8bc:	d9000117 	ldw	r4,4(sp)
 200c8c0:	d9400417 	ldw	r5,16(sp)
 200c8c4:	1004943a 	slli	r2,r2,16
 200c8c8:	85ffffcc 	andi	r23,r16,65535
 200c8cc:	2006d43a 	srli	r3,r4,16
 200c8d0:	b963383a 	mul	r17,r23,r5
 200c8d4:	10c4b03a 	or	r2,r2,r3
 200c8d8:	1440042e 	bgeu	r2,r17,200c8ec <__udivdi3+0x4ac>
 200c8dc:	297fffc4 	addi	r5,r5,-1
 200c8e0:	1405883a 	add	r2,r2,r16
 200c8e4:	d9400415 	stw	r5,16(sp)
 200c8e8:	1400442e 	bgeu	r2,r16,200c9fc <__udivdi3+0x5bc>
 200c8ec:	1463c83a 	sub	r17,r2,r17
 200c8f0:	8809883a 	mov	r4,r17
 200c8f4:	a80b883a 	mov	r5,r21
 200c8f8:	200e4980 	call	200e498 <__udivsi3>
 200c8fc:	8809883a 	mov	r4,r17
 200c900:	a80b883a 	mov	r5,r21
 200c904:	1029883a 	mov	r20,r2
 200c908:	200e4a00 	call	200e4a0 <__umodsi3>
 200c90c:	d9400117 	ldw	r5,4(sp)
 200c910:	1004943a 	slli	r2,r2,16
 200c914:	bd09383a 	mul	r4,r23,r20
 200c918:	28ffffcc 	andi	r3,r5,65535
 200c91c:	10c6b03a 	or	r3,r2,r3
 200c920:	1900062e 	bgeu	r3,r4,200c93c <__udivdi3+0x4fc>
 200c924:	1c07883a 	add	r3,r3,r16
 200c928:	a53fffc4 	addi	r20,r20,-1
 200c92c:	1c000336 	bltu	r3,r16,200c93c <__udivdi3+0x4fc>
 200c930:	1900022e 	bgeu	r3,r4,200c93c <__udivdi3+0x4fc>
 200c934:	a53fffc4 	addi	r20,r20,-1
 200c938:	1c07883a 	add	r3,r3,r16
 200c93c:	d9400417 	ldw	r5,16(sp)
 200c940:	e5b8983a 	sll	fp,fp,r22
 200c944:	1923c83a 	sub	r17,r3,r4
 200c948:	2804943a 	slli	r2,r5,16
 200c94c:	a0a8b03a 	or	r20,r20,r2
 200c950:	dd000315 	stw	r20,12(sp)
 200c954:	003ee106 	br	200c4dc <__udivdi3+0x9c>
 200c958:	2004943a 	slli	r2,r4,16
 200c95c:	e5c8983a 	sll	r4,fp,r23
 200c960:	48ffffcc 	andi	r3,r9,65535
 200c964:	10c5883a 	add	r2,r2,r3
 200c968:	20bfc22e 	bgeu	r4,r2,200c874 <__udivdi3+0x434>
 200c96c:	40bfffc4 	addi	r2,r8,-1
 200c970:	0009883a 	mov	r4,zero
 200c974:	003f1306 	br	200c5c4 <__udivdi3+0x184>
 200c978:	01400204 	movi	r5,8
 200c97c:	2805883a 	mov	r2,r5
 200c980:	003f0306 	br	200c590 <__udivdi3+0x150>
 200c984:	01400604 	movi	r5,24
 200c988:	2805883a 	mov	r2,r5
 200c98c:	003f0006 	br	200c590 <__udivdi3+0x150>
 200c990:	01400204 	movi	r5,8
 200c994:	2805883a 	mov	r2,r5
 200c998:	003ec206 	br	200c4a4 <__udivdi3+0x64>
 200c99c:	01400604 	movi	r5,24
 200c9a0:	2805883a 	mov	r2,r5
 200c9a4:	003ebf06 	br	200c4a4 <__udivdi3+0x64>
 200c9a8:	01400204 	movi	r5,8
 200c9ac:	2805883a 	mov	r2,r5
 200c9b0:	003f1706 	br	200c610 <__udivdi3+0x1d0>
 200c9b4:	01400604 	movi	r5,24
 200c9b8:	2805883a 	mov	r2,r5
 200c9bc:	003f1406 	br	200c610 <__udivdi3+0x1d0>
 200c9c0:	89ff962e 	bgeu	r17,r7,200c81c <__udivdi3+0x3dc>
 200c9c4:	8d63883a 	add	r17,r17,r21
 200c9c8:	843fffc4 	addi	r16,r16,-1
 200c9cc:	003f9306 	br	200c81c <__udivdi3+0x3dc>
 200c9d0:	147f802e 	bgeu	r2,r17,200c7d4 <__udivdi3+0x394>
 200c9d4:	a53fffc4 	addi	r20,r20,-1
 200c9d8:	1545883a 	add	r2,r2,r21
 200c9dc:	003f7d06 	br	200c7d4 <__udivdi3+0x394>
 200c9e0:	a53fffc4 	addi	r20,r20,-1
 200c9e4:	003ede06 	br	200c560 <__udivdi3+0x120>
 200c9e8:	b5bfffc4 	addi	r22,r22,-1
 200c9ec:	1405883a 	add	r2,r2,r16
 200c9f0:	003f2806 	br	200c694 <__udivdi3+0x254>
 200c9f4:	a53fffc4 	addi	r20,r20,-1
 200c9f8:	003f3706 	br	200c6d8 <__udivdi3+0x298>
 200c9fc:	147fbb2e 	bgeu	r2,r17,200c8ec <__udivdi3+0x4ac>
 200ca00:	297fffc4 	addi	r5,r5,-1
 200ca04:	1405883a 	add	r2,r2,r16
 200ca08:	d9400415 	stw	r5,16(sp)
 200ca0c:	003fb706 	br	200c8ec <__udivdi3+0x4ac>
 200ca10:	b5bfffc4 	addi	r22,r22,-1
 200ca14:	1405883a 	add	r2,r2,r16
 200ca18:	003ec006 	br	200c51c <__udivdi3+0xdc>

0200ca1c <__umoddi3>:
 200ca1c:	defff104 	addi	sp,sp,-60
 200ca20:	dd800b15 	stw	r22,44(sp)
 200ca24:	dd000915 	stw	r20,36(sp)
 200ca28:	dc000515 	stw	r16,20(sp)
 200ca2c:	dfc00e15 	stw	ra,56(sp)
 200ca30:	df000d15 	stw	fp,52(sp)
 200ca34:	ddc00c15 	stw	r23,48(sp)
 200ca38:	dd400a15 	stw	r21,40(sp)
 200ca3c:	dcc00815 	stw	r19,32(sp)
 200ca40:	dc800715 	stw	r18,28(sp)
 200ca44:	dc400615 	stw	r17,24(sp)
 200ca48:	3021883a 	mov	r16,r6
 200ca4c:	202d883a 	mov	r22,r4
 200ca50:	2829883a 	mov	r20,r5
 200ca54:	38002b1e 	bne	r7,zero,200cb04 <__umoddi3+0xe8>
 200ca58:	29805036 	bltu	r5,r6,200cb9c <__umoddi3+0x180>
 200ca5c:	30008a26 	beq	r6,zero,200cc88 <__umoddi3+0x26c>
 200ca60:	00bfffd4 	movui	r2,65535
 200ca64:	14008236 	bltu	r2,r16,200cc70 <__umoddi3+0x254>
 200ca68:	00803fc4 	movi	r2,255
 200ca6c:	14013636 	bltu	r2,r16,200cf48 <__umoddi3+0x52c>
 200ca70:	000b883a 	mov	r5,zero
 200ca74:	0005883a 	mov	r2,zero
 200ca78:	8084d83a 	srl	r2,r16,r2
 200ca7c:	01008074 	movhi	r4,513
 200ca80:	2106a204 	addi	r4,r4,6792
 200ca84:	01800804 	movi	r6,32
 200ca88:	1105883a 	add	r2,r2,r4
 200ca8c:	10c00003 	ldbu	r3,0(r2)
 200ca90:	28c7883a 	add	r3,r5,r3
 200ca94:	30efc83a 	sub	r23,r6,r3
 200ca98:	b800941e 	bne	r23,zero,200ccec <__umoddi3+0x2d0>
 200ca9c:	802ad43a 	srli	r21,r16,16
 200caa0:	a423c83a 	sub	r17,r20,r16
 200caa4:	0039883a 	mov	fp,zero
 200caa8:	853fffcc 	andi	r20,r16,65535
 200caac:	8809883a 	mov	r4,r17
 200cab0:	a80b883a 	mov	r5,r21
 200cab4:	200e4980 	call	200e498 <__udivsi3>
 200cab8:	8809883a 	mov	r4,r17
 200cabc:	a80b883a 	mov	r5,r21
 200cac0:	a0a3383a 	mul	r17,r20,r2
 200cac4:	200e4a00 	call	200e4a0 <__umodsi3>
 200cac8:	1004943a 	slli	r2,r2,16
 200cacc:	b006d43a 	srli	r3,r22,16
 200cad0:	10c4b03a 	or	r2,r2,r3
 200cad4:	1440032e 	bgeu	r2,r17,200cae4 <__umoddi3+0xc8>
 200cad8:	1405883a 	add	r2,r2,r16
 200cadc:	14000136 	bltu	r2,r16,200cae4 <__umoddi3+0xc8>
 200cae0:	14413536 	bltu	r2,r17,200cfb8 <__umoddi3+0x59c>
 200cae4:	1463c83a 	sub	r17,r2,r17
 200cae8:	8809883a 	mov	r4,r17
 200caec:	a80b883a 	mov	r5,r21
 200caf0:	200e4980 	call	200e498 <__udivsi3>
 200caf4:	8809883a 	mov	r4,r17
 200caf8:	a0a3383a 	mul	r17,r20,r2
 200cafc:	a80b883a 	mov	r5,r21
 200cb00:	00004d06 	br	200cc38 <__umoddi3+0x21c>
 200cb04:	380d883a 	mov	r6,r7
 200cb08:	29c0102e 	bgeu	r5,r7,200cb4c <__umoddi3+0x130>
 200cb0c:	2011883a 	mov	r8,r4
 200cb10:	2813883a 	mov	r9,r5
 200cb14:	4005883a 	mov	r2,r8
 200cb18:	4807883a 	mov	r3,r9
 200cb1c:	dfc00e17 	ldw	ra,56(sp)
 200cb20:	df000d17 	ldw	fp,52(sp)
 200cb24:	ddc00c17 	ldw	r23,48(sp)
 200cb28:	dd800b17 	ldw	r22,44(sp)
 200cb2c:	dd400a17 	ldw	r21,40(sp)
 200cb30:	dd000917 	ldw	r20,36(sp)
 200cb34:	dcc00817 	ldw	r19,32(sp)
 200cb38:	dc800717 	ldw	r18,28(sp)
 200cb3c:	dc400617 	ldw	r17,24(sp)
 200cb40:	dc000517 	ldw	r16,20(sp)
 200cb44:	dec00f04 	addi	sp,sp,60
 200cb48:	f800283a 	ret
 200cb4c:	00bfffd4 	movui	r2,65535
 200cb50:	11c05a36 	bltu	r2,r7,200ccbc <__umoddi3+0x2a0>
 200cb54:	00803fc4 	movi	r2,255
 200cb58:	11c0fe36 	bltu	r2,r7,200cf54 <__umoddi3+0x538>
 200cb5c:	000b883a 	mov	r5,zero
 200cb60:	0005883a 	mov	r2,zero
 200cb64:	3084d83a 	srl	r2,r6,r2
 200cb68:	01008074 	movhi	r4,513
 200cb6c:	2106a204 	addi	r4,r4,6792
 200cb70:	01c00804 	movi	r7,32
 200cb74:	1105883a 	add	r2,r2,r4
 200cb78:	10c00003 	ldbu	r3,0(r2)
 200cb7c:	28c7883a 	add	r3,r5,r3
 200cb80:	38ebc83a 	sub	r21,r7,r3
 200cb84:	a800851e 	bne	r21,zero,200cd9c <__umoddi3+0x380>
 200cb88:	35005236 	bltu	r6,r20,200ccd4 <__umoddi3+0x2b8>
 200cb8c:	b400512e 	bgeu	r22,r16,200ccd4 <__umoddi3+0x2b8>
 200cb90:	b011883a 	mov	r8,r22
 200cb94:	a013883a 	mov	r9,r20
 200cb98:	003fde06 	br	200cb14 <__umoddi3+0xf8>
 200cb9c:	00bfffd4 	movui	r2,65535
 200cba0:	11804036 	bltu	r2,r6,200cca4 <__umoddi3+0x288>
 200cba4:	00803fc4 	movi	r2,255
 200cba8:	1180ed36 	bltu	r2,r6,200cf60 <__umoddi3+0x544>
 200cbac:	000b883a 	mov	r5,zero
 200cbb0:	0005883a 	mov	r2,zero
 200cbb4:	8084d83a 	srl	r2,r16,r2
 200cbb8:	01008074 	movhi	r4,513
 200cbbc:	2106a204 	addi	r4,r4,6792
 200cbc0:	01800804 	movi	r6,32
 200cbc4:	1105883a 	add	r2,r2,r4
 200cbc8:	10c00003 	ldbu	r3,0(r2)
 200cbcc:	28c7883a 	add	r3,r5,r3
 200cbd0:	30c7c83a 	sub	r3,r6,r3
 200cbd4:	1800bf1e 	bne	r3,zero,200ced4 <__umoddi3+0x4b8>
 200cbd8:	0039883a 	mov	fp,zero
 200cbdc:	802ad43a 	srli	r21,r16,16
 200cbe0:	a009883a 	mov	r4,r20
 200cbe4:	85ffffcc 	andi	r23,r16,65535
 200cbe8:	a80b883a 	mov	r5,r21
 200cbec:	200e4980 	call	200e498 <__udivsi3>
 200cbf0:	a009883a 	mov	r4,r20
 200cbf4:	a80b883a 	mov	r5,r21
 200cbf8:	b8a3383a 	mul	r17,r23,r2
 200cbfc:	200e4a00 	call	200e4a0 <__umodsi3>
 200cc00:	1004943a 	slli	r2,r2,16
 200cc04:	b006d43a 	srli	r3,r22,16
 200cc08:	10c4b03a 	or	r2,r2,r3
 200cc0c:	1440032e 	bgeu	r2,r17,200cc1c <__umoddi3+0x200>
 200cc10:	1405883a 	add	r2,r2,r16
 200cc14:	14000136 	bltu	r2,r16,200cc1c <__umoddi3+0x200>
 200cc18:	1440e536 	bltu	r2,r17,200cfb0 <__umoddi3+0x594>
 200cc1c:	1463c83a 	sub	r17,r2,r17
 200cc20:	8809883a 	mov	r4,r17
 200cc24:	a80b883a 	mov	r5,r21
 200cc28:	200e4980 	call	200e498 <__udivsi3>
 200cc2c:	8809883a 	mov	r4,r17
 200cc30:	b8a3383a 	mul	r17,r23,r2
 200cc34:	a80b883a 	mov	r5,r21
 200cc38:	200e4a00 	call	200e4a0 <__umodsi3>
 200cc3c:	1004943a 	slli	r2,r2,16
 200cc40:	b0ffffcc 	andi	r3,r22,65535
 200cc44:	10c4b03a 	or	r2,r2,r3
 200cc48:	1440042e 	bgeu	r2,r17,200cc5c <__umoddi3+0x240>
 200cc4c:	1405883a 	add	r2,r2,r16
 200cc50:	14000236 	bltu	r2,r16,200cc5c <__umoddi3+0x240>
 200cc54:	1440012e 	bgeu	r2,r17,200cc5c <__umoddi3+0x240>
 200cc58:	1405883a 	add	r2,r2,r16
 200cc5c:	1445c83a 	sub	r2,r2,r17
 200cc60:	1724d83a 	srl	r18,r2,fp
 200cc64:	0013883a 	mov	r9,zero
 200cc68:	9011883a 	mov	r8,r18
 200cc6c:	003fa906 	br	200cb14 <__umoddi3+0xf8>
 200cc70:	00804034 	movhi	r2,256
 200cc74:	10bfffc4 	addi	r2,r2,-1
 200cc78:	1400b036 	bltu	r2,r16,200cf3c <__umoddi3+0x520>
 200cc7c:	01400404 	movi	r5,16
 200cc80:	2805883a 	mov	r2,r5
 200cc84:	003f7c06 	br	200ca78 <__umoddi3+0x5c>
 200cc88:	01000044 	movi	r4,1
 200cc8c:	000b883a 	mov	r5,zero
 200cc90:	200e4980 	call	200e498 <__udivsi3>
 200cc94:	1021883a 	mov	r16,r2
 200cc98:	00bfffd4 	movui	r2,65535
 200cc9c:	143ff436 	bltu	r2,r16,200cc70 <__umoddi3+0x254>
 200cca0:	003f7106 	br	200ca68 <__umoddi3+0x4c>
 200cca4:	00804034 	movhi	r2,256
 200cca8:	10bfffc4 	addi	r2,r2,-1
 200ccac:	1180af36 	bltu	r2,r6,200cf6c <__umoddi3+0x550>
 200ccb0:	01400404 	movi	r5,16
 200ccb4:	2805883a 	mov	r2,r5
 200ccb8:	003fbe06 	br	200cbb4 <__umoddi3+0x198>
 200ccbc:	00804034 	movhi	r2,256
 200ccc0:	10bfffc4 	addi	r2,r2,-1
 200ccc4:	11c0ac36 	bltu	r2,r7,200cf78 <__umoddi3+0x55c>
 200ccc8:	01400404 	movi	r5,16
 200cccc:	2805883a 	mov	r2,r5
 200ccd0:	003fa406 	br	200cb64 <__umoddi3+0x148>
 200ccd4:	b409c83a 	sub	r4,r22,r16
 200ccd8:	b105803a 	cmpltu	r2,r22,r4
 200ccdc:	a187c83a 	sub	r3,r20,r6
 200cce0:	18a9c83a 	sub	r20,r3,r2
 200cce4:	202d883a 	mov	r22,r4
 200cce8:	003fa906 	br	200cb90 <__umoddi3+0x174>
 200ccec:	85e0983a 	sll	r16,r16,r23
 200ccf0:	35c5c83a 	sub	r2,r6,r23
 200ccf4:	a0a2d83a 	srl	r17,r20,r2
 200ccf8:	802ad43a 	srli	r21,r16,16
 200ccfc:	b084d83a 	srl	r2,r22,r2
 200cd00:	a5c6983a 	sll	r3,r20,r23
 200cd04:	8809883a 	mov	r4,r17
 200cd08:	a80b883a 	mov	r5,r21
 200cd0c:	1886b03a 	or	r3,r3,r2
 200cd10:	d8c00115 	stw	r3,4(sp)
 200cd14:	853fffcc 	andi	r20,r16,65535
 200cd18:	200e4980 	call	200e498 <__udivsi3>
 200cd1c:	8809883a 	mov	r4,r17
 200cd20:	a80b883a 	mov	r5,r21
 200cd24:	a0a3383a 	mul	r17,r20,r2
 200cd28:	200e4a00 	call	200e4a0 <__umodsi3>
 200cd2c:	d9000117 	ldw	r4,4(sp)
 200cd30:	1004943a 	slli	r2,r2,16
 200cd34:	b839883a 	mov	fp,r23
 200cd38:	2006d43a 	srli	r3,r4,16
 200cd3c:	10c4b03a 	or	r2,r2,r3
 200cd40:	1440022e 	bgeu	r2,r17,200cd4c <__umoddi3+0x330>
 200cd44:	1405883a 	add	r2,r2,r16
 200cd48:	1400962e 	bgeu	r2,r16,200cfa4 <__umoddi3+0x588>
 200cd4c:	1463c83a 	sub	r17,r2,r17
 200cd50:	8809883a 	mov	r4,r17
 200cd54:	a80b883a 	mov	r5,r21
 200cd58:	200e4980 	call	200e498 <__udivsi3>
 200cd5c:	8809883a 	mov	r4,r17
 200cd60:	a80b883a 	mov	r5,r21
 200cd64:	a0a3383a 	mul	r17,r20,r2
 200cd68:	200e4a00 	call	200e4a0 <__umodsi3>
 200cd6c:	d9400117 	ldw	r5,4(sp)
 200cd70:	1004943a 	slli	r2,r2,16
 200cd74:	28ffffcc 	andi	r3,r5,65535
 200cd78:	10c4b03a 	or	r2,r2,r3
 200cd7c:	1440042e 	bgeu	r2,r17,200cd90 <__umoddi3+0x374>
 200cd80:	1405883a 	add	r2,r2,r16
 200cd84:	14000236 	bltu	r2,r16,200cd90 <__umoddi3+0x374>
 200cd88:	1440012e 	bgeu	r2,r17,200cd90 <__umoddi3+0x374>
 200cd8c:	1405883a 	add	r2,r2,r16
 200cd90:	b5ec983a 	sll	r22,r22,r23
 200cd94:	1463c83a 	sub	r17,r2,r17
 200cd98:	003f4406 	br	200caac <__umoddi3+0x90>
 200cd9c:	3d4fc83a 	sub	r7,r7,r21
 200cda0:	3546983a 	sll	r3,r6,r21
 200cda4:	81c4d83a 	srl	r2,r16,r7
 200cda8:	a1e2d83a 	srl	r17,r20,r7
 200cdac:	a54c983a 	sll	r6,r20,r21
 200cdb0:	18aeb03a 	or	r23,r3,r2
 200cdb4:	b828d43a 	srli	r20,r23,16
 200cdb8:	b1c4d83a 	srl	r2,r22,r7
 200cdbc:	8809883a 	mov	r4,r17
 200cdc0:	a00b883a 	mov	r5,r20
 200cdc4:	308cb03a 	or	r6,r6,r2
 200cdc8:	d9c00315 	stw	r7,12(sp)
 200cdcc:	d9800215 	stw	r6,8(sp)
 200cdd0:	200e4980 	call	200e498 <__udivsi3>
 200cdd4:	8809883a 	mov	r4,r17
 200cdd8:	a00b883a 	mov	r5,r20
 200cddc:	1039883a 	mov	fp,r2
 200cde0:	200e4a00 	call	200e4a0 <__umodsi3>
 200cde4:	b8ffffcc 	andi	r3,r23,65535
 200cde8:	d8c00415 	stw	r3,16(sp)
 200cdec:	d9000217 	ldw	r4,8(sp)
 200cdf0:	d9400417 	ldw	r5,16(sp)
 200cdf4:	1004943a 	slli	r2,r2,16
 200cdf8:	2006d43a 	srli	r3,r4,16
 200cdfc:	8560983a 	sll	r16,r16,r21
 200ce00:	2f23383a 	mul	r17,r5,fp
 200ce04:	10c4b03a 	or	r2,r2,r3
 200ce08:	dc000015 	stw	r16,0(sp)
 200ce0c:	b56c983a 	sll	r22,r22,r21
 200ce10:	1440032e 	bgeu	r2,r17,200ce20 <__umoddi3+0x404>
 200ce14:	15c5883a 	add	r2,r2,r23
 200ce18:	e73fffc4 	addi	fp,fp,-1
 200ce1c:	15c05d2e 	bgeu	r2,r23,200cf94 <__umoddi3+0x578>
 200ce20:	1463c83a 	sub	r17,r2,r17
 200ce24:	8809883a 	mov	r4,r17
 200ce28:	a00b883a 	mov	r5,r20
 200ce2c:	200e4980 	call	200e498 <__udivsi3>
 200ce30:	8809883a 	mov	r4,r17
 200ce34:	a00b883a 	mov	r5,r20
 200ce38:	1021883a 	mov	r16,r2
 200ce3c:	200e4a00 	call	200e4a0 <__umodsi3>
 200ce40:	d8c00417 	ldw	r3,16(sp)
 200ce44:	d9000217 	ldw	r4,8(sp)
 200ce48:	1004943a 	slli	r2,r2,16
 200ce4c:	1c23383a 	mul	r17,r3,r16
 200ce50:	20ffffcc 	andi	r3,r4,65535
 200ce54:	10ceb03a 	or	r7,r2,r3
 200ce58:	3c40032e 	bgeu	r7,r17,200ce68 <__umoddi3+0x44c>
 200ce5c:	3dcf883a 	add	r7,r7,r23
 200ce60:	843fffc4 	addi	r16,r16,-1
 200ce64:	3dc0472e 	bgeu	r7,r23,200cf84 <__umoddi3+0x568>
 200ce68:	e004943a 	slli	r2,fp,16
 200ce6c:	d9400017 	ldw	r5,0(sp)
 200ce70:	3c4fc83a 	sub	r7,r7,r17
 200ce74:	8084b03a 	or	r2,r16,r2
 200ce78:	28ffffcc 	andi	r3,r5,65535
 200ce7c:	280cd43a 	srli	r6,r5,16
 200ce80:	100ad43a 	srli	r5,r2,16
 200ce84:	10bfffcc 	andi	r2,r2,65535
 200ce88:	10d1383a 	mul	r8,r2,r3
 200ce8c:	28c7383a 	mul	r3,r5,r3
 200ce90:	1185383a 	mul	r2,r2,r6
 200ce94:	4008d43a 	srli	r4,r8,16
 200ce98:	298b383a 	mul	r5,r5,r6
 200ce9c:	10c5883a 	add	r2,r2,r3
 200cea0:	2089883a 	add	r4,r4,r2
 200cea4:	20c0022e 	bgeu	r4,r3,200ceb0 <__umoddi3+0x494>
 200cea8:	00800074 	movhi	r2,1
 200ceac:	288b883a 	add	r5,r5,r2
 200ceb0:	2004d43a 	srli	r2,r4,16
 200ceb4:	2008943a 	slli	r4,r4,16
 200ceb8:	40ffffcc 	andi	r3,r8,65535
 200cebc:	288b883a 	add	r5,r5,r2
 200cec0:	20c9883a 	add	r4,r4,r3
 200cec4:	39400b36 	bltu	r7,r5,200cef4 <__umoddi3+0x4d8>
 200cec8:	39403d26 	beq	r7,r5,200cfc0 <__umoddi3+0x5a4>
 200cecc:	394bc83a 	sub	r5,r7,r5
 200ced0:	00000f06 	br	200cf10 <__umoddi3+0x4f4>
 200ced4:	30c5c83a 	sub	r2,r6,r3
 200ced8:	1839883a 	mov	fp,r3
 200cedc:	b084d83a 	srl	r2,r22,r2
 200cee0:	a0c6983a 	sll	r3,r20,r3
 200cee4:	8720983a 	sll	r16,r16,fp
 200cee8:	b72c983a 	sll	r22,r22,fp
 200ceec:	18a8b03a 	or	r20,r3,r2
 200cef0:	003f3a06 	br	200cbdc <__umoddi3+0x1c0>
 200cef4:	d8c00017 	ldw	r3,0(sp)
 200cef8:	20c5c83a 	sub	r2,r4,r3
 200cefc:	2089803a 	cmpltu	r4,r4,r2
 200cf00:	2dc7c83a 	sub	r3,r5,r23
 200cf04:	1907c83a 	sub	r3,r3,r4
 200cf08:	38cbc83a 	sub	r5,r7,r3
 200cf0c:	1009883a 	mov	r4,r2
 200cf10:	b105c83a 	sub	r2,r22,r4
 200cf14:	b087803a 	cmpltu	r3,r22,r2
 200cf18:	28c7c83a 	sub	r3,r5,r3
 200cf1c:	d9400317 	ldw	r5,12(sp)
 200cf20:	1544d83a 	srl	r2,r2,r21
 200cf24:	1948983a 	sll	r4,r3,r5
 200cf28:	1d46d83a 	srl	r3,r3,r21
 200cf2c:	20a4b03a 	or	r18,r4,r2
 200cf30:	9011883a 	mov	r8,r18
 200cf34:	1813883a 	mov	r9,r3
 200cf38:	003ef606 	br	200cb14 <__umoddi3+0xf8>
 200cf3c:	01400604 	movi	r5,24
 200cf40:	2805883a 	mov	r2,r5
 200cf44:	003ecc06 	br	200ca78 <__umoddi3+0x5c>
 200cf48:	01400204 	movi	r5,8
 200cf4c:	2805883a 	mov	r2,r5
 200cf50:	003ec906 	br	200ca78 <__umoddi3+0x5c>
 200cf54:	01400204 	movi	r5,8
 200cf58:	2805883a 	mov	r2,r5
 200cf5c:	003f0106 	br	200cb64 <__umoddi3+0x148>
 200cf60:	01400204 	movi	r5,8
 200cf64:	2805883a 	mov	r2,r5
 200cf68:	003f1206 	br	200cbb4 <__umoddi3+0x198>
 200cf6c:	01400604 	movi	r5,24
 200cf70:	2805883a 	mov	r2,r5
 200cf74:	003f0f06 	br	200cbb4 <__umoddi3+0x198>
 200cf78:	01400604 	movi	r5,24
 200cf7c:	2805883a 	mov	r2,r5
 200cf80:	003ef806 	br	200cb64 <__umoddi3+0x148>
 200cf84:	3c7fb82e 	bgeu	r7,r17,200ce68 <__umoddi3+0x44c>
 200cf88:	843fffc4 	addi	r16,r16,-1
 200cf8c:	3dcf883a 	add	r7,r7,r23
 200cf90:	003fb506 	br	200ce68 <__umoddi3+0x44c>
 200cf94:	147fa22e 	bgeu	r2,r17,200ce20 <__umoddi3+0x404>
 200cf98:	e73fffc4 	addi	fp,fp,-1
 200cf9c:	15c5883a 	add	r2,r2,r23
 200cfa0:	003f9f06 	br	200ce20 <__umoddi3+0x404>
 200cfa4:	147f692e 	bgeu	r2,r17,200cd4c <__umoddi3+0x330>
 200cfa8:	1405883a 	add	r2,r2,r16
 200cfac:	003f6706 	br	200cd4c <__umoddi3+0x330>
 200cfb0:	1405883a 	add	r2,r2,r16
 200cfb4:	003f1906 	br	200cc1c <__umoddi3+0x200>
 200cfb8:	1405883a 	add	r2,r2,r16
 200cfbc:	003ec906 	br	200cae4 <__umoddi3+0xc8>
 200cfc0:	b13fcc36 	bltu	r22,r4,200cef4 <__umoddi3+0x4d8>
 200cfc4:	000b883a 	mov	r5,zero
 200cfc8:	003fd106 	br	200cf10 <__umoddi3+0x4f4>

0200cfcc <__nesf2>:
 200cfcc:	defff304 	addi	sp,sp,-52
 200cfd0:	dc400b15 	stw	r17,44(sp)
 200cfd4:	dc400204 	addi	r17,sp,8
 200cfd8:	dc000a15 	stw	r16,40(sp)
 200cfdc:	d9000015 	stw	r4,0(sp)
 200cfe0:	d9400115 	stw	r5,4(sp)
 200cfe4:	d809883a 	mov	r4,sp
 200cfe8:	880b883a 	mov	r5,r17
 200cfec:	dc000604 	addi	r16,sp,24
 200cff0:	dfc00c15 	stw	ra,48(sp)
 200cff4:	200e5280 	call	200e528 <__unpack_f>
 200cff8:	d9000104 	addi	r4,sp,4
 200cffc:	800b883a 	mov	r5,r16
 200d000:	200e5280 	call	200e528 <__unpack_f>
 200d004:	d8800217 	ldw	r2,8(sp)
 200d008:	00c00044 	movi	r3,1
 200d00c:	180d883a 	mov	r6,r3
 200d010:	1880062e 	bgeu	r3,r2,200d02c <__nesf2+0x60>
 200d014:	d8800617 	ldw	r2,24(sp)
 200d018:	8809883a 	mov	r4,r17
 200d01c:	800b883a 	mov	r5,r16
 200d020:	1880022e 	bgeu	r3,r2,200d02c <__nesf2+0x60>
 200d024:	200e5f00 	call	200e5f0 <__fpcmp_parts_f>
 200d028:	100d883a 	mov	r6,r2
 200d02c:	3005883a 	mov	r2,r6
 200d030:	dfc00c17 	ldw	ra,48(sp)
 200d034:	dc400b17 	ldw	r17,44(sp)
 200d038:	dc000a17 	ldw	r16,40(sp)
 200d03c:	dec00d04 	addi	sp,sp,52
 200d040:	f800283a 	ret

0200d044 <__gtsf2>:
 200d044:	defff304 	addi	sp,sp,-52
 200d048:	dc400b15 	stw	r17,44(sp)
 200d04c:	dc400204 	addi	r17,sp,8
 200d050:	dc000a15 	stw	r16,40(sp)
 200d054:	d9000015 	stw	r4,0(sp)
 200d058:	d9400115 	stw	r5,4(sp)
 200d05c:	d809883a 	mov	r4,sp
 200d060:	880b883a 	mov	r5,r17
 200d064:	dc000604 	addi	r16,sp,24
 200d068:	dfc00c15 	stw	ra,48(sp)
 200d06c:	200e5280 	call	200e528 <__unpack_f>
 200d070:	d9000104 	addi	r4,sp,4
 200d074:	800b883a 	mov	r5,r16
 200d078:	200e5280 	call	200e528 <__unpack_f>
 200d07c:	d8800217 	ldw	r2,8(sp)
 200d080:	00c00044 	movi	r3,1
 200d084:	01bfffc4 	movi	r6,-1
 200d088:	1880062e 	bgeu	r3,r2,200d0a4 <__gtsf2+0x60>
 200d08c:	d8800617 	ldw	r2,24(sp)
 200d090:	8809883a 	mov	r4,r17
 200d094:	800b883a 	mov	r5,r16
 200d098:	1880022e 	bgeu	r3,r2,200d0a4 <__gtsf2+0x60>
 200d09c:	200e5f00 	call	200e5f0 <__fpcmp_parts_f>
 200d0a0:	100d883a 	mov	r6,r2
 200d0a4:	3005883a 	mov	r2,r6
 200d0a8:	dfc00c17 	ldw	ra,48(sp)
 200d0ac:	dc400b17 	ldw	r17,44(sp)
 200d0b0:	dc000a17 	ldw	r16,40(sp)
 200d0b4:	dec00d04 	addi	sp,sp,52
 200d0b8:	f800283a 	ret

0200d0bc <__ltsf2>:
 200d0bc:	defff304 	addi	sp,sp,-52
 200d0c0:	dc400b15 	stw	r17,44(sp)
 200d0c4:	dc400204 	addi	r17,sp,8
 200d0c8:	dc000a15 	stw	r16,40(sp)
 200d0cc:	d9000015 	stw	r4,0(sp)
 200d0d0:	d9400115 	stw	r5,4(sp)
 200d0d4:	d809883a 	mov	r4,sp
 200d0d8:	880b883a 	mov	r5,r17
 200d0dc:	dc000604 	addi	r16,sp,24
 200d0e0:	dfc00c15 	stw	ra,48(sp)
 200d0e4:	200e5280 	call	200e528 <__unpack_f>
 200d0e8:	d9000104 	addi	r4,sp,4
 200d0ec:	800b883a 	mov	r5,r16
 200d0f0:	200e5280 	call	200e528 <__unpack_f>
 200d0f4:	d8800217 	ldw	r2,8(sp)
 200d0f8:	00c00044 	movi	r3,1
 200d0fc:	180d883a 	mov	r6,r3
 200d100:	1880062e 	bgeu	r3,r2,200d11c <__ltsf2+0x60>
 200d104:	d8800617 	ldw	r2,24(sp)
 200d108:	8809883a 	mov	r4,r17
 200d10c:	800b883a 	mov	r5,r16
 200d110:	1880022e 	bgeu	r3,r2,200d11c <__ltsf2+0x60>
 200d114:	200e5f00 	call	200e5f0 <__fpcmp_parts_f>
 200d118:	100d883a 	mov	r6,r2
 200d11c:	3005883a 	mov	r2,r6
 200d120:	dfc00c17 	ldw	ra,48(sp)
 200d124:	dc400b17 	ldw	r17,44(sp)
 200d128:	dc000a17 	ldw	r16,40(sp)
 200d12c:	dec00d04 	addi	sp,sp,52
 200d130:	f800283a 	ret

0200d134 <_fpadd_parts>:
 200d134:	defff804 	addi	sp,sp,-32
 200d138:	dcc00315 	stw	r19,12(sp)
 200d13c:	2027883a 	mov	r19,r4
 200d140:	21000017 	ldw	r4,0(r4)
 200d144:	00c00044 	movi	r3,1
 200d148:	dd400515 	stw	r21,20(sp)
 200d14c:	dd000415 	stw	r20,16(sp)
 200d150:	ddc00715 	stw	r23,28(sp)
 200d154:	dd800615 	stw	r22,24(sp)
 200d158:	dc800215 	stw	r18,8(sp)
 200d15c:	dc400115 	stw	r17,4(sp)
 200d160:	dc000015 	stw	r16,0(sp)
 200d164:	282b883a 	mov	r21,r5
 200d168:	3029883a 	mov	r20,r6
 200d16c:	1900632e 	bgeu	r3,r4,200d2fc <_fpadd_parts+0x1c8>
 200d170:	28800017 	ldw	r2,0(r5)
 200d174:	1880812e 	bgeu	r3,r2,200d37c <_fpadd_parts+0x248>
 200d178:	00c00104 	movi	r3,4
 200d17c:	20c0dc26 	beq	r4,r3,200d4f0 <_fpadd_parts+0x3bc>
 200d180:	10c07e26 	beq	r2,r3,200d37c <_fpadd_parts+0x248>
 200d184:	00c00084 	movi	r3,2
 200d188:	10c06726 	beq	r2,r3,200d328 <_fpadd_parts+0x1f4>
 200d18c:	20c07b26 	beq	r4,r3,200d37c <_fpadd_parts+0x248>
 200d190:	9dc00217 	ldw	r23,8(r19)
 200d194:	28c00217 	ldw	r3,8(r5)
 200d198:	9c400317 	ldw	r17,12(r19)
 200d19c:	2bc00317 	ldw	r15,12(r5)
 200d1a0:	b8cdc83a 	sub	r6,r23,r3
 200d1a4:	9c800417 	ldw	r18,16(r19)
 200d1a8:	2c000417 	ldw	r16,16(r5)
 200d1ac:	3009883a 	mov	r4,r6
 200d1b0:	30009716 	blt	r6,zero,200d410 <_fpadd_parts+0x2dc>
 200d1b4:	00800fc4 	movi	r2,63
 200d1b8:	11806b16 	blt	r2,r6,200d368 <_fpadd_parts+0x234>
 200d1bc:	0100a40e 	bge	zero,r4,200d450 <_fpadd_parts+0x31c>
 200d1c0:	35bff804 	addi	r22,r6,-32
 200d1c4:	b000bc16 	blt	r22,zero,200d4b8 <_fpadd_parts+0x384>
 200d1c8:	8596d83a 	srl	r11,r16,r22
 200d1cc:	0019883a 	mov	r12,zero
 200d1d0:	0013883a 	mov	r9,zero
 200d1d4:	01000044 	movi	r4,1
 200d1d8:	0015883a 	mov	r10,zero
 200d1dc:	b000be16 	blt	r22,zero,200d4d8 <_fpadd_parts+0x3a4>
 200d1e0:	2590983a 	sll	r8,r4,r22
 200d1e4:	000f883a 	mov	r7,zero
 200d1e8:	00bfffc4 	movi	r2,-1
 200d1ec:	3889883a 	add	r4,r7,r2
 200d1f0:	408b883a 	add	r5,r8,r2
 200d1f4:	21cd803a 	cmpltu	r6,r4,r7
 200d1f8:	314b883a 	add	r5,r6,r5
 200d1fc:	7904703a 	and	r2,r15,r4
 200d200:	8146703a 	and	r3,r16,r5
 200d204:	10c4b03a 	or	r2,r2,r3
 200d208:	10000226 	beq	r2,zero,200d214 <_fpadd_parts+0xe0>
 200d20c:	02400044 	movi	r9,1
 200d210:	0015883a 	mov	r10,zero
 200d214:	5a5eb03a 	or	r15,r11,r9
 200d218:	62a0b03a 	or	r16,r12,r10
 200d21c:	99400117 	ldw	r5,4(r19)
 200d220:	a8800117 	ldw	r2,4(r21)
 200d224:	28806e26 	beq	r5,r2,200d3e0 <_fpadd_parts+0x2ac>
 200d228:	28006626 	beq	r5,zero,200d3c4 <_fpadd_parts+0x290>
 200d22c:	7c45c83a 	sub	r2,r15,r17
 200d230:	7889803a 	cmpltu	r4,r15,r2
 200d234:	8487c83a 	sub	r3,r16,r18
 200d238:	1909c83a 	sub	r4,r3,r4
 200d23c:	100d883a 	mov	r6,r2
 200d240:	200f883a 	mov	r7,r4
 200d244:	38007716 	blt	r7,zero,200d424 <_fpadd_parts+0x2f0>
 200d248:	a5c00215 	stw	r23,8(r20)
 200d24c:	a1c00415 	stw	r7,16(r20)
 200d250:	a0000115 	stw	zero,4(r20)
 200d254:	a1800315 	stw	r6,12(r20)
 200d258:	a2000317 	ldw	r8,12(r20)
 200d25c:	a2400417 	ldw	r9,16(r20)
 200d260:	00bfffc4 	movi	r2,-1
 200d264:	408b883a 	add	r5,r8,r2
 200d268:	2a09803a 	cmpltu	r4,r5,r8
 200d26c:	488d883a 	add	r6,r9,r2
 200d270:	01c40034 	movhi	r7,4096
 200d274:	39ffffc4 	addi	r7,r7,-1
 200d278:	218d883a 	add	r6,r4,r6
 200d27c:	39801736 	bltu	r7,r6,200d2dc <_fpadd_parts+0x1a8>
 200d280:	31c06526 	beq	r6,r7,200d418 <_fpadd_parts+0x2e4>
 200d284:	a3000217 	ldw	r12,8(r20)
 200d288:	4209883a 	add	r4,r8,r8
 200d28c:	00bfffc4 	movi	r2,-1
 200d290:	220f803a 	cmpltu	r7,r4,r8
 200d294:	4a4b883a 	add	r5,r9,r9
 200d298:	394f883a 	add	r7,r7,r5
 200d29c:	2095883a 	add	r10,r4,r2
 200d2a0:	3897883a 	add	r11,r7,r2
 200d2a4:	510d803a 	cmpltu	r6,r10,r4
 200d2a8:	6099883a 	add	r12,r12,r2
 200d2ac:	32d7883a 	add	r11,r6,r11
 200d2b0:	00840034 	movhi	r2,4096
 200d2b4:	10bfffc4 	addi	r2,r2,-1
 200d2b8:	2011883a 	mov	r8,r4
 200d2bc:	3813883a 	mov	r9,r7
 200d2c0:	a1000315 	stw	r4,12(r20)
 200d2c4:	a1c00415 	stw	r7,16(r20)
 200d2c8:	a3000215 	stw	r12,8(r20)
 200d2cc:	12c00336 	bltu	r2,r11,200d2dc <_fpadd_parts+0x1a8>
 200d2d0:	58bfed1e 	bne	r11,r2,200d288 <_fpadd_parts+0x154>
 200d2d4:	00bfff84 	movi	r2,-2
 200d2d8:	12bfeb2e 	bgeu	r2,r10,200d288 <_fpadd_parts+0x154>
 200d2dc:	a2800417 	ldw	r10,16(r20)
 200d2e0:	008000c4 	movi	r2,3
 200d2e4:	00c80034 	movhi	r3,8192
 200d2e8:	18ffffc4 	addi	r3,r3,-1
 200d2ec:	a2400317 	ldw	r9,12(r20)
 200d2f0:	a0800015 	stw	r2,0(r20)
 200d2f4:	1a802336 	bltu	r3,r10,200d384 <_fpadd_parts+0x250>
 200d2f8:	a027883a 	mov	r19,r20
 200d2fc:	9805883a 	mov	r2,r19
 200d300:	ddc00717 	ldw	r23,28(sp)
 200d304:	dd800617 	ldw	r22,24(sp)
 200d308:	dd400517 	ldw	r21,20(sp)
 200d30c:	dd000417 	ldw	r20,16(sp)
 200d310:	dcc00317 	ldw	r19,12(sp)
 200d314:	dc800217 	ldw	r18,8(sp)
 200d318:	dc400117 	ldw	r17,4(sp)
 200d31c:	dc000017 	ldw	r16,0(sp)
 200d320:	dec00804 	addi	sp,sp,32
 200d324:	f800283a 	ret
 200d328:	20fff41e 	bne	r4,r3,200d2fc <_fpadd_parts+0x1c8>
 200d32c:	31000015 	stw	r4,0(r6)
 200d330:	98800117 	ldw	r2,4(r19)
 200d334:	30800115 	stw	r2,4(r6)
 200d338:	98c00217 	ldw	r3,8(r19)
 200d33c:	30c00215 	stw	r3,8(r6)
 200d340:	98800317 	ldw	r2,12(r19)
 200d344:	30800315 	stw	r2,12(r6)
 200d348:	98c00417 	ldw	r3,16(r19)
 200d34c:	30c00415 	stw	r3,16(r6)
 200d350:	98800117 	ldw	r2,4(r19)
 200d354:	28c00117 	ldw	r3,4(r5)
 200d358:	3027883a 	mov	r19,r6
 200d35c:	10c4703a 	and	r2,r2,r3
 200d360:	30800115 	stw	r2,4(r6)
 200d364:	003fe506 	br	200d2fc <_fpadd_parts+0x1c8>
 200d368:	1dc02616 	blt	r3,r23,200d404 <_fpadd_parts+0x2d0>
 200d36c:	0023883a 	mov	r17,zero
 200d370:	182f883a 	mov	r23,r3
 200d374:	0025883a 	mov	r18,zero
 200d378:	003fa806 	br	200d21c <_fpadd_parts+0xe8>
 200d37c:	a827883a 	mov	r19,r21
 200d380:	003fde06 	br	200d2fc <_fpadd_parts+0x1c8>
 200d384:	01800044 	movi	r6,1
 200d388:	500497fa 	slli	r2,r10,31
 200d38c:	4808d07a 	srli	r4,r9,1
 200d390:	518ad83a 	srl	r5,r10,r6
 200d394:	a2000217 	ldw	r8,8(r20)
 200d398:	1108b03a 	or	r4,r2,r4
 200d39c:	0007883a 	mov	r3,zero
 200d3a0:	4984703a 	and	r2,r9,r6
 200d3a4:	208cb03a 	or	r6,r4,r2
 200d3a8:	28ceb03a 	or	r7,r5,r3
 200d3ac:	42000044 	addi	r8,r8,1
 200d3b0:	a027883a 	mov	r19,r20
 200d3b4:	a1c00415 	stw	r7,16(r20)
 200d3b8:	a2000215 	stw	r8,8(r20)
 200d3bc:	a1800315 	stw	r6,12(r20)
 200d3c0:	003fce06 	br	200d2fc <_fpadd_parts+0x1c8>
 200d3c4:	8bc5c83a 	sub	r2,r17,r15
 200d3c8:	8889803a 	cmpltu	r4,r17,r2
 200d3cc:	9407c83a 	sub	r3,r18,r16
 200d3d0:	1909c83a 	sub	r4,r3,r4
 200d3d4:	100d883a 	mov	r6,r2
 200d3d8:	200f883a 	mov	r7,r4
 200d3dc:	003f9906 	br	200d244 <_fpadd_parts+0x110>
 200d3e0:	7c45883a 	add	r2,r15,r17
 200d3e4:	13c9803a 	cmpltu	r4,r2,r15
 200d3e8:	8487883a 	add	r3,r16,r18
 200d3ec:	20c9883a 	add	r4,r4,r3
 200d3f0:	a1400115 	stw	r5,4(r20)
 200d3f4:	a5c00215 	stw	r23,8(r20)
 200d3f8:	a0800315 	stw	r2,12(r20)
 200d3fc:	a1000415 	stw	r4,16(r20)
 200d400:	003fb606 	br	200d2dc <_fpadd_parts+0x1a8>
 200d404:	001f883a 	mov	r15,zero
 200d408:	0021883a 	mov	r16,zero
 200d40c:	003f8306 	br	200d21c <_fpadd_parts+0xe8>
 200d410:	018dc83a 	sub	r6,zero,r6
 200d414:	003f6706 	br	200d1b4 <_fpadd_parts+0x80>
 200d418:	00bfff84 	movi	r2,-2
 200d41c:	117faf36 	bltu	r2,r5,200d2dc <_fpadd_parts+0x1a8>
 200d420:	003f9806 	br	200d284 <_fpadd_parts+0x150>
 200d424:	0005883a 	mov	r2,zero
 200d428:	1189c83a 	sub	r4,r2,r6
 200d42c:	1105803a 	cmpltu	r2,r2,r4
 200d430:	01cbc83a 	sub	r5,zero,r7
 200d434:	2885c83a 	sub	r2,r5,r2
 200d438:	01800044 	movi	r6,1
 200d43c:	a1800115 	stw	r6,4(r20)
 200d440:	a5c00215 	stw	r23,8(r20)
 200d444:	a1000315 	stw	r4,12(r20)
 200d448:	a0800415 	stw	r2,16(r20)
 200d44c:	003f8206 	br	200d258 <_fpadd_parts+0x124>
 200d450:	203f7226 	beq	r4,zero,200d21c <_fpadd_parts+0xe8>
 200d454:	35bff804 	addi	r22,r6,-32
 200d458:	b9af883a 	add	r23,r23,r6
 200d45c:	b0003116 	blt	r22,zero,200d524 <_fpadd_parts+0x3f0>
 200d460:	959ad83a 	srl	r13,r18,r22
 200d464:	001d883a 	mov	r14,zero
 200d468:	000f883a 	mov	r7,zero
 200d46c:	01000044 	movi	r4,1
 200d470:	0011883a 	mov	r8,zero
 200d474:	b0002516 	blt	r22,zero,200d50c <_fpadd_parts+0x3d8>
 200d478:	2594983a 	sll	r10,r4,r22
 200d47c:	0013883a 	mov	r9,zero
 200d480:	00bfffc4 	movi	r2,-1
 200d484:	4889883a 	add	r4,r9,r2
 200d488:	508b883a 	add	r5,r10,r2
 200d48c:	224d803a 	cmpltu	r6,r4,r9
 200d490:	314b883a 	add	r5,r6,r5
 200d494:	8904703a 	and	r2,r17,r4
 200d498:	9146703a 	and	r3,r18,r5
 200d49c:	10c4b03a 	or	r2,r2,r3
 200d4a0:	10000226 	beq	r2,zero,200d4ac <_fpadd_parts+0x378>
 200d4a4:	01c00044 	movi	r7,1
 200d4a8:	0011883a 	mov	r8,zero
 200d4ac:	69e2b03a 	or	r17,r13,r7
 200d4b0:	7224b03a 	or	r18,r14,r8
 200d4b4:	003f5906 	br	200d21c <_fpadd_parts+0xe8>
 200d4b8:	8407883a 	add	r3,r16,r16
 200d4bc:	008007c4 	movi	r2,31
 200d4c0:	1185c83a 	sub	r2,r2,r6
 200d4c4:	1886983a 	sll	r3,r3,r2
 200d4c8:	7996d83a 	srl	r11,r15,r6
 200d4cc:	8198d83a 	srl	r12,r16,r6
 200d4d0:	1ad6b03a 	or	r11,r3,r11
 200d4d4:	003f3e06 	br	200d1d0 <_fpadd_parts+0x9c>
 200d4d8:	2006d07a 	srli	r3,r4,1
 200d4dc:	008007c4 	movi	r2,31
 200d4e0:	1185c83a 	sub	r2,r2,r6
 200d4e4:	1890d83a 	srl	r8,r3,r2
 200d4e8:	218e983a 	sll	r7,r4,r6
 200d4ec:	003f3e06 	br	200d1e8 <_fpadd_parts+0xb4>
 200d4f0:	113f821e 	bne	r2,r4,200d2fc <_fpadd_parts+0x1c8>
 200d4f4:	28c00117 	ldw	r3,4(r5)
 200d4f8:	98800117 	ldw	r2,4(r19)
 200d4fc:	10ff7f26 	beq	r2,r3,200d2fc <_fpadd_parts+0x1c8>
 200d500:	04c08074 	movhi	r19,513
 200d504:	9cc69d04 	addi	r19,r19,6772
 200d508:	003f7c06 	br	200d2fc <_fpadd_parts+0x1c8>
 200d50c:	2006d07a 	srli	r3,r4,1
 200d510:	008007c4 	movi	r2,31
 200d514:	1185c83a 	sub	r2,r2,r6
 200d518:	1894d83a 	srl	r10,r3,r2
 200d51c:	2192983a 	sll	r9,r4,r6
 200d520:	003fd706 	br	200d480 <_fpadd_parts+0x34c>
 200d524:	9487883a 	add	r3,r18,r18
 200d528:	008007c4 	movi	r2,31
 200d52c:	1185c83a 	sub	r2,r2,r6
 200d530:	1886983a 	sll	r3,r3,r2
 200d534:	899ad83a 	srl	r13,r17,r6
 200d538:	919cd83a 	srl	r14,r18,r6
 200d53c:	1b5ab03a 	or	r13,r3,r13
 200d540:	003fc906 	br	200d468 <_fpadd_parts+0x334>

0200d544 <__subdf3>:
 200d544:	deffea04 	addi	sp,sp,-88
 200d548:	dcc01415 	stw	r19,80(sp)
 200d54c:	dcc00404 	addi	r19,sp,16
 200d550:	2011883a 	mov	r8,r4
 200d554:	2813883a 	mov	r9,r5
 200d558:	dc401315 	stw	r17,76(sp)
 200d55c:	d809883a 	mov	r4,sp
 200d560:	980b883a 	mov	r5,r19
 200d564:	dc400904 	addi	r17,sp,36
 200d568:	dfc01515 	stw	ra,84(sp)
 200d56c:	da400115 	stw	r9,4(sp)
 200d570:	d9c00315 	stw	r7,12(sp)
 200d574:	da000015 	stw	r8,0(sp)
 200d578:	d9800215 	stw	r6,8(sp)
 200d57c:	200e9d80 	call	200e9d8 <__unpack_d>
 200d580:	d9000204 	addi	r4,sp,8
 200d584:	880b883a 	mov	r5,r17
 200d588:	200e9d80 	call	200e9d8 <__unpack_d>
 200d58c:	d8800a17 	ldw	r2,40(sp)
 200d590:	880b883a 	mov	r5,r17
 200d594:	9809883a 	mov	r4,r19
 200d598:	d9800e04 	addi	r6,sp,56
 200d59c:	1080005c 	xori	r2,r2,1
 200d5a0:	d8800a15 	stw	r2,40(sp)
 200d5a4:	200d1340 	call	200d134 <_fpadd_parts>
 200d5a8:	1009883a 	mov	r4,r2
 200d5ac:	200e6c40 	call	200e6c4 <__pack_d>
 200d5b0:	dfc01517 	ldw	ra,84(sp)
 200d5b4:	dcc01417 	ldw	r19,80(sp)
 200d5b8:	dc401317 	ldw	r17,76(sp)
 200d5bc:	dec01604 	addi	sp,sp,88
 200d5c0:	f800283a 	ret

0200d5c4 <__adddf3>:
 200d5c4:	deffea04 	addi	sp,sp,-88
 200d5c8:	dcc01415 	stw	r19,80(sp)
 200d5cc:	dcc00404 	addi	r19,sp,16
 200d5d0:	2011883a 	mov	r8,r4
 200d5d4:	2813883a 	mov	r9,r5
 200d5d8:	dc401315 	stw	r17,76(sp)
 200d5dc:	d809883a 	mov	r4,sp
 200d5e0:	980b883a 	mov	r5,r19
 200d5e4:	dc400904 	addi	r17,sp,36
 200d5e8:	dfc01515 	stw	ra,84(sp)
 200d5ec:	da400115 	stw	r9,4(sp)
 200d5f0:	d9c00315 	stw	r7,12(sp)
 200d5f4:	da000015 	stw	r8,0(sp)
 200d5f8:	d9800215 	stw	r6,8(sp)
 200d5fc:	200e9d80 	call	200e9d8 <__unpack_d>
 200d600:	d9000204 	addi	r4,sp,8
 200d604:	880b883a 	mov	r5,r17
 200d608:	200e9d80 	call	200e9d8 <__unpack_d>
 200d60c:	d9800e04 	addi	r6,sp,56
 200d610:	9809883a 	mov	r4,r19
 200d614:	880b883a 	mov	r5,r17
 200d618:	200d1340 	call	200d134 <_fpadd_parts>
 200d61c:	1009883a 	mov	r4,r2
 200d620:	200e6c40 	call	200e6c4 <__pack_d>
 200d624:	dfc01517 	ldw	ra,84(sp)
 200d628:	dcc01417 	ldw	r19,80(sp)
 200d62c:	dc401317 	ldw	r17,76(sp)
 200d630:	dec01604 	addi	sp,sp,88
 200d634:	f800283a 	ret

0200d638 <__muldf3>:
 200d638:	deffe004 	addi	sp,sp,-128
 200d63c:	dc401815 	stw	r17,96(sp)
 200d640:	dc400404 	addi	r17,sp,16
 200d644:	2011883a 	mov	r8,r4
 200d648:	2813883a 	mov	r9,r5
 200d64c:	dc001715 	stw	r16,92(sp)
 200d650:	d809883a 	mov	r4,sp
 200d654:	880b883a 	mov	r5,r17
 200d658:	dc000904 	addi	r16,sp,36
 200d65c:	dfc01f15 	stw	ra,124(sp)
 200d660:	da400115 	stw	r9,4(sp)
 200d664:	d9c00315 	stw	r7,12(sp)
 200d668:	da000015 	stw	r8,0(sp)
 200d66c:	d9800215 	stw	r6,8(sp)
 200d670:	ddc01e15 	stw	r23,120(sp)
 200d674:	dd801d15 	stw	r22,116(sp)
 200d678:	dd401c15 	stw	r21,112(sp)
 200d67c:	dd001b15 	stw	r20,108(sp)
 200d680:	dcc01a15 	stw	r19,104(sp)
 200d684:	dc801915 	stw	r18,100(sp)
 200d688:	200e9d80 	call	200e9d8 <__unpack_d>
 200d68c:	d9000204 	addi	r4,sp,8
 200d690:	800b883a 	mov	r5,r16
 200d694:	200e9d80 	call	200e9d8 <__unpack_d>
 200d698:	d9000417 	ldw	r4,16(sp)
 200d69c:	00800044 	movi	r2,1
 200d6a0:	1100102e 	bgeu	r2,r4,200d6e4 <__muldf3+0xac>
 200d6a4:	d8c00917 	ldw	r3,36(sp)
 200d6a8:	10c0062e 	bgeu	r2,r3,200d6c4 <__muldf3+0x8c>
 200d6ac:	00800104 	movi	r2,4
 200d6b0:	20800a26 	beq	r4,r2,200d6dc <__muldf3+0xa4>
 200d6b4:	1880cc26 	beq	r3,r2,200d9e8 <__muldf3+0x3b0>
 200d6b8:	00800084 	movi	r2,2
 200d6bc:	20800926 	beq	r4,r2,200d6e4 <__muldf3+0xac>
 200d6c0:	1880191e 	bne	r3,r2,200d728 <__muldf3+0xf0>
 200d6c4:	d8c00a17 	ldw	r3,40(sp)
 200d6c8:	d8800517 	ldw	r2,20(sp)
 200d6cc:	8009883a 	mov	r4,r16
 200d6d0:	10c4c03a 	cmpne	r2,r2,r3
 200d6d4:	d8800a15 	stw	r2,40(sp)
 200d6d8:	00000706 	br	200d6f8 <__muldf3+0xc0>
 200d6dc:	00800084 	movi	r2,2
 200d6e0:	1880c326 	beq	r3,r2,200d9f0 <__muldf3+0x3b8>
 200d6e4:	d8800517 	ldw	r2,20(sp)
 200d6e8:	d8c00a17 	ldw	r3,40(sp)
 200d6ec:	8809883a 	mov	r4,r17
 200d6f0:	10c4c03a 	cmpne	r2,r2,r3
 200d6f4:	d8800515 	stw	r2,20(sp)
 200d6f8:	200e6c40 	call	200e6c4 <__pack_d>
 200d6fc:	dfc01f17 	ldw	ra,124(sp)
 200d700:	ddc01e17 	ldw	r23,120(sp)
 200d704:	dd801d17 	ldw	r22,116(sp)
 200d708:	dd401c17 	ldw	r21,112(sp)
 200d70c:	dd001b17 	ldw	r20,108(sp)
 200d710:	dcc01a17 	ldw	r19,104(sp)
 200d714:	dc801917 	ldw	r18,100(sp)
 200d718:	dc401817 	ldw	r17,96(sp)
 200d71c:	dc001717 	ldw	r16,92(sp)
 200d720:	dec02004 	addi	sp,sp,128
 200d724:	f800283a 	ret
 200d728:	dd800717 	ldw	r22,28(sp)
 200d72c:	dc800c17 	ldw	r18,48(sp)
 200d730:	002b883a 	mov	r21,zero
 200d734:	0023883a 	mov	r17,zero
 200d738:	a80b883a 	mov	r5,r21
 200d73c:	b00d883a 	mov	r6,r22
 200d740:	880f883a 	mov	r7,r17
 200d744:	ddc00817 	ldw	r23,32(sp)
 200d748:	dcc00d17 	ldw	r19,52(sp)
 200d74c:	9009883a 	mov	r4,r18
 200d750:	200c3040 	call	200c304 <__muldi3>
 200d754:	001b883a 	mov	r13,zero
 200d758:	680f883a 	mov	r7,r13
 200d75c:	b009883a 	mov	r4,r22
 200d760:	000b883a 	mov	r5,zero
 200d764:	980d883a 	mov	r6,r19
 200d768:	b82d883a 	mov	r22,r23
 200d76c:	002f883a 	mov	r23,zero
 200d770:	db401615 	stw	r13,88(sp)
 200d774:	d8801315 	stw	r2,76(sp)
 200d778:	d8c01415 	stw	r3,80(sp)
 200d77c:	dcc01515 	stw	r19,84(sp)
 200d780:	200c3040 	call	200c304 <__muldi3>
 200d784:	b00d883a 	mov	r6,r22
 200d788:	000b883a 	mov	r5,zero
 200d78c:	9009883a 	mov	r4,r18
 200d790:	b80f883a 	mov	r7,r23
 200d794:	1021883a 	mov	r16,r2
 200d798:	1823883a 	mov	r17,r3
 200d79c:	200c3040 	call	200c304 <__muldi3>
 200d7a0:	8085883a 	add	r2,r16,r2
 200d7a4:	140d803a 	cmpltu	r6,r2,r16
 200d7a8:	88c7883a 	add	r3,r17,r3
 200d7ac:	30cd883a 	add	r6,r6,r3
 200d7b0:	1029883a 	mov	r20,r2
 200d7b4:	302b883a 	mov	r21,r6
 200d7b8:	da801317 	ldw	r10,76(sp)
 200d7bc:	dac01417 	ldw	r11,80(sp)
 200d7c0:	db001517 	ldw	r12,84(sp)
 200d7c4:	db401617 	ldw	r13,88(sp)
 200d7c8:	3440612e 	bgeu	r6,r17,200d950 <__muldf3+0x318>
 200d7cc:	0009883a 	mov	r4,zero
 200d7d0:	5105883a 	add	r2,r10,r4
 200d7d4:	128d803a 	cmpltu	r6,r2,r10
 200d7d8:	5d07883a 	add	r3,r11,r20
 200d7dc:	30cd883a 	add	r6,r6,r3
 200d7e0:	0021883a 	mov	r16,zero
 200d7e4:	04400044 	movi	r17,1
 200d7e8:	1025883a 	mov	r18,r2
 200d7ec:	3027883a 	mov	r19,r6
 200d7f0:	32c06236 	bltu	r6,r11,200d97c <__muldf3+0x344>
 200d7f4:	59807a26 	beq	r11,r6,200d9e0 <__muldf3+0x3a8>
 200d7f8:	680b883a 	mov	r5,r13
 200d7fc:	b80f883a 	mov	r7,r23
 200d800:	6009883a 	mov	r4,r12
 200d804:	b00d883a 	mov	r6,r22
 200d808:	200c3040 	call	200c304 <__muldi3>
 200d80c:	1009883a 	mov	r4,r2
 200d810:	000f883a 	mov	r7,zero
 200d814:	1545883a 	add	r2,r2,r21
 200d818:	1111803a 	cmpltu	r8,r2,r4
 200d81c:	19c7883a 	add	r3,r3,r7
 200d820:	40c7883a 	add	r3,r8,r3
 200d824:	88cb883a 	add	r5,r17,r3
 200d828:	d8c00617 	ldw	r3,24(sp)
 200d82c:	8089883a 	add	r4,r16,r2
 200d830:	d8800b17 	ldw	r2,44(sp)
 200d834:	18c00104 	addi	r3,r3,4
 200d838:	240d803a 	cmpltu	r6,r4,r16
 200d83c:	10c7883a 	add	r3,r2,r3
 200d840:	2013883a 	mov	r9,r4
 200d844:	d8800a17 	ldw	r2,40(sp)
 200d848:	d9000517 	ldw	r4,20(sp)
 200d84c:	314d883a 	add	r6,r6,r5
 200d850:	3015883a 	mov	r10,r6
 200d854:	2088c03a 	cmpne	r4,r4,r2
 200d858:	00880034 	movhi	r2,8192
 200d85c:	10bfffc4 	addi	r2,r2,-1
 200d860:	d9000f15 	stw	r4,60(sp)
 200d864:	d8c01015 	stw	r3,64(sp)
 200d868:	1180162e 	bgeu	r2,r6,200d8c4 <__muldf3+0x28c>
 200d86c:	1811883a 	mov	r8,r3
 200d870:	101f883a 	mov	r15,r2
 200d874:	980497fa 	slli	r2,r19,31
 200d878:	9016d07a 	srli	r11,r18,1
 200d87c:	500697fa 	slli	r3,r10,31
 200d880:	480cd07a 	srli	r6,r9,1
 200d884:	500ed07a 	srli	r7,r10,1
 200d888:	12d6b03a 	or	r11,r2,r11
 200d88c:	00800044 	movi	r2,1
 200d890:	198cb03a 	or	r6,r3,r6
 200d894:	4888703a 	and	r4,r9,r2
 200d898:	9818d07a 	srli	r12,r19,1
 200d89c:	001b883a 	mov	r13,zero
 200d8a0:	03a00034 	movhi	r14,32768
 200d8a4:	3013883a 	mov	r9,r6
 200d8a8:	3815883a 	mov	r10,r7
 200d8ac:	4091883a 	add	r8,r8,r2
 200d8b0:	20000226 	beq	r4,zero,200d8bc <__muldf3+0x284>
 200d8b4:	5b64b03a 	or	r18,r11,r13
 200d8b8:	63a6b03a 	or	r19,r12,r14
 200d8bc:	7abfed36 	bltu	r15,r10,200d874 <__muldf3+0x23c>
 200d8c0:	da001015 	stw	r8,64(sp)
 200d8c4:	00840034 	movhi	r2,4096
 200d8c8:	10bfffc4 	addi	r2,r2,-1
 200d8cc:	12801436 	bltu	r2,r10,200d920 <__muldf3+0x2e8>
 200d8d0:	da001017 	ldw	r8,64(sp)
 200d8d4:	101f883a 	mov	r15,r2
 200d8d8:	4a45883a 	add	r2,r9,r9
 200d8dc:	124d803a 	cmpltu	r6,r2,r9
 200d8e0:	5287883a 	add	r3,r10,r10
 200d8e4:	9497883a 	add	r11,r18,r18
 200d8e8:	5c8f803a 	cmpltu	r7,r11,r18
 200d8ec:	9cd9883a 	add	r12,r19,r19
 200d8f0:	01000044 	movi	r4,1
 200d8f4:	30cd883a 	add	r6,r6,r3
 200d8f8:	3b0f883a 	add	r7,r7,r12
 200d8fc:	423fffc4 	addi	r8,r8,-1
 200d900:	1013883a 	mov	r9,r2
 200d904:	3015883a 	mov	r10,r6
 200d908:	111ab03a 	or	r13,r2,r4
 200d90c:	98003016 	blt	r19,zero,200d9d0 <__muldf3+0x398>
 200d910:	5825883a 	mov	r18,r11
 200d914:	3827883a 	mov	r19,r7
 200d918:	7abfef2e 	bgeu	r15,r10,200d8d8 <__muldf3+0x2a0>
 200d91c:	da001015 	stw	r8,64(sp)
 200d920:	00803fc4 	movi	r2,255
 200d924:	488e703a 	and	r7,r9,r2
 200d928:	00802004 	movi	r2,128
 200d92c:	0007883a 	mov	r3,zero
 200d930:	0011883a 	mov	r8,zero
 200d934:	38801826 	beq	r7,r2,200d998 <__muldf3+0x360>
 200d938:	008000c4 	movi	r2,3
 200d93c:	d9000e04 	addi	r4,sp,56
 200d940:	da801215 	stw	r10,72(sp)
 200d944:	d8800e15 	stw	r2,56(sp)
 200d948:	da401115 	stw	r9,68(sp)
 200d94c:	003f6a06 	br	200d6f8 <__muldf3+0xc0>
 200d950:	89802126 	beq	r17,r6,200d9d8 <__muldf3+0x3a0>
 200d954:	0009883a 	mov	r4,zero
 200d958:	5105883a 	add	r2,r10,r4
 200d95c:	128d803a 	cmpltu	r6,r2,r10
 200d960:	5d07883a 	add	r3,r11,r20
 200d964:	30cd883a 	add	r6,r6,r3
 200d968:	0021883a 	mov	r16,zero
 200d96c:	0023883a 	mov	r17,zero
 200d970:	1025883a 	mov	r18,r2
 200d974:	3027883a 	mov	r19,r6
 200d978:	32ff9e2e 	bgeu	r6,r11,200d7f4 <__muldf3+0x1bc>
 200d97c:	00800044 	movi	r2,1
 200d980:	8089883a 	add	r4,r16,r2
 200d984:	240d803a 	cmpltu	r6,r4,r16
 200d988:	344d883a 	add	r6,r6,r17
 200d98c:	2021883a 	mov	r16,r4
 200d990:	3023883a 	mov	r17,r6
 200d994:	003f9806 	br	200d7f8 <__muldf3+0x1c0>
 200d998:	403fe71e 	bne	r8,zero,200d938 <__muldf3+0x300>
 200d99c:	01004004 	movi	r4,256
 200d9a0:	4904703a 	and	r2,r9,r4
 200d9a4:	10c4b03a 	or	r2,r2,r3
 200d9a8:	103fe31e 	bne	r2,zero,200d938 <__muldf3+0x300>
 200d9ac:	94c4b03a 	or	r2,r18,r19
 200d9b0:	103fe126 	beq	r2,zero,200d938 <__muldf3+0x300>
 200d9b4:	49c5883a 	add	r2,r9,r7
 200d9b8:	1251803a 	cmpltu	r8,r2,r9
 200d9bc:	4291883a 	add	r8,r8,r10
 200d9c0:	013fc004 	movi	r4,-256
 200d9c4:	1112703a 	and	r9,r2,r4
 200d9c8:	4015883a 	mov	r10,r8
 200d9cc:	003fda06 	br	200d938 <__muldf3+0x300>
 200d9d0:	6813883a 	mov	r9,r13
 200d9d4:	003fce06 	br	200d910 <__muldf3+0x2d8>
 200d9d8:	143f7c36 	bltu	r2,r16,200d7cc <__muldf3+0x194>
 200d9dc:	003fdd06 	br	200d954 <__muldf3+0x31c>
 200d9e0:	12bf852e 	bgeu	r2,r10,200d7f8 <__muldf3+0x1c0>
 200d9e4:	003fe506 	br	200d97c <__muldf3+0x344>
 200d9e8:	00800084 	movi	r2,2
 200d9ec:	20bf351e 	bne	r4,r2,200d6c4 <__muldf3+0x8c>
 200d9f0:	01008074 	movhi	r4,513
 200d9f4:	21069d04 	addi	r4,r4,6772
 200d9f8:	003f3f06 	br	200d6f8 <__muldf3+0xc0>

0200d9fc <__divdf3>:
 200d9fc:	deffed04 	addi	sp,sp,-76
 200da00:	dcc01115 	stw	r19,68(sp)
 200da04:	dcc00404 	addi	r19,sp,16
 200da08:	2011883a 	mov	r8,r4
 200da0c:	2813883a 	mov	r9,r5
 200da10:	dc000e15 	stw	r16,56(sp)
 200da14:	d809883a 	mov	r4,sp
 200da18:	980b883a 	mov	r5,r19
 200da1c:	dc000904 	addi	r16,sp,36
 200da20:	dfc01215 	stw	ra,72(sp)
 200da24:	da400115 	stw	r9,4(sp)
 200da28:	d9c00315 	stw	r7,12(sp)
 200da2c:	da000015 	stw	r8,0(sp)
 200da30:	d9800215 	stw	r6,8(sp)
 200da34:	dc801015 	stw	r18,64(sp)
 200da38:	dc400f15 	stw	r17,60(sp)
 200da3c:	200e9d80 	call	200e9d8 <__unpack_d>
 200da40:	d9000204 	addi	r4,sp,8
 200da44:	800b883a 	mov	r5,r16
 200da48:	200e9d80 	call	200e9d8 <__unpack_d>
 200da4c:	d9000417 	ldw	r4,16(sp)
 200da50:	00800044 	movi	r2,1
 200da54:	11000b2e 	bgeu	r2,r4,200da84 <__divdf3+0x88>
 200da58:	d9400917 	ldw	r5,36(sp)
 200da5c:	1140762e 	bgeu	r2,r5,200dc38 <__divdf3+0x23c>
 200da60:	d8800517 	ldw	r2,20(sp)
 200da64:	d8c00a17 	ldw	r3,40(sp)
 200da68:	01800104 	movi	r6,4
 200da6c:	10c4f03a 	xor	r2,r2,r3
 200da70:	d8800515 	stw	r2,20(sp)
 200da74:	21800226 	beq	r4,r6,200da80 <__divdf3+0x84>
 200da78:	00800084 	movi	r2,2
 200da7c:	2080141e 	bne	r4,r2,200dad0 <__divdf3+0xd4>
 200da80:	29000926 	beq	r5,r4,200daa8 <__divdf3+0xac>
 200da84:	9809883a 	mov	r4,r19
 200da88:	200e6c40 	call	200e6c4 <__pack_d>
 200da8c:	dfc01217 	ldw	ra,72(sp)
 200da90:	dcc01117 	ldw	r19,68(sp)
 200da94:	dc801017 	ldw	r18,64(sp)
 200da98:	dc400f17 	ldw	r17,60(sp)
 200da9c:	dc000e17 	ldw	r16,56(sp)
 200daa0:	dec01304 	addi	sp,sp,76
 200daa4:	f800283a 	ret
 200daa8:	01008074 	movhi	r4,513
 200daac:	21069d04 	addi	r4,r4,6772
 200dab0:	200e6c40 	call	200e6c4 <__pack_d>
 200dab4:	dfc01217 	ldw	ra,72(sp)
 200dab8:	dcc01117 	ldw	r19,68(sp)
 200dabc:	dc801017 	ldw	r18,64(sp)
 200dac0:	dc400f17 	ldw	r17,60(sp)
 200dac4:	dc000e17 	ldw	r16,56(sp)
 200dac8:	dec01304 	addi	sp,sp,76
 200dacc:	f800283a 	ret
 200dad0:	29805b26 	beq	r5,r6,200dc40 <__divdf3+0x244>
 200dad4:	28802d26 	beq	r5,r2,200db8c <__divdf3+0x190>
 200dad8:	d8c00617 	ldw	r3,24(sp)
 200dadc:	d8800b17 	ldw	r2,44(sp)
 200dae0:	d9c00817 	ldw	r7,32(sp)
 200dae4:	dc400d17 	ldw	r17,52(sp)
 200dae8:	188bc83a 	sub	r5,r3,r2
 200daec:	d9800717 	ldw	r6,28(sp)
 200daf0:	dc000c17 	ldw	r16,48(sp)
 200daf4:	d9400615 	stw	r5,24(sp)
 200daf8:	3c403836 	bltu	r7,r17,200dbdc <__divdf3+0x1e0>
 200dafc:	89c03626 	beq	r17,r7,200dbd8 <__divdf3+0x1dc>
 200db00:	0015883a 	mov	r10,zero
 200db04:	001d883a 	mov	r14,zero
 200db08:	02c40034 	movhi	r11,4096
 200db0c:	001f883a 	mov	r15,zero
 200db10:	003f883a 	mov	ra,zero
 200db14:	04800f44 	movi	r18,61
 200db18:	00000f06 	br	200db58 <__divdf3+0x15c>
 200db1c:	601d883a 	mov	r14,r12
 200db20:	681f883a 	mov	r15,r13
 200db24:	400d883a 	mov	r6,r8
 200db28:	100f883a 	mov	r7,r2
 200db2c:	3191883a 	add	r8,r6,r6
 200db30:	5808d07a 	srli	r4,r11,1
 200db34:	4185803a 	cmpltu	r2,r8,r6
 200db38:	39d3883a 	add	r9,r7,r7
 200db3c:	28c6b03a 	or	r3,r5,r3
 200db40:	1245883a 	add	r2,r2,r9
 200db44:	1815883a 	mov	r10,r3
 200db48:	2017883a 	mov	r11,r4
 200db4c:	400d883a 	mov	r6,r8
 200db50:	100f883a 	mov	r7,r2
 200db54:	fc801726 	beq	ra,r18,200dbb4 <__divdf3+0x1b8>
 200db58:	580a97fa 	slli	r5,r11,31
 200db5c:	5006d07a 	srli	r3,r10,1
 200db60:	ffc00044 	addi	ra,ra,1
 200db64:	3c7ff136 	bltu	r7,r17,200db2c <__divdf3+0x130>
 200db68:	3411c83a 	sub	r8,r6,r16
 200db6c:	3205803a 	cmpltu	r2,r6,r8
 200db70:	3c53c83a 	sub	r9,r7,r17
 200db74:	7298b03a 	or	r12,r14,r10
 200db78:	7adab03a 	or	r13,r15,r11
 200db7c:	4885c83a 	sub	r2,r9,r2
 200db80:	89ffe61e 	bne	r17,r7,200db1c <__divdf3+0x120>
 200db84:	343fe936 	bltu	r6,r16,200db2c <__divdf3+0x130>
 200db88:	003fe406 	br	200db1c <__divdf3+0x120>
 200db8c:	9809883a 	mov	r4,r19
 200db90:	d9800415 	stw	r6,16(sp)
 200db94:	200e6c40 	call	200e6c4 <__pack_d>
 200db98:	dfc01217 	ldw	ra,72(sp)
 200db9c:	dcc01117 	ldw	r19,68(sp)
 200dba0:	dc801017 	ldw	r18,64(sp)
 200dba4:	dc400f17 	ldw	r17,60(sp)
 200dba8:	dc000e17 	ldw	r16,56(sp)
 200dbac:	dec01304 	addi	sp,sp,76
 200dbb0:	f800283a 	ret
 200dbb4:	00803fc4 	movi	r2,255
 200dbb8:	7090703a 	and	r8,r14,r2
 200dbbc:	00802004 	movi	r2,128
 200dbc0:	0007883a 	mov	r3,zero
 200dbc4:	0013883a 	mov	r9,zero
 200dbc8:	40800d26 	beq	r8,r2,200dc00 <__divdf3+0x204>
 200dbcc:	dbc00815 	stw	r15,32(sp)
 200dbd0:	db800715 	stw	r14,28(sp)
 200dbd4:	003fab06 	br	200da84 <__divdf3+0x88>
 200dbd8:	343fc92e 	bgeu	r6,r16,200db00 <__divdf3+0x104>
 200dbdc:	3185883a 	add	r2,r6,r6
 200dbe0:	1189803a 	cmpltu	r4,r2,r6
 200dbe4:	39c7883a 	add	r3,r7,r7
 200dbe8:	20c9883a 	add	r4,r4,r3
 200dbec:	297fffc4 	addi	r5,r5,-1
 200dbf0:	100d883a 	mov	r6,r2
 200dbf4:	200f883a 	mov	r7,r4
 200dbf8:	d9400615 	stw	r5,24(sp)
 200dbfc:	003fc006 	br	200db00 <__divdf3+0x104>
 200dc00:	483ff21e 	bne	r9,zero,200dbcc <__divdf3+0x1d0>
 200dc04:	01004004 	movi	r4,256
 200dc08:	7104703a 	and	r2,r14,r4
 200dc0c:	10c4b03a 	or	r2,r2,r3
 200dc10:	103fee1e 	bne	r2,zero,200dbcc <__divdf3+0x1d0>
 200dc14:	31c4b03a 	or	r2,r6,r7
 200dc18:	103fec26 	beq	r2,zero,200dbcc <__divdf3+0x1d0>
 200dc1c:	7205883a 	add	r2,r14,r8
 200dc20:	1391803a 	cmpltu	r8,r2,r14
 200dc24:	43d1883a 	add	r8,r8,r15
 200dc28:	013fc004 	movi	r4,-256
 200dc2c:	111c703a 	and	r14,r2,r4
 200dc30:	401f883a 	mov	r15,r8
 200dc34:	003fe506 	br	200dbcc <__divdf3+0x1d0>
 200dc38:	8009883a 	mov	r4,r16
 200dc3c:	003f9206 	br	200da88 <__divdf3+0x8c>
 200dc40:	9809883a 	mov	r4,r19
 200dc44:	d8000715 	stw	zero,28(sp)
 200dc48:	d8000815 	stw	zero,32(sp)
 200dc4c:	d8000615 	stw	zero,24(sp)
 200dc50:	003f8d06 	br	200da88 <__divdf3+0x8c>

0200dc54 <__eqdf2>:
 200dc54:	deffef04 	addi	sp,sp,-68
 200dc58:	dc400f15 	stw	r17,60(sp)
 200dc5c:	dc400404 	addi	r17,sp,16
 200dc60:	2005883a 	mov	r2,r4
 200dc64:	2807883a 	mov	r3,r5
 200dc68:	dc000e15 	stw	r16,56(sp)
 200dc6c:	d809883a 	mov	r4,sp
 200dc70:	880b883a 	mov	r5,r17
 200dc74:	dc000904 	addi	r16,sp,36
 200dc78:	d8c00115 	stw	r3,4(sp)
 200dc7c:	d8800015 	stw	r2,0(sp)
 200dc80:	d9800215 	stw	r6,8(sp)
 200dc84:	dfc01015 	stw	ra,64(sp)
 200dc88:	d9c00315 	stw	r7,12(sp)
 200dc8c:	200e9d80 	call	200e9d8 <__unpack_d>
 200dc90:	d9000204 	addi	r4,sp,8
 200dc94:	800b883a 	mov	r5,r16
 200dc98:	200e9d80 	call	200e9d8 <__unpack_d>
 200dc9c:	d8800417 	ldw	r2,16(sp)
 200dca0:	00c00044 	movi	r3,1
 200dca4:	180d883a 	mov	r6,r3
 200dca8:	1880062e 	bgeu	r3,r2,200dcc4 <__eqdf2+0x70>
 200dcac:	d8800917 	ldw	r2,36(sp)
 200dcb0:	8809883a 	mov	r4,r17
 200dcb4:	800b883a 	mov	r5,r16
 200dcb8:	1880022e 	bgeu	r3,r2,200dcc4 <__eqdf2+0x70>
 200dcbc:	200eb100 	call	200eb10 <__fpcmp_parts_d>
 200dcc0:	100d883a 	mov	r6,r2
 200dcc4:	3005883a 	mov	r2,r6
 200dcc8:	dfc01017 	ldw	ra,64(sp)
 200dccc:	dc400f17 	ldw	r17,60(sp)
 200dcd0:	dc000e17 	ldw	r16,56(sp)
 200dcd4:	dec01104 	addi	sp,sp,68
 200dcd8:	f800283a 	ret

0200dcdc <__nedf2>:
 200dcdc:	deffef04 	addi	sp,sp,-68
 200dce0:	dc400f15 	stw	r17,60(sp)
 200dce4:	dc400404 	addi	r17,sp,16
 200dce8:	2005883a 	mov	r2,r4
 200dcec:	2807883a 	mov	r3,r5
 200dcf0:	dc000e15 	stw	r16,56(sp)
 200dcf4:	d809883a 	mov	r4,sp
 200dcf8:	880b883a 	mov	r5,r17
 200dcfc:	dc000904 	addi	r16,sp,36
 200dd00:	d8c00115 	stw	r3,4(sp)
 200dd04:	d8800015 	stw	r2,0(sp)
 200dd08:	d9800215 	stw	r6,8(sp)
 200dd0c:	dfc01015 	stw	ra,64(sp)
 200dd10:	d9c00315 	stw	r7,12(sp)
 200dd14:	200e9d80 	call	200e9d8 <__unpack_d>
 200dd18:	d9000204 	addi	r4,sp,8
 200dd1c:	800b883a 	mov	r5,r16
 200dd20:	200e9d80 	call	200e9d8 <__unpack_d>
 200dd24:	d8800417 	ldw	r2,16(sp)
 200dd28:	00c00044 	movi	r3,1
 200dd2c:	180d883a 	mov	r6,r3
 200dd30:	1880062e 	bgeu	r3,r2,200dd4c <__nedf2+0x70>
 200dd34:	d8800917 	ldw	r2,36(sp)
 200dd38:	8809883a 	mov	r4,r17
 200dd3c:	800b883a 	mov	r5,r16
 200dd40:	1880022e 	bgeu	r3,r2,200dd4c <__nedf2+0x70>
 200dd44:	200eb100 	call	200eb10 <__fpcmp_parts_d>
 200dd48:	100d883a 	mov	r6,r2
 200dd4c:	3005883a 	mov	r2,r6
 200dd50:	dfc01017 	ldw	ra,64(sp)
 200dd54:	dc400f17 	ldw	r17,60(sp)
 200dd58:	dc000e17 	ldw	r16,56(sp)
 200dd5c:	dec01104 	addi	sp,sp,68
 200dd60:	f800283a 	ret

0200dd64 <__gtdf2>:
 200dd64:	deffef04 	addi	sp,sp,-68
 200dd68:	dc400f15 	stw	r17,60(sp)
 200dd6c:	dc400404 	addi	r17,sp,16
 200dd70:	2005883a 	mov	r2,r4
 200dd74:	2807883a 	mov	r3,r5
 200dd78:	dc000e15 	stw	r16,56(sp)
 200dd7c:	d809883a 	mov	r4,sp
 200dd80:	880b883a 	mov	r5,r17
 200dd84:	dc000904 	addi	r16,sp,36
 200dd88:	d8c00115 	stw	r3,4(sp)
 200dd8c:	d8800015 	stw	r2,0(sp)
 200dd90:	d9800215 	stw	r6,8(sp)
 200dd94:	dfc01015 	stw	ra,64(sp)
 200dd98:	d9c00315 	stw	r7,12(sp)
 200dd9c:	200e9d80 	call	200e9d8 <__unpack_d>
 200dda0:	d9000204 	addi	r4,sp,8
 200dda4:	800b883a 	mov	r5,r16
 200dda8:	200e9d80 	call	200e9d8 <__unpack_d>
 200ddac:	d8800417 	ldw	r2,16(sp)
 200ddb0:	00c00044 	movi	r3,1
 200ddb4:	01bfffc4 	movi	r6,-1
 200ddb8:	1880062e 	bgeu	r3,r2,200ddd4 <__gtdf2+0x70>
 200ddbc:	d8800917 	ldw	r2,36(sp)
 200ddc0:	8809883a 	mov	r4,r17
 200ddc4:	800b883a 	mov	r5,r16
 200ddc8:	1880022e 	bgeu	r3,r2,200ddd4 <__gtdf2+0x70>
 200ddcc:	200eb100 	call	200eb10 <__fpcmp_parts_d>
 200ddd0:	100d883a 	mov	r6,r2
 200ddd4:	3005883a 	mov	r2,r6
 200ddd8:	dfc01017 	ldw	ra,64(sp)
 200dddc:	dc400f17 	ldw	r17,60(sp)
 200dde0:	dc000e17 	ldw	r16,56(sp)
 200dde4:	dec01104 	addi	sp,sp,68
 200dde8:	f800283a 	ret

0200ddec <__gedf2>:
 200ddec:	deffef04 	addi	sp,sp,-68
 200ddf0:	dc400f15 	stw	r17,60(sp)
 200ddf4:	dc400404 	addi	r17,sp,16
 200ddf8:	2005883a 	mov	r2,r4
 200ddfc:	2807883a 	mov	r3,r5
 200de00:	dc000e15 	stw	r16,56(sp)
 200de04:	d809883a 	mov	r4,sp
 200de08:	880b883a 	mov	r5,r17
 200de0c:	dc000904 	addi	r16,sp,36
 200de10:	d8c00115 	stw	r3,4(sp)
 200de14:	d8800015 	stw	r2,0(sp)
 200de18:	d9800215 	stw	r6,8(sp)
 200de1c:	dfc01015 	stw	ra,64(sp)
 200de20:	d9c00315 	stw	r7,12(sp)
 200de24:	200e9d80 	call	200e9d8 <__unpack_d>
 200de28:	d9000204 	addi	r4,sp,8
 200de2c:	800b883a 	mov	r5,r16
 200de30:	200e9d80 	call	200e9d8 <__unpack_d>
 200de34:	d8800417 	ldw	r2,16(sp)
 200de38:	00c00044 	movi	r3,1
 200de3c:	01bfffc4 	movi	r6,-1
 200de40:	1880062e 	bgeu	r3,r2,200de5c <__gedf2+0x70>
 200de44:	d8800917 	ldw	r2,36(sp)
 200de48:	8809883a 	mov	r4,r17
 200de4c:	800b883a 	mov	r5,r16
 200de50:	1880022e 	bgeu	r3,r2,200de5c <__gedf2+0x70>
 200de54:	200eb100 	call	200eb10 <__fpcmp_parts_d>
 200de58:	100d883a 	mov	r6,r2
 200de5c:	3005883a 	mov	r2,r6
 200de60:	dfc01017 	ldw	ra,64(sp)
 200de64:	dc400f17 	ldw	r17,60(sp)
 200de68:	dc000e17 	ldw	r16,56(sp)
 200de6c:	dec01104 	addi	sp,sp,68
 200de70:	f800283a 	ret

0200de74 <__ltdf2>:
 200de74:	deffef04 	addi	sp,sp,-68
 200de78:	dc400f15 	stw	r17,60(sp)
 200de7c:	dc400404 	addi	r17,sp,16
 200de80:	2005883a 	mov	r2,r4
 200de84:	2807883a 	mov	r3,r5
 200de88:	dc000e15 	stw	r16,56(sp)
 200de8c:	d809883a 	mov	r4,sp
 200de90:	880b883a 	mov	r5,r17
 200de94:	dc000904 	addi	r16,sp,36
 200de98:	d8c00115 	stw	r3,4(sp)
 200de9c:	d8800015 	stw	r2,0(sp)
 200dea0:	d9800215 	stw	r6,8(sp)
 200dea4:	dfc01015 	stw	ra,64(sp)
 200dea8:	d9c00315 	stw	r7,12(sp)
 200deac:	200e9d80 	call	200e9d8 <__unpack_d>
 200deb0:	d9000204 	addi	r4,sp,8
 200deb4:	800b883a 	mov	r5,r16
 200deb8:	200e9d80 	call	200e9d8 <__unpack_d>
 200debc:	d8800417 	ldw	r2,16(sp)
 200dec0:	00c00044 	movi	r3,1
 200dec4:	180d883a 	mov	r6,r3
 200dec8:	1880062e 	bgeu	r3,r2,200dee4 <__ltdf2+0x70>
 200decc:	d8800917 	ldw	r2,36(sp)
 200ded0:	8809883a 	mov	r4,r17
 200ded4:	800b883a 	mov	r5,r16
 200ded8:	1880022e 	bgeu	r3,r2,200dee4 <__ltdf2+0x70>
 200dedc:	200eb100 	call	200eb10 <__fpcmp_parts_d>
 200dee0:	100d883a 	mov	r6,r2
 200dee4:	3005883a 	mov	r2,r6
 200dee8:	dfc01017 	ldw	ra,64(sp)
 200deec:	dc400f17 	ldw	r17,60(sp)
 200def0:	dc000e17 	ldw	r16,56(sp)
 200def4:	dec01104 	addi	sp,sp,68
 200def8:	f800283a 	ret

0200defc <__ledf2>:
 200defc:	deffef04 	addi	sp,sp,-68
 200df00:	dc400f15 	stw	r17,60(sp)
 200df04:	dc400404 	addi	r17,sp,16
 200df08:	2005883a 	mov	r2,r4
 200df0c:	2807883a 	mov	r3,r5
 200df10:	dc000e15 	stw	r16,56(sp)
 200df14:	d809883a 	mov	r4,sp
 200df18:	880b883a 	mov	r5,r17
 200df1c:	dc000904 	addi	r16,sp,36
 200df20:	d8c00115 	stw	r3,4(sp)
 200df24:	d8800015 	stw	r2,0(sp)
 200df28:	d9800215 	stw	r6,8(sp)
 200df2c:	dfc01015 	stw	ra,64(sp)
 200df30:	d9c00315 	stw	r7,12(sp)
 200df34:	200e9d80 	call	200e9d8 <__unpack_d>
 200df38:	d9000204 	addi	r4,sp,8
 200df3c:	800b883a 	mov	r5,r16
 200df40:	200e9d80 	call	200e9d8 <__unpack_d>
 200df44:	d8800417 	ldw	r2,16(sp)
 200df48:	00c00044 	movi	r3,1
 200df4c:	180d883a 	mov	r6,r3
 200df50:	1880062e 	bgeu	r3,r2,200df6c <__ledf2+0x70>
 200df54:	d8800917 	ldw	r2,36(sp)
 200df58:	8809883a 	mov	r4,r17
 200df5c:	800b883a 	mov	r5,r16
 200df60:	1880022e 	bgeu	r3,r2,200df6c <__ledf2+0x70>
 200df64:	200eb100 	call	200eb10 <__fpcmp_parts_d>
 200df68:	100d883a 	mov	r6,r2
 200df6c:	3005883a 	mov	r2,r6
 200df70:	dfc01017 	ldw	ra,64(sp)
 200df74:	dc400f17 	ldw	r17,60(sp)
 200df78:	dc000e17 	ldw	r16,56(sp)
 200df7c:	dec01104 	addi	sp,sp,68
 200df80:	f800283a 	ret

0200df84 <__floatsidf>:
 200df84:	2006d7fa 	srli	r3,r4,31
 200df88:	defff604 	addi	sp,sp,-40
 200df8c:	008000c4 	movi	r2,3
 200df90:	dfc00915 	stw	ra,36(sp)
 200df94:	dcc00815 	stw	r19,32(sp)
 200df98:	dc800715 	stw	r18,28(sp)
 200df9c:	dc400615 	stw	r17,24(sp)
 200dfa0:	dc000515 	stw	r16,20(sp)
 200dfa4:	d8800015 	stw	r2,0(sp)
 200dfa8:	d8c00115 	stw	r3,4(sp)
 200dfac:	20000f1e 	bne	r4,zero,200dfec <__floatsidf+0x68>
 200dfb0:	00800084 	movi	r2,2
 200dfb4:	d8800015 	stw	r2,0(sp)
 200dfb8:	d809883a 	mov	r4,sp
 200dfbc:	200e6c40 	call	200e6c4 <__pack_d>
 200dfc0:	1009883a 	mov	r4,r2
 200dfc4:	180b883a 	mov	r5,r3
 200dfc8:	2005883a 	mov	r2,r4
 200dfcc:	2807883a 	mov	r3,r5
 200dfd0:	dfc00917 	ldw	ra,36(sp)
 200dfd4:	dcc00817 	ldw	r19,32(sp)
 200dfd8:	dc800717 	ldw	r18,28(sp)
 200dfdc:	dc400617 	ldw	r17,24(sp)
 200dfe0:	dc000517 	ldw	r16,20(sp)
 200dfe4:	dec00a04 	addi	sp,sp,40
 200dfe8:	f800283a 	ret
 200dfec:	00800f04 	movi	r2,60
 200dff0:	1807003a 	cmpeq	r3,r3,zero
 200dff4:	d8800215 	stw	r2,8(sp)
 200dff8:	18001126 	beq	r3,zero,200e040 <__floatsidf+0xbc>
 200dffc:	0027883a 	mov	r19,zero
 200e000:	2025883a 	mov	r18,r4
 200e004:	d9000315 	stw	r4,12(sp)
 200e008:	dcc00415 	stw	r19,16(sp)
 200e00c:	200e4a80 	call	200e4a8 <__clzsi2>
 200e010:	11000744 	addi	r4,r2,29
 200e014:	013fe80e 	bge	zero,r4,200dfb8 <__floatsidf+0x34>
 200e018:	10bfff44 	addi	r2,r2,-3
 200e01c:	10000c16 	blt	r2,zero,200e050 <__floatsidf+0xcc>
 200e020:	90a2983a 	sll	r17,r18,r2
 200e024:	0021883a 	mov	r16,zero
 200e028:	d8800217 	ldw	r2,8(sp)
 200e02c:	dc400415 	stw	r17,16(sp)
 200e030:	dc000315 	stw	r16,12(sp)
 200e034:	1105c83a 	sub	r2,r2,r4
 200e038:	d8800215 	stw	r2,8(sp)
 200e03c:	003fde06 	br	200dfb8 <__floatsidf+0x34>
 200e040:	00a00034 	movhi	r2,32768
 200e044:	20800a26 	beq	r4,r2,200e070 <__floatsidf+0xec>
 200e048:	0109c83a 	sub	r4,zero,r4
 200e04c:	003feb06 	br	200dffc <__floatsidf+0x78>
 200e050:	9006d07a 	srli	r3,r18,1
 200e054:	008007c4 	movi	r2,31
 200e058:	1105c83a 	sub	r2,r2,r4
 200e05c:	1886d83a 	srl	r3,r3,r2
 200e060:	9922983a 	sll	r17,r19,r4
 200e064:	9120983a 	sll	r16,r18,r4
 200e068:	1c62b03a 	or	r17,r3,r17
 200e06c:	003fee06 	br	200e028 <__floatsidf+0xa4>
 200e070:	0009883a 	mov	r4,zero
 200e074:	01707834 	movhi	r5,49632
 200e078:	003fd306 	br	200dfc8 <__floatsidf+0x44>

0200e07c <__fixdfsi>:
 200e07c:	defff804 	addi	sp,sp,-32
 200e080:	2005883a 	mov	r2,r4
 200e084:	2807883a 	mov	r3,r5
 200e088:	d809883a 	mov	r4,sp
 200e08c:	d9400204 	addi	r5,sp,8
 200e090:	d8c00115 	stw	r3,4(sp)
 200e094:	d8800015 	stw	r2,0(sp)
 200e098:	dfc00715 	stw	ra,28(sp)
 200e09c:	200e9d80 	call	200e9d8 <__unpack_d>
 200e0a0:	d8c00217 	ldw	r3,8(sp)
 200e0a4:	00800084 	movi	r2,2
 200e0a8:	1880051e 	bne	r3,r2,200e0c0 <__fixdfsi+0x44>
 200e0ac:	0007883a 	mov	r3,zero
 200e0b0:	1805883a 	mov	r2,r3
 200e0b4:	dfc00717 	ldw	ra,28(sp)
 200e0b8:	dec00804 	addi	sp,sp,32
 200e0bc:	f800283a 	ret
 200e0c0:	00800044 	movi	r2,1
 200e0c4:	10fff92e 	bgeu	r2,r3,200e0ac <__fixdfsi+0x30>
 200e0c8:	00800104 	movi	r2,4
 200e0cc:	18800426 	beq	r3,r2,200e0e0 <__fixdfsi+0x64>
 200e0d0:	d8c00417 	ldw	r3,16(sp)
 200e0d4:	183ff516 	blt	r3,zero,200e0ac <__fixdfsi+0x30>
 200e0d8:	00800784 	movi	r2,30
 200e0dc:	10c0080e 	bge	r2,r3,200e100 <__fixdfsi+0x84>
 200e0e0:	d8800317 	ldw	r2,12(sp)
 200e0e4:	1000121e 	bne	r2,zero,200e130 <__fixdfsi+0xb4>
 200e0e8:	00e00034 	movhi	r3,32768
 200e0ec:	18ffffc4 	addi	r3,r3,-1
 200e0f0:	1805883a 	mov	r2,r3
 200e0f4:	dfc00717 	ldw	ra,28(sp)
 200e0f8:	dec00804 	addi	sp,sp,32
 200e0fc:	f800283a 	ret
 200e100:	00800f04 	movi	r2,60
 200e104:	10d1c83a 	sub	r8,r2,r3
 200e108:	40bff804 	addi	r2,r8,-32
 200e10c:	d9800517 	ldw	r6,20(sp)
 200e110:	d9c00617 	ldw	r7,24(sp)
 200e114:	10000816 	blt	r2,zero,200e138 <__fixdfsi+0xbc>
 200e118:	3888d83a 	srl	r4,r7,r2
 200e11c:	d8800317 	ldw	r2,12(sp)
 200e120:	2007883a 	mov	r3,r4
 200e124:	103fe226 	beq	r2,zero,200e0b0 <__fixdfsi+0x34>
 200e128:	0107c83a 	sub	r3,zero,r4
 200e12c:	003fe006 	br	200e0b0 <__fixdfsi+0x34>
 200e130:	00e00034 	movhi	r3,32768
 200e134:	003fde06 	br	200e0b0 <__fixdfsi+0x34>
 200e138:	39c7883a 	add	r3,r7,r7
 200e13c:	008007c4 	movi	r2,31
 200e140:	1205c83a 	sub	r2,r2,r8
 200e144:	1886983a 	sll	r3,r3,r2
 200e148:	3208d83a 	srl	r4,r6,r8
 200e14c:	1908b03a 	or	r4,r3,r4
 200e150:	003ff206 	br	200e11c <__fixdfsi+0xa0>

0200e154 <__truncdfsf2>:
 200e154:	defff804 	addi	sp,sp,-32
 200e158:	2005883a 	mov	r2,r4
 200e15c:	2807883a 	mov	r3,r5
 200e160:	d809883a 	mov	r4,sp
 200e164:	d9400204 	addi	r5,sp,8
 200e168:	d8c00115 	stw	r3,4(sp)
 200e16c:	d8800015 	stw	r2,0(sp)
 200e170:	dfc00715 	stw	ra,28(sp)
 200e174:	200e9d80 	call	200e9d8 <__unpack_d>
 200e178:	d9c00517 	ldw	r7,20(sp)
 200e17c:	da000617 	ldw	r8,24(sp)
 200e180:	02d00034 	movhi	r11,16384
 200e184:	5affffc4 	addi	r11,r11,-1
 200e188:	3812d7ba 	srli	r9,r7,30
 200e18c:	401a90ba 	slli	r13,r8,2
 200e190:	3ac4703a 	and	r2,r7,r11
 200e194:	0007883a 	mov	r3,zero
 200e198:	6a52b03a 	or	r9,r13,r9
 200e19c:	10c4b03a 	or	r2,r2,r3
 200e1a0:	d9000217 	ldw	r4,8(sp)
 200e1a4:	d9400317 	ldw	r5,12(sp)
 200e1a8:	d9800417 	ldw	r6,16(sp)
 200e1ac:	480f883a 	mov	r7,r9
 200e1b0:	10000126 	beq	r2,zero,200e1b8 <__truncdfsf2+0x64>
 200e1b4:	49c00054 	ori	r7,r9,1
 200e1b8:	200e6980 	call	200e698 <__make_fp>
 200e1bc:	dfc00717 	ldw	ra,28(sp)
 200e1c0:	dec00804 	addi	sp,sp,32
 200e1c4:	f800283a 	ret

0200e1c8 <__floatunsidf>:
 200e1c8:	defff204 	addi	sp,sp,-56
 200e1cc:	dfc00d15 	stw	ra,52(sp)
 200e1d0:	ddc00c15 	stw	r23,48(sp)
 200e1d4:	dd800b15 	stw	r22,44(sp)
 200e1d8:	dd400a15 	stw	r21,40(sp)
 200e1dc:	dd000915 	stw	r20,36(sp)
 200e1e0:	dcc00815 	stw	r19,32(sp)
 200e1e4:	dc800715 	stw	r18,28(sp)
 200e1e8:	dc400615 	stw	r17,24(sp)
 200e1ec:	dc000515 	stw	r16,20(sp)
 200e1f0:	d8000115 	stw	zero,4(sp)
 200e1f4:	20000f1e 	bne	r4,zero,200e234 <__floatunsidf+0x6c>
 200e1f8:	00800084 	movi	r2,2
 200e1fc:	d8800015 	stw	r2,0(sp)
 200e200:	d809883a 	mov	r4,sp
 200e204:	200e6c40 	call	200e6c4 <__pack_d>
 200e208:	dfc00d17 	ldw	ra,52(sp)
 200e20c:	ddc00c17 	ldw	r23,48(sp)
 200e210:	dd800b17 	ldw	r22,44(sp)
 200e214:	dd400a17 	ldw	r21,40(sp)
 200e218:	dd000917 	ldw	r20,36(sp)
 200e21c:	dcc00817 	ldw	r19,32(sp)
 200e220:	dc800717 	ldw	r18,28(sp)
 200e224:	dc400617 	ldw	r17,24(sp)
 200e228:	dc000517 	ldw	r16,20(sp)
 200e22c:	dec00e04 	addi	sp,sp,56
 200e230:	f800283a 	ret
 200e234:	008000c4 	movi	r2,3
 200e238:	00c00f04 	movi	r3,60
 200e23c:	002f883a 	mov	r23,zero
 200e240:	202d883a 	mov	r22,r4
 200e244:	d8800015 	stw	r2,0(sp)
 200e248:	d8c00215 	stw	r3,8(sp)
 200e24c:	d9000315 	stw	r4,12(sp)
 200e250:	ddc00415 	stw	r23,16(sp)
 200e254:	200e4a80 	call	200e4a8 <__clzsi2>
 200e258:	12400744 	addi	r9,r2,29
 200e25c:	48000b16 	blt	r9,zero,200e28c <__floatunsidf+0xc4>
 200e260:	483fe726 	beq	r9,zero,200e200 <__floatunsidf+0x38>
 200e264:	10bfff44 	addi	r2,r2,-3
 200e268:	10002e16 	blt	r2,zero,200e324 <__floatunsidf+0x15c>
 200e26c:	b0a2983a 	sll	r17,r22,r2
 200e270:	0021883a 	mov	r16,zero
 200e274:	d8800217 	ldw	r2,8(sp)
 200e278:	dc400415 	stw	r17,16(sp)
 200e27c:	dc000315 	stw	r16,12(sp)
 200e280:	1245c83a 	sub	r2,r2,r9
 200e284:	d8800215 	stw	r2,8(sp)
 200e288:	003fdd06 	br	200e200 <__floatunsidf+0x38>
 200e28c:	0255c83a 	sub	r10,zero,r9
 200e290:	51bff804 	addi	r6,r10,-32
 200e294:	30001b16 	blt	r6,zero,200e304 <__floatunsidf+0x13c>
 200e298:	b9a8d83a 	srl	r20,r23,r6
 200e29c:	002b883a 	mov	r21,zero
 200e2a0:	000f883a 	mov	r7,zero
 200e2a4:	01000044 	movi	r4,1
 200e2a8:	0011883a 	mov	r8,zero
 200e2ac:	30002516 	blt	r6,zero,200e344 <__floatunsidf+0x17c>
 200e2b0:	21a6983a 	sll	r19,r4,r6
 200e2b4:	0025883a 	mov	r18,zero
 200e2b8:	00bfffc4 	movi	r2,-1
 200e2bc:	9089883a 	add	r4,r18,r2
 200e2c0:	988b883a 	add	r5,r19,r2
 200e2c4:	248d803a 	cmpltu	r6,r4,r18
 200e2c8:	314b883a 	add	r5,r6,r5
 200e2cc:	b104703a 	and	r2,r22,r4
 200e2d0:	b946703a 	and	r3,r23,r5
 200e2d4:	10c4b03a 	or	r2,r2,r3
 200e2d8:	10000226 	beq	r2,zero,200e2e4 <__floatunsidf+0x11c>
 200e2dc:	01c00044 	movi	r7,1
 200e2e0:	0011883a 	mov	r8,zero
 200e2e4:	d9000217 	ldw	r4,8(sp)
 200e2e8:	a1c4b03a 	or	r2,r20,r7
 200e2ec:	aa06b03a 	or	r3,r21,r8
 200e2f0:	2249c83a 	sub	r4,r4,r9
 200e2f4:	d8c00415 	stw	r3,16(sp)
 200e2f8:	d9000215 	stw	r4,8(sp)
 200e2fc:	d8800315 	stw	r2,12(sp)
 200e300:	003fbf06 	br	200e200 <__floatunsidf+0x38>
 200e304:	bdc7883a 	add	r3,r23,r23
 200e308:	008007c4 	movi	r2,31
 200e30c:	1285c83a 	sub	r2,r2,r10
 200e310:	1886983a 	sll	r3,r3,r2
 200e314:	b2a8d83a 	srl	r20,r22,r10
 200e318:	baaad83a 	srl	r21,r23,r10
 200e31c:	1d28b03a 	or	r20,r3,r20
 200e320:	003fdf06 	br	200e2a0 <__floatunsidf+0xd8>
 200e324:	b006d07a 	srli	r3,r22,1
 200e328:	008007c4 	movi	r2,31
 200e32c:	1245c83a 	sub	r2,r2,r9
 200e330:	1886d83a 	srl	r3,r3,r2
 200e334:	ba62983a 	sll	r17,r23,r9
 200e338:	b260983a 	sll	r16,r22,r9
 200e33c:	1c62b03a 	or	r17,r3,r17
 200e340:	003fcc06 	br	200e274 <__floatunsidf+0xac>
 200e344:	2006d07a 	srli	r3,r4,1
 200e348:	008007c4 	movi	r2,31
 200e34c:	1285c83a 	sub	r2,r2,r10
 200e350:	18a6d83a 	srl	r19,r3,r2
 200e354:	22a4983a 	sll	r18,r4,r10
 200e358:	003fd706 	br	200e2b8 <__floatunsidf+0xf0>

0200e35c <udivmodsi4>:
 200e35c:	29001b2e 	bgeu	r5,r4,200e3cc <udivmodsi4+0x70>
 200e360:	28001a16 	blt	r5,zero,200e3cc <udivmodsi4+0x70>
 200e364:	00800044 	movi	r2,1
 200e368:	0007883a 	mov	r3,zero
 200e36c:	01c007c4 	movi	r7,31
 200e370:	00000306 	br	200e380 <udivmodsi4+0x24>
 200e374:	19c01326 	beq	r3,r7,200e3c4 <udivmodsi4+0x68>
 200e378:	18c00044 	addi	r3,r3,1
 200e37c:	28000416 	blt	r5,zero,200e390 <udivmodsi4+0x34>
 200e380:	294b883a 	add	r5,r5,r5
 200e384:	1085883a 	add	r2,r2,r2
 200e388:	293ffa36 	bltu	r5,r4,200e374 <udivmodsi4+0x18>
 200e38c:	10000d26 	beq	r2,zero,200e3c4 <udivmodsi4+0x68>
 200e390:	0007883a 	mov	r3,zero
 200e394:	21400236 	bltu	r4,r5,200e3a0 <udivmodsi4+0x44>
 200e398:	2149c83a 	sub	r4,r4,r5
 200e39c:	1886b03a 	or	r3,r3,r2
 200e3a0:	1004d07a 	srli	r2,r2,1
 200e3a4:	280ad07a 	srli	r5,r5,1
 200e3a8:	103ffa1e 	bne	r2,zero,200e394 <udivmodsi4+0x38>
 200e3ac:	30000226 	beq	r6,zero,200e3b8 <udivmodsi4+0x5c>
 200e3b0:	2005883a 	mov	r2,r4
 200e3b4:	f800283a 	ret
 200e3b8:	1809883a 	mov	r4,r3
 200e3bc:	2005883a 	mov	r2,r4
 200e3c0:	f800283a 	ret
 200e3c4:	0007883a 	mov	r3,zero
 200e3c8:	003ff806 	br	200e3ac <udivmodsi4+0x50>
 200e3cc:	00800044 	movi	r2,1
 200e3d0:	0007883a 	mov	r3,zero
 200e3d4:	003fef06 	br	200e394 <udivmodsi4+0x38>

0200e3d8 <__divsi3>:
 200e3d8:	defffe04 	addi	sp,sp,-8
 200e3dc:	dc000015 	stw	r16,0(sp)
 200e3e0:	dfc00115 	stw	ra,4(sp)
 200e3e4:	0021883a 	mov	r16,zero
 200e3e8:	20000c16 	blt	r4,zero,200e41c <__divsi3+0x44>
 200e3ec:	000d883a 	mov	r6,zero
 200e3f0:	28000e16 	blt	r5,zero,200e42c <__divsi3+0x54>
 200e3f4:	200e35c0 	call	200e35c <udivmodsi4>
 200e3f8:	1007883a 	mov	r3,r2
 200e3fc:	8005003a 	cmpeq	r2,r16,zero
 200e400:	1000011e 	bne	r2,zero,200e408 <__divsi3+0x30>
 200e404:	00c7c83a 	sub	r3,zero,r3
 200e408:	1805883a 	mov	r2,r3
 200e40c:	dfc00117 	ldw	ra,4(sp)
 200e410:	dc000017 	ldw	r16,0(sp)
 200e414:	dec00204 	addi	sp,sp,8
 200e418:	f800283a 	ret
 200e41c:	0109c83a 	sub	r4,zero,r4
 200e420:	04000044 	movi	r16,1
 200e424:	000d883a 	mov	r6,zero
 200e428:	283ff20e 	bge	r5,zero,200e3f4 <__divsi3+0x1c>
 200e42c:	014bc83a 	sub	r5,zero,r5
 200e430:	8021003a 	cmpeq	r16,r16,zero
 200e434:	003fef06 	br	200e3f4 <__divsi3+0x1c>

0200e438 <__modsi3>:
 200e438:	deffff04 	addi	sp,sp,-4
 200e43c:	dfc00015 	stw	ra,0(sp)
 200e440:	01800044 	movi	r6,1
 200e444:	2807883a 	mov	r3,r5
 200e448:	20000416 	blt	r4,zero,200e45c <__modsi3+0x24>
 200e44c:	28000c16 	blt	r5,zero,200e480 <__modsi3+0x48>
 200e450:	dfc00017 	ldw	ra,0(sp)
 200e454:	dec00104 	addi	sp,sp,4
 200e458:	200e35c1 	jmpi	200e35c <udivmodsi4>
 200e45c:	0109c83a 	sub	r4,zero,r4
 200e460:	28000b16 	blt	r5,zero,200e490 <__modsi3+0x58>
 200e464:	180b883a 	mov	r5,r3
 200e468:	01800044 	movi	r6,1
 200e46c:	200e35c0 	call	200e35c <udivmodsi4>
 200e470:	0085c83a 	sub	r2,zero,r2
 200e474:	dfc00017 	ldw	ra,0(sp)
 200e478:	dec00104 	addi	sp,sp,4
 200e47c:	f800283a 	ret
 200e480:	014bc83a 	sub	r5,zero,r5
 200e484:	dfc00017 	ldw	ra,0(sp)
 200e488:	dec00104 	addi	sp,sp,4
 200e48c:	200e35c1 	jmpi	200e35c <udivmodsi4>
 200e490:	0147c83a 	sub	r3,zero,r5
 200e494:	003ff306 	br	200e464 <__modsi3+0x2c>

0200e498 <__udivsi3>:
 200e498:	000d883a 	mov	r6,zero
 200e49c:	200e35c1 	jmpi	200e35c <udivmodsi4>

0200e4a0 <__umodsi3>:
 200e4a0:	01800044 	movi	r6,1
 200e4a4:	200e35c1 	jmpi	200e35c <udivmodsi4>

0200e4a8 <__clzsi2>:
 200e4a8:	00bfffd4 	movui	r2,65535
 200e4ac:	11000e36 	bltu	r2,r4,200e4e8 <__clzsi2+0x40>
 200e4b0:	00803fc4 	movi	r2,255
 200e4b4:	01400204 	movi	r5,8
 200e4b8:	0007883a 	mov	r3,zero
 200e4bc:	11001036 	bltu	r2,r4,200e500 <__clzsi2+0x58>
 200e4c0:	000b883a 	mov	r5,zero
 200e4c4:	20c6d83a 	srl	r3,r4,r3
 200e4c8:	00808074 	movhi	r2,513
 200e4cc:	1086a204 	addi	r2,r2,6792
 200e4d0:	1887883a 	add	r3,r3,r2
 200e4d4:	18800003 	ldbu	r2,0(r3)
 200e4d8:	00c00804 	movi	r3,32
 200e4dc:	2885883a 	add	r2,r5,r2
 200e4e0:	1885c83a 	sub	r2,r3,r2
 200e4e4:	f800283a 	ret
 200e4e8:	01400404 	movi	r5,16
 200e4ec:	00804034 	movhi	r2,256
 200e4f0:	10bfffc4 	addi	r2,r2,-1
 200e4f4:	2807883a 	mov	r3,r5
 200e4f8:	113ff22e 	bgeu	r2,r4,200e4c4 <__clzsi2+0x1c>
 200e4fc:	01400604 	movi	r5,24
 200e500:	2807883a 	mov	r3,r5
 200e504:	20c6d83a 	srl	r3,r4,r3
 200e508:	00808074 	movhi	r2,513
 200e50c:	1086a204 	addi	r2,r2,6792
 200e510:	1887883a 	add	r3,r3,r2
 200e514:	18800003 	ldbu	r2,0(r3)
 200e518:	00c00804 	movi	r3,32
 200e51c:	2885883a 	add	r2,r5,r2
 200e520:	1885c83a 	sub	r2,r3,r2
 200e524:	f800283a 	ret

0200e528 <__unpack_f>:
 200e528:	21800017 	ldw	r6,0(r4)
 200e52c:	00c02034 	movhi	r3,128
 200e530:	18ffffc4 	addi	r3,r3,-1
 200e534:	3004d5fa 	srli	r2,r6,23
 200e538:	3008d7fa 	srli	r4,r6,31
 200e53c:	30ce703a 	and	r7,r6,r3
 200e540:	10c03fcc 	andi	r3,r2,255
 200e544:	29000115 	stw	r4,4(r5)
 200e548:	1800131e 	bne	r3,zero,200e598 <__unpack_f+0x70>
 200e54c:	38000f26 	beq	r7,zero,200e58c <__unpack_f+0x64>
 200e550:	380691fa 	slli	r3,r7,7
 200e554:	01bfe084 	movi	r6,-126
 200e558:	008000c4 	movi	r2,3
 200e55c:	01100034 	movhi	r4,16384
 200e560:	213fffc4 	addi	r4,r4,-1
 200e564:	28800015 	stw	r2,0(r5)
 200e568:	29800215 	stw	r6,8(r5)
 200e56c:	20c00536 	bltu	r4,r3,200e584 <__unpack_f+0x5c>
 200e570:	3005883a 	mov	r2,r6
 200e574:	18c7883a 	add	r3,r3,r3
 200e578:	10bfffc4 	addi	r2,r2,-1
 200e57c:	20fffd2e 	bgeu	r4,r3,200e574 <__unpack_f+0x4c>
 200e580:	28800215 	stw	r2,8(r5)
 200e584:	28c00315 	stw	r3,12(r5)
 200e588:	f800283a 	ret
 200e58c:	00800084 	movi	r2,2
 200e590:	28800015 	stw	r2,0(r5)
 200e594:	f800283a 	ret
 200e598:	00803fc4 	movi	r2,255
 200e59c:	18800826 	beq	r3,r2,200e5c0 <__unpack_f+0x98>
 200e5a0:	380491fa 	slli	r2,r7,7
 200e5a4:	18ffe044 	addi	r3,r3,-127
 200e5a8:	28c00215 	stw	r3,8(r5)
 200e5ac:	10900034 	orhi	r2,r2,16384
 200e5b0:	28800315 	stw	r2,12(r5)
 200e5b4:	008000c4 	movi	r2,3
 200e5b8:	28800015 	stw	r2,0(r5)
 200e5bc:	f800283a 	ret
 200e5c0:	3800031e 	bne	r7,zero,200e5d0 <__unpack_f+0xa8>
 200e5c4:	00800104 	movi	r2,4
 200e5c8:	28800015 	stw	r2,0(r5)
 200e5cc:	f800283a 	ret
 200e5d0:	3080042c 	andhi	r2,r6,16
 200e5d4:	10000426 	beq	r2,zero,200e5e8 <__unpack_f+0xc0>
 200e5d8:	00800044 	movi	r2,1
 200e5dc:	28800015 	stw	r2,0(r5)
 200e5e0:	29c00315 	stw	r7,12(r5)
 200e5e4:	f800283a 	ret
 200e5e8:	28000015 	stw	zero,0(r5)
 200e5ec:	003ffc06 	br	200e5e0 <__unpack_f+0xb8>

0200e5f0 <__fpcmp_parts_f>:
 200e5f0:	21800017 	ldw	r6,0(r4)
 200e5f4:	00c00044 	movi	r3,1
 200e5f8:	19800a2e 	bgeu	r3,r6,200e624 <__fpcmp_parts_f+0x34>
 200e5fc:	28800017 	ldw	r2,0(r5)
 200e600:	1880082e 	bgeu	r3,r2,200e624 <__fpcmp_parts_f+0x34>
 200e604:	00c00104 	movi	r3,4
 200e608:	30c01e26 	beq	r6,r3,200e684 <__fpcmp_parts_f+0x94>
 200e60c:	10c01a26 	beq	r2,r3,200e678 <__fpcmp_parts_f+0x88>
 200e610:	00c00084 	movi	r3,2
 200e614:	30c00526 	beq	r6,r3,200e62c <__fpcmp_parts_f+0x3c>
 200e618:	10c0071e 	bne	r2,r3,200e638 <__fpcmp_parts_f+0x48>
 200e61c:	20800117 	ldw	r2,4(r4)
 200e620:	1000091e 	bne	r2,zero,200e648 <__fpcmp_parts_f+0x58>
 200e624:	00800044 	movi	r2,1
 200e628:	f800283a 	ret
 200e62c:	10c0121e 	bne	r2,r3,200e678 <__fpcmp_parts_f+0x88>
 200e630:	0005883a 	mov	r2,zero
 200e634:	f800283a 	ret
 200e638:	20c00117 	ldw	r3,4(r4)
 200e63c:	28800117 	ldw	r2,4(r5)
 200e640:	18800326 	beq	r3,r2,200e650 <__fpcmp_parts_f+0x60>
 200e644:	183ff726 	beq	r3,zero,200e624 <__fpcmp_parts_f+0x34>
 200e648:	00bfffc4 	movi	r2,-1
 200e64c:	f800283a 	ret
 200e650:	21800217 	ldw	r6,8(r4)
 200e654:	28800217 	ldw	r2,8(r5)
 200e658:	11bffa16 	blt	r2,r6,200e644 <__fpcmp_parts_f+0x54>
 200e65c:	30800416 	blt	r6,r2,200e670 <__fpcmp_parts_f+0x80>
 200e660:	21000317 	ldw	r4,12(r4)
 200e664:	29400317 	ldw	r5,12(r5)
 200e668:	293ff636 	bltu	r5,r4,200e644 <__fpcmp_parts_f+0x54>
 200e66c:	217ff02e 	bgeu	r4,r5,200e630 <__fpcmp_parts_f+0x40>
 200e670:	183fec1e 	bne	r3,zero,200e624 <__fpcmp_parts_f+0x34>
 200e674:	003ff406 	br	200e648 <__fpcmp_parts_f+0x58>
 200e678:	28800117 	ldw	r2,4(r5)
 200e67c:	103fe91e 	bne	r2,zero,200e624 <__fpcmp_parts_f+0x34>
 200e680:	003ff106 	br	200e648 <__fpcmp_parts_f+0x58>
 200e684:	11bfe51e 	bne	r2,r6,200e61c <__fpcmp_parts_f+0x2c>
 200e688:	28c00117 	ldw	r3,4(r5)
 200e68c:	20800117 	ldw	r2,4(r4)
 200e690:	1885c83a 	sub	r2,r3,r2
 200e694:	f800283a 	ret

0200e698 <__make_fp>:
 200e698:	defffb04 	addi	sp,sp,-20
 200e69c:	d9000015 	stw	r4,0(sp)
 200e6a0:	d809883a 	mov	r4,sp
 200e6a4:	dfc00415 	stw	ra,16(sp)
 200e6a8:	d9400115 	stw	r5,4(sp)
 200e6ac:	d9800215 	stw	r6,8(sp)
 200e6b0:	d9c00315 	stw	r7,12(sp)
 200e6b4:	200ebd80 	call	200ebd8 <__pack_f>
 200e6b8:	dfc00417 	ldw	ra,16(sp)
 200e6bc:	dec00504 	addi	sp,sp,20
 200e6c0:	f800283a 	ret

0200e6c4 <__pack_d>:
 200e6c4:	20c00017 	ldw	r3,0(r4)
 200e6c8:	defffd04 	addi	sp,sp,-12
 200e6cc:	dc000015 	stw	r16,0(sp)
 200e6d0:	dc800215 	stw	r18,8(sp)
 200e6d4:	dc400115 	stw	r17,4(sp)
 200e6d8:	00800044 	movi	r2,1
 200e6dc:	22000317 	ldw	r8,12(r4)
 200e6e0:	001f883a 	mov	r15,zero
 200e6e4:	22400417 	ldw	r9,16(r4)
 200e6e8:	24000117 	ldw	r16,4(r4)
 200e6ec:	10c0552e 	bgeu	r2,r3,200e844 <__pack_d+0x180>
 200e6f0:	00800104 	movi	r2,4
 200e6f4:	18804f26 	beq	r3,r2,200e834 <__pack_d+0x170>
 200e6f8:	00800084 	movi	r2,2
 200e6fc:	18800226 	beq	r3,r2,200e708 <__pack_d+0x44>
 200e700:	4244b03a 	or	r2,r8,r9
 200e704:	10001a1e 	bne	r2,zero,200e770 <__pack_d+0xac>
 200e708:	000d883a 	mov	r6,zero
 200e70c:	000f883a 	mov	r7,zero
 200e710:	0011883a 	mov	r8,zero
 200e714:	00800434 	movhi	r2,16
 200e718:	10bfffc4 	addi	r2,r2,-1
 200e71c:	301d883a 	mov	r14,r6
 200e720:	3884703a 	and	r2,r7,r2
 200e724:	400a953a 	slli	r5,r8,20
 200e728:	79bffc2c 	andhi	r6,r15,65520
 200e72c:	308cb03a 	or	r6,r6,r2
 200e730:	00e00434 	movhi	r3,32784
 200e734:	18ffffc4 	addi	r3,r3,-1
 200e738:	800497fa 	slli	r2,r16,31
 200e73c:	30c6703a 	and	r3,r6,r3
 200e740:	1946b03a 	or	r3,r3,r5
 200e744:	01600034 	movhi	r5,32768
 200e748:	297fffc4 	addi	r5,r5,-1
 200e74c:	194a703a 	and	r5,r3,r5
 200e750:	288ab03a 	or	r5,r5,r2
 200e754:	2807883a 	mov	r3,r5
 200e758:	7005883a 	mov	r2,r14
 200e75c:	dc800217 	ldw	r18,8(sp)
 200e760:	dc400117 	ldw	r17,4(sp)
 200e764:	dc000017 	ldw	r16,0(sp)
 200e768:	dec00304 	addi	sp,sp,12
 200e76c:	f800283a 	ret
 200e770:	21000217 	ldw	r4,8(r4)
 200e774:	00bf0084 	movi	r2,-1022
 200e778:	20803f16 	blt	r4,r2,200e878 <__pack_d+0x1b4>
 200e77c:	0080ffc4 	movi	r2,1023
 200e780:	11002c16 	blt	r2,r4,200e834 <__pack_d+0x170>
 200e784:	00803fc4 	movi	r2,255
 200e788:	408c703a 	and	r6,r8,r2
 200e78c:	00802004 	movi	r2,128
 200e790:	0007883a 	mov	r3,zero
 200e794:	000f883a 	mov	r7,zero
 200e798:	2280ffc4 	addi	r10,r4,1023
 200e79c:	30801e26 	beq	r6,r2,200e818 <__pack_d+0x154>
 200e7a0:	00801fc4 	movi	r2,127
 200e7a4:	4089883a 	add	r4,r8,r2
 200e7a8:	220d803a 	cmpltu	r6,r4,r8
 200e7ac:	324d883a 	add	r6,r6,r9
 200e7b0:	2011883a 	mov	r8,r4
 200e7b4:	3013883a 	mov	r9,r6
 200e7b8:	00880034 	movhi	r2,8192
 200e7bc:	10bfffc4 	addi	r2,r2,-1
 200e7c0:	12400d36 	bltu	r2,r9,200e7f8 <__pack_d+0x134>
 200e7c4:	4804963a 	slli	r2,r9,24
 200e7c8:	400cd23a 	srli	r6,r8,8
 200e7cc:	480ed23a 	srli	r7,r9,8
 200e7d0:	013fffc4 	movi	r4,-1
 200e7d4:	118cb03a 	or	r6,r2,r6
 200e7d8:	01400434 	movhi	r5,16
 200e7dc:	297fffc4 	addi	r5,r5,-1
 200e7e0:	3104703a 	and	r2,r6,r4
 200e7e4:	3946703a 	and	r3,r7,r5
 200e7e8:	5201ffcc 	andi	r8,r10,2047
 200e7ec:	100d883a 	mov	r6,r2
 200e7f0:	180f883a 	mov	r7,r3
 200e7f4:	003fc706 	br	200e714 <__pack_d+0x50>
 200e7f8:	480897fa 	slli	r4,r9,31
 200e7fc:	4004d07a 	srli	r2,r8,1
 200e800:	4806d07a 	srli	r3,r9,1
 200e804:	52800044 	addi	r10,r10,1
 200e808:	2084b03a 	or	r2,r4,r2
 200e80c:	1011883a 	mov	r8,r2
 200e810:	1813883a 	mov	r9,r3
 200e814:	003feb06 	br	200e7c4 <__pack_d+0x100>
 200e818:	383fe11e 	bne	r7,zero,200e7a0 <__pack_d+0xdc>
 200e81c:	01004004 	movi	r4,256
 200e820:	4104703a 	and	r2,r8,r4
 200e824:	10c4b03a 	or	r2,r2,r3
 200e828:	103fe326 	beq	r2,zero,200e7b8 <__pack_d+0xf4>
 200e82c:	3005883a 	mov	r2,r6
 200e830:	003fdc06 	br	200e7a4 <__pack_d+0xe0>
 200e834:	000d883a 	mov	r6,zero
 200e838:	000f883a 	mov	r7,zero
 200e83c:	0201ffc4 	movi	r8,2047
 200e840:	003fb406 	br	200e714 <__pack_d+0x50>
 200e844:	0005883a 	mov	r2,zero
 200e848:	00c00234 	movhi	r3,8
 200e84c:	408cb03a 	or	r6,r8,r2
 200e850:	48ceb03a 	or	r7,r9,r3
 200e854:	013fffc4 	movi	r4,-1
 200e858:	01400434 	movhi	r5,16
 200e85c:	297fffc4 	addi	r5,r5,-1
 200e860:	3104703a 	and	r2,r6,r4
 200e864:	3946703a 	and	r3,r7,r5
 200e868:	100d883a 	mov	r6,r2
 200e86c:	180f883a 	mov	r7,r3
 200e870:	0201ffc4 	movi	r8,2047
 200e874:	003fa706 	br	200e714 <__pack_d+0x50>
 200e878:	1109c83a 	sub	r4,r2,r4
 200e87c:	00800e04 	movi	r2,56
 200e880:	11004316 	blt	r2,r4,200e990 <__pack_d+0x2cc>
 200e884:	21fff804 	addi	r7,r4,-32
 200e888:	38004516 	blt	r7,zero,200e9a0 <__pack_d+0x2dc>
 200e88c:	49d8d83a 	srl	r12,r9,r7
 200e890:	001b883a 	mov	r13,zero
 200e894:	0023883a 	mov	r17,zero
 200e898:	01400044 	movi	r5,1
 200e89c:	0025883a 	mov	r18,zero
 200e8a0:	38004716 	blt	r7,zero,200e9c0 <__pack_d+0x2fc>
 200e8a4:	29d6983a 	sll	r11,r5,r7
 200e8a8:	0015883a 	mov	r10,zero
 200e8ac:	00bfffc4 	movi	r2,-1
 200e8b0:	5089883a 	add	r4,r10,r2
 200e8b4:	588b883a 	add	r5,r11,r2
 200e8b8:	228d803a 	cmpltu	r6,r4,r10
 200e8bc:	314b883a 	add	r5,r6,r5
 200e8c0:	4104703a 	and	r2,r8,r4
 200e8c4:	4946703a 	and	r3,r9,r5
 200e8c8:	10c4b03a 	or	r2,r2,r3
 200e8cc:	10000226 	beq	r2,zero,200e8d8 <__pack_d+0x214>
 200e8d0:	04400044 	movi	r17,1
 200e8d4:	0025883a 	mov	r18,zero
 200e8d8:	00803fc4 	movi	r2,255
 200e8dc:	644eb03a 	or	r7,r12,r17
 200e8e0:	3892703a 	and	r9,r7,r2
 200e8e4:	00802004 	movi	r2,128
 200e8e8:	6c90b03a 	or	r8,r13,r18
 200e8ec:	0015883a 	mov	r10,zero
 200e8f0:	48801626 	beq	r9,r2,200e94c <__pack_d+0x288>
 200e8f4:	01001fc4 	movi	r4,127
 200e8f8:	3905883a 	add	r2,r7,r4
 200e8fc:	11cd803a 	cmpltu	r6,r2,r7
 200e900:	320d883a 	add	r6,r6,r8
 200e904:	100f883a 	mov	r7,r2
 200e908:	00840034 	movhi	r2,4096
 200e90c:	10bfffc4 	addi	r2,r2,-1
 200e910:	3011883a 	mov	r8,r6
 200e914:	0007883a 	mov	r3,zero
 200e918:	11801b36 	bltu	r2,r6,200e988 <__pack_d+0x2c4>
 200e91c:	4004963a 	slli	r2,r8,24
 200e920:	3808d23a 	srli	r4,r7,8
 200e924:	400ad23a 	srli	r5,r8,8
 200e928:	1813883a 	mov	r9,r3
 200e92c:	1108b03a 	or	r4,r2,r4
 200e930:	00bfffc4 	movi	r2,-1
 200e934:	00c00434 	movhi	r3,16
 200e938:	18ffffc4 	addi	r3,r3,-1
 200e93c:	208c703a 	and	r6,r4,r2
 200e940:	28ce703a 	and	r7,r5,r3
 200e944:	4a01ffcc 	andi	r8,r9,2047
 200e948:	003f7206 	br	200e714 <__pack_d+0x50>
 200e94c:	503fe91e 	bne	r10,zero,200e8f4 <__pack_d+0x230>
 200e950:	01004004 	movi	r4,256
 200e954:	3904703a 	and	r2,r7,r4
 200e958:	0007883a 	mov	r3,zero
 200e95c:	10c4b03a 	or	r2,r2,r3
 200e960:	10000626 	beq	r2,zero,200e97c <__pack_d+0x2b8>
 200e964:	3a45883a 	add	r2,r7,r9
 200e968:	11cd803a 	cmpltu	r6,r2,r7
 200e96c:	320d883a 	add	r6,r6,r8
 200e970:	100f883a 	mov	r7,r2
 200e974:	3011883a 	mov	r8,r6
 200e978:	0007883a 	mov	r3,zero
 200e97c:	00840034 	movhi	r2,4096
 200e980:	10bfffc4 	addi	r2,r2,-1
 200e984:	123fe52e 	bgeu	r2,r8,200e91c <__pack_d+0x258>
 200e988:	00c00044 	movi	r3,1
 200e98c:	003fe306 	br	200e91c <__pack_d+0x258>
 200e990:	0009883a 	mov	r4,zero
 200e994:	0013883a 	mov	r9,zero
 200e998:	000b883a 	mov	r5,zero
 200e99c:	003fe406 	br	200e930 <__pack_d+0x26c>
 200e9a0:	4a47883a 	add	r3,r9,r9
 200e9a4:	008007c4 	movi	r2,31
 200e9a8:	1105c83a 	sub	r2,r2,r4
 200e9ac:	1886983a 	sll	r3,r3,r2
 200e9b0:	4118d83a 	srl	r12,r8,r4
 200e9b4:	491ad83a 	srl	r13,r9,r4
 200e9b8:	1b18b03a 	or	r12,r3,r12
 200e9bc:	003fb506 	br	200e894 <__pack_d+0x1d0>
 200e9c0:	2806d07a 	srli	r3,r5,1
 200e9c4:	008007c4 	movi	r2,31
 200e9c8:	1105c83a 	sub	r2,r2,r4
 200e9cc:	1896d83a 	srl	r11,r3,r2
 200e9d0:	2914983a 	sll	r10,r5,r4
 200e9d4:	003fb506 	br	200e8ac <__pack_d+0x1e8>

0200e9d8 <__unpack_d>:
 200e9d8:	20c00117 	ldw	r3,4(r4)
 200e9dc:	22400017 	ldw	r9,0(r4)
 200e9e0:	00800434 	movhi	r2,16
 200e9e4:	10bfffc4 	addi	r2,r2,-1
 200e9e8:	1808d53a 	srli	r4,r3,20
 200e9ec:	180cd7fa 	srli	r6,r3,31
 200e9f0:	1894703a 	and	r10,r3,r2
 200e9f4:	2201ffcc 	andi	r8,r4,2047
 200e9f8:	281b883a 	mov	r13,r5
 200e9fc:	4817883a 	mov	r11,r9
 200ea00:	29800115 	stw	r6,4(r5)
 200ea04:	5019883a 	mov	r12,r10
 200ea08:	40001e1e 	bne	r8,zero,200ea84 <__unpack_d+0xac>
 200ea0c:	4a84b03a 	or	r2,r9,r10
 200ea10:	10001926 	beq	r2,zero,200ea78 <__unpack_d+0xa0>
 200ea14:	4804d63a 	srli	r2,r9,24
 200ea18:	500c923a 	slli	r6,r10,8
 200ea1c:	013f0084 	movi	r4,-1022
 200ea20:	00c40034 	movhi	r3,4096
 200ea24:	18ffffc4 	addi	r3,r3,-1
 200ea28:	118cb03a 	or	r6,r2,r6
 200ea2c:	008000c4 	movi	r2,3
 200ea30:	480a923a 	slli	r5,r9,8
 200ea34:	68800015 	stw	r2,0(r13)
 200ea38:	69000215 	stw	r4,8(r13)
 200ea3c:	19800b36 	bltu	r3,r6,200ea6c <__unpack_d+0x94>
 200ea40:	200f883a 	mov	r7,r4
 200ea44:	1811883a 	mov	r8,r3
 200ea48:	2945883a 	add	r2,r5,r5
 200ea4c:	1149803a 	cmpltu	r4,r2,r5
 200ea50:	3187883a 	add	r3,r6,r6
 200ea54:	20c9883a 	add	r4,r4,r3
 200ea58:	100b883a 	mov	r5,r2
 200ea5c:	200d883a 	mov	r6,r4
 200ea60:	39ffffc4 	addi	r7,r7,-1
 200ea64:	413ff82e 	bgeu	r8,r4,200ea48 <__unpack_d+0x70>
 200ea68:	69c00215 	stw	r7,8(r13)
 200ea6c:	69800415 	stw	r6,16(r13)
 200ea70:	69400315 	stw	r5,12(r13)
 200ea74:	f800283a 	ret
 200ea78:	00800084 	movi	r2,2
 200ea7c:	28800015 	stw	r2,0(r5)
 200ea80:	f800283a 	ret
 200ea84:	0081ffc4 	movi	r2,2047
 200ea88:	40800f26 	beq	r8,r2,200eac8 <__unpack_d+0xf0>
 200ea8c:	480cd63a 	srli	r6,r9,24
 200ea90:	5006923a 	slli	r3,r10,8
 200ea94:	4804923a 	slli	r2,r9,8
 200ea98:	0009883a 	mov	r4,zero
 200ea9c:	30c6b03a 	or	r3,r6,r3
 200eaa0:	01440034 	movhi	r5,4096
 200eaa4:	110cb03a 	or	r6,r2,r4
 200eaa8:	423f0044 	addi	r8,r8,-1023
 200eaac:	194eb03a 	or	r7,r3,r5
 200eab0:	008000c4 	movi	r2,3
 200eab4:	69c00415 	stw	r7,16(r13)
 200eab8:	6a000215 	stw	r8,8(r13)
 200eabc:	68800015 	stw	r2,0(r13)
 200eac0:	69800315 	stw	r6,12(r13)
 200eac4:	f800283a 	ret
 200eac8:	4a84b03a 	or	r2,r9,r10
 200eacc:	1000031e 	bne	r2,zero,200eadc <__unpack_d+0x104>
 200ead0:	00800104 	movi	r2,4
 200ead4:	28800015 	stw	r2,0(r5)
 200ead8:	f800283a 	ret
 200eadc:	0009883a 	mov	r4,zero
 200eae0:	01400234 	movhi	r5,8
 200eae4:	4904703a 	and	r2,r9,r4
 200eae8:	5146703a 	and	r3,r10,r5
 200eaec:	10c4b03a 	or	r2,r2,r3
 200eaf0:	10000526 	beq	r2,zero,200eb08 <__unpack_d+0x130>
 200eaf4:	00800044 	movi	r2,1
 200eaf8:	68800015 	stw	r2,0(r13)
 200eafc:	6b000415 	stw	r12,16(r13)
 200eb00:	6ac00315 	stw	r11,12(r13)
 200eb04:	f800283a 	ret
 200eb08:	68000015 	stw	zero,0(r13)
 200eb0c:	003ffb06 	br	200eafc <__unpack_d+0x124>

0200eb10 <__fpcmp_parts_d>:
 200eb10:	21800017 	ldw	r6,0(r4)
 200eb14:	00c00044 	movi	r3,1
 200eb18:	19800a2e 	bgeu	r3,r6,200eb44 <__fpcmp_parts_d+0x34>
 200eb1c:	28800017 	ldw	r2,0(r5)
 200eb20:	1880082e 	bgeu	r3,r2,200eb44 <__fpcmp_parts_d+0x34>
 200eb24:	00c00104 	movi	r3,4
 200eb28:	30c02626 	beq	r6,r3,200ebc4 <__fpcmp_parts_d+0xb4>
 200eb2c:	10c02226 	beq	r2,r3,200ebb8 <__fpcmp_parts_d+0xa8>
 200eb30:	00c00084 	movi	r3,2
 200eb34:	30c00526 	beq	r6,r3,200eb4c <__fpcmp_parts_d+0x3c>
 200eb38:	10c0071e 	bne	r2,r3,200eb58 <__fpcmp_parts_d+0x48>
 200eb3c:	20800117 	ldw	r2,4(r4)
 200eb40:	1000091e 	bne	r2,zero,200eb68 <__fpcmp_parts_d+0x58>
 200eb44:	00800044 	movi	r2,1
 200eb48:	f800283a 	ret
 200eb4c:	10c01a1e 	bne	r2,r3,200ebb8 <__fpcmp_parts_d+0xa8>
 200eb50:	0005883a 	mov	r2,zero
 200eb54:	f800283a 	ret
 200eb58:	22000117 	ldw	r8,4(r4)
 200eb5c:	28800117 	ldw	r2,4(r5)
 200eb60:	40800326 	beq	r8,r2,200eb70 <__fpcmp_parts_d+0x60>
 200eb64:	403ff726 	beq	r8,zero,200eb44 <__fpcmp_parts_d+0x34>
 200eb68:	00bfffc4 	movi	r2,-1
 200eb6c:	f800283a 	ret
 200eb70:	20c00217 	ldw	r3,8(r4)
 200eb74:	28800217 	ldw	r2,8(r5)
 200eb78:	10fffa16 	blt	r2,r3,200eb64 <__fpcmp_parts_d+0x54>
 200eb7c:	18800916 	blt	r3,r2,200eba4 <__fpcmp_parts_d+0x94>
 200eb80:	21c00417 	ldw	r7,16(r4)
 200eb84:	28c00417 	ldw	r3,16(r5)
 200eb88:	21800317 	ldw	r6,12(r4)
 200eb8c:	28800317 	ldw	r2,12(r5)
 200eb90:	19fff436 	bltu	r3,r7,200eb64 <__fpcmp_parts_d+0x54>
 200eb94:	38c00526 	beq	r7,r3,200ebac <__fpcmp_parts_d+0x9c>
 200eb98:	38c00236 	bltu	r7,r3,200eba4 <__fpcmp_parts_d+0x94>
 200eb9c:	19ffec1e 	bne	r3,r7,200eb50 <__fpcmp_parts_d+0x40>
 200eba0:	30bfeb2e 	bgeu	r6,r2,200eb50 <__fpcmp_parts_d+0x40>
 200eba4:	403fe71e 	bne	r8,zero,200eb44 <__fpcmp_parts_d+0x34>
 200eba8:	003fef06 	br	200eb68 <__fpcmp_parts_d+0x58>
 200ebac:	11bffa2e 	bgeu	r2,r6,200eb98 <__fpcmp_parts_d+0x88>
 200ebb0:	403fe426 	beq	r8,zero,200eb44 <__fpcmp_parts_d+0x34>
 200ebb4:	003fec06 	br	200eb68 <__fpcmp_parts_d+0x58>
 200ebb8:	28800117 	ldw	r2,4(r5)
 200ebbc:	103fe11e 	bne	r2,zero,200eb44 <__fpcmp_parts_d+0x34>
 200ebc0:	003fe906 	br	200eb68 <__fpcmp_parts_d+0x58>
 200ebc4:	11bfdd1e 	bne	r2,r6,200eb3c <__fpcmp_parts_d+0x2c>
 200ebc8:	28c00117 	ldw	r3,4(r5)
 200ebcc:	20800117 	ldw	r2,4(r4)
 200ebd0:	1885c83a 	sub	r2,r3,r2
 200ebd4:	f800283a 	ret

0200ebd8 <__pack_f>:
 200ebd8:	20c00017 	ldw	r3,0(r4)
 200ebdc:	01c00044 	movi	r7,1
 200ebe0:	21800317 	ldw	r6,12(r4)
 200ebe4:	21400117 	ldw	r5,4(r4)
 200ebe8:	38c02d2e 	bgeu	r7,r3,200eca0 <__pack_f+0xc8>
 200ebec:	00800104 	movi	r2,4
 200ebf0:	18802826 	beq	r3,r2,200ec94 <__pack_f+0xbc>
 200ebf4:	00800084 	movi	r2,2
 200ebf8:	18800126 	beq	r3,r2,200ec00 <__pack_f+0x28>
 200ebfc:	3000101e 	bne	r6,zero,200ec40 <__pack_f+0x68>
 200ec00:	000d883a 	mov	r6,zero
 200ec04:	0007883a 	mov	r3,zero
 200ec08:	19003fcc 	andi	r4,r3,255
 200ec0c:	200895fa 	slli	r4,r4,23
 200ec10:	00c02034 	movhi	r3,128
 200ec14:	18ffffc4 	addi	r3,r3,-1
 200ec18:	30c6703a 	and	r3,r6,r3
 200ec1c:	10a0002c 	andhi	r2,r2,32768
 200ec20:	10c4b03a 	or	r2,r2,r3
 200ec24:	280a97fa 	slli	r5,r5,31
 200ec28:	1104b03a 	or	r2,r2,r4
 200ec2c:	00e00034 	movhi	r3,32768
 200ec30:	18ffffc4 	addi	r3,r3,-1
 200ec34:	10c4703a 	and	r2,r2,r3
 200ec38:	1144b03a 	or	r2,r2,r5
 200ec3c:	f800283a 	ret
 200ec40:	21000217 	ldw	r4,8(r4)
 200ec44:	00bfe084 	movi	r2,-126
 200ec48:	20801b16 	blt	r4,r2,200ecb8 <__pack_f+0xe0>
 200ec4c:	00801fc4 	movi	r2,127
 200ec50:	11001016 	blt	r2,r4,200ec94 <__pack_f+0xbc>
 200ec54:	308e703a 	and	r7,r6,r2
 200ec58:	2087883a 	add	r3,r4,r2
 200ec5c:	00801004 	movi	r2,64
 200ec60:	38800526 	beq	r7,r2,200ec78 <__pack_f+0xa0>
 200ec64:	31800fc4 	addi	r6,r6,63
 200ec68:	30000716 	blt	r6,zero,200ec88 <__pack_f+0xb0>
 200ec6c:	300490ba 	slli	r2,r6,2
 200ec70:	100cd27a 	srli	r6,r2,9
 200ec74:	003fe406 	br	200ec08 <__pack_f+0x30>
 200ec78:	3080200c 	andi	r2,r6,128
 200ec7c:	103ffa26 	beq	r2,zero,200ec68 <__pack_f+0x90>
 200ec80:	31cd883a 	add	r6,r6,r7
 200ec84:	003ff806 	br	200ec68 <__pack_f+0x90>
 200ec88:	300cd07a 	srli	r6,r6,1
 200ec8c:	18c00044 	addi	r3,r3,1
 200ec90:	003ff606 	br	200ec6c <__pack_f+0x94>
 200ec94:	000d883a 	mov	r6,zero
 200ec98:	00ffffc4 	movi	r3,-1
 200ec9c:	003fda06 	br	200ec08 <__pack_f+0x30>
 200eca0:	31800434 	orhi	r6,r6,16
 200eca4:	00802034 	movhi	r2,128
 200eca8:	10bfffc4 	addi	r2,r2,-1
 200ecac:	308c703a 	and	r6,r6,r2
 200ecb0:	00ffffc4 	movi	r3,-1
 200ecb4:	003fd406 	br	200ec08 <__pack_f+0x30>
 200ecb8:	1109c83a 	sub	r4,r2,r4
 200ecbc:	00800644 	movi	r2,25
 200ecc0:	11001216 	blt	r2,r4,200ed0c <__pack_f+0x134>
 200ecc4:	3904983a 	sll	r2,r7,r4
 200ecc8:	3106d83a 	srl	r3,r6,r4
 200eccc:	10bfffc4 	addi	r2,r2,-1
 200ecd0:	3084703a 	and	r2,r6,r2
 200ecd4:	1004c03a 	cmpne	r2,r2,zero
 200ecd8:	1886b03a 	or	r3,r3,r2
 200ecdc:	19001fcc 	andi	r4,r3,127
 200ece0:	00801004 	movi	r2,64
 200ece4:	20800c26 	beq	r4,r2,200ed18 <__pack_f+0x140>
 200ece8:	18c00fc4 	addi	r3,r3,63
 200ecec:	00900034 	movhi	r2,16384
 200ecf0:	10bfffc4 	addi	r2,r2,-1
 200ecf4:	180cd1fa 	srli	r6,r3,7
 200ecf8:	10c7803a 	cmpltu	r3,r2,r3
 200ecfc:	00802034 	movhi	r2,128
 200ed00:	10bfffc4 	addi	r2,r2,-1
 200ed04:	308c703a 	and	r6,r6,r2
 200ed08:	003fbf06 	br	200ec08 <__pack_f+0x30>
 200ed0c:	0007883a 	mov	r3,zero
 200ed10:	000d883a 	mov	r6,zero
 200ed14:	003ff906 	br	200ecfc <__pack_f+0x124>
 200ed18:	1880200c 	andi	r2,r3,128
 200ed1c:	10000126 	beq	r2,zero,200ed24 <__pack_f+0x14c>
 200ed20:	1907883a 	add	r3,r3,r4
 200ed24:	180cd1fa 	srli	r6,r3,7
 200ed28:	00900034 	movhi	r2,16384
 200ed2c:	10bfffc4 	addi	r2,r2,-1
 200ed30:	10c7803a 	cmpltu	r3,r2,r3
 200ed34:	003ff106 	br	200ecfc <__pack_f+0x124>

0200ed38 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 200ed38:	defff804 	addi	sp,sp,-32
 200ed3c:	dfc00715 	stw	ra,28(sp)
 200ed40:	df000615 	stw	fp,24(sp)
 200ed44:	df000604 	addi	fp,sp,24
 200ed48:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 200ed4c:	e0bffc17 	ldw	r2,-16(fp)
 200ed50:	1004803a 	cmplt	r2,r2,zero
 200ed54:	1000081e 	bne	r2,zero,200ed78 <close+0x40>
 200ed58:	e0bffc17 	ldw	r2,-16(fp)
 200ed5c:	10800324 	muli	r2,r2,12
 200ed60:	1007883a 	mov	r3,r2
 200ed64:	00808074 	movhi	r2,513
 200ed68:	10890404 	addi	r2,r2,9232
 200ed6c:	1887883a 	add	r3,r3,r2
 200ed70:	e0ffff15 	stw	r3,-4(fp)
 200ed74:	00000106 	br	200ed7c <close+0x44>
 200ed78:	e03fff15 	stw	zero,-4(fp)
 200ed7c:	e0bfff17 	ldw	r2,-4(fp)
 200ed80:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
 200ed84:	e0bffb17 	ldw	r2,-20(fp)
 200ed88:	1005003a 	cmpeq	r2,r2,zero
 200ed8c:	10001d1e 	bne	r2,zero,200ee04 <close+0xcc>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 200ed90:	e0bffb17 	ldw	r2,-20(fp)
 200ed94:	10800017 	ldw	r2,0(r2)
 200ed98:	10800417 	ldw	r2,16(r2)
 200ed9c:	1005003a 	cmpeq	r2,r2,zero
 200eda0:	1000071e 	bne	r2,zero,200edc0 <close+0x88>
 200eda4:	e0bffb17 	ldw	r2,-20(fp)
 200eda8:	10800017 	ldw	r2,0(r2)
 200edac:	10800417 	ldw	r2,16(r2)
 200edb0:	e13ffb17 	ldw	r4,-20(fp)
 200edb4:	103ee83a 	callr	r2
 200edb8:	e0bffe15 	stw	r2,-8(fp)
 200edbc:	00000106 	br	200edc4 <close+0x8c>
 200edc0:	e03ffe15 	stw	zero,-8(fp)
 200edc4:	e0bffe17 	ldw	r2,-8(fp)
 200edc8:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 200edcc:	e13ffc17 	ldw	r4,-16(fp)
 200edd0:	200f57c0 	call	200f57c <alt_release_fd>
    if (rval < 0)
 200edd4:	e0bffa17 	ldw	r2,-24(fp)
 200edd8:	1004403a 	cmpge	r2,r2,zero
 200eddc:	1000071e 	bne	r2,zero,200edfc <close+0xc4>
    {
      ALT_ERRNO = -rval;
 200ede0:	200ee340 	call	200ee34 <alt_get_errno>
 200ede4:	e0fffa17 	ldw	r3,-24(fp)
 200ede8:	00c7c83a 	sub	r3,zero,r3
 200edec:	10c00015 	stw	r3,0(r2)
      return -1;
 200edf0:	00bfffc4 	movi	r2,-1
 200edf4:	e0bffd15 	stw	r2,-12(fp)
 200edf8:	00000806 	br	200ee1c <close+0xe4>
    }
    return 0;
 200edfc:	e03ffd15 	stw	zero,-12(fp)
 200ee00:	00000606 	br	200ee1c <close+0xe4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 200ee04:	200ee340 	call	200ee34 <alt_get_errno>
 200ee08:	1007883a 	mov	r3,r2
 200ee0c:	00801444 	movi	r2,81
 200ee10:	18800015 	stw	r2,0(r3)
    return -1;
 200ee14:	00bfffc4 	movi	r2,-1
 200ee18:	e0bffd15 	stw	r2,-12(fp)
 200ee1c:	e0bffd17 	ldw	r2,-12(fp)
  }
}
 200ee20:	e037883a 	mov	sp,fp
 200ee24:	dfc00117 	ldw	ra,4(sp)
 200ee28:	df000017 	ldw	fp,0(sp)
 200ee2c:	dec00204 	addi	sp,sp,8
 200ee30:	f800283a 	ret

0200ee34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200ee34:	defffd04 	addi	sp,sp,-12
 200ee38:	dfc00215 	stw	ra,8(sp)
 200ee3c:	df000115 	stw	fp,4(sp)
 200ee40:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 200ee44:	00808074 	movhi	r2,513
 200ee48:	1089a104 	addi	r2,r2,9860
 200ee4c:	10800017 	ldw	r2,0(r2)
 200ee50:	1005003a 	cmpeq	r2,r2,zero
 200ee54:	1000061e 	bne	r2,zero,200ee70 <alt_get_errno+0x3c>
 200ee58:	00808074 	movhi	r2,513
 200ee5c:	1089a104 	addi	r2,r2,9860
 200ee60:	10800017 	ldw	r2,0(r2)
 200ee64:	103ee83a 	callr	r2
 200ee68:	e0bfff15 	stw	r2,-4(fp)
 200ee6c:	00000306 	br	200ee7c <alt_get_errno+0x48>
 200ee70:	00808074 	movhi	r2,513
 200ee74:	108c6704 	addi	r2,r2,12700
 200ee78:	e0bfff15 	stw	r2,-4(fp)
 200ee7c:	e0bfff17 	ldw	r2,-4(fp)
}
 200ee80:	e037883a 	mov	sp,fp
 200ee84:	dfc00117 	ldw	ra,4(sp)
 200ee88:	df000017 	ldw	fp,0(sp)
 200ee8c:	dec00204 	addi	sp,sp,8
 200ee90:	f800283a 	ret

0200ee94 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 200ee94:	defffc04 	addi	sp,sp,-16
 200ee98:	df000315 	stw	fp,12(sp)
 200ee9c:	df000304 	addi	fp,sp,12
 200eea0:	e13ffd15 	stw	r4,-12(fp)
 200eea4:	e17ffe15 	stw	r5,-8(fp)
 200eea8:	e1bfff15 	stw	r6,-4(fp)
  return len;
 200eeac:	e0bfff17 	ldw	r2,-4(fp)
}
 200eeb0:	e037883a 	mov	sp,fp
 200eeb4:	df000017 	ldw	fp,0(sp)
 200eeb8:	dec00104 	addi	sp,sp,4
 200eebc:	f800283a 	ret

0200eec0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 200eec0:	defff904 	addi	sp,sp,-28
 200eec4:	dfc00615 	stw	ra,24(sp)
 200eec8:	df000515 	stw	fp,20(sp)
 200eecc:	df000504 	addi	fp,sp,20
 200eed0:	e13ffc15 	stw	r4,-16(fp)
 200eed4:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200eed8:	e0bffc17 	ldw	r2,-16(fp)
 200eedc:	1004803a 	cmplt	r2,r2,zero
 200eee0:	1000081e 	bne	r2,zero,200ef04 <fstat+0x44>
 200eee4:	e0bffc17 	ldw	r2,-16(fp)
 200eee8:	10800324 	muli	r2,r2,12
 200eeec:	1007883a 	mov	r3,r2
 200eef0:	00808074 	movhi	r2,513
 200eef4:	10890404 	addi	r2,r2,9232
 200eef8:	1887883a 	add	r3,r3,r2
 200eefc:	e0ffff15 	stw	r3,-4(fp)
 200ef00:	00000106 	br	200ef08 <fstat+0x48>
 200ef04:	e03fff15 	stw	zero,-4(fp)
 200ef08:	e0bfff17 	ldw	r2,-4(fp)
 200ef0c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 200ef10:	e0bffb17 	ldw	r2,-20(fp)
 200ef14:	1005003a 	cmpeq	r2,r2,zero
 200ef18:	1000121e 	bne	r2,zero,200ef64 <fstat+0xa4>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 200ef1c:	e0bffb17 	ldw	r2,-20(fp)
 200ef20:	10800017 	ldw	r2,0(r2)
 200ef24:	10800817 	ldw	r2,32(r2)
 200ef28:	1005003a 	cmpeq	r2,r2,zero
 200ef2c:	1000081e 	bne	r2,zero,200ef50 <fstat+0x90>
    {
      return fd->dev->fstat(fd, st);
 200ef30:	e0bffb17 	ldw	r2,-20(fp)
 200ef34:	10800017 	ldw	r2,0(r2)
 200ef38:	10800817 	ldw	r2,32(r2)
 200ef3c:	e13ffb17 	ldw	r4,-20(fp)
 200ef40:	e17ffd17 	ldw	r5,-12(fp)
 200ef44:	103ee83a 	callr	r2
 200ef48:	e0bffe15 	stw	r2,-8(fp)
 200ef4c:	00000b06 	br	200ef7c <fstat+0xbc>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 200ef50:	e0fffd17 	ldw	r3,-12(fp)
 200ef54:	00880004 	movi	r2,8192
 200ef58:	18800115 	stw	r2,4(r3)
      return 0;
 200ef5c:	e03ffe15 	stw	zero,-8(fp)
 200ef60:	00000606 	br	200ef7c <fstat+0xbc>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 200ef64:	200ef940 	call	200ef94 <alt_get_errno>
 200ef68:	1007883a 	mov	r3,r2
 200ef6c:	00801444 	movi	r2,81
 200ef70:	18800015 	stw	r2,0(r3)
    return -1;
 200ef74:	00bfffc4 	movi	r2,-1
 200ef78:	e0bffe15 	stw	r2,-8(fp)
 200ef7c:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 200ef80:	e037883a 	mov	sp,fp
 200ef84:	dfc00117 	ldw	ra,4(sp)
 200ef88:	df000017 	ldw	fp,0(sp)
 200ef8c:	dec00204 	addi	sp,sp,8
 200ef90:	f800283a 	ret

0200ef94 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200ef94:	defffd04 	addi	sp,sp,-12
 200ef98:	dfc00215 	stw	ra,8(sp)
 200ef9c:	df000115 	stw	fp,4(sp)
 200efa0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 200efa4:	00808074 	movhi	r2,513
 200efa8:	1089a104 	addi	r2,r2,9860
 200efac:	10800017 	ldw	r2,0(r2)
 200efb0:	1005003a 	cmpeq	r2,r2,zero
 200efb4:	1000061e 	bne	r2,zero,200efd0 <alt_get_errno+0x3c>
 200efb8:	00808074 	movhi	r2,513
 200efbc:	1089a104 	addi	r2,r2,9860
 200efc0:	10800017 	ldw	r2,0(r2)
 200efc4:	103ee83a 	callr	r2
 200efc8:	e0bfff15 	stw	r2,-4(fp)
 200efcc:	00000306 	br	200efdc <alt_get_errno+0x48>
 200efd0:	00808074 	movhi	r2,513
 200efd4:	108c6704 	addi	r2,r2,12700
 200efd8:	e0bfff15 	stw	r2,-4(fp)
 200efdc:	e0bfff17 	ldw	r2,-4(fp)
}
 200efe0:	e037883a 	mov	sp,fp
 200efe4:	dfc00117 	ldw	ra,4(sp)
 200efe8:	df000017 	ldw	fp,0(sp)
 200efec:	dec00204 	addi	sp,sp,8
 200eff0:	f800283a 	ret

0200eff4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 200eff4:	deffeb04 	addi	sp,sp,-84
 200eff8:	dfc01415 	stw	ra,80(sp)
 200effc:	df001315 	stw	fp,76(sp)
 200f000:	df001304 	addi	fp,sp,76
 200f004:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200f008:	e0bffd17 	ldw	r2,-12(fp)
 200f00c:	1004803a 	cmplt	r2,r2,zero
 200f010:	1000081e 	bne	r2,zero,200f034 <isatty+0x40>
 200f014:	e0bffd17 	ldw	r2,-12(fp)
 200f018:	10800324 	muli	r2,r2,12
 200f01c:	1007883a 	mov	r3,r2
 200f020:	00808074 	movhi	r2,513
 200f024:	10890404 	addi	r2,r2,9232
 200f028:	1887883a 	add	r3,r3,r2
 200f02c:	e0ffff15 	stw	r3,-4(fp)
 200f030:	00000106 	br	200f038 <isatty+0x44>
 200f034:	e03fff15 	stw	zero,-4(fp)
 200f038:	e0bfff17 	ldw	r2,-4(fp)
 200f03c:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
 200f040:	e0bfed17 	ldw	r2,-76(fp)
 200f044:	1005003a 	cmpeq	r2,r2,zero
 200f048:	10000f1e 	bne	r2,zero,200f088 <isatty+0x94>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 200f04c:	e0bfed17 	ldw	r2,-76(fp)
 200f050:	10800017 	ldw	r2,0(r2)
 200f054:	10800817 	ldw	r2,32(r2)
 200f058:	1004c03a 	cmpne	r2,r2,zero
 200f05c:	1000031e 	bne	r2,zero,200f06c <isatty+0x78>
    {
      return 1;
 200f060:	00800044 	movi	r2,1
 200f064:	e0bffe15 	stw	r2,-8(fp)
 200f068:	00000c06 	br	200f09c <isatty+0xa8>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 200f06c:	e17fee04 	addi	r5,fp,-72
 200f070:	e13ffd17 	ldw	r4,-12(fp)
 200f074:	200eec00 	call	200eec0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 200f078:	e0bfef17 	ldw	r2,-68(fp)
 200f07c:	10880020 	cmpeqi	r2,r2,8192
 200f080:	e0bffe15 	stw	r2,-8(fp)
 200f084:	00000506 	br	200f09c <isatty+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 200f088:	200f0b40 	call	200f0b4 <alt_get_errno>
 200f08c:	1007883a 	mov	r3,r2
 200f090:	00801444 	movi	r2,81
 200f094:	18800015 	stw	r2,0(r3)
    return 0;
 200f098:	e03ffe15 	stw	zero,-8(fp)
 200f09c:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 200f0a0:	e037883a 	mov	sp,fp
 200f0a4:	dfc00117 	ldw	ra,4(sp)
 200f0a8:	df000017 	ldw	fp,0(sp)
 200f0ac:	dec00204 	addi	sp,sp,8
 200f0b0:	f800283a 	ret

0200f0b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200f0b4:	defffd04 	addi	sp,sp,-12
 200f0b8:	dfc00215 	stw	ra,8(sp)
 200f0bc:	df000115 	stw	fp,4(sp)
 200f0c0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 200f0c4:	00808074 	movhi	r2,513
 200f0c8:	1089a104 	addi	r2,r2,9860
 200f0cc:	10800017 	ldw	r2,0(r2)
 200f0d0:	1005003a 	cmpeq	r2,r2,zero
 200f0d4:	1000061e 	bne	r2,zero,200f0f0 <alt_get_errno+0x3c>
 200f0d8:	00808074 	movhi	r2,513
 200f0dc:	1089a104 	addi	r2,r2,9860
 200f0e0:	10800017 	ldw	r2,0(r2)
 200f0e4:	103ee83a 	callr	r2
 200f0e8:	e0bfff15 	stw	r2,-4(fp)
 200f0ec:	00000306 	br	200f0fc <alt_get_errno+0x48>
 200f0f0:	00808074 	movhi	r2,513
 200f0f4:	108c6704 	addi	r2,r2,12700
 200f0f8:	e0bfff15 	stw	r2,-4(fp)
 200f0fc:	e0bfff17 	ldw	r2,-4(fp)
}
 200f100:	e037883a 	mov	sp,fp
 200f104:	dfc00117 	ldw	ra,4(sp)
 200f108:	df000017 	ldw	fp,0(sp)
 200f10c:	dec00204 	addi	sp,sp,8
 200f110:	f800283a 	ret

0200f114 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 200f114:	defffe04 	addi	sp,sp,-8
 200f118:	dfc00115 	stw	ra,4(sp)
 200f11c:	df000015 	stw	fp,0(sp)
 200f120:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 200f124:	01008074 	movhi	r4,513
 200f128:	2109a604 	addi	r4,r4,9880
 200f12c:	01408074 	movhi	r5,513
 200f130:	2946eb04 	addi	r5,r5,7084
 200f134:	01808074 	movhi	r6,513
 200f138:	3189a604 	addi	r6,r6,9880
 200f13c:	200f1940 	call	200f194 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 200f140:	01008034 	movhi	r4,512
 200f144:	21000804 	addi	r4,r4,32
 200f148:	01408034 	movhi	r5,512
 200f14c:	29400804 	addi	r5,r5,32
 200f150:	01808034 	movhi	r6,512
 200f154:	31806d04 	addi	r6,r6,436
 200f158:	200f1940 	call	200f194 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 200f15c:	01008074 	movhi	r4,513
 200f160:	21055e04 	addi	r4,r4,5496
 200f164:	01408074 	movhi	r5,513
 200f168:	29455e04 	addi	r5,r5,5496
 200f16c:	01808074 	movhi	r6,513
 200f170:	3186eb04 	addi	r6,r6,7084
 200f174:	200f1940 	call	200f194 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 200f178:	20103900 	call	2010390 <alt_dcache_flush_all>
  alt_icache_flush_all();
 200f17c:	20105b00 	call	20105b0 <alt_icache_flush_all>
}
 200f180:	e037883a 	mov	sp,fp
 200f184:	dfc00117 	ldw	ra,4(sp)
 200f188:	df000017 	ldw	fp,0(sp)
 200f18c:	dec00204 	addi	sp,sp,8
 200f190:	f800283a 	ret

0200f194 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 200f194:	defffc04 	addi	sp,sp,-16
 200f198:	df000315 	stw	fp,12(sp)
 200f19c:	df000304 	addi	fp,sp,12
 200f1a0:	e13ffd15 	stw	r4,-12(fp)
 200f1a4:	e17ffe15 	stw	r5,-8(fp)
 200f1a8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 200f1ac:	e0fffe17 	ldw	r3,-8(fp)
 200f1b0:	e0bffd17 	ldw	r2,-12(fp)
 200f1b4:	18800e26 	beq	r3,r2,200f1f0 <alt_load_section+0x5c>
  {
    while( to != end )
 200f1b8:	00000a06 	br	200f1e4 <alt_load_section+0x50>
    {
      *to++ = *from++;
 200f1bc:	e0bffd17 	ldw	r2,-12(fp)
 200f1c0:	10c00017 	ldw	r3,0(r2)
 200f1c4:	e0bffe17 	ldw	r2,-8(fp)
 200f1c8:	10c00015 	stw	r3,0(r2)
 200f1cc:	e0bffe17 	ldw	r2,-8(fp)
 200f1d0:	10800104 	addi	r2,r2,4
 200f1d4:	e0bffe15 	stw	r2,-8(fp)
 200f1d8:	e0bffd17 	ldw	r2,-12(fp)
 200f1dc:	10800104 	addi	r2,r2,4
 200f1e0:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 200f1e4:	e0fffe17 	ldw	r3,-8(fp)
 200f1e8:	e0bfff17 	ldw	r2,-4(fp)
 200f1ec:	18bff31e 	bne	r3,r2,200f1bc <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 200f1f0:	e037883a 	mov	sp,fp
 200f1f4:	df000017 	ldw	fp,0(sp)
 200f1f8:	dec00104 	addi	sp,sp,4
 200f1fc:	f800283a 	ret

0200f200 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 200f200:	defff804 	addi	sp,sp,-32
 200f204:	dfc00715 	stw	ra,28(sp)
 200f208:	df000615 	stw	fp,24(sp)
 200f20c:	df000604 	addi	fp,sp,24
 200f210:	e13ffc15 	stw	r4,-16(fp)
 200f214:	e17ffd15 	stw	r5,-12(fp)
 200f218:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 200f21c:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200f220:	e0bffc17 	ldw	r2,-16(fp)
 200f224:	1004803a 	cmplt	r2,r2,zero
 200f228:	1000081e 	bne	r2,zero,200f24c <lseek+0x4c>
 200f22c:	e0bffc17 	ldw	r2,-16(fp)
 200f230:	10800324 	muli	r2,r2,12
 200f234:	1007883a 	mov	r3,r2
 200f238:	00808074 	movhi	r2,513
 200f23c:	10890404 	addi	r2,r2,9232
 200f240:	1887883a 	add	r3,r3,r2
 200f244:	e0ffff15 	stw	r3,-4(fp)
 200f248:	00000106 	br	200f250 <lseek+0x50>
 200f24c:	e03fff15 	stw	zero,-4(fp)
 200f250:	e0bfff17 	ldw	r2,-4(fp)
 200f254:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
 200f258:	e0bffb17 	ldw	r2,-20(fp)
 200f25c:	1005003a 	cmpeq	r2,r2,zero
 200f260:	1000111e 	bne	r2,zero,200f2a8 <lseek+0xa8>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 200f264:	e0bffb17 	ldw	r2,-20(fp)
 200f268:	10800017 	ldw	r2,0(r2)
 200f26c:	10800717 	ldw	r2,28(r2)
 200f270:	1005003a 	cmpeq	r2,r2,zero
 200f274:	1000091e 	bne	r2,zero,200f29c <lseek+0x9c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 200f278:	e0bffb17 	ldw	r2,-20(fp)
 200f27c:	10800017 	ldw	r2,0(r2)
 200f280:	10800717 	ldw	r2,28(r2)
 200f284:	e13ffb17 	ldw	r4,-20(fp)
 200f288:	e17ffd17 	ldw	r5,-12(fp)
 200f28c:	e1bffe17 	ldw	r6,-8(fp)
 200f290:	103ee83a 	callr	r2
 200f294:	e0bffa15 	stw	r2,-24(fp)
 200f298:	00000506 	br	200f2b0 <lseek+0xb0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 200f29c:	00bfde84 	movi	r2,-134
 200f2a0:	e0bffa15 	stw	r2,-24(fp)
 200f2a4:	00000206 	br	200f2b0 <lseek+0xb0>
    }
  }
  else  
  {
    rc = -EBADFD;
 200f2a8:	00bfebc4 	movi	r2,-81
 200f2ac:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
 200f2b0:	e0bffa17 	ldw	r2,-24(fp)
 200f2b4:	1004403a 	cmpge	r2,r2,zero
 200f2b8:	1000071e 	bne	r2,zero,200f2d8 <lseek+0xd8>
  {
    ALT_ERRNO = -rc;
 200f2bc:	200f2f00 	call	200f2f0 <alt_get_errno>
 200f2c0:	1007883a 	mov	r3,r2
 200f2c4:	e0bffa17 	ldw	r2,-24(fp)
 200f2c8:	0085c83a 	sub	r2,zero,r2
 200f2cc:	18800015 	stw	r2,0(r3)
    rc = -1;
 200f2d0:	00bfffc4 	movi	r2,-1
 200f2d4:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
 200f2d8:	e0bffa17 	ldw	r2,-24(fp)
}
 200f2dc:	e037883a 	mov	sp,fp
 200f2e0:	dfc00117 	ldw	ra,4(sp)
 200f2e4:	df000017 	ldw	fp,0(sp)
 200f2e8:	dec00204 	addi	sp,sp,8
 200f2ec:	f800283a 	ret

0200f2f0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200f2f0:	defffd04 	addi	sp,sp,-12
 200f2f4:	dfc00215 	stw	ra,8(sp)
 200f2f8:	df000115 	stw	fp,4(sp)
 200f2fc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 200f300:	00808074 	movhi	r2,513
 200f304:	1089a104 	addi	r2,r2,9860
 200f308:	10800017 	ldw	r2,0(r2)
 200f30c:	1005003a 	cmpeq	r2,r2,zero
 200f310:	1000061e 	bne	r2,zero,200f32c <alt_get_errno+0x3c>
 200f314:	00808074 	movhi	r2,513
 200f318:	1089a104 	addi	r2,r2,9860
 200f31c:	10800017 	ldw	r2,0(r2)
 200f320:	103ee83a 	callr	r2
 200f324:	e0bfff15 	stw	r2,-4(fp)
 200f328:	00000306 	br	200f338 <alt_get_errno+0x48>
 200f32c:	00808074 	movhi	r2,513
 200f330:	108c6704 	addi	r2,r2,12700
 200f334:	e0bfff15 	stw	r2,-4(fp)
 200f338:	e0bfff17 	ldw	r2,-4(fp)
}
 200f33c:	e037883a 	mov	sp,fp
 200f340:	dfc00117 	ldw	ra,4(sp)
 200f344:	df000017 	ldw	fp,0(sp)
 200f348:	dec00204 	addi	sp,sp,8
 200f34c:	f800283a 	ret

0200f350 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 200f350:	defffd04 	addi	sp,sp,-12
 200f354:	dfc00215 	stw	ra,8(sp)
 200f358:	df000115 	stw	fp,4(sp)
 200f35c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 200f360:	0009883a 	mov	r4,zero
 200f364:	200f8180 	call	200f818 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 200f368:	200f84c0 	call	200f84c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 200f36c:	01008074 	movhi	r4,513
 200f370:	2106e504 	addi	r4,r4,7060
 200f374:	01408074 	movhi	r5,513
 200f378:	2946e504 	addi	r5,r5,7060
 200f37c:	01808074 	movhi	r6,513
 200f380:	3186e504 	addi	r6,r6,7060
 200f384:	20109700 	call	2010970 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 200f388:	20104e80 	call	20104e8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 200f38c:	01008074 	movhi	r4,513
 200f390:	21015304 	addi	r4,r4,1356
 200f394:	201116c0 	call	201116c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 200f398:	d122d317 	ldw	r4,-29876(gp)
 200f39c:	d162d417 	ldw	r5,-29872(gp)
 200f3a0:	d1a2d517 	ldw	r6,-29868(gp)
 200f3a4:	20002000 	call	2000200 <main>
 200f3a8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 200f3ac:	01000044 	movi	r4,1
 200f3b0:	200ed380 	call	200ed38 <close>
  exit (result);
 200f3b4:	e13fff17 	ldw	r4,-4(fp)
 200f3b8:	20111800 	call	2011180 <exit>

0200f3bc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 200f3bc:	defffe04 	addi	sp,sp,-8
 200f3c0:	df000115 	stw	fp,4(sp)
 200f3c4:	df000104 	addi	fp,sp,4
 200f3c8:	e13fff15 	stw	r4,-4(fp)
}
 200f3cc:	e037883a 	mov	sp,fp
 200f3d0:	df000017 	ldw	fp,0(sp)
 200f3d4:	dec00104 	addi	sp,sp,4
 200f3d8:	f800283a 	ret

0200f3dc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 200f3dc:	defffe04 	addi	sp,sp,-8
 200f3e0:	df000115 	stw	fp,4(sp)
 200f3e4:	df000104 	addi	fp,sp,4
 200f3e8:	e13fff15 	stw	r4,-4(fp)
}
 200f3ec:	e037883a 	mov	sp,fp
 200f3f0:	df000017 	ldw	fp,0(sp)
 200f3f4:	dec00104 	addi	sp,sp,4
 200f3f8:	f800283a 	ret

0200f3fc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 200f3fc:	defff704 	addi	sp,sp,-36
 200f400:	dfc00815 	stw	ra,32(sp)
 200f404:	df000715 	stw	fp,28(sp)
 200f408:	df000704 	addi	fp,sp,28
 200f40c:	e13ffb15 	stw	r4,-20(fp)
 200f410:	e17ffc15 	stw	r5,-16(fp)
 200f414:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200f418:	e0bffb17 	ldw	r2,-20(fp)
 200f41c:	1004803a 	cmplt	r2,r2,zero
 200f420:	1000081e 	bne	r2,zero,200f444 <read+0x48>
 200f424:	e0bffb17 	ldw	r2,-20(fp)
 200f428:	10800324 	muli	r2,r2,12
 200f42c:	1007883a 	mov	r3,r2
 200f430:	00808074 	movhi	r2,513
 200f434:	10890404 	addi	r2,r2,9232
 200f438:	1887883a 	add	r3,r3,r2
 200f43c:	e0ffff15 	stw	r3,-4(fp)
 200f440:	00000106 	br	200f448 <read+0x4c>
 200f444:	e03fff15 	stw	zero,-4(fp)
 200f448:	e0bfff17 	ldw	r2,-4(fp)
 200f44c:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 200f450:	e0bffa17 	ldw	r2,-24(fp)
 200f454:	1005003a 	cmpeq	r2,r2,zero
 200f458:	1000241e 	bne	r2,zero,200f4ec <read+0xf0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 200f45c:	e0bffa17 	ldw	r2,-24(fp)
 200f460:	10800217 	ldw	r2,8(r2)
 200f464:	108000cc 	andi	r2,r2,3
 200f468:	10800060 	cmpeqi	r2,r2,1
 200f46c:	10001a1e 	bne	r2,zero,200f4d8 <read+0xdc>
 200f470:	e0bffa17 	ldw	r2,-24(fp)
 200f474:	10800017 	ldw	r2,0(r2)
 200f478:	10800517 	ldw	r2,20(r2)
 200f47c:	1005003a 	cmpeq	r2,r2,zero
 200f480:	1000151e 	bne	r2,zero,200f4d8 <read+0xdc>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 200f484:	e0bffa17 	ldw	r2,-24(fp)
 200f488:	10800017 	ldw	r2,0(r2)
 200f48c:	10800517 	ldw	r2,20(r2)
 200f490:	e17ffc17 	ldw	r5,-16(fp)
 200f494:	e1bffd17 	ldw	r6,-12(fp)
 200f498:	e13ffa17 	ldw	r4,-24(fp)
 200f49c:	103ee83a 	callr	r2
 200f4a0:	e0bff915 	stw	r2,-28(fp)
 200f4a4:	e0bff917 	ldw	r2,-28(fp)
 200f4a8:	1004403a 	cmpge	r2,r2,zero
 200f4ac:	1000071e 	bne	r2,zero,200f4cc <read+0xd0>
        {
          ALT_ERRNO = -rval;
 200f4b0:	200f51c0 	call	200f51c <alt_get_errno>
 200f4b4:	e0fff917 	ldw	r3,-28(fp)
 200f4b8:	00c7c83a 	sub	r3,zero,r3
 200f4bc:	10c00015 	stw	r3,0(r2)
          return -1;
 200f4c0:	00bfffc4 	movi	r2,-1
 200f4c4:	e0bffe15 	stw	r2,-8(fp)
 200f4c8:	00000e06 	br	200f504 <read+0x108>
        }
        return rval;
 200f4cc:	e0bff917 	ldw	r2,-28(fp)
 200f4d0:	e0bffe15 	stw	r2,-8(fp)
 200f4d4:	00000b06 	br	200f504 <read+0x108>
      }
      else
      {
        ALT_ERRNO = EACCES;
 200f4d8:	200f51c0 	call	200f51c <alt_get_errno>
 200f4dc:	1007883a 	mov	r3,r2
 200f4e0:	00800344 	movi	r2,13
 200f4e4:	18800015 	stw	r2,0(r3)
 200f4e8:	00000406 	br	200f4fc <read+0x100>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 200f4ec:	200f51c0 	call	200f51c <alt_get_errno>
 200f4f0:	1007883a 	mov	r3,r2
 200f4f4:	00801444 	movi	r2,81
 200f4f8:	18800015 	stw	r2,0(r3)
  }
  return -1;
 200f4fc:	00bfffc4 	movi	r2,-1
 200f500:	e0bffe15 	stw	r2,-8(fp)
 200f504:	e0bffe17 	ldw	r2,-8(fp)
}
 200f508:	e037883a 	mov	sp,fp
 200f50c:	dfc00117 	ldw	ra,4(sp)
 200f510:	df000017 	ldw	fp,0(sp)
 200f514:	dec00204 	addi	sp,sp,8
 200f518:	f800283a 	ret

0200f51c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200f51c:	defffd04 	addi	sp,sp,-12
 200f520:	dfc00215 	stw	ra,8(sp)
 200f524:	df000115 	stw	fp,4(sp)
 200f528:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 200f52c:	00808074 	movhi	r2,513
 200f530:	1089a104 	addi	r2,r2,9860
 200f534:	10800017 	ldw	r2,0(r2)
 200f538:	1005003a 	cmpeq	r2,r2,zero
 200f53c:	1000061e 	bne	r2,zero,200f558 <alt_get_errno+0x3c>
 200f540:	00808074 	movhi	r2,513
 200f544:	1089a104 	addi	r2,r2,9860
 200f548:	10800017 	ldw	r2,0(r2)
 200f54c:	103ee83a 	callr	r2
 200f550:	e0bfff15 	stw	r2,-4(fp)
 200f554:	00000306 	br	200f564 <alt_get_errno+0x48>
 200f558:	00808074 	movhi	r2,513
 200f55c:	108c6704 	addi	r2,r2,12700
 200f560:	e0bfff15 	stw	r2,-4(fp)
 200f564:	e0bfff17 	ldw	r2,-4(fp)
}
 200f568:	e037883a 	mov	sp,fp
 200f56c:	dfc00117 	ldw	ra,4(sp)
 200f570:	df000017 	ldw	fp,0(sp)
 200f574:	dec00204 	addi	sp,sp,8
 200f578:	f800283a 	ret

0200f57c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 200f57c:	defffe04 	addi	sp,sp,-8
 200f580:	df000115 	stw	fp,4(sp)
 200f584:	df000104 	addi	fp,sp,4
 200f588:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 200f58c:	e0bfff17 	ldw	r2,-4(fp)
 200f590:	108000d0 	cmplti	r2,r2,3
 200f594:	10000d1e 	bne	r2,zero,200f5cc <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 200f598:	e0bfff17 	ldw	r2,-4(fp)
 200f59c:	00c08074 	movhi	r3,513
 200f5a0:	18c90404 	addi	r3,r3,9232
 200f5a4:	10800324 	muli	r2,r2,12
 200f5a8:	10c5883a 	add	r2,r2,r3
 200f5ac:	10800204 	addi	r2,r2,8
 200f5b0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 200f5b4:	e0bfff17 	ldw	r2,-4(fp)
 200f5b8:	00c08074 	movhi	r3,513
 200f5bc:	18c90404 	addi	r3,r3,9232
 200f5c0:	10800324 	muli	r2,r2,12
 200f5c4:	10c5883a 	add	r2,r2,r3
 200f5c8:	10000015 	stw	zero,0(r2)
  }
}
 200f5cc:	e037883a 	mov	sp,fp
 200f5d0:	df000017 	ldw	fp,0(sp)
 200f5d4:	dec00104 	addi	sp,sp,4
 200f5d8:	f800283a 	ret

0200f5dc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 200f5dc:	defff804 	addi	sp,sp,-32
 200f5e0:	df000715 	stw	fp,28(sp)
 200f5e4:	df000704 	addi	fp,sp,28
 200f5e8:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200f5ec:	0005303a 	rdctl	r2,status
 200f5f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200f5f4:	e0fffb17 	ldw	r3,-20(fp)
 200f5f8:	00bfff84 	movi	r2,-2
 200f5fc:	1884703a 	and	r2,r3,r2
 200f600:	1001703a 	wrctl	status,r2
  
  return context;
 200f604:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 200f608:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 200f60c:	d0a00d17 	ldw	r2,-32716(gp)
 200f610:	10c000c4 	addi	r3,r2,3
 200f614:	00bfff04 	movi	r2,-4
 200f618:	1884703a 	and	r2,r3,r2
 200f61c:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 200f620:	d0e00d17 	ldw	r3,-32716(gp)
 200f624:	e0bffe17 	ldw	r2,-8(fp)
 200f628:	1887883a 	add	r3,r3,r2
 200f62c:	00810034 	movhi	r2,1024
 200f630:	10800004 	addi	r2,r2,0
 200f634:	10c0072e 	bgeu	r2,r3,200f654 <sbrk+0x78>
 200f638:	e0bffd17 	ldw	r2,-12(fp)
 200f63c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200f640:	e0bffa17 	ldw	r2,-24(fp)
 200f644:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 200f648:	00bfffc4 	movi	r2,-1
 200f64c:	e0bfff15 	stw	r2,-4(fp)
 200f650:	00000c06 	br	200f684 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 200f654:	d0a00d17 	ldw	r2,-32716(gp)
 200f658:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
 200f65c:	d0e00d17 	ldw	r3,-32716(gp)
 200f660:	e0bffe17 	ldw	r2,-8(fp)
 200f664:	1885883a 	add	r2,r3,r2
 200f668:	d0a00d15 	stw	r2,-32716(gp)
 200f66c:	e0bffd17 	ldw	r2,-12(fp)
 200f670:	e0bff915 	stw	r2,-28(fp)
 200f674:	e0bff917 	ldw	r2,-28(fp)
 200f678:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 200f67c:	e0bffc17 	ldw	r2,-16(fp)
 200f680:	e0bfff15 	stw	r2,-4(fp)
 200f684:	e0bfff17 	ldw	r2,-4(fp)
} 
 200f688:	e037883a 	mov	sp,fp
 200f68c:	df000017 	ldw	fp,0(sp)
 200f690:	dec00104 	addi	sp,sp,4
 200f694:	f800283a 	ret

0200f698 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 200f698:	defff704 	addi	sp,sp,-36
 200f69c:	dfc00815 	stw	ra,32(sp)
 200f6a0:	df000715 	stw	fp,28(sp)
 200f6a4:	df000704 	addi	fp,sp,28
 200f6a8:	e13ffb15 	stw	r4,-20(fp)
 200f6ac:	e17ffc15 	stw	r5,-16(fp)
 200f6b0:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 200f6b4:	e0bffb17 	ldw	r2,-20(fp)
 200f6b8:	1004803a 	cmplt	r2,r2,zero
 200f6bc:	1000081e 	bne	r2,zero,200f6e0 <write+0x48>
 200f6c0:	e0bffb17 	ldw	r2,-20(fp)
 200f6c4:	10800324 	muli	r2,r2,12
 200f6c8:	1007883a 	mov	r3,r2
 200f6cc:	00808074 	movhi	r2,513
 200f6d0:	10890404 	addi	r2,r2,9232
 200f6d4:	1887883a 	add	r3,r3,r2
 200f6d8:	e0ffff15 	stw	r3,-4(fp)
 200f6dc:	00000106 	br	200f6e4 <write+0x4c>
 200f6e0:	e03fff15 	stw	zero,-4(fp)
 200f6e4:	e0bfff17 	ldw	r2,-4(fp)
 200f6e8:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 200f6ec:	e0bffa17 	ldw	r2,-24(fp)
 200f6f0:	1005003a 	cmpeq	r2,r2,zero
 200f6f4:	1000241e 	bne	r2,zero,200f788 <write+0xf0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 200f6f8:	e0bffa17 	ldw	r2,-24(fp)
 200f6fc:	10800217 	ldw	r2,8(r2)
 200f700:	108000cc 	andi	r2,r2,3
 200f704:	1005003a 	cmpeq	r2,r2,zero
 200f708:	10001a1e 	bne	r2,zero,200f774 <write+0xdc>
 200f70c:	e0bffa17 	ldw	r2,-24(fp)
 200f710:	10800017 	ldw	r2,0(r2)
 200f714:	10800617 	ldw	r2,24(r2)
 200f718:	1005003a 	cmpeq	r2,r2,zero
 200f71c:	1000151e 	bne	r2,zero,200f774 <write+0xdc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 200f720:	e0bffa17 	ldw	r2,-24(fp)
 200f724:	10800017 	ldw	r2,0(r2)
 200f728:	10800617 	ldw	r2,24(r2)
 200f72c:	e17ffc17 	ldw	r5,-16(fp)
 200f730:	e1bffd17 	ldw	r6,-12(fp)
 200f734:	e13ffa17 	ldw	r4,-24(fp)
 200f738:	103ee83a 	callr	r2
 200f73c:	e0bff915 	stw	r2,-28(fp)
 200f740:	e0bff917 	ldw	r2,-28(fp)
 200f744:	1004403a 	cmpge	r2,r2,zero
 200f748:	1000071e 	bne	r2,zero,200f768 <write+0xd0>
      {
        ALT_ERRNO = -rval;
 200f74c:	200f7b80 	call	200f7b8 <alt_get_errno>
 200f750:	e0fff917 	ldw	r3,-28(fp)
 200f754:	00c7c83a 	sub	r3,zero,r3
 200f758:	10c00015 	stw	r3,0(r2)
        return -1;
 200f75c:	00bfffc4 	movi	r2,-1
 200f760:	e0bffe15 	stw	r2,-8(fp)
 200f764:	00000e06 	br	200f7a0 <write+0x108>
      }
      return rval;
 200f768:	e0bff917 	ldw	r2,-28(fp)
 200f76c:	e0bffe15 	stw	r2,-8(fp)
 200f770:	00000b06 	br	200f7a0 <write+0x108>
    }
    else
    {
      ALT_ERRNO = EACCES;
 200f774:	200f7b80 	call	200f7b8 <alt_get_errno>
 200f778:	1007883a 	mov	r3,r2
 200f77c:	00800344 	movi	r2,13
 200f780:	18800015 	stw	r2,0(r3)
 200f784:	00000406 	br	200f798 <write+0x100>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 200f788:	200f7b80 	call	200f7b8 <alt_get_errno>
 200f78c:	1007883a 	mov	r3,r2
 200f790:	00801444 	movi	r2,81
 200f794:	18800015 	stw	r2,0(r3)
  }
  return -1;
 200f798:	00bfffc4 	movi	r2,-1
 200f79c:	e0bffe15 	stw	r2,-8(fp)
 200f7a0:	e0bffe17 	ldw	r2,-8(fp)
}
 200f7a4:	e037883a 	mov	sp,fp
 200f7a8:	dfc00117 	ldw	ra,4(sp)
 200f7ac:	df000017 	ldw	fp,0(sp)
 200f7b0:	dec00204 	addi	sp,sp,8
 200f7b4:	f800283a 	ret

0200f7b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 200f7b8:	defffd04 	addi	sp,sp,-12
 200f7bc:	dfc00215 	stw	ra,8(sp)
 200f7c0:	df000115 	stw	fp,4(sp)
 200f7c4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 200f7c8:	00808074 	movhi	r2,513
 200f7cc:	1089a104 	addi	r2,r2,9860
 200f7d0:	10800017 	ldw	r2,0(r2)
 200f7d4:	1005003a 	cmpeq	r2,r2,zero
 200f7d8:	1000061e 	bne	r2,zero,200f7f4 <alt_get_errno+0x3c>
 200f7dc:	00808074 	movhi	r2,513
 200f7e0:	1089a104 	addi	r2,r2,9860
 200f7e4:	10800017 	ldw	r2,0(r2)
 200f7e8:	103ee83a 	callr	r2
 200f7ec:	e0bfff15 	stw	r2,-4(fp)
 200f7f0:	00000306 	br	200f800 <alt_get_errno+0x48>
 200f7f4:	00808074 	movhi	r2,513
 200f7f8:	108c6704 	addi	r2,r2,12700
 200f7fc:	e0bfff15 	stw	r2,-4(fp)
 200f800:	e0bfff17 	ldw	r2,-4(fp)
}
 200f804:	e037883a 	mov	sp,fp
 200f808:	dfc00117 	ldw	ra,4(sp)
 200f80c:	df000017 	ldw	fp,0(sp)
 200f810:	dec00204 	addi	sp,sp,8
 200f814:	f800283a 	ret

0200f818 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 200f818:	defffd04 	addi	sp,sp,-12
 200f81c:	dfc00215 	stw	ra,8(sp)
 200f820:	df000115 	stw	fp,4(sp)
 200f824:	df000104 	addi	fp,sp,4
 200f828:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
 200f82c:	2010e500 	call	2010e50 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 200f830:	00800044 	movi	r2,1
 200f834:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 200f838:	e037883a 	mov	sp,fp
 200f83c:	dfc00117 	ldw	ra,4(sp)
 200f840:	df000017 	ldw	fp,0(sp)
 200f844:	dec00204 	addi	sp,sp,8
 200f848:	f800283a 	ret

0200f84c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 200f84c:	defffe04 	addi	sp,sp,-8
 200f850:	dfc00115 	stw	ra,4(sp)
 200f854:	df000015 	stw	fp,0(sp)
 200f858:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 200f85c:	01010034 	movhi	r4,1024
 200f860:	21040804 	addi	r4,r4,4128
 200f864:	000b883a 	mov	r5,zero
 200f868:	000d883a 	mov	r6,zero
 200f86c:	01c0fa04 	movi	r7,1000
 200f870:	200f9500 	call	200f950 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
    ALTERA_AVALON_UART_INIT ( UART_0, uart_0);
 200f874:	01008074 	movhi	r4,513
 200f878:	21096e04 	addi	r4,r4,9656
 200f87c:	000b883a 	mov	r5,zero
 200f880:	01800044 	movi	r6,1
 200f884:	200fad80 	call	200fad8 <altera_avalon_uart_init>
 200f888:	01008074 	movhi	r4,513
 200f88c:	21096404 	addi	r4,r4,9616
 200f890:	200f8a80 	call	200f8a8 <alt_dev_reg>
}
 200f894:	e037883a 	mov	sp,fp
 200f898:	dfc00117 	ldw	ra,4(sp)
 200f89c:	df000017 	ldw	fp,0(sp)
 200f8a0:	dec00204 	addi	sp,sp,8
 200f8a4:	f800283a 	ret

0200f8a8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 200f8a8:	defffd04 	addi	sp,sp,-12
 200f8ac:	dfc00215 	stw	ra,8(sp)
 200f8b0:	df000115 	stw	fp,4(sp)
 200f8b4:	df000104 	addi	fp,sp,4
 200f8b8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 200f8bc:	e13fff17 	ldw	r4,-4(fp)
 200f8c0:	01408074 	movhi	r5,513
 200f8c4:	29499e04 	addi	r5,r5,9848
 200f8c8:	20103d40 	call	20103d4 <alt_dev_llist_insert>
}
 200f8cc:	e037883a 	mov	sp,fp
 200f8d0:	dfc00117 	ldw	ra,4(sp)
 200f8d4:	df000017 	ldw	fp,0(sp)
 200f8d8:	dec00204 	addi	sp,sp,8
 200f8dc:	f800283a 	ret

0200f8e0 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 200f8e0:	defffa04 	addi	sp,sp,-24
 200f8e4:	dfc00515 	stw	ra,20(sp)
 200f8e8:	df000415 	stw	fp,16(sp)
 200f8ec:	df000404 	addi	fp,sp,16
 200f8f0:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 200f8f4:	e0bfff17 	ldw	r2,-4(fp)
 200f8f8:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 200f8fc:	e0bfff17 	ldw	r2,-4(fp)
 200f900:	10800104 	addi	r2,r2,4
 200f904:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200f908:	0005303a 	rdctl	r2,status
 200f90c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200f910:	e0fffd17 	ldw	r3,-12(fp)
 200f914:	00bfff84 	movi	r2,-2
 200f918:	1884703a 	and	r2,r3,r2
 200f91c:	1001703a 	wrctl	status,r2
  
  return context;
 200f920:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 200f924:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
 200f928:	2010d440 	call	2010d44 <alt_tick>
 200f92c:	e0bffe17 	ldw	r2,-8(fp)
 200f930:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 200f934:	e0bffc17 	ldw	r2,-16(fp)
 200f938:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 200f93c:	e037883a 	mov	sp,fp
 200f940:	dfc00117 	ldw	ra,4(sp)
 200f944:	df000017 	ldw	fp,0(sp)
 200f948:	dec00204 	addi	sp,sp,8
 200f94c:	f800283a 	ret

0200f950 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 200f950:	defff804 	addi	sp,sp,-32
 200f954:	dfc00715 	stw	ra,28(sp)
 200f958:	df000615 	stw	fp,24(sp)
 200f95c:	df000604 	addi	fp,sp,24
 200f960:	e13ffc15 	stw	r4,-16(fp)
 200f964:	e17ffd15 	stw	r5,-12(fp)
 200f968:	e1bffe15 	stw	r6,-8(fp)
 200f96c:	e1ffff15 	stw	r7,-4(fp)
 200f970:	e0bfff17 	ldw	r2,-4(fp)
 200f974:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 200f978:	00808074 	movhi	r2,513
 200f97c:	108c6c04 	addi	r2,r2,12720
 200f980:	10800017 	ldw	r2,0(r2)
 200f984:	1004c03a 	cmpne	r2,r2,zero
 200f988:	1000041e 	bne	r2,zero,200f99c <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
 200f98c:	00c08074 	movhi	r3,513
 200f990:	18cc6c04 	addi	r3,r3,12720
 200f994:	e0bffb17 	ldw	r2,-20(fp)
 200f998:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 200f99c:	e0bffc17 	ldw	r2,-16(fp)
 200f9a0:	10800104 	addi	r2,r2,4
 200f9a4:	1007883a 	mov	r3,r2
 200f9a8:	008001c4 	movi	r2,7
 200f9ac:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 200f9b0:	d8000015 	stw	zero,0(sp)
 200f9b4:	e13ffd17 	ldw	r4,-12(fp)
 200f9b8:	e17ffe17 	ldw	r5,-8(fp)
 200f9bc:	01808074 	movhi	r6,513
 200f9c0:	31be3804 	addi	r6,r6,-1824
 200f9c4:	e1fffc17 	ldw	r7,-16(fp)
 200f9c8:	20105e00 	call	20105e0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 200f9cc:	e037883a 	mov	sp,fp
 200f9d0:	dfc00117 	ldw	ra,4(sp)
 200f9d4:	df000017 	ldw	fp,0(sp)
 200f9d8:	dec00204 	addi	sp,sp,8
 200f9dc:	f800283a 	ret

0200f9e0 <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 200f9e0:	defffa04 	addi	sp,sp,-24
 200f9e4:	dfc00515 	stw	ra,20(sp)
 200f9e8:	df000415 	stw	fp,16(sp)
 200f9ec:	df000404 	addi	fp,sp,16
 200f9f0:	e13ffd15 	stw	r4,-12(fp)
 200f9f4:	e17ffe15 	stw	r5,-8(fp)
 200f9f8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
 200f9fc:	e0bffd17 	ldw	r2,-12(fp)
 200fa00:	10800017 	ldw	r2,0(r2)
 200fa04:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
 200fa08:	e0bffc17 	ldw	r2,-16(fp)
 200fa0c:	11000a04 	addi	r4,r2,40
 200fa10:	e0bffd17 	ldw	r2,-12(fp)
 200fa14:	11c00217 	ldw	r7,8(r2)
 200fa18:	e17ffe17 	ldw	r5,-8(fp)
 200fa1c:	e1bfff17 	ldw	r6,-4(fp)
 200fa20:	200fed80 	call	200fed8 <altera_avalon_uart_read>
      fd->fd_flags);
}
 200fa24:	e037883a 	mov	sp,fp
 200fa28:	dfc00117 	ldw	ra,4(sp)
 200fa2c:	df000017 	ldw	fp,0(sp)
 200fa30:	dec00204 	addi	sp,sp,8
 200fa34:	f800283a 	ret

0200fa38 <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 200fa38:	defffa04 	addi	sp,sp,-24
 200fa3c:	dfc00515 	stw	ra,20(sp)
 200fa40:	df000415 	stw	fp,16(sp)
 200fa44:	df000404 	addi	fp,sp,16
 200fa48:	e13ffd15 	stw	r4,-12(fp)
 200fa4c:	e17ffe15 	stw	r5,-8(fp)
 200fa50:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
 200fa54:	e0bffd17 	ldw	r2,-12(fp)
 200fa58:	10800017 	ldw	r2,0(r2)
 200fa5c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
 200fa60:	e0bffc17 	ldw	r2,-16(fp)
 200fa64:	11000a04 	addi	r4,r2,40
 200fa68:	e0bffd17 	ldw	r2,-12(fp)
 200fa6c:	11c00217 	ldw	r7,8(r2)
 200fa70:	e17ffe17 	ldw	r5,-8(fp)
 200fa74:	e1bfff17 	ldw	r6,-4(fp)
 200fa78:	20101680 	call	2010168 <altera_avalon_uart_write>
      fd->fd_flags);
}
 200fa7c:	e037883a 	mov	sp,fp
 200fa80:	dfc00117 	ldw	ra,4(sp)
 200fa84:	df000017 	ldw	fp,0(sp)
 200fa88:	dec00204 	addi	sp,sp,8
 200fa8c:	f800283a 	ret

0200fa90 <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
 200fa90:	defffc04 	addi	sp,sp,-16
 200fa94:	dfc00315 	stw	ra,12(sp)
 200fa98:	df000215 	stw	fp,8(sp)
 200fa9c:	df000204 	addi	fp,sp,8
 200faa0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
 200faa4:	e0bfff17 	ldw	r2,-4(fp)
 200faa8:	10800017 	ldw	r2,0(r2)
 200faac:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
 200fab0:	e0bffe17 	ldw	r2,-8(fp)
 200fab4:	11000a04 	addi	r4,r2,40
 200fab8:	e0bfff17 	ldw	r2,-4(fp)
 200fabc:	11400217 	ldw	r5,8(r2)
 200fac0:	200fe780 	call	200fe78 <altera_avalon_uart_close>
}
 200fac4:	e037883a 	mov	sp,fp
 200fac8:	dfc00117 	ldw	ra,4(sp)
 200facc:	df000017 	ldw	fp,0(sp)
 200fad0:	dec00204 	addi	sp,sp,8
 200fad4:	f800283a 	ret

0200fad8 <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
 200fad8:	defff704 	addi	sp,sp,-36
 200fadc:	dfc00815 	stw	ra,32(sp)
 200fae0:	df000715 	stw	fp,28(sp)
 200fae4:	df000704 	addi	fp,sp,28
 200fae8:	e13ffc15 	stw	r4,-16(fp)
 200faec:	e17ffd15 	stw	r5,-12(fp)
 200faf0:	e1bffe15 	stw	r6,-8(fp)
  void* base = sp->base;
 200faf4:	e0bffc17 	ldw	r2,-16(fp)
 200faf8:	10800017 	ldw	r2,0(r2)
 200fafc:	e0bffb15 	stw	r2,-20(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
 200fb00:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
 200fb04:	1004c03a 	cmpne	r2,r2,zero
 200fb08:	1000061e 	bne	r2,zero,200fb24 <altera_avalon_uart_init+0x4c>
 200fb0c:	0005883a 	mov	r2,zero
 200fb10:	1004c03a 	cmpne	r2,r2,zero
 200fb14:	1000031e 	bne	r2,zero,200fb24 <altera_avalon_uart_init+0x4c>
 200fb18:	0005883a 	mov	r2,zero
 200fb1c:	1005003a 	cmpeq	r2,r2,zero
 200fb20:	1000031e 	bne	r2,zero,200fb30 <altera_avalon_uart_init+0x58>
 200fb24:	00800044 	movi	r2,1
 200fb28:	e0bfff15 	stw	r2,-4(fp)
 200fb2c:	00000106 	br	200fb34 <altera_avalon_uart_init+0x5c>
 200fb30:	e03fff15 	stw	zero,-4(fp)
 200fb34:	e0bfff17 	ldw	r2,-4(fp)
 200fb38:	e0bffa15 	stw	r2,-24(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
 200fb3c:	e0bffa17 	ldw	r2,-24(fp)
 200fb40:	1004c03a 	cmpne	r2,r2,zero
 200fb44:	1000111e 	bne	r2,zero,200fb8c <altera_avalon_uart_init+0xb4>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
 200fb48:	e0fffc17 	ldw	r3,-16(fp)
 200fb4c:	00832004 	movi	r2,3200
 200fb50:	18800115 	stw	r2,4(r3)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
 200fb54:	e0bffb17 	ldw	r2,-20(fp)
 200fb58:	11000304 	addi	r4,r2,12
 200fb5c:	e0bffc17 	ldw	r2,-16(fp)
 200fb60:	10800117 	ldw	r2,4(r2)
 200fb64:	1007883a 	mov	r3,r2
 200fb68:	2005883a 	mov	r2,r4
 200fb6c:	10c00035 	stwio	r3,0(r2)
  
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
 200fb70:	d8000015 	stw	zero,0(sp)
 200fb74:	e13ffd17 	ldw	r4,-12(fp)
 200fb78:	e17ffe17 	ldw	r5,-8(fp)
 200fb7c:	01808074 	movhi	r6,513
 200fb80:	31bee804 	addi	r6,r6,-1120
 200fb84:	e1fffc17 	ldw	r7,-16(fp)
 200fb88:	20105e00 	call	20105e0 <alt_ic_isr_register>
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
#endif  
  }
}
 200fb8c:	e037883a 	mov	sp,fp
 200fb90:	dfc00117 	ldw	ra,4(sp)
 200fb94:	df000017 	ldw	fp,0(sp)
 200fb98:	dec00204 	addi	sp,sp,8
 200fb9c:	f800283a 	ret

0200fba0 <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
 200fba0:	defffa04 	addi	sp,sp,-24
 200fba4:	dfc00515 	stw	ra,20(sp)
 200fba8:	df000415 	stw	fp,16(sp)
 200fbac:	df000404 	addi	fp,sp,16
 200fbb0:	e13fff15 	stw	r4,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
 200fbb4:	e0bfff17 	ldw	r2,-4(fp)
 200fbb8:	e0bffd15 	stw	r2,-12(fp)
  void* base               = sp->base;
 200fbbc:	e0bffd17 	ldw	r2,-12(fp)
 200fbc0:	10800017 	ldw	r2,0(r2)
 200fbc4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
 200fbc8:	e0bffc17 	ldw	r2,-16(fp)
 200fbcc:	10800204 	addi	r2,r2,8
 200fbd0:	10800037 	ldwio	r2,0(r2)
 200fbd4:	e0bffe15 	stw	r2,-8(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
 200fbd8:	e0bffc17 	ldw	r2,-16(fp)
 200fbdc:	10800204 	addi	r2,r2,8
 200fbe0:	10000035 	stwio	zero,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
 200fbe4:	e0bffc17 	ldw	r2,-16(fp)
 200fbe8:	10800204 	addi	r2,r2,8
 200fbec:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
 200fbf0:	e0bffe17 	ldw	r2,-8(fp)
 200fbf4:	1080200c 	andi	r2,r2,128
 200fbf8:	1005003a 	cmpeq	r2,r2,zero
 200fbfc:	1000031e 	bne	r2,zero,200fc0c <altera_avalon_uart_irq+0x6c>
  {
    altera_avalon_uart_rxirq(sp, status);
 200fc00:	e13ffd17 	ldw	r4,-12(fp)
 200fc04:	e17ffe17 	ldw	r5,-8(fp)
 200fc08:	200fc3c0 	call	200fc3c <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
 200fc0c:	e0bffe17 	ldw	r2,-8(fp)
 200fc10:	1081100c 	andi	r2,r2,1088
 200fc14:	1005003a 	cmpeq	r2,r2,zero
 200fc18:	1000031e 	bne	r2,zero,200fc28 <altera_avalon_uart_irq+0x88>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
 200fc1c:	e13ffd17 	ldw	r4,-12(fp)
 200fc20:	e17ffe17 	ldw	r5,-8(fp)
 200fc24:	200fd1c0 	call	200fd1c <altera_avalon_uart_txirq>
  }
  

}
 200fc28:	e037883a 	mov	sp,fp
 200fc2c:	dfc00117 	ldw	ra,4(sp)
 200fc30:	df000017 	ldw	fp,0(sp)
 200fc34:	dec00204 	addi	sp,sp,8
 200fc38:	f800283a 	ret

0200fc3c <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
 200fc3c:	defffc04 	addi	sp,sp,-16
 200fc40:	df000315 	stw	fp,12(sp)
 200fc44:	df000304 	addi	fp,sp,12
 200fc48:	e13ffe15 	stw	r4,-8(fp)
 200fc4c:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
 200fc50:	e0bfff17 	ldw	r2,-4(fp)
 200fc54:	108000cc 	andi	r2,r2,3
 200fc58:	1004c03a 	cmpne	r2,r2,zero
 200fc5c:	10002b1e 	bne	r2,zero,200fd0c <altera_avalon_uart_rxirq+0xd0>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
 200fc60:	e0bffe17 	ldw	r2,-8(fp)
 200fc64:	10800317 	ldw	r2,12(r2)
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
 200fc68:	e0bffe17 	ldw	r2,-8(fp)
 200fc6c:	10800317 	ldw	r2,12(r2)
 200fc70:	10800044 	addi	r2,r2,1
 200fc74:	10800fcc 	andi	r2,r2,63
 200fc78:	e0bffd15 	stw	r2,-12(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
 200fc7c:	e0bffe17 	ldw	r2,-8(fp)
 200fc80:	11000317 	ldw	r4,12(r2)
 200fc84:	e0bffe17 	ldw	r2,-8(fp)
 200fc88:	10800017 	ldw	r2,0(r2)
 200fc8c:	10800037 	ldwio	r2,0(r2)
 200fc90:	1007883a 	mov	r3,r2
 200fc94:	e0bffe17 	ldw	r2,-8(fp)
 200fc98:	2085883a 	add	r2,r4,r2
 200fc9c:	10800704 	addi	r2,r2,28
 200fca0:	10c00005 	stb	r3,0(r2)

  sp->rx_end = next;
 200fca4:	e0fffe17 	ldw	r3,-8(fp)
 200fca8:	e0bffd17 	ldw	r2,-12(fp)
 200fcac:	18800315 	stw	r2,12(r3)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
 200fcb0:	e0bffe17 	ldw	r2,-8(fp)
 200fcb4:	10800317 	ldw	r2,12(r2)
 200fcb8:	10800044 	addi	r2,r2,1
 200fcbc:	10800fcc 	andi	r2,r2,63
 200fcc0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
 200fcc4:	e0bffe17 	ldw	r2,-8(fp)
 200fcc8:	10c00217 	ldw	r3,8(r2)
 200fccc:	e0bffd17 	ldw	r2,-12(fp)
 200fcd0:	18800e1e 	bne	r3,r2,200fd0c <altera_avalon_uart_rxirq+0xd0>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
 200fcd4:	e0bffe17 	ldw	r2,-8(fp)
 200fcd8:	10c00117 	ldw	r3,4(r2)
 200fcdc:	00bfdfc4 	movi	r2,-129
 200fce0:	1886703a 	and	r3,r3,r2
 200fce4:	e0bffe17 	ldw	r2,-8(fp)
 200fce8:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
 200fcec:	e0bffe17 	ldw	r2,-8(fp)
 200fcf0:	10800017 	ldw	r2,0(r2)
 200fcf4:	11000304 	addi	r4,r2,12
 200fcf8:	e0bffe17 	ldw	r2,-8(fp)
 200fcfc:	10800117 	ldw	r2,4(r2)
 200fd00:	1007883a 	mov	r3,r2
 200fd04:	2005883a 	mov	r2,r4
 200fd08:	10c00035 	stwio	r3,0(r2)
  }   
}
 200fd0c:	e037883a 	mov	sp,fp
 200fd10:	df000017 	ldw	fp,0(sp)
 200fd14:	dec00104 	addi	sp,sp,4
 200fd18:	f800283a 	ret

0200fd1c <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
 200fd1c:	defffd04 	addi	sp,sp,-12
 200fd20:	df000215 	stw	fp,8(sp)
 200fd24:	df000204 	addi	fp,sp,8
 200fd28:	e13ffe15 	stw	r4,-8(fp)
 200fd2c:	e17fff15 	stw	r5,-4(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
 200fd30:	e0bffe17 	ldw	r2,-8(fp)
 200fd34:	10c00417 	ldw	r3,16(r2)
 200fd38:	e0bffe17 	ldw	r2,-8(fp)
 200fd3c:	10800517 	ldw	r2,20(r2)
 200fd40:	18803626 	beq	r3,r2,200fe1c <altera_avalon_uart_txirq+0x100>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
 200fd44:	e0bffe17 	ldw	r2,-8(fp)
 200fd48:	10800617 	ldw	r2,24(r2)
 200fd4c:	1080008c 	andi	r2,r2,2
 200fd50:	1005003a 	cmpeq	r2,r2,zero
 200fd54:	1000041e 	bne	r2,zero,200fd68 <altera_avalon_uart_txirq+0x4c>
 200fd58:	e0bfff17 	ldw	r2,-4(fp)
 200fd5c:	1082000c 	andi	r2,r2,2048
 200fd60:	1005003a 	cmpeq	r2,r2,zero
 200fd64:	10001e1e 	bne	r2,zero,200fde0 <altera_avalon_uart_txirq+0xc4>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
 200fd68:	e0bffe17 	ldw	r2,-8(fp)
 200fd6c:	10800417 	ldw	r2,16(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
 200fd70:	e0bffe17 	ldw	r2,-8(fp)
 200fd74:	10800017 	ldw	r2,0(r2)
 200fd78:	11000104 	addi	r4,r2,4
 200fd7c:	e0bffe17 	ldw	r2,-8(fp)
 200fd80:	10c00417 	ldw	r3,16(r2)
 200fd84:	e0bffe17 	ldw	r2,-8(fp)
 200fd88:	1885883a 	add	r2,r3,r2
 200fd8c:	10801704 	addi	r2,r2,92
 200fd90:	10800003 	ldbu	r2,0(r2)
 200fd94:	10c03fcc 	andi	r3,r2,255
 200fd98:	2005883a 	mov	r2,r4
 200fd9c:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
 200fda0:	e0bffe17 	ldw	r2,-8(fp)
 200fda4:	10800417 	ldw	r2,16(r2)
 200fda8:	10c00044 	addi	r3,r2,1
 200fdac:	e0bffe17 	ldw	r2,-8(fp)
 200fdb0:	10c00415 	stw	r3,16(r2)
 200fdb4:	e0bffe17 	ldw	r2,-8(fp)
 200fdb8:	10800417 	ldw	r2,16(r2)
 200fdbc:	10c00fcc 	andi	r3,r2,63
 200fdc0:	e0bffe17 	ldw	r2,-8(fp)
 200fdc4:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
 200fdc8:	e0bffe17 	ldw	r2,-8(fp)
 200fdcc:	10800117 	ldw	r2,4(r2)
 200fdd0:	10c01014 	ori	r3,r2,64
 200fdd4:	e0bffe17 	ldw	r2,-8(fp)
 200fdd8:	10c00115 	stw	r3,4(r2)
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
 200fddc:	00000f06 	br	200fe1c <altera_avalon_uart_txirq+0x100>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
 200fde0:	e0bffe17 	ldw	r2,-8(fp)
 200fde4:	10800017 	ldw	r2,0(r2)
 200fde8:	10800204 	addi	r2,r2,8
 200fdec:	10800037 	ldwio	r2,0(r2)
 200fdf0:	e0bfff15 	stw	r2,-4(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
 200fdf4:	e0bfff17 	ldw	r2,-4(fp)
 200fdf8:	1082000c 	andi	r2,r2,2048
 200fdfc:	1004c03a 	cmpne	r2,r2,zero
 200fe00:	1000061e 	bne	r2,zero,200fe1c <altera_avalon_uart_txirq+0x100>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
 200fe04:	e0bffe17 	ldw	r2,-8(fp)
 200fe08:	10c00117 	ldw	r3,4(r2)
 200fe0c:	00bfefc4 	movi	r2,-65
 200fe10:	1886703a 	and	r3,r3,r2
 200fe14:	e0bffe17 	ldw	r2,-8(fp)
 200fe18:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
 200fe1c:	e0bffe17 	ldw	r2,-8(fp)
 200fe20:	10c00417 	ldw	r3,16(r2)
 200fe24:	e0bffe17 	ldw	r2,-8(fp)
 200fe28:	10800517 	ldw	r2,20(r2)
 200fe2c:	1880061e 	bne	r3,r2,200fe48 <altera_avalon_uart_txirq+0x12c>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
 200fe30:	e0bffe17 	ldw	r2,-8(fp)
 200fe34:	10c00117 	ldw	r3,4(r2)
 200fe38:	00beefc4 	movi	r2,-1089
 200fe3c:	1886703a 	and	r3,r3,r2
 200fe40:	e0bffe17 	ldw	r2,-8(fp)
 200fe44:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 200fe48:	e0bffe17 	ldw	r2,-8(fp)
 200fe4c:	10800017 	ldw	r2,0(r2)
 200fe50:	11000304 	addi	r4,r2,12
 200fe54:	e0bffe17 	ldw	r2,-8(fp)
 200fe58:	10800117 	ldw	r2,4(r2)
 200fe5c:	1007883a 	mov	r3,r2
 200fe60:	2005883a 	mov	r2,r4
 200fe64:	10c00035 	stwio	r3,0(r2)
}
 200fe68:	e037883a 	mov	sp,fp
 200fe6c:	df000017 	ldw	fp,0(sp)
 200fe70:	dec00104 	addi	sp,sp,4
 200fe74:	f800283a 	ret

0200fe78 <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
 200fe78:	defffc04 	addi	sp,sp,-16
 200fe7c:	df000315 	stw	fp,12(sp)
 200fe80:	df000304 	addi	fp,sp,12
 200fe84:	e13ffd15 	stw	r4,-12(fp)
 200fe88:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
 200fe8c:	00000706 	br	200feac <altera_avalon_uart_close+0x34>
    if (flags & O_NONBLOCK) {
 200fe90:	e0bffe17 	ldw	r2,-8(fp)
 200fe94:	1090000c 	andi	r2,r2,16384
 200fe98:	1005003a 	cmpeq	r2,r2,zero
 200fe9c:	1000031e 	bne	r2,zero,200feac <altera_avalon_uart_close+0x34>
      return -EWOULDBLOCK; 
 200fea0:	00bffd44 	movi	r2,-11
 200fea4:	e0bfff15 	stw	r2,-4(fp)
 200fea8:	00000606 	br	200fec4 <altera_avalon_uart_close+0x4c>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
 200feac:	e0bffd17 	ldw	r2,-12(fp)
 200feb0:	10c00417 	ldw	r3,16(r2)
 200feb4:	e0bffd17 	ldw	r2,-12(fp)
 200feb8:	10800517 	ldw	r2,20(r2)
 200febc:	18bff41e 	bne	r3,r2,200fe90 <altera_avalon_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 200fec0:	e03fff15 	stw	zero,-4(fp)
 200fec4:	e0bfff17 	ldw	r2,-4(fp)
}
 200fec8:	e037883a 	mov	sp,fp
 200fecc:	df000017 	ldw	fp,0(sp)
 200fed0:	dec00104 	addi	sp,sp,4
 200fed4:	f800283a 	ret

0200fed8 <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
 200fed8:	defff004 	addi	sp,sp,-64
 200fedc:	dfc00f15 	stw	ra,60(sp)
 200fee0:	df000e15 	stw	fp,56(sp)
 200fee4:	df000e04 	addi	fp,sp,56
 200fee8:	e13ffb15 	stw	r4,-20(fp)
 200feec:	e17ffc15 	stw	r5,-16(fp)
 200fef0:	e1bffd15 	stw	r6,-12(fp)
 200fef4:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context context;
  int             block;
  alt_u32         next;
  alt_u8          read_would_block = 0;
 200fef8:	e03ff705 	stb	zero,-36(fp)
  int             count = 0;
 200fefc:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
 200ff00:	e0bffe17 	ldw	r2,-8(fp)
 200ff04:	1090000c 	andi	r2,r2,16384
 200ff08:	1005003a 	cmpeq	r2,r2,zero
 200ff0c:	e0bff915 	stw	r2,-28(fp)
  /*
   * Calculate which slot in the circular buffer is the next one to read
   * data from.
   */

  next = (sp->rx_start + 1) & ALT_AVALON_UART_BUF_MSK;
 200ff10:	e0bffb17 	ldw	r2,-20(fp)
 200ff14:	10800217 	ldw	r2,8(r2)
 200ff18:	10800044 	addi	r2,r2,1
 200ff1c:	10800fcc 	andi	r2,r2,63
 200ff20:	e0bff815 	stw	r2,-32(fp)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
 200ff24:	00001906 	br	200ff8c <altera_avalon_uart_read+0xb4>
    {
      count++;
 200ff28:	e0bff617 	ldw	r2,-40(fp)
 200ff2c:	10800044 	addi	r2,r2,1
 200ff30:	e0bff615 	stw	r2,-40(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
 200ff34:	e0bffb17 	ldw	r2,-20(fp)
 200ff38:	10c00217 	ldw	r3,8(r2)
 200ff3c:	e0bffb17 	ldw	r2,-20(fp)
 200ff40:	1885883a 	add	r2,r3,r2
 200ff44:	10800704 	addi	r2,r2,28
 200ff48:	10800003 	ldbu	r2,0(r2)
 200ff4c:	1007883a 	mov	r3,r2
 200ff50:	e0bffc17 	ldw	r2,-16(fp)
 200ff54:	10c00005 	stb	r3,0(r2)
 200ff58:	e0bffc17 	ldw	r2,-16(fp)
 200ff5c:	10800044 	addi	r2,r2,1
 200ff60:	e0bffc15 	stw	r2,-16(fp)
      
      sp->rx_start = (++sp->rx_start) & ALT_AVALON_UART_BUF_MSK;
 200ff64:	e0bffb17 	ldw	r2,-20(fp)
 200ff68:	10800217 	ldw	r2,8(r2)
 200ff6c:	10c00044 	addi	r3,r2,1
 200ff70:	e0bffb17 	ldw	r2,-20(fp)
 200ff74:	10c00215 	stw	r3,8(r2)
 200ff78:	e0bffb17 	ldw	r2,-20(fp)
 200ff7c:	10800217 	ldw	r2,8(r2)
 200ff80:	10c00fcc 	andi	r3,r2,63
 200ff84:	e0bffb17 	ldw	r2,-20(fp)
 200ff88:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
 200ff8c:	e0fff617 	ldw	r3,-40(fp)
 200ff90:	e0bffd17 	ldw	r2,-12(fp)
 200ff94:	1880050e 	bge	r3,r2,200ffac <altera_avalon_uart_read+0xd4>
 200ff98:	e0bffb17 	ldw	r2,-20(fp)
 200ff9c:	10c00217 	ldw	r3,8(r2)
 200ffa0:	e0bffb17 	ldw	r2,-20(fp)
 200ffa4:	10800317 	ldw	r2,12(r2)
 200ffa8:	18bfdf1e 	bne	r3,r2,200ff28 <altera_avalon_uart_read+0x50>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
 200ffac:	e0bff617 	ldw	r2,-40(fp)
 200ffb0:	1004c03a 	cmpne	r2,r2,zero
 200ffb4:	1000271e 	bne	r2,zero,2010054 <altera_avalon_uart_read+0x17c>
 200ffb8:	e0bffb17 	ldw	r2,-20(fp)
 200ffbc:	10c00217 	ldw	r3,8(r2)
 200ffc0:	e0bffb17 	ldw	r2,-20(fp)
 200ffc4:	10800317 	ldw	r2,12(r2)
 200ffc8:	1880221e 	bne	r3,r2,2010054 <altera_avalon_uart_read+0x17c>
    {
      if (!block)
 200ffcc:	e0bff917 	ldw	r2,-28(fp)
 200ffd0:	1004c03a 	cmpne	r2,r2,zero
 200ffd4:	1000061e 	bne	r2,zero,200fff0 <altera_avalon_uart_read+0x118>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
 200ffd8:	20101080 	call	2010108 <alt_get_errno>
 200ffdc:	00c002c4 	movi	r3,11
 200ffe0:	10c00015 	stw	r3,0(r2)
        read_would_block = 1;
 200ffe4:	00800044 	movi	r2,1
 200ffe8:	e0bff705 	stb	r2,-36(fp)
        break;
 200ffec:	00001f06 	br	201006c <altera_avalon_uart_read+0x194>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 200fff0:	0005303a 	rdctl	r2,status
 200fff4:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 200fff8:	e0fff517 	ldw	r3,-44(fp)
 200fffc:	00bfff84 	movi	r2,-2
 2010000:	1884703a 	and	r2,r3,r2
 2010004:	1001703a 	wrctl	status,r2
  
  return context;
 2010008:	e0bff517 	ldw	r2,-44(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
 201000c:	e0bffa15 	stw	r2,-24(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
 2010010:	e0bffb17 	ldw	r2,-20(fp)
 2010014:	10800117 	ldw	r2,4(r2)
 2010018:	10c02014 	ori	r3,r2,128
 201001c:	e0bffb17 	ldw	r2,-20(fp)
 2010020:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 2010024:	e0bffb17 	ldw	r2,-20(fp)
 2010028:	10800017 	ldw	r2,0(r2)
 201002c:	11000304 	addi	r4,r2,12
 2010030:	e0bffb17 	ldw	r2,-20(fp)
 2010034:	10800117 	ldw	r2,4(r2)
 2010038:	1007883a 	mov	r3,r2
 201003c:	2005883a 	mov	r2,r4
 2010040:	10c00035 	stwio	r3,0(r2)
 2010044:	e0bffa17 	ldw	r2,-24(fp)
 2010048:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 201004c:	e0bff417 	ldw	r2,-48(fp)
 2010050:	1001703a 	wrctl	status,r2
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
 2010054:	e0bff617 	ldw	r2,-40(fp)
 2010058:	1004c03a 	cmpne	r2,r2,zero
 201005c:	1000031e 	bne	r2,zero,201006c <altera_avalon_uart_read+0x194>
 2010060:	e0bffd17 	ldw	r2,-12(fp)
 2010064:	1004c03a 	cmpne	r2,r2,zero
 2010068:	103fc81e 	bne	r2,zero,200ff8c <altera_avalon_uart_read+0xb4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 201006c:	0005303a 	rdctl	r2,status
 2010070:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2010074:	e0fff317 	ldw	r3,-52(fp)
 2010078:	00bfff84 	movi	r2,-2
 201007c:	1884703a 	and	r2,r3,r2
 2010080:	1001703a 	wrctl	status,r2
  
  return context;
 2010084:	e0bff317 	ldw	r2,-52(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
 2010088:	e0bffa15 	stw	r2,-24(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
 201008c:	e0bffb17 	ldw	r2,-20(fp)
 2010090:	10800117 	ldw	r2,4(r2)
 2010094:	10c02014 	ori	r3,r2,128
 2010098:	e0bffb17 	ldw	r2,-20(fp)
 201009c:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 20100a0:	e0bffb17 	ldw	r2,-20(fp)
 20100a4:	10800017 	ldw	r2,0(r2)
 20100a8:	11000304 	addi	r4,r2,12
 20100ac:	e0bffb17 	ldw	r2,-20(fp)
 20100b0:	10800117 	ldw	r2,4(r2)
 20100b4:	1007883a 	mov	r3,r2
 20100b8:	2005883a 	mov	r2,r4
 20100bc:	10c00035 	stwio	r3,0(r2)
 20100c0:	e0bffa17 	ldw	r2,-24(fp)
 20100c4:	e0bff215 	stw	r2,-56(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 20100c8:	e0bff217 	ldw	r2,-56(fp)
 20100cc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
 20100d0:	e0bff703 	ldbu	r2,-36(fp)
 20100d4:	1005003a 	cmpeq	r2,r2,zero
 20100d8:	1000031e 	bne	r2,zero,20100e8 <altera_avalon_uart_read+0x210>
    return ~EWOULDBLOCK;
 20100dc:	00bffd04 	movi	r2,-12
 20100e0:	e0bfff15 	stw	r2,-4(fp)
 20100e4:	00000206 	br	20100f0 <altera_avalon_uart_read+0x218>
  }
  else {
    return count;
 20100e8:	e0bff617 	ldw	r2,-40(fp)
 20100ec:	e0bfff15 	stw	r2,-4(fp)
 20100f0:	e0bfff17 	ldw	r2,-4(fp)
  }
}
 20100f4:	e037883a 	mov	sp,fp
 20100f8:	dfc00117 	ldw	ra,4(sp)
 20100fc:	df000017 	ldw	fp,0(sp)
 2010100:	dec00204 	addi	sp,sp,8
 2010104:	f800283a 	ret

02010108 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010108:	defffd04 	addi	sp,sp,-12
 201010c:	dfc00215 	stw	ra,8(sp)
 2010110:	df000115 	stw	fp,4(sp)
 2010114:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010118:	00808074 	movhi	r2,513
 201011c:	1089a104 	addi	r2,r2,9860
 2010120:	10800017 	ldw	r2,0(r2)
 2010124:	1005003a 	cmpeq	r2,r2,zero
 2010128:	1000061e 	bne	r2,zero,2010144 <alt_get_errno+0x3c>
 201012c:	00808074 	movhi	r2,513
 2010130:	1089a104 	addi	r2,r2,9860
 2010134:	10800017 	ldw	r2,0(r2)
 2010138:	103ee83a 	callr	r2
 201013c:	e0bfff15 	stw	r2,-4(fp)
 2010140:	00000306 	br	2010150 <alt_get_errno+0x48>
 2010144:	00808074 	movhi	r2,513
 2010148:	108c6704 	addi	r2,r2,12700
 201014c:	e0bfff15 	stw	r2,-4(fp)
 2010150:	e0bfff17 	ldw	r2,-4(fp)
}
 2010154:	e037883a 	mov	sp,fp
 2010158:	dfc00117 	ldw	ra,4(sp)
 201015c:	df000017 	ldw	fp,0(sp)
 2010160:	dec00204 	addi	sp,sp,8
 2010164:	f800283a 	ret

02010168 <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
 2010168:	defff204 	addi	sp,sp,-56
 201016c:	dfc00d15 	stw	ra,52(sp)
 2010170:	df000c15 	stw	fp,48(sp)
 2010174:	df000c04 	addi	fp,sp,48
 2010178:	e13ffc15 	stw	r4,-16(fp)
 201017c:	e17ffd15 	stw	r5,-12(fp)
 2010180:	e1bffe15 	stw	r6,-8(fp)
 2010184:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
 2010188:	e0bffe17 	ldw	r2,-8(fp)
 201018c:	e0bff815 	stw	r2,-32(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
 2010190:	e0bfff17 	ldw	r2,-4(fp)
 2010194:	1090000c 	andi	r2,r2,16384
 2010198:	e0bffa15 	stw	r2,-24(fp)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
 201019c:	00004006 	br	20102a0 <altera_avalon_uart_write+0x138>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
 20101a0:	e0bffc17 	ldw	r2,-16(fp)
 20101a4:	10800517 	ldw	r2,20(r2)
 20101a8:	10800044 	addi	r2,r2,1
 20101ac:	10800fcc 	andi	r2,r2,63
 20101b0:	e0bff915 	stw	r2,-28(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
 20101b4:	e0bffc17 	ldw	r2,-16(fp)
 20101b8:	10c00417 	ldw	r3,16(r2)
 20101bc:	e0bff917 	ldw	r2,-28(fp)
 20101c0:	1880251e 	bne	r3,r2,2010258 <altera_avalon_uart_write+0xf0>
    {
      if (no_block)
 20101c4:	e0bffa17 	ldw	r2,-24(fp)
 20101c8:	1005003a 	cmpeq	r2,r2,zero
 20101cc:	1000051e 	bne	r2,zero,20101e4 <altera_avalon_uart_write+0x7c>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
 20101d0:	20103300 	call	2010330 <alt_get_errno>
 20101d4:	1007883a 	mov	r3,r2
 20101d8:	008002c4 	movi	r2,11
 20101dc:	18800015 	stw	r2,0(r3)
        break;
 20101e0:	00003206 	br	20102ac <altera_avalon_uart_write+0x144>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 20101e4:	0005303a 	rdctl	r2,status
 20101e8:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 20101ec:	e0fff717 	ldw	r3,-36(fp)
 20101f0:	00bfff84 	movi	r2,-2
 20101f4:	1884703a 	and	r2,r3,r2
 20101f8:	1001703a 	wrctl	status,r2
  
  return context;
 20101fc:	e0bff717 	ldw	r2,-36(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
 2010200:	e0bffb15 	stw	r2,-20(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
 2010204:	e0bffc17 	ldw	r2,-16(fp)
 2010208:	10800117 	ldw	r2,4(r2)
 201020c:	10c11014 	ori	r3,r2,1088
 2010210:	e0bffc17 	ldw	r2,-16(fp)
 2010214:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 2010218:	e0bffc17 	ldw	r2,-16(fp)
 201021c:	10800017 	ldw	r2,0(r2)
 2010220:	11000304 	addi	r4,r2,12
 2010224:	e0bffc17 	ldw	r2,-16(fp)
 2010228:	10800117 	ldw	r2,4(r2)
 201022c:	1007883a 	mov	r3,r2
 2010230:	2005883a 	mov	r2,r4
 2010234:	10c00035 	stwio	r3,0(r2)
 2010238:	e0bffb17 	ldw	r2,-20(fp)
 201023c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2010240:	e0bff617 	ldw	r2,-40(fp)
 2010244:	1001703a 	wrctl	status,r2
          ALT_FLAG_PEND (sp->events, 
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
 2010248:	e0bffc17 	ldw	r2,-16(fp)
 201024c:	10c00417 	ldw	r3,16(r2)
 2010250:	e0bff917 	ldw	r2,-28(fp)
 2010254:	18bffc26 	beq	r3,r2,2010248 <altera_avalon_uart_write+0xe0>
      }
    }

    count--;
 2010258:	e0bff817 	ldw	r2,-32(fp)
 201025c:	10bfffc4 	addi	r2,r2,-1
 2010260:	e0bff815 	stw	r2,-32(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
 2010264:	e0bffc17 	ldw	r2,-16(fp)
 2010268:	10c00517 	ldw	r3,20(r2)
 201026c:	e0bffd17 	ldw	r2,-12(fp)
 2010270:	10800003 	ldbu	r2,0(r2)
 2010274:	1009883a 	mov	r4,r2
 2010278:	e0bffc17 	ldw	r2,-16(fp)
 201027c:	1885883a 	add	r2,r3,r2
 2010280:	10801704 	addi	r2,r2,92
 2010284:	11000005 	stb	r4,0(r2)
 2010288:	e0bffd17 	ldw	r2,-12(fp)
 201028c:	10800044 	addi	r2,r2,1
 2010290:	e0bffd15 	stw	r2,-12(fp)
    sp->tx_end = next;
 2010294:	e0fffc17 	ldw	r3,-16(fp)
 2010298:	e0bff917 	ldw	r2,-28(fp)
 201029c:	18800515 	stw	r2,20(r3)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
 20102a0:	e0bff817 	ldw	r2,-32(fp)
 20102a4:	1004c03a 	cmpne	r2,r2,zero
 20102a8:	103fbd1e 	bne	r2,zero,20101a0 <altera_avalon_uart_write+0x38>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 20102ac:	0005303a 	rdctl	r2,status
 20102b0:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 20102b4:	e0fff517 	ldw	r3,-44(fp)
 20102b8:	00bfff84 	movi	r2,-2
 20102bc:	1884703a 	and	r2,r3,r2
 20102c0:	1001703a 	wrctl	status,r2
  
  return context;
 20102c4:	e0bff517 	ldw	r2,-44(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
 20102c8:	e0bffb15 	stw	r2,-20(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
 20102cc:	e0bffc17 	ldw	r2,-16(fp)
 20102d0:	10800117 	ldw	r2,4(r2)
 20102d4:	10c11014 	ori	r3,r2,1088
 20102d8:	e0bffc17 	ldw	r2,-16(fp)
 20102dc:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 20102e0:	e0bffc17 	ldw	r2,-16(fp)
 20102e4:	10800017 	ldw	r2,0(r2)
 20102e8:	11000304 	addi	r4,r2,12
 20102ec:	e0bffc17 	ldw	r2,-16(fp)
 20102f0:	10800117 	ldw	r2,4(r2)
 20102f4:	1007883a 	mov	r3,r2
 20102f8:	2005883a 	mov	r2,r4
 20102fc:	10c00035 	stwio	r3,0(r2)
 2010300:	e0bffb17 	ldw	r2,-20(fp)
 2010304:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2010308:	e0bff417 	ldw	r2,-48(fp)
 201030c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
 2010310:	e0fffe17 	ldw	r3,-8(fp)
 2010314:	e0bff817 	ldw	r2,-32(fp)
 2010318:	1885c83a 	sub	r2,r3,r2
}
 201031c:	e037883a 	mov	sp,fp
 2010320:	dfc00117 	ldw	ra,4(sp)
 2010324:	df000017 	ldw	fp,0(sp)
 2010328:	dec00204 	addi	sp,sp,8
 201032c:	f800283a 	ret

02010330 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010330:	defffd04 	addi	sp,sp,-12
 2010334:	dfc00215 	stw	ra,8(sp)
 2010338:	df000115 	stw	fp,4(sp)
 201033c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010340:	00808074 	movhi	r2,513
 2010344:	1089a104 	addi	r2,r2,9860
 2010348:	10800017 	ldw	r2,0(r2)
 201034c:	1005003a 	cmpeq	r2,r2,zero
 2010350:	1000061e 	bne	r2,zero,201036c <alt_get_errno+0x3c>
 2010354:	00808074 	movhi	r2,513
 2010358:	1089a104 	addi	r2,r2,9860
 201035c:	10800017 	ldw	r2,0(r2)
 2010360:	103ee83a 	callr	r2
 2010364:	e0bfff15 	stw	r2,-4(fp)
 2010368:	00000306 	br	2010378 <alt_get_errno+0x48>
 201036c:	00808074 	movhi	r2,513
 2010370:	108c6704 	addi	r2,r2,12700
 2010374:	e0bfff15 	stw	r2,-4(fp)
 2010378:	e0bfff17 	ldw	r2,-4(fp)
}
 201037c:	e037883a 	mov	sp,fp
 2010380:	dfc00117 	ldw	ra,4(sp)
 2010384:	df000017 	ldw	fp,0(sp)
 2010388:	dec00204 	addi	sp,sp,8
 201038c:	f800283a 	ret

02010390 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 2010390:	defffe04 	addi	sp,sp,-8
 2010394:	df000115 	stw	fp,4(sp)
 2010398:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 201039c:	e03fff15 	stw	zero,-4(fp)
 20103a0:	00000506 	br	20103b8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 20103a4:	e0bfff17 	ldw	r2,-4(fp)
 20103a8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 20103ac:	e0bfff17 	ldw	r2,-4(fp)
 20103b0:	10800804 	addi	r2,r2,32
 20103b4:	e0bfff15 	stw	r2,-4(fp)
 20103b8:	e0bfff17 	ldw	r2,-4(fp)
 20103bc:	10880030 	cmpltui	r2,r2,8192
 20103c0:	103ff81e 	bne	r2,zero,20103a4 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 20103c4:	e037883a 	mov	sp,fp
 20103c8:	df000017 	ldw	fp,0(sp)
 20103cc:	dec00104 	addi	sp,sp,4
 20103d0:	f800283a 	ret

020103d4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 20103d4:	defff904 	addi	sp,sp,-28
 20103d8:	dfc00615 	stw	ra,24(sp)
 20103dc:	df000515 	stw	fp,20(sp)
 20103e0:	df000504 	addi	fp,sp,20
 20103e4:	e13ffd15 	stw	r4,-12(fp)
 20103e8:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 20103ec:	e0bffd17 	ldw	r2,-12(fp)
 20103f0:	1005003a 	cmpeq	r2,r2,zero
 20103f4:	1000041e 	bne	r2,zero,2010408 <alt_dev_llist_insert+0x34>
 20103f8:	e0bffd17 	ldw	r2,-12(fp)
 20103fc:	10800217 	ldw	r2,8(r2)
 2010400:	1004c03a 	cmpne	r2,r2,zero
 2010404:	1000071e 	bne	r2,zero,2010424 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
 2010408:	20104880 	call	2010488 <alt_get_errno>
 201040c:	1007883a 	mov	r3,r2
 2010410:	00800584 	movi	r2,22
 2010414:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 2010418:	00bffa84 	movi	r2,-22
 201041c:	e0bfff15 	stw	r2,-4(fp)
 2010420:	00001306 	br	2010470 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 2010424:	e0fffd17 	ldw	r3,-12(fp)
 2010428:	e0bffe17 	ldw	r2,-8(fp)
 201042c:	e0bffb15 	stw	r2,-20(fp)
 2010430:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 2010434:	e0fffc17 	ldw	r3,-16(fp)
 2010438:	e0bffb17 	ldw	r2,-20(fp)
 201043c:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 2010440:	e0bffb17 	ldw	r2,-20(fp)
 2010444:	10c00017 	ldw	r3,0(r2)
 2010448:	e0bffc17 	ldw	r2,-16(fp)
 201044c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 2010450:	e0bffb17 	ldw	r2,-20(fp)
 2010454:	10c00017 	ldw	r3,0(r2)
 2010458:	e0bffc17 	ldw	r2,-16(fp)
 201045c:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 2010460:	e0fffb17 	ldw	r3,-20(fp)
 2010464:	e0bffc17 	ldw	r2,-16(fp)
 2010468:	18800015 	stw	r2,0(r3)

  return 0;  
 201046c:	e03fff15 	stw	zero,-4(fp)
 2010470:	e0bfff17 	ldw	r2,-4(fp)
}
 2010474:	e037883a 	mov	sp,fp
 2010478:	dfc00117 	ldw	ra,4(sp)
 201047c:	df000017 	ldw	fp,0(sp)
 2010480:	dec00204 	addi	sp,sp,8
 2010484:	f800283a 	ret

02010488 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010488:	defffd04 	addi	sp,sp,-12
 201048c:	dfc00215 	stw	ra,8(sp)
 2010490:	df000115 	stw	fp,4(sp)
 2010494:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010498:	00808074 	movhi	r2,513
 201049c:	1089a104 	addi	r2,r2,9860
 20104a0:	10800017 	ldw	r2,0(r2)
 20104a4:	1005003a 	cmpeq	r2,r2,zero
 20104a8:	1000061e 	bne	r2,zero,20104c4 <alt_get_errno+0x3c>
 20104ac:	00808074 	movhi	r2,513
 20104b0:	1089a104 	addi	r2,r2,9860
 20104b4:	10800017 	ldw	r2,0(r2)
 20104b8:	103ee83a 	callr	r2
 20104bc:	e0bfff15 	stw	r2,-4(fp)
 20104c0:	00000306 	br	20104d0 <alt_get_errno+0x48>
 20104c4:	00808074 	movhi	r2,513
 20104c8:	108c6704 	addi	r2,r2,12700
 20104cc:	e0bfff15 	stw	r2,-4(fp)
 20104d0:	e0bfff17 	ldw	r2,-4(fp)
}
 20104d4:	e037883a 	mov	sp,fp
 20104d8:	dfc00117 	ldw	ra,4(sp)
 20104dc:	df000017 	ldw	fp,0(sp)
 20104e0:	dec00204 	addi	sp,sp,8
 20104e4:	f800283a 	ret

020104e8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 20104e8:	defffd04 	addi	sp,sp,-12
 20104ec:	dfc00215 	stw	ra,8(sp)
 20104f0:	df000115 	stw	fp,4(sp)
 20104f4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 20104f8:	00bfff04 	movi	r2,-4
 20104fc:	00c08074 	movhi	r3,513
 2010500:	18c55e04 	addi	r3,r3,5496
 2010504:	1885883a 	add	r2,r3,r2
 2010508:	e0bfff15 	stw	r2,-4(fp)
 201050c:	00000606 	br	2010528 <_do_ctors+0x40>
        (*ctor) (); 
 2010510:	e0bfff17 	ldw	r2,-4(fp)
 2010514:	10800017 	ldw	r2,0(r2)
 2010518:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 201051c:	e0bfff17 	ldw	r2,-4(fp)
 2010520:	10bfff04 	addi	r2,r2,-4
 2010524:	e0bfff15 	stw	r2,-4(fp)
 2010528:	e0ffff17 	ldw	r3,-4(fp)
 201052c:	00808074 	movhi	r2,513
 2010530:	10855d04 	addi	r2,r2,5492
 2010534:	18bff62e 	bgeu	r3,r2,2010510 <_do_ctors+0x28>
        (*ctor) (); 
}
 2010538:	e037883a 	mov	sp,fp
 201053c:	dfc00117 	ldw	ra,4(sp)
 2010540:	df000017 	ldw	fp,0(sp)
 2010544:	dec00204 	addi	sp,sp,8
 2010548:	f800283a 	ret

0201054c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 201054c:	defffd04 	addi	sp,sp,-12
 2010550:	dfc00215 	stw	ra,8(sp)
 2010554:	df000115 	stw	fp,4(sp)
 2010558:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 201055c:	00bfff04 	movi	r2,-4
 2010560:	00c08074 	movhi	r3,513
 2010564:	18c55e04 	addi	r3,r3,5496
 2010568:	1885883a 	add	r2,r3,r2
 201056c:	e0bfff15 	stw	r2,-4(fp)
 2010570:	00000606 	br	201058c <_do_dtors+0x40>
        (*dtor) (); 
 2010574:	e0bfff17 	ldw	r2,-4(fp)
 2010578:	10800017 	ldw	r2,0(r2)
 201057c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 2010580:	e0bfff17 	ldw	r2,-4(fp)
 2010584:	10bfff04 	addi	r2,r2,-4
 2010588:	e0bfff15 	stw	r2,-4(fp)
 201058c:	e0ffff17 	ldw	r3,-4(fp)
 2010590:	00808074 	movhi	r2,513
 2010594:	10855e04 	addi	r2,r2,5496
 2010598:	18bff62e 	bgeu	r3,r2,2010574 <_do_dtors+0x28>
        (*dtor) (); 
}
 201059c:	e037883a 	mov	sp,fp
 20105a0:	dfc00117 	ldw	ra,4(sp)
 20105a4:	df000017 	ldw	fp,0(sp)
 20105a8:	dec00204 	addi	sp,sp,8
 20105ac:	f800283a 	ret

020105b0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 20105b0:	defffe04 	addi	sp,sp,-8
 20105b4:	dfc00115 	stw	ra,4(sp)
 20105b8:	df000015 	stw	fp,0(sp)
 20105bc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 20105c0:	0009883a 	mov	r4,zero
 20105c4:	01440004 	movi	r5,4096
 20105c8:	20110dc0 	call	20110dc <alt_icache_flush>
#endif
}
 20105cc:	e037883a 	mov	sp,fp
 20105d0:	dfc00117 	ldw	ra,4(sp)
 20105d4:	df000017 	ldw	fp,0(sp)
 20105d8:	dec00204 	addi	sp,sp,8
 20105dc:	f800283a 	ret

020105e0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 20105e0:	defff904 	addi	sp,sp,-28
 20105e4:	dfc00615 	stw	ra,24(sp)
 20105e8:	df000515 	stw	fp,20(sp)
 20105ec:	df000504 	addi	fp,sp,20
 20105f0:	e13ffc15 	stw	r4,-16(fp)
 20105f4:	e17ffd15 	stw	r5,-12(fp)
 20105f8:	e1bffe15 	stw	r6,-8(fp)
 20105fc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 2010600:	e0800217 	ldw	r2,8(fp)
 2010604:	d8800015 	stw	r2,0(sp)
 2010608:	e13ffc17 	ldw	r4,-16(fp)
 201060c:	e17ffd17 	ldw	r5,-12(fp)
 2010610:	e1bffe17 	ldw	r6,-8(fp)
 2010614:	e1ffff17 	ldw	r7,-4(fp)
 2010618:	20107b40 	call	20107b4 <alt_iic_isr_register>
}  
 201061c:	e037883a 	mov	sp,fp
 2010620:	dfc00117 	ldw	ra,4(sp)
 2010624:	df000017 	ldw	fp,0(sp)
 2010628:	dec00204 	addi	sp,sp,8
 201062c:	f800283a 	ret

02010630 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 2010630:	defff904 	addi	sp,sp,-28
 2010634:	df000615 	stw	fp,24(sp)
 2010638:	df000604 	addi	fp,sp,24
 201063c:	e13ffe15 	stw	r4,-8(fp)
 2010640:	e17fff15 	stw	r5,-4(fp)
 2010644:	e0bfff17 	ldw	r2,-4(fp)
 2010648:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 201064c:	0005303a 	rdctl	r2,status
 2010650:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2010654:	e0fffb17 	ldw	r3,-20(fp)
 2010658:	00bfff84 	movi	r2,-2
 201065c:	1884703a 	and	r2,r3,r2
 2010660:	1001703a 	wrctl	status,r2
  
  return context;
 2010664:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 2010668:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
 201066c:	e0fffc17 	ldw	r3,-16(fp)
 2010670:	00800044 	movi	r2,1
 2010674:	10c4983a 	sll	r2,r2,r3
 2010678:	1007883a 	mov	r3,r2
 201067c:	00808074 	movhi	r2,513
 2010680:	108c6b04 	addi	r2,r2,12716
 2010684:	10800017 	ldw	r2,0(r2)
 2010688:	1886b03a 	or	r3,r3,r2
 201068c:	00808074 	movhi	r2,513
 2010690:	108c6b04 	addi	r2,r2,12716
 2010694:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 2010698:	00808074 	movhi	r2,513
 201069c:	108c6b04 	addi	r2,r2,12716
 20106a0:	10800017 	ldw	r2,0(r2)
 20106a4:	100170fa 	wrctl	ienable,r2
 20106a8:	e0bffd17 	ldw	r2,-12(fp)
 20106ac:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 20106b0:	e0bffa17 	ldw	r2,-24(fp)
 20106b4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 20106b8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
 20106bc:	e037883a 	mov	sp,fp
 20106c0:	df000017 	ldw	fp,0(sp)
 20106c4:	dec00104 	addi	sp,sp,4
 20106c8:	f800283a 	ret

020106cc <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 20106cc:	defff904 	addi	sp,sp,-28
 20106d0:	df000615 	stw	fp,24(sp)
 20106d4:	df000604 	addi	fp,sp,24
 20106d8:	e13ffe15 	stw	r4,-8(fp)
 20106dc:	e17fff15 	stw	r5,-4(fp)
 20106e0:	e0bfff17 	ldw	r2,-4(fp)
 20106e4:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 20106e8:	0005303a 	rdctl	r2,status
 20106ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 20106f0:	e0fffb17 	ldw	r3,-20(fp)
 20106f4:	00bfff84 	movi	r2,-2
 20106f8:	1884703a 	and	r2,r3,r2
 20106fc:	1001703a 	wrctl	status,r2
  
  return context;
 2010700:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 2010704:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
 2010708:	e0fffc17 	ldw	r3,-16(fp)
 201070c:	00800044 	movi	r2,1
 2010710:	10c4983a 	sll	r2,r2,r3
 2010714:	0084303a 	nor	r2,zero,r2
 2010718:	1007883a 	mov	r3,r2
 201071c:	00808074 	movhi	r2,513
 2010720:	108c6b04 	addi	r2,r2,12716
 2010724:	10800017 	ldw	r2,0(r2)
 2010728:	1886703a 	and	r3,r3,r2
 201072c:	00808074 	movhi	r2,513
 2010730:	108c6b04 	addi	r2,r2,12716
 2010734:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 2010738:	00808074 	movhi	r2,513
 201073c:	108c6b04 	addi	r2,r2,12716
 2010740:	10800017 	ldw	r2,0(r2)
 2010744:	100170fa 	wrctl	ienable,r2
 2010748:	e0bffd17 	ldw	r2,-12(fp)
 201074c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2010750:	e0bffa17 	ldw	r2,-24(fp)
 2010754:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 2010758:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
 201075c:	e037883a 	mov	sp,fp
 2010760:	df000017 	ldw	fp,0(sp)
 2010764:	dec00104 	addi	sp,sp,4
 2010768:	f800283a 	ret

0201076c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 201076c:	defffc04 	addi	sp,sp,-16
 2010770:	df000315 	stw	fp,12(sp)
 2010774:	df000304 	addi	fp,sp,12
 2010778:	e13ffe15 	stw	r4,-8(fp)
 201077c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 2010780:	000530fa 	rdctl	r2,ienable
 2010784:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 2010788:	e0ffff17 	ldw	r3,-4(fp)
 201078c:	00800044 	movi	r2,1
 2010790:	10c4983a 	sll	r2,r2,r3
 2010794:	1007883a 	mov	r3,r2
 2010798:	e0bffd17 	ldw	r2,-12(fp)
 201079c:	1884703a 	and	r2,r3,r2
 20107a0:	1004c03a 	cmpne	r2,r2,zero
}
 20107a4:	e037883a 	mov	sp,fp
 20107a8:	df000017 	ldw	fp,0(sp)
 20107ac:	dec00104 	addi	sp,sp,4
 20107b0:	f800283a 	ret

020107b4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 20107b4:	defff404 	addi	sp,sp,-48
 20107b8:	dfc00b15 	stw	ra,44(sp)
 20107bc:	df000a15 	stw	fp,40(sp)
 20107c0:	df000a04 	addi	fp,sp,40
 20107c4:	e13ffb15 	stw	r4,-20(fp)
 20107c8:	e17ffc15 	stw	r5,-16(fp)
 20107cc:	e1bffd15 	stw	r6,-12(fp)
 20107d0:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
 20107d4:	00bffa84 	movi	r2,-22
 20107d8:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 20107dc:	e0bffc17 	ldw	r2,-16(fp)
 20107e0:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 20107e4:	e0bff917 	ldw	r2,-28(fp)
 20107e8:	10800808 	cmpgei	r2,r2,32
 20107ec:	1000291e 	bne	r2,zero,2010894 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 20107f0:	0005303a 	rdctl	r2,status
 20107f4:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 20107f8:	e0fff717 	ldw	r3,-36(fp)
 20107fc:	00bfff84 	movi	r2,-2
 2010800:	1884703a 	and	r2,r3,r2
 2010804:	1001703a 	wrctl	status,r2
  
  return context;
 2010808:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 201080c:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
 2010810:	e0bff917 	ldw	r2,-28(fp)
 2010814:	00c08074 	movhi	r3,513
 2010818:	18ccb804 	addi	r3,r3,13024
 201081c:	100490fa 	slli	r2,r2,3
 2010820:	10c7883a 	add	r3,r2,r3
 2010824:	e0bffd17 	ldw	r2,-12(fp)
 2010828:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
 201082c:	e0bff917 	ldw	r2,-28(fp)
 2010830:	00c08074 	movhi	r3,513
 2010834:	18ccb804 	addi	r3,r3,13024
 2010838:	100490fa 	slli	r2,r2,3
 201083c:	10c5883a 	add	r2,r2,r3
 2010840:	10c00104 	addi	r3,r2,4
 2010844:	e0bffe17 	ldw	r2,-8(fp)
 2010848:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 201084c:	e0bffd17 	ldw	r2,-12(fp)
 2010850:	1005003a 	cmpeq	r2,r2,zero
 2010854:	1000051e 	bne	r2,zero,201086c <alt_iic_isr_register+0xb8>
 2010858:	e17ff917 	ldw	r5,-28(fp)
 201085c:	e13ffb17 	ldw	r4,-20(fp)
 2010860:	20106300 	call	2010630 <alt_ic_irq_enable>
 2010864:	e0bfff15 	stw	r2,-4(fp)
 2010868:	00000406 	br	201087c <alt_iic_isr_register+0xc8>
 201086c:	e17ff917 	ldw	r5,-28(fp)
 2010870:	e13ffb17 	ldw	r4,-20(fp)
 2010874:	20106cc0 	call	20106cc <alt_ic_irq_disable>
 2010878:	e0bfff15 	stw	r2,-4(fp)
 201087c:	e0bfff17 	ldw	r2,-4(fp)
 2010880:	e0bffa15 	stw	r2,-24(fp)
 2010884:	e0bff817 	ldw	r2,-32(fp)
 2010888:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 201088c:	e0bff617 	ldw	r2,-40(fp)
 2010890:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 2010894:	e0bffa17 	ldw	r2,-24(fp)
}
 2010898:	e037883a 	mov	sp,fp
 201089c:	dfc00117 	ldw	ra,4(sp)
 20108a0:	df000017 	ldw	fp,0(sp)
 20108a4:	dec00204 	addi	sp,sp,8
 20108a8:	f800283a 	ret

020108ac <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 20108ac:	defff904 	addi	sp,sp,-28
 20108b0:	dfc00615 	stw	ra,24(sp)
 20108b4:	df000515 	stw	fp,20(sp)
 20108b8:	df000504 	addi	fp,sp,20
 20108bc:	e13ffc15 	stw	r4,-16(fp)
 20108c0:	e17ffd15 	stw	r5,-12(fp)
 20108c4:	e1bffe15 	stw	r6,-8(fp)
 20108c8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 20108cc:	e13ffd17 	ldw	r4,-12(fp)
 20108d0:	e17ffe17 	ldw	r5,-8(fp)
 20108d4:	e1bfff17 	ldw	r6,-4(fp)
 20108d8:	2010ac40 	call	2010ac4 <open>
 20108dc:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 20108e0:	e0bffb17 	ldw	r2,-20(fp)
 20108e4:	1004803a 	cmplt	r2,r2,zero
 20108e8:	10001c1e 	bne	r2,zero,201095c <alt_open_fd+0xb0>
  {
    fd->dev      = alt_fd_list[old].dev;
 20108ec:	e0bffb17 	ldw	r2,-20(fp)
 20108f0:	00c08074 	movhi	r3,513
 20108f4:	18c90404 	addi	r3,r3,9232
 20108f8:	10800324 	muli	r2,r2,12
 20108fc:	10c5883a 	add	r2,r2,r3
 2010900:	10c00017 	ldw	r3,0(r2)
 2010904:	e0bffc17 	ldw	r2,-16(fp)
 2010908:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 201090c:	e0bffb17 	ldw	r2,-20(fp)
 2010910:	00c08074 	movhi	r3,513
 2010914:	18c90404 	addi	r3,r3,9232
 2010918:	10800324 	muli	r2,r2,12
 201091c:	10c5883a 	add	r2,r2,r3
 2010920:	10800104 	addi	r2,r2,4
 2010924:	10c00017 	ldw	r3,0(r2)
 2010928:	e0bffc17 	ldw	r2,-16(fp)
 201092c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 2010930:	e0bffb17 	ldw	r2,-20(fp)
 2010934:	00c08074 	movhi	r3,513
 2010938:	18c90404 	addi	r3,r3,9232
 201093c:	10800324 	muli	r2,r2,12
 2010940:	10c5883a 	add	r2,r2,r3
 2010944:	10800204 	addi	r2,r2,8
 2010948:	10c00017 	ldw	r3,0(r2)
 201094c:	e0bffc17 	ldw	r2,-16(fp)
 2010950:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 2010954:	e13ffb17 	ldw	r4,-20(fp)
 2010958:	200f57c0 	call	200f57c <alt_release_fd>
  }
} 
 201095c:	e037883a 	mov	sp,fp
 2010960:	dfc00117 	ldw	ra,4(sp)
 2010964:	df000017 	ldw	fp,0(sp)
 2010968:	dec00204 	addi	sp,sp,8
 201096c:	f800283a 	ret

02010970 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 2010970:	defffb04 	addi	sp,sp,-20
 2010974:	dfc00415 	stw	ra,16(sp)
 2010978:	df000315 	stw	fp,12(sp)
 201097c:	df000304 	addi	fp,sp,12
 2010980:	e13ffd15 	stw	r4,-12(fp)
 2010984:	e17ffe15 	stw	r5,-8(fp)
 2010988:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 201098c:	01008074 	movhi	r4,513
 2010990:	21090704 	addi	r4,r4,9244
 2010994:	e17ffd17 	ldw	r5,-12(fp)
 2010998:	01800044 	movi	r6,1
 201099c:	01c07fc4 	movi	r7,511
 20109a0:	20108ac0 	call	20108ac <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 20109a4:	01008074 	movhi	r4,513
 20109a8:	21090404 	addi	r4,r4,9232
 20109ac:	e17ffe17 	ldw	r5,-8(fp)
 20109b0:	000d883a 	mov	r6,zero
 20109b4:	01c07fc4 	movi	r7,511
 20109b8:	20108ac0 	call	20108ac <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 20109bc:	01008074 	movhi	r4,513
 20109c0:	21090a04 	addi	r4,r4,9256
 20109c4:	e17fff17 	ldw	r5,-4(fp)
 20109c8:	01800044 	movi	r6,1
 20109cc:	01c07fc4 	movi	r7,511
 20109d0:	20108ac0 	call	20108ac <alt_open_fd>
}  
 20109d4:	e037883a 	mov	sp,fp
 20109d8:	dfc00117 	ldw	ra,4(sp)
 20109dc:	df000017 	ldw	fp,0(sp)
 20109e0:	dec00204 	addi	sp,sp,8
 20109e4:	f800283a 	ret

020109e8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 20109e8:	defffc04 	addi	sp,sp,-16
 20109ec:	df000315 	stw	fp,12(sp)
 20109f0:	df000304 	addi	fp,sp,12
 20109f4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 20109f8:	e0bffe17 	ldw	r2,-8(fp)
 20109fc:	10800217 	ldw	r2,8(r2)
 2010a00:	10d00034 	orhi	r3,r2,16384
 2010a04:	e0bffe17 	ldw	r2,-8(fp)
 2010a08:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 2010a0c:	e03ffd15 	stw	zero,-12(fp)
 2010a10:	00002006 	br	2010a94 <alt_file_locked+0xac>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 2010a14:	e0bffd17 	ldw	r2,-12(fp)
 2010a18:	00c08074 	movhi	r3,513
 2010a1c:	18c90404 	addi	r3,r3,9232
 2010a20:	10800324 	muli	r2,r2,12
 2010a24:	10c5883a 	add	r2,r2,r3
 2010a28:	10c00017 	ldw	r3,0(r2)
 2010a2c:	e0bffe17 	ldw	r2,-8(fp)
 2010a30:	10800017 	ldw	r2,0(r2)
 2010a34:	1880141e 	bne	r3,r2,2010a88 <alt_file_locked+0xa0>
 2010a38:	e0bffd17 	ldw	r2,-12(fp)
 2010a3c:	00c08074 	movhi	r3,513
 2010a40:	18c90404 	addi	r3,r3,9232
 2010a44:	10800324 	muli	r2,r2,12
 2010a48:	10c5883a 	add	r2,r2,r3
 2010a4c:	10800204 	addi	r2,r2,8
 2010a50:	10800017 	ldw	r2,0(r2)
 2010a54:	1004403a 	cmpge	r2,r2,zero
 2010a58:	10000b1e 	bne	r2,zero,2010a88 <alt_file_locked+0xa0>
 2010a5c:	e0bffd17 	ldw	r2,-12(fp)
 2010a60:	10800324 	muli	r2,r2,12
 2010a64:	1007883a 	mov	r3,r2
 2010a68:	00808074 	movhi	r2,513
 2010a6c:	10890404 	addi	r2,r2,9232
 2010a70:	1887883a 	add	r3,r3,r2
 2010a74:	e0bffe17 	ldw	r2,-8(fp)
 2010a78:	18800326 	beq	r3,r2,2010a88 <alt_file_locked+0xa0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 2010a7c:	00bffcc4 	movi	r2,-13
 2010a80:	e0bfff15 	stw	r2,-4(fp)
 2010a84:	00000a06 	br	2010ab0 <alt_file_locked+0xc8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 2010a88:	e0bffd17 	ldw	r2,-12(fp)
 2010a8c:	10800044 	addi	r2,r2,1
 2010a90:	e0bffd15 	stw	r2,-12(fp)
 2010a94:	00808074 	movhi	r2,513
 2010a98:	1089a004 	addi	r2,r2,9856
 2010a9c:	10800017 	ldw	r2,0(r2)
 2010aa0:	1007883a 	mov	r3,r2
 2010aa4:	e0bffd17 	ldw	r2,-12(fp)
 2010aa8:	18bfda2e 	bgeu	r3,r2,2010a14 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 2010aac:	e03fff15 	stw	zero,-4(fp)
 2010ab0:	e0bfff17 	ldw	r2,-4(fp)
}
 2010ab4:	e037883a 	mov	sp,fp
 2010ab8:	df000017 	ldw	fp,0(sp)
 2010abc:	dec00104 	addi	sp,sp,4
 2010ac0:	f800283a 	ret

02010ac4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 2010ac4:	defff404 	addi	sp,sp,-48
 2010ac8:	dfc00b15 	stw	ra,44(sp)
 2010acc:	df000a15 	stw	fp,40(sp)
 2010ad0:	df000a04 	addi	fp,sp,40
 2010ad4:	e13ffb15 	stw	r4,-20(fp)
 2010ad8:	e17ffc15 	stw	r5,-16(fp)
 2010adc:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 2010ae0:	00bfffc4 	movi	r2,-1
 2010ae4:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
 2010ae8:	00bffb44 	movi	r2,-19
 2010aec:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
 2010af0:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 2010af4:	e13ffb17 	ldw	r4,-20(fp)
 2010af8:	01408074 	movhi	r5,513
 2010afc:	29499e04 	addi	r5,r5,9848
 2010b00:	2010e700 	call	2010e70 <alt_find_dev>
 2010b04:	e0bffa15 	stw	r2,-24(fp)
 2010b08:	e0bffa17 	ldw	r2,-24(fp)
 2010b0c:	1004c03a 	cmpne	r2,r2,zero
 2010b10:	1000051e 	bne	r2,zero,2010b28 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 2010b14:	e13ffb17 	ldw	r4,-20(fp)
 2010b18:	2010f040 	call	2010f04 <alt_find_file>
 2010b1c:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
 2010b20:	00800044 	movi	r2,1
 2010b24:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 2010b28:	e0bffa17 	ldw	r2,-24(fp)
 2010b2c:	1005003a 	cmpeq	r2,r2,zero
 2010b30:	1000301e 	bne	r2,zero,2010bf4 <open+0x130>
  {
    if ((index = alt_get_fd (dev)) < 0)
 2010b34:	e13ffa17 	ldw	r4,-24(fp)
 2010b38:	20110240 	call	2011024 <alt_get_fd>
 2010b3c:	e0bff815 	stw	r2,-32(fp)
 2010b40:	e0bff817 	ldw	r2,-32(fp)
 2010b44:	1004403a 	cmpge	r2,r2,zero
 2010b48:	1000031e 	bne	r2,zero,2010b58 <open+0x94>
    {
      status = index;
 2010b4c:	e0bff817 	ldw	r2,-32(fp)
 2010b50:	e0bff715 	stw	r2,-36(fp)
 2010b54:	00002906 	br	2010bfc <open+0x138>
    }
    else
    {
      fd = &alt_fd_list[index];
 2010b58:	e0bff817 	ldw	r2,-32(fp)
 2010b5c:	10800324 	muli	r2,r2,12
 2010b60:	1007883a 	mov	r3,r2
 2010b64:	00808074 	movhi	r2,513
 2010b68:	10890404 	addi	r2,r2,9232
 2010b6c:	1885883a 	add	r2,r3,r2
 2010b70:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 2010b74:	e0fffc17 	ldw	r3,-16(fp)
 2010b78:	00900034 	movhi	r2,16384
 2010b7c:	10bfffc4 	addi	r2,r2,-1
 2010b80:	1886703a 	and	r3,r3,r2
 2010b84:	e0bff917 	ldw	r2,-28(fp)
 2010b88:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 2010b8c:	e0bff617 	ldw	r2,-40(fp)
 2010b90:	1004c03a 	cmpne	r2,r2,zero
 2010b94:	1000061e 	bne	r2,zero,2010bb0 <open+0xec>
 2010b98:	e13ff917 	ldw	r4,-28(fp)
 2010b9c:	20109e80 	call	20109e8 <alt_file_locked>
 2010ba0:	e0bff715 	stw	r2,-36(fp)
 2010ba4:	e0bff717 	ldw	r2,-36(fp)
 2010ba8:	1004803a 	cmplt	r2,r2,zero
 2010bac:	1000131e 	bne	r2,zero,2010bfc <open+0x138>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 2010bb0:	e0bffa17 	ldw	r2,-24(fp)
 2010bb4:	10800317 	ldw	r2,12(r2)
 2010bb8:	1005003a 	cmpeq	r2,r2,zero
 2010bbc:	1000091e 	bne	r2,zero,2010be4 <open+0x120>
 2010bc0:	e0bffa17 	ldw	r2,-24(fp)
 2010bc4:	10800317 	ldw	r2,12(r2)
 2010bc8:	e13ff917 	ldw	r4,-28(fp)
 2010bcc:	e17ffb17 	ldw	r5,-20(fp)
 2010bd0:	e1bffc17 	ldw	r6,-16(fp)
 2010bd4:	e1fffd17 	ldw	r7,-12(fp)
 2010bd8:	103ee83a 	callr	r2
 2010bdc:	e0bfff15 	stw	r2,-4(fp)
 2010be0:	00000106 	br	2010be8 <open+0x124>
 2010be4:	e03fff15 	stw	zero,-4(fp)
 2010be8:	e0bfff17 	ldw	r2,-4(fp)
 2010bec:	e0bff715 	stw	r2,-36(fp)
 2010bf0:	00000206 	br	2010bfc <open+0x138>
      }
    }
  }
  else
  {
    status = -ENODEV;
 2010bf4:	00bffb44 	movi	r2,-19
 2010bf8:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 2010bfc:	e0bff717 	ldw	r2,-36(fp)
 2010c00:	1004403a 	cmpge	r2,r2,zero
 2010c04:	1000091e 	bne	r2,zero,2010c2c <open+0x168>
  {
    alt_release_fd (index);  
 2010c08:	e13ff817 	ldw	r4,-32(fp)
 2010c0c:	200f57c0 	call	200f57c <alt_release_fd>
    ALT_ERRNO = -status;
 2010c10:	2010c4c0 	call	2010c4c <alt_get_errno>
 2010c14:	e0fff717 	ldw	r3,-36(fp)
 2010c18:	00c7c83a 	sub	r3,zero,r3
 2010c1c:	10c00015 	stw	r3,0(r2)
    return -1;
 2010c20:	00bfffc4 	movi	r2,-1
 2010c24:	e0bffe15 	stw	r2,-8(fp)
 2010c28:	00000206 	br	2010c34 <open+0x170>
  }
  
  /* return the reference upon success */

  return index;
 2010c2c:	e0bff817 	ldw	r2,-32(fp)
 2010c30:	e0bffe15 	stw	r2,-8(fp)
 2010c34:	e0bffe17 	ldw	r2,-8(fp)
}
 2010c38:	e037883a 	mov	sp,fp
 2010c3c:	dfc00117 	ldw	ra,4(sp)
 2010c40:	df000017 	ldw	fp,0(sp)
 2010c44:	dec00204 	addi	sp,sp,8
 2010c48:	f800283a 	ret

02010c4c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010c4c:	defffd04 	addi	sp,sp,-12
 2010c50:	dfc00215 	stw	ra,8(sp)
 2010c54:	df000115 	stw	fp,4(sp)
 2010c58:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 2010c5c:	00808074 	movhi	r2,513
 2010c60:	1089a104 	addi	r2,r2,9860
 2010c64:	10800017 	ldw	r2,0(r2)
 2010c68:	1005003a 	cmpeq	r2,r2,zero
 2010c6c:	1000061e 	bne	r2,zero,2010c88 <alt_get_errno+0x3c>
 2010c70:	00808074 	movhi	r2,513
 2010c74:	1089a104 	addi	r2,r2,9860
 2010c78:	10800017 	ldw	r2,0(r2)
 2010c7c:	103ee83a 	callr	r2
 2010c80:	e0bfff15 	stw	r2,-4(fp)
 2010c84:	00000306 	br	2010c94 <alt_get_errno+0x48>
 2010c88:	00808074 	movhi	r2,513
 2010c8c:	108c6704 	addi	r2,r2,12700
 2010c90:	e0bfff15 	stw	r2,-4(fp)
 2010c94:	e0bfff17 	ldw	r2,-4(fp)
}
 2010c98:	e037883a 	mov	sp,fp
 2010c9c:	dfc00117 	ldw	ra,4(sp)
 2010ca0:	df000017 	ldw	fp,0(sp)
 2010ca4:	dec00204 	addi	sp,sp,8
 2010ca8:	f800283a 	ret

02010cac <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 2010cac:	defffa04 	addi	sp,sp,-24
 2010cb0:	df000515 	stw	fp,20(sp)
 2010cb4:	df000504 	addi	fp,sp,20
 2010cb8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2010cbc:	0005303a 	rdctl	r2,status
 2010cc0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2010cc4:	e0fffd17 	ldw	r3,-12(fp)
 2010cc8:	00bfff84 	movi	r2,-2
 2010ccc:	1884703a 	and	r2,r3,r2
 2010cd0:	1001703a 	wrctl	status,r2
  
  return context;
 2010cd4:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 2010cd8:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
 2010cdc:	e0bfff17 	ldw	r2,-4(fp)
 2010ce0:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 2010ce4:	e0bffc17 	ldw	r2,-16(fp)
 2010ce8:	10c00017 	ldw	r3,0(r2)
 2010cec:	e0bffc17 	ldw	r2,-16(fp)
 2010cf0:	10800117 	ldw	r2,4(r2)
 2010cf4:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
 2010cf8:	e0bffc17 	ldw	r2,-16(fp)
 2010cfc:	10c00117 	ldw	r3,4(r2)
 2010d00:	e0bffc17 	ldw	r2,-16(fp)
 2010d04:	10800017 	ldw	r2,0(r2)
 2010d08:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 2010d0c:	e0fffc17 	ldw	r3,-16(fp)
 2010d10:	e0bffc17 	ldw	r2,-16(fp)
 2010d14:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
 2010d18:	e0fffc17 	ldw	r3,-16(fp)
 2010d1c:	e0bffc17 	ldw	r2,-16(fp)
 2010d20:	18800015 	stw	r2,0(r3)
 2010d24:	e0bffe17 	ldw	r2,-8(fp)
 2010d28:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2010d2c:	e0bffb17 	ldw	r2,-20(fp)
 2010d30:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 2010d34:	e037883a 	mov	sp,fp
 2010d38:	df000017 	ldw	fp,0(sp)
 2010d3c:	dec00104 	addi	sp,sp,4
 2010d40:	f800283a 	ret

02010d44 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 2010d44:	defffb04 	addi	sp,sp,-20
 2010d48:	dfc00415 	stw	ra,16(sp)
 2010d4c:	df000315 	stw	fp,12(sp)
 2010d50:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 2010d54:	d0a00f17 	ldw	r2,-32708(gp)
 2010d58:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 2010d5c:	d0a2d817 	ldw	r2,-29856(gp)
 2010d60:	10800044 	addi	r2,r2,1
 2010d64:	d0a2d815 	stw	r2,-29856(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 2010d68:	00003106 	br	2010e30 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
 2010d6c:	e0bffe17 	ldw	r2,-8(fp)
 2010d70:	10800017 	ldw	r2,0(r2)
 2010d74:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 2010d78:	e0bffe17 	ldw	r2,-8(fp)
 2010d7c:	10800403 	ldbu	r2,16(r2)
 2010d80:	10803fcc 	andi	r2,r2,255
 2010d84:	1005003a 	cmpeq	r2,r2,zero
 2010d88:	1000051e 	bne	r2,zero,2010da0 <alt_tick+0x5c>
 2010d8c:	d0a2d817 	ldw	r2,-29856(gp)
 2010d90:	1004c03a 	cmpne	r2,r2,zero
 2010d94:	1000021e 	bne	r2,zero,2010da0 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
 2010d98:	e0bffe17 	ldw	r2,-8(fp)
 2010d9c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 2010da0:	e0bffe17 	ldw	r2,-8(fp)
 2010da4:	10c00217 	ldw	r3,8(r2)
 2010da8:	d0a2d817 	ldw	r2,-29856(gp)
 2010dac:	10c01e36 	bltu	r2,r3,2010e28 <alt_tick+0xe4>
 2010db0:	e0bffe17 	ldw	r2,-8(fp)
 2010db4:	10800403 	ldbu	r2,16(r2)
 2010db8:	10803fcc 	andi	r2,r2,255
 2010dbc:	1004c03a 	cmpne	r2,r2,zero
 2010dc0:	1000191e 	bne	r2,zero,2010e28 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
 2010dc4:	e0bffe17 	ldw	r2,-8(fp)
 2010dc8:	10c00317 	ldw	r3,12(r2)
 2010dcc:	e0bffe17 	ldw	r2,-8(fp)
 2010dd0:	11000517 	ldw	r4,20(r2)
 2010dd4:	183ee83a 	callr	r3
 2010dd8:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 2010ddc:	e0bffd17 	ldw	r2,-12(fp)
 2010de0:	1004c03a 	cmpne	r2,r2,zero
 2010de4:	1000031e 	bne	r2,zero,2010df4 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
 2010de8:	e13ffe17 	ldw	r4,-8(fp)
 2010dec:	2010cac0 	call	2010cac <alt_alarm_stop>
 2010df0:	00000d06 	br	2010e28 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
 2010df4:	e0bffe17 	ldw	r2,-8(fp)
 2010df8:	10c00217 	ldw	r3,8(r2)
 2010dfc:	e0bffd17 	ldw	r2,-12(fp)
 2010e00:	1887883a 	add	r3,r3,r2
 2010e04:	e0bffe17 	ldw	r2,-8(fp)
 2010e08:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 2010e0c:	e0bffe17 	ldw	r2,-8(fp)
 2010e10:	10c00217 	ldw	r3,8(r2)
 2010e14:	d0a2d817 	ldw	r2,-29856(gp)
 2010e18:	1880032e 	bgeu	r3,r2,2010e28 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
 2010e1c:	e0fffe17 	ldw	r3,-8(fp)
 2010e20:	00800044 	movi	r2,1
 2010e24:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
 2010e28:	e0bfff17 	ldw	r2,-4(fp)
 2010e2c:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 2010e30:	d0e00f04 	addi	r3,gp,-32708
 2010e34:	e0bffe17 	ldw	r2,-8(fp)
 2010e38:	10ffcc1e 	bne	r2,r3,2010d6c <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
 2010e3c:	e037883a 	mov	sp,fp
 2010e40:	dfc00117 	ldw	ra,4(sp)
 2010e44:	df000017 	ldw	fp,0(sp)
 2010e48:	dec00204 	addi	sp,sp,8
 2010e4c:	f800283a 	ret

02010e50 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 2010e50:	deffff04 	addi	sp,sp,-4
 2010e54:	df000015 	stw	fp,0(sp)
 2010e58:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 2010e5c:	000170fa 	wrctl	ienable,zero
}
 2010e60:	e037883a 	mov	sp,fp
 2010e64:	df000017 	ldw	fp,0(sp)
 2010e68:	dec00104 	addi	sp,sp,4
 2010e6c:	f800283a 	ret

02010e70 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 2010e70:	defff904 	addi	sp,sp,-28
 2010e74:	dfc00615 	stw	ra,24(sp)
 2010e78:	df000515 	stw	fp,20(sp)
 2010e7c:	df000504 	addi	fp,sp,20
 2010e80:	e13ffd15 	stw	r4,-12(fp)
 2010e84:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
 2010e88:	e0bffe17 	ldw	r2,-8(fp)
 2010e8c:	10800017 	ldw	r2,0(r2)
 2010e90:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 2010e94:	e13ffd17 	ldw	r4,-12(fp)
 2010e98:	2008eb00 	call	2008eb0 <strlen>
 2010e9c:	10800044 	addi	r2,r2,1
 2010ea0:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 2010ea4:	00000d06 	br	2010edc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 2010ea8:	e0bffc17 	ldw	r2,-16(fp)
 2010eac:	11000217 	ldw	r4,8(r2)
 2010eb0:	e1bffb17 	ldw	r6,-20(fp)
 2010eb4:	e17ffd17 	ldw	r5,-12(fp)
 2010eb8:	20111b80 	call	20111b8 <memcmp>
 2010ebc:	1004c03a 	cmpne	r2,r2,zero
 2010ec0:	1000031e 	bne	r2,zero,2010ed0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 2010ec4:	e0bffc17 	ldw	r2,-16(fp)
 2010ec8:	e0bfff15 	stw	r2,-4(fp)
 2010ecc:	00000706 	br	2010eec <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 2010ed0:	e0bffc17 	ldw	r2,-16(fp)
 2010ed4:	10800017 	ldw	r2,0(r2)
 2010ed8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 2010edc:	e0fffe17 	ldw	r3,-8(fp)
 2010ee0:	e0bffc17 	ldw	r2,-16(fp)
 2010ee4:	10fff01e 	bne	r2,r3,2010ea8 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 2010ee8:	e03fff15 	stw	zero,-4(fp)
 2010eec:	e0bfff17 	ldw	r2,-4(fp)
}
 2010ef0:	e037883a 	mov	sp,fp
 2010ef4:	dfc00117 	ldw	ra,4(sp)
 2010ef8:	df000017 	ldw	fp,0(sp)
 2010efc:	dec00204 	addi	sp,sp,8
 2010f00:	f800283a 	ret

02010f04 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 2010f04:	defffa04 	addi	sp,sp,-24
 2010f08:	dfc00515 	stw	ra,20(sp)
 2010f0c:	df000415 	stw	fp,16(sp)
 2010f10:	df000404 	addi	fp,sp,16
 2010f14:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 2010f18:	00808074 	movhi	r2,513
 2010f1c:	10899c04 	addi	r2,r2,9840
 2010f20:	10800017 	ldw	r2,0(r2)
 2010f24:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 2010f28:	00003306 	br	2010ff8 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
 2010f2c:	e0bffd17 	ldw	r2,-12(fp)
 2010f30:	11000217 	ldw	r4,8(r2)
 2010f34:	2008eb00 	call	2008eb0 <strlen>
 2010f38:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
 2010f3c:	e0bffd17 	ldw	r2,-12(fp)
 2010f40:	10c00217 	ldw	r3,8(r2)
 2010f44:	e0bffc17 	ldw	r2,-16(fp)
 2010f48:	1885883a 	add	r2,r3,r2
 2010f4c:	10bfffc4 	addi	r2,r2,-1
 2010f50:	10800003 	ldbu	r2,0(r2)
 2010f54:	10803fcc 	andi	r2,r2,255
 2010f58:	1080201c 	xori	r2,r2,128
 2010f5c:	10bfe004 	addi	r2,r2,-128
 2010f60:	10800bd8 	cmpnei	r2,r2,47
 2010f64:	1000031e 	bne	r2,zero,2010f74 <alt_find_file+0x70>
    {
      len -= 1;
 2010f68:	e0bffc17 	ldw	r2,-16(fp)
 2010f6c:	10bfffc4 	addi	r2,r2,-1
 2010f70:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 2010f74:	e0bffc17 	ldw	r2,-16(fp)
 2010f78:	1007883a 	mov	r3,r2
 2010f7c:	e0bffe17 	ldw	r2,-8(fp)
 2010f80:	1885883a 	add	r2,r3,r2
 2010f84:	10800003 	ldbu	r2,0(r2)
 2010f88:	10803fcc 	andi	r2,r2,255
 2010f8c:	1080201c 	xori	r2,r2,128
 2010f90:	10bfe004 	addi	r2,r2,-128
 2010f94:	10800be0 	cmpeqi	r2,r2,47
 2010f98:	10000a1e 	bne	r2,zero,2010fc4 <alt_find_file+0xc0>
 2010f9c:	e0bffc17 	ldw	r2,-16(fp)
 2010fa0:	1007883a 	mov	r3,r2
 2010fa4:	e0bffe17 	ldw	r2,-8(fp)
 2010fa8:	1885883a 	add	r2,r3,r2
 2010fac:	10800003 	ldbu	r2,0(r2)
 2010fb0:	10803fcc 	andi	r2,r2,255
 2010fb4:	1080201c 	xori	r2,r2,128
 2010fb8:	10bfe004 	addi	r2,r2,-128
 2010fbc:	1004c03a 	cmpne	r2,r2,zero
 2010fc0:	10000a1e 	bne	r2,zero,2010fec <alt_find_file+0xe8>
 2010fc4:	e0bffd17 	ldw	r2,-12(fp)
 2010fc8:	11000217 	ldw	r4,8(r2)
 2010fcc:	e1bffc17 	ldw	r6,-16(fp)
 2010fd0:	e17ffe17 	ldw	r5,-8(fp)
 2010fd4:	20111b80 	call	20111b8 <memcmp>
 2010fd8:	1004c03a 	cmpne	r2,r2,zero
 2010fdc:	1000031e 	bne	r2,zero,2010fec <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 2010fe0:	e0bffd17 	ldw	r2,-12(fp)
 2010fe4:	e0bfff15 	stw	r2,-4(fp)
 2010fe8:	00000806 	br	201100c <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
 2010fec:	e0bffd17 	ldw	r2,-12(fp)
 2010ff0:	10800017 	ldw	r2,0(r2)
 2010ff4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 2010ff8:	00c08074 	movhi	r3,513
 2010ffc:	18c99c04 	addi	r3,r3,9840
 2011000:	e0bffd17 	ldw	r2,-12(fp)
 2011004:	10ffc91e 	bne	r2,r3,2010f2c <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 2011008:	e03fff15 	stw	zero,-4(fp)
 201100c:	e0bfff17 	ldw	r2,-4(fp)
}
 2011010:	e037883a 	mov	sp,fp
 2011014:	dfc00117 	ldw	ra,4(sp)
 2011018:	df000017 	ldw	fp,0(sp)
 201101c:	dec00204 	addi	sp,sp,8
 2011020:	f800283a 	ret

02011024 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 2011024:	defffc04 	addi	sp,sp,-16
 2011028:	df000315 	stw	fp,12(sp)
 201102c:	df000304 	addi	fp,sp,12
 2011030:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 2011034:	00bffa04 	movi	r2,-24
 2011038:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 201103c:	e03ffe15 	stw	zero,-8(fp)
 2011040:	00001e06 	br	20110bc <alt_get_fd+0x98>
  {
    if (!alt_fd_list[i].dev)
 2011044:	e0bffe17 	ldw	r2,-8(fp)
 2011048:	00c08074 	movhi	r3,513
 201104c:	18c90404 	addi	r3,r3,9232
 2011050:	10800324 	muli	r2,r2,12
 2011054:	10c5883a 	add	r2,r2,r3
 2011058:	10800017 	ldw	r2,0(r2)
 201105c:	1004c03a 	cmpne	r2,r2,zero
 2011060:	1000131e 	bne	r2,zero,20110b0 <alt_get_fd+0x8c>
    {
      alt_fd_list[i].dev = dev;
 2011064:	e0bffe17 	ldw	r2,-8(fp)
 2011068:	00c08074 	movhi	r3,513
 201106c:	18c90404 	addi	r3,r3,9232
 2011070:	10800324 	muli	r2,r2,12
 2011074:	10c7883a 	add	r3,r2,r3
 2011078:	e0bfff17 	ldw	r2,-4(fp)
 201107c:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
 2011080:	00808074 	movhi	r2,513
 2011084:	1089a004 	addi	r2,r2,9856
 2011088:	10c00017 	ldw	r3,0(r2)
 201108c:	e0bffe17 	ldw	r2,-8(fp)
 2011090:	1880040e 	bge	r3,r2,20110a4 <alt_get_fd+0x80>
      {
        alt_max_fd = i;
 2011094:	00c08074 	movhi	r3,513
 2011098:	18c9a004 	addi	r3,r3,9856
 201109c:	e0bffe17 	ldw	r2,-8(fp)
 20110a0:	18800015 	stw	r2,0(r3)
      }
      rc = i;
 20110a4:	e0bffe17 	ldw	r2,-8(fp)
 20110a8:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 20110ac:	00000606 	br	20110c8 <alt_get_fd+0xa4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 20110b0:	e0bffe17 	ldw	r2,-8(fp)
 20110b4:	10800044 	addi	r2,r2,1
 20110b8:	e0bffe15 	stw	r2,-8(fp)
 20110bc:	e0bffe17 	ldw	r2,-8(fp)
 20110c0:	10800810 	cmplti	r2,r2,32
 20110c4:	103fdf1e 	bne	r2,zero,2011044 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 20110c8:	e0bffd17 	ldw	r2,-12(fp)
}
 20110cc:	e037883a 	mov	sp,fp
 20110d0:	df000017 	ldw	fp,0(sp)
 20110d4:	dec00104 	addi	sp,sp,4
 20110d8:	f800283a 	ret

020110dc <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 20110dc:	defffb04 	addi	sp,sp,-20
 20110e0:	df000415 	stw	fp,16(sp)
 20110e4:	df000404 	addi	fp,sp,16
 20110e8:	e13ffe15 	stw	r4,-8(fp)
 20110ec:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 20110f0:	e0bfff17 	ldw	r2,-4(fp)
 20110f4:	10840070 	cmpltui	r2,r2,4097
 20110f8:	1000021e 	bne	r2,zero,2011104 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 20110fc:	00840004 	movi	r2,4096
 2011100:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 2011104:	e0fffe17 	ldw	r3,-8(fp)
 2011108:	e0bfff17 	ldw	r2,-4(fp)
 201110c:	1885883a 	add	r2,r3,r2
 2011110:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 2011114:	e0bffe17 	ldw	r2,-8(fp)
 2011118:	e0bffd15 	stw	r2,-12(fp)
 201111c:	00000506 	br	2011134 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 2011120:	e0bffd17 	ldw	r2,-12(fp)
 2011124:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 2011128:	e0bffd17 	ldw	r2,-12(fp)
 201112c:	10800804 	addi	r2,r2,32
 2011130:	e0bffd15 	stw	r2,-12(fp)
 2011134:	e0fffd17 	ldw	r3,-12(fp)
 2011138:	e0bffc17 	ldw	r2,-16(fp)
 201113c:	18bff836 	bltu	r3,r2,2011120 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 2011140:	e0bffe17 	ldw	r2,-8(fp)
 2011144:	108007cc 	andi	r2,r2,31
 2011148:	1005003a 	cmpeq	r2,r2,zero
 201114c:	1000021e 	bne	r2,zero,2011158 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 2011150:	e0bffd17 	ldw	r2,-12(fp)
 2011154:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 2011158:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 201115c:	e037883a 	mov	sp,fp
 2011160:	df000017 	ldw	fp,0(sp)
 2011164:	dec00104 	addi	sp,sp,4
 2011168:	f800283a 	ret

0201116c <atexit>:
 201116c:	200b883a 	mov	r5,r4
 2011170:	000d883a 	mov	r6,zero
 2011174:	0009883a 	mov	r4,zero
 2011178:	000f883a 	mov	r7,zero
 201117c:	201122c1 	jmpi	201122c <__register_exitproc>

02011180 <exit>:
 2011180:	defffe04 	addi	sp,sp,-8
 2011184:	000b883a 	mov	r5,zero
 2011188:	dc000015 	stw	r16,0(sp)
 201118c:	dfc00115 	stw	ra,4(sp)
 2011190:	2021883a 	mov	r16,r4
 2011194:	20113640 	call	2011364 <__call_exitprocs>
 2011198:	00808074 	movhi	r2,513
 201119c:	10899704 	addi	r2,r2,9820
 20111a0:	11000017 	ldw	r4,0(r2)
 20111a4:	20800f17 	ldw	r2,60(r4)
 20111a8:	10000126 	beq	r2,zero,20111b0 <exit+0x30>
 20111ac:	103ee83a 	callr	r2
 20111b0:	8009883a 	mov	r4,r16
 20111b4:	20115540 	call	2011554 <_exit>

020111b8 <memcmp>:
 20111b8:	00c000c4 	movi	r3,3
 20111bc:	1980032e 	bgeu	r3,r6,20111cc <memcmp+0x14>
 20111c0:	2144b03a 	or	r2,r4,r5
 20111c4:	10c4703a 	and	r2,r2,r3
 20111c8:	10000f26 	beq	r2,zero,2011208 <memcmp+0x50>
 20111cc:	31ffffc4 	addi	r7,r6,-1
 20111d0:	3000061e 	bne	r6,zero,20111ec <memcmp+0x34>
 20111d4:	00000a06 	br	2011200 <memcmp+0x48>
 20111d8:	39ffffc4 	addi	r7,r7,-1
 20111dc:	00bfffc4 	movi	r2,-1
 20111e0:	21000044 	addi	r4,r4,1
 20111e4:	29400044 	addi	r5,r5,1
 20111e8:	38800526 	beq	r7,r2,2011200 <memcmp+0x48>
 20111ec:	20c00003 	ldbu	r3,0(r4)
 20111f0:	28800003 	ldbu	r2,0(r5)
 20111f4:	18bff826 	beq	r3,r2,20111d8 <memcmp+0x20>
 20111f8:	1885c83a 	sub	r2,r3,r2
 20111fc:	f800283a 	ret
 2011200:	0005883a 	mov	r2,zero
 2011204:	f800283a 	ret
 2011208:	180f883a 	mov	r7,r3
 201120c:	20c00017 	ldw	r3,0(r4)
 2011210:	28800017 	ldw	r2,0(r5)
 2011214:	18bfed1e 	bne	r3,r2,20111cc <memcmp+0x14>
 2011218:	31bfff04 	addi	r6,r6,-4
 201121c:	21000104 	addi	r4,r4,4
 2011220:	29400104 	addi	r5,r5,4
 2011224:	39bff936 	bltu	r7,r6,201120c <memcmp+0x54>
 2011228:	003fe806 	br	20111cc <memcmp+0x14>

0201122c <__register_exitproc>:
 201122c:	defffa04 	addi	sp,sp,-24
 2011230:	00808074 	movhi	r2,513
 2011234:	10899704 	addi	r2,r2,9820
 2011238:	dc000015 	stw	r16,0(sp)
 201123c:	14000017 	ldw	r16,0(r2)
 2011240:	dd000415 	stw	r20,16(sp)
 2011244:	2829883a 	mov	r20,r5
 2011248:	81405217 	ldw	r5,328(r16)
 201124c:	dcc00315 	stw	r19,12(sp)
 2011250:	dc800215 	stw	r18,8(sp)
 2011254:	dc400115 	stw	r17,4(sp)
 2011258:	dfc00515 	stw	ra,20(sp)
 201125c:	2023883a 	mov	r17,r4
 2011260:	3027883a 	mov	r19,r6
 2011264:	3825883a 	mov	r18,r7
 2011268:	28002526 	beq	r5,zero,2011300 <__register_exitproc+0xd4>
 201126c:	29000117 	ldw	r4,4(r5)
 2011270:	008007c4 	movi	r2,31
 2011274:	11002716 	blt	r2,r4,2011314 <__register_exitproc+0xe8>
 2011278:	8800101e 	bne	r17,zero,20112bc <__register_exitproc+0x90>
 201127c:	2105883a 	add	r2,r4,r4
 2011280:	1085883a 	add	r2,r2,r2
 2011284:	20c00044 	addi	r3,r4,1
 2011288:	1145883a 	add	r2,r2,r5
 201128c:	0009883a 	mov	r4,zero
 2011290:	15000215 	stw	r20,8(r2)
 2011294:	28c00115 	stw	r3,4(r5)
 2011298:	2005883a 	mov	r2,r4
 201129c:	dfc00517 	ldw	ra,20(sp)
 20112a0:	dd000417 	ldw	r20,16(sp)
 20112a4:	dcc00317 	ldw	r19,12(sp)
 20112a8:	dc800217 	ldw	r18,8(sp)
 20112ac:	dc400117 	ldw	r17,4(sp)
 20112b0:	dc000017 	ldw	r16,0(sp)
 20112b4:	dec00604 	addi	sp,sp,24
 20112b8:	f800283a 	ret
 20112bc:	29802204 	addi	r6,r5,136
 20112c0:	00800044 	movi	r2,1
 20112c4:	110e983a 	sll	r7,r2,r4
 20112c8:	30c04017 	ldw	r3,256(r6)
 20112cc:	2105883a 	add	r2,r4,r4
 20112d0:	1085883a 	add	r2,r2,r2
 20112d4:	1185883a 	add	r2,r2,r6
 20112d8:	19c6b03a 	or	r3,r3,r7
 20112dc:	14802015 	stw	r18,128(r2)
 20112e0:	14c00015 	stw	r19,0(r2)
 20112e4:	00800084 	movi	r2,2
 20112e8:	30c04015 	stw	r3,256(r6)
 20112ec:	88bfe31e 	bne	r17,r2,201127c <__register_exitproc+0x50>
 20112f0:	30804117 	ldw	r2,260(r6)
 20112f4:	11c4b03a 	or	r2,r2,r7
 20112f8:	30804115 	stw	r2,260(r6)
 20112fc:	003fdf06 	br	201127c <__register_exitproc+0x50>
 2011300:	00808074 	movhi	r2,513
 2011304:	108cf804 	addi	r2,r2,13280
 2011308:	100b883a 	mov	r5,r2
 201130c:	80805215 	stw	r2,328(r16)
 2011310:	003fd606 	br	201126c <__register_exitproc+0x40>
 2011314:	00800034 	movhi	r2,0
 2011318:	10800004 	addi	r2,r2,0
 201131c:	1000021e 	bne	r2,zero,2011328 <__register_exitproc+0xfc>
 2011320:	013fffc4 	movi	r4,-1
 2011324:	003fdc06 	br	2011298 <__register_exitproc+0x6c>
 2011328:	01006404 	movi	r4,400
 201132c:	103ee83a 	callr	r2
 2011330:	1007883a 	mov	r3,r2
 2011334:	103ffa26 	beq	r2,zero,2011320 <__register_exitproc+0xf4>
 2011338:	80805217 	ldw	r2,328(r16)
 201133c:	180b883a 	mov	r5,r3
 2011340:	18000115 	stw	zero,4(r3)
 2011344:	18800015 	stw	r2,0(r3)
 2011348:	80c05215 	stw	r3,328(r16)
 201134c:	18006215 	stw	zero,392(r3)
 2011350:	18006315 	stw	zero,396(r3)
 2011354:	0009883a 	mov	r4,zero
 2011358:	883fc826 	beq	r17,zero,201127c <__register_exitproc+0x50>
 201135c:	003fd706 	br	20112bc <__register_exitproc+0x90>

02011360 <register_fini>:
 2011360:	f800283a 	ret

02011364 <__call_exitprocs>:
 2011364:	00808074 	movhi	r2,513
 2011368:	10899704 	addi	r2,r2,9820
 201136c:	10800017 	ldw	r2,0(r2)
 2011370:	defff304 	addi	sp,sp,-52
 2011374:	df000b15 	stw	fp,44(sp)
 2011378:	d8800115 	stw	r2,4(sp)
 201137c:	00800034 	movhi	r2,0
 2011380:	10800004 	addi	r2,r2,0
 2011384:	1005003a 	cmpeq	r2,r2,zero
 2011388:	d8800215 	stw	r2,8(sp)
 201138c:	d8800117 	ldw	r2,4(sp)
 2011390:	dd400815 	stw	r21,32(sp)
 2011394:	dd000715 	stw	r20,28(sp)
 2011398:	10805204 	addi	r2,r2,328
 201139c:	dfc00c15 	stw	ra,48(sp)
 20113a0:	ddc00a15 	stw	r23,40(sp)
 20113a4:	dd800915 	stw	r22,36(sp)
 20113a8:	dcc00615 	stw	r19,24(sp)
 20113ac:	dc800515 	stw	r18,20(sp)
 20113b0:	dc400415 	stw	r17,16(sp)
 20113b4:	dc000315 	stw	r16,12(sp)
 20113b8:	282b883a 	mov	r21,r5
 20113bc:	2039883a 	mov	fp,r4
 20113c0:	d8800015 	stw	r2,0(sp)
 20113c4:	2829003a 	cmpeq	r20,r5,zero
 20113c8:	d8800117 	ldw	r2,4(sp)
 20113cc:	14405217 	ldw	r17,328(r2)
 20113d0:	88001026 	beq	r17,zero,2011414 <__call_exitprocs+0xb0>
 20113d4:	ddc00017 	ldw	r23,0(sp)
 20113d8:	88800117 	ldw	r2,4(r17)
 20113dc:	8c802204 	addi	r18,r17,136
 20113e0:	143fffc4 	addi	r16,r2,-1
 20113e4:	80000916 	blt	r16,zero,201140c <__call_exitprocs+0xa8>
 20113e8:	05bfffc4 	movi	r22,-1
 20113ec:	a000151e 	bne	r20,zero,2011444 <__call_exitprocs+0xe0>
 20113f0:	8409883a 	add	r4,r16,r16
 20113f4:	2105883a 	add	r2,r4,r4
 20113f8:	1485883a 	add	r2,r2,r18
 20113fc:	10c02017 	ldw	r3,128(r2)
 2011400:	a8c01126 	beq	r21,r3,2011448 <__call_exitprocs+0xe4>
 2011404:	843fffc4 	addi	r16,r16,-1
 2011408:	85bff81e 	bne	r16,r22,20113ec <__call_exitprocs+0x88>
 201140c:	d8800217 	ldw	r2,8(sp)
 2011410:	10003126 	beq	r2,zero,20114d8 <__call_exitprocs+0x174>
 2011414:	dfc00c17 	ldw	ra,48(sp)
 2011418:	df000b17 	ldw	fp,44(sp)
 201141c:	ddc00a17 	ldw	r23,40(sp)
 2011420:	dd800917 	ldw	r22,36(sp)
 2011424:	dd400817 	ldw	r21,32(sp)
 2011428:	dd000717 	ldw	r20,28(sp)
 201142c:	dcc00617 	ldw	r19,24(sp)
 2011430:	dc800517 	ldw	r18,20(sp)
 2011434:	dc400417 	ldw	r17,16(sp)
 2011438:	dc000317 	ldw	r16,12(sp)
 201143c:	dec00d04 	addi	sp,sp,52
 2011440:	f800283a 	ret
 2011444:	8409883a 	add	r4,r16,r16
 2011448:	88c00117 	ldw	r3,4(r17)
 201144c:	2105883a 	add	r2,r4,r4
 2011450:	1445883a 	add	r2,r2,r17
 2011454:	18ffffc4 	addi	r3,r3,-1
 2011458:	11800217 	ldw	r6,8(r2)
 201145c:	1c001526 	beq	r3,r16,20114b4 <__call_exitprocs+0x150>
 2011460:	10000215 	stw	zero,8(r2)
 2011464:	303fe726 	beq	r6,zero,2011404 <__call_exitprocs+0xa0>
 2011468:	00c00044 	movi	r3,1
 201146c:	1c06983a 	sll	r3,r3,r16
 2011470:	90804017 	ldw	r2,256(r18)
 2011474:	8cc00117 	ldw	r19,4(r17)
 2011478:	1884703a 	and	r2,r3,r2
 201147c:	10001426 	beq	r2,zero,20114d0 <__call_exitprocs+0x16c>
 2011480:	90804117 	ldw	r2,260(r18)
 2011484:	1884703a 	and	r2,r3,r2
 2011488:	10000c1e 	bne	r2,zero,20114bc <__call_exitprocs+0x158>
 201148c:	2105883a 	add	r2,r4,r4
 2011490:	1485883a 	add	r2,r2,r18
 2011494:	11400017 	ldw	r5,0(r2)
 2011498:	e009883a 	mov	r4,fp
 201149c:	303ee83a 	callr	r6
 20114a0:	88800117 	ldw	r2,4(r17)
 20114a4:	98bfc81e 	bne	r19,r2,20113c8 <__call_exitprocs+0x64>
 20114a8:	b8800017 	ldw	r2,0(r23)
 20114ac:	147fd526 	beq	r2,r17,2011404 <__call_exitprocs+0xa0>
 20114b0:	003fc506 	br	20113c8 <__call_exitprocs+0x64>
 20114b4:	8c000115 	stw	r16,4(r17)
 20114b8:	003fea06 	br	2011464 <__call_exitprocs+0x100>
 20114bc:	2105883a 	add	r2,r4,r4
 20114c0:	1485883a 	add	r2,r2,r18
 20114c4:	11000017 	ldw	r4,0(r2)
 20114c8:	303ee83a 	callr	r6
 20114cc:	003ff406 	br	20114a0 <__call_exitprocs+0x13c>
 20114d0:	303ee83a 	callr	r6
 20114d4:	003ff206 	br	20114a0 <__call_exitprocs+0x13c>
 20114d8:	88800117 	ldw	r2,4(r17)
 20114dc:	1000081e 	bne	r2,zero,2011500 <__call_exitprocs+0x19c>
 20114e0:	89000017 	ldw	r4,0(r17)
 20114e4:	20000726 	beq	r4,zero,2011504 <__call_exitprocs+0x1a0>
 20114e8:	b9000015 	stw	r4,0(r23)
 20114ec:	8809883a 	mov	r4,r17
 20114f0:	00000000 	call	0 <__reset-0x2000000>
 20114f4:	bc400017 	ldw	r17,0(r23)
 20114f8:	883fb71e 	bne	r17,zero,20113d8 <__call_exitprocs+0x74>
 20114fc:	003fc506 	br	2011414 <__call_exitprocs+0xb0>
 2011500:	89000017 	ldw	r4,0(r17)
 2011504:	882f883a 	mov	r23,r17
 2011508:	2023883a 	mov	r17,r4
 201150c:	883fb21e 	bne	r17,zero,20113d8 <__call_exitprocs+0x74>
 2011510:	003fc006 	br	2011414 <__call_exitprocs+0xb0>

02011514 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
 2011514:	defffd04 	addi	sp,sp,-12
 2011518:	df000215 	stw	fp,8(sp)
 201151c:	df000204 	addi	fp,sp,8
 2011520:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
 2011524:	e0bfff17 	ldw	r2,-4(fp)
 2011528:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 201152c:	e0bffe17 	ldw	r2,-8(fp)
 2011530:	1005003a 	cmpeq	r2,r2,zero
 2011534:	1000021e 	bne	r2,zero,2011540 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
 2011538:	002af070 	cmpltui	zero,zero,43969
 201153c:	00000106 	br	2011544 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
 2011540:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
 2011544:	e037883a 	mov	sp,fp
 2011548:	df000017 	ldw	fp,0(sp)
 201154c:	dec00104 	addi	sp,sp,4
 2011550:	f800283a 	ret

02011554 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 2011554:	defffd04 	addi	sp,sp,-12
 2011558:	dfc00215 	stw	ra,8(sp)
 201155c:	df000115 	stw	fp,4(sp)
 2011560:	df000104 	addi	fp,sp,4
 2011564:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
 2011568:	e13fff17 	ldw	r4,-4(fp)
 201156c:	20115140 	call	2011514 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 2011570:	003fff06 	br	2011570 <_exit+0x1c>
 2011574:	02011360 	cmpeqi	r8,zero,1101
