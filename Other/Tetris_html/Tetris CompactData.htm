
<html>
<head>
<script>
// need
// 8位计算能力 + - 移位
// 3k rom 512 ram
// keyboard/joystick input
// display
// random
// timer

var Board;//int[]
var PosX = 0; //int
var PosY = 0; //int
var NextShapeNum = 0;//int
var NowShapeNum = 0;//int
var NowShapeRotateIdx = 0;//int

var ImgBoard;
var ImgNext;
//从上到下，从左到右，先低后高
var _dataBlock = new Array(
  0x007,0x000,0x003,0x000,0x003,0x000,0x006,0x000, 
  0x025,0x042,0x000,0x000,0x000,0x000,0x000,0x000, //;0
  0x007,0x000,0x003,0x000,0x003,0x000,0x006,0x000, 
  0x025,0x042,0x000,0x000,0x000,0x000,0x000,0x000, //;1 1
  0x09B,0x000,0x0A8,0x000,0x000,0x000,0x000,0x000, 
  0x09B,0x000,0x0A8,0x000,0x000,0x000,0x000,0x000, //;2
  0x09B,0x000,0x0A8,0x000,0x000,0x000,0x000,0x000, 
  0x09B,0x000,0x0A8,0x000,0x000,0x000,0x000,0x000, //;3 2
  0x070,0x000,0x0AB,0x000,0x006,0x000,0x000,0x000, 
  0x095,0x000,0x080,0x004,0x000,0x000,0x000,0x000, //;4
  0x070,0x000,0x0AB,0x000,0x006,0x000,0x000,0x000, 
  0x095,0x000,0x080,0x004,0x000,0x000,0x000,0x000, //;5 3
  0x007,0x000,0x098,0x000,0x060,0x000,0x000,0x000, 
  0x0B0,0x004,0x0A5,0x000,0x000,0x000,0x000,0x000, //;6
  0x007,0x000,0x098,0x000,0x060,0x000,0x000,0x000, 
  0x0B0,0x004,0x0A5,0x000,0x000,0x000,0x000,0x000, //;7 4
  0x007,0x000,0x003,0x000,0x048,0x000,0x000,0x000, 
  0x000,0x007,0x025,0x00A,0x000,0x000,0x000,0x000, //;8
  0x095,0x000,0x030,0x000,0x060,0x000,0x000,0x000, 
  0x02B,0x004,0x006,0x000,0x000,0x000,0x000,0x000, //;9 5
  0x04B,0x000,0x003,0x000,0x006,0x000,0x000,0x000, 
  0x007,0x000,0x028,0x004,0x000,0x000,0x000,0x000, //;A
  0x070,0x000,0x030,0x000,0x0A5,0x000,0x000,0x000, 
  0x025,0x009,0x000,0x006,0x000,0x000,0x000,0x000, //;B 6
  0x007,0x000,0x04E,0x000,0x006,0x000,0x000,0x000, 
  0x070,0x000,0x0F5,0x004,0x000,0x000,0x000,0x000, //;C
  0x070,0x000,0x0C5,0x000,0x060,0x000,0x000,0x000, 
  0x0D5,0x004,0x060,0x000,0x000,0x000,0x000,0x000  //;D 7
);
var _dataBottom = new Array(
	0x011,0x011,0x004,0x000,0x011,0x011,0x004,0x000, 
  0x022,0x000,0x022,0x000,0x022,0x000,0x022,0x000, //E 1 2
	0x022,0x001,0x032,0x000,0x022,0x001,0x032,0x000, 
  0x021,0x002,0x023,0x000,0x021,0x002,0x023,0x000, //F 3 4
	0x011,0x002,0x033,0x000,0x022,0x002,0x013,0x000, 
  0x012,0x001,0x031,0x000,0x022,0x002,0x033,0x000, //0 5 6
	0x021,0x001,0x032,0x000,0x022,0x002,0x023,0x000  //1 7
);
var _dataLeft = new Array(
	0x014,0x014,
  0x022,0x022,
  0x023,0x023,
  0x023,0x023, 
  0x023,0x023,
  0x023,0x023, 
  0x023,0x023
);
var _dataSwitch = new Array(
  0x000,
  0x011,
  0x045,
  0x033,
  0x041,
  0x015,
  0x066,
  0x077,
  0x068,
  0x097,
  0x0A6,
  0x07B,
  0x0C3,
  0x09B,
  0x03E,
  0x0A8
);

function __OnLoad(){
  //UI Board
  var SpanBoard = document.getElementById("Board");
  ImgBoard = new Array(20);
  for(i=0;i<20;i++)
  {
    ImgBoard[i] = new Array(10);
    for(j=0;j<10;j++)
    {
      img = document.createElement("img");
      img.src = "0.bmp";
      SpanBoard.appendChild(img);
      ImgBoard[i][j] = img;
    }
    var br = document.createElement("br");
    SpanBoard.appendChild(br);
  }

  //UI Next
  var SpanNext = document.getElementById("Next");
  ImgNext = new Array(4);
  for(i=0;i<4;i++)
  {
    ImgNext[i] = new Array(4);
    for(j=0;j<4;j++)
    {
      img = document.createElement("img");
      img.src = "0.bmp";
      SpanNext.appendChild(img);
      ImgNext[i][j] = img;
    }
    var br = document.createElement("br");
    SpanNext.appendChild(br);
  }
  Public_Init();
  document.onkeydown = keyDown;
  timename = setInterval("timing();",1000);
}
function timing(){
  Public_Down();
  DrawBoard();
}
function keyDown(event){
  var e = event || window.event || arguments.callee.caller.arguments[0];
  var k = e.keyCode;
  if(k == 32)Public_Rotate();
  else if(k == 39)Public_Move(1);
  else if(k == 37)Public_Move(-1);
  else if(k == 38)Public_Down();
  else if(k == 40){while(Public_Down());}
  DrawBoard();
}
function DrawBoard(){
  for(i=0;i<10;i++)
  {
    for(j=0;j<20;j++)
    {
      ImgBoard[j][i].src = Board[i*20+19-j]+".bmp";
    }
  }
  for(i=0;i<4;i++)
  {
    for(j=0;j<4;j++)
    {
      var x = i+PosX;
      var y = j+19-PosY;
      var block = Public_GetBlock(NowShapeNum,NowShapeRotateIdx,i,j);
      if(x<10&&y<20&&block!=0)
      {
        ImgBoard[y][x].src = block + ".bmp";
      }
    }
  }
}
function CallBack_GetRandom(){
  return Math.floor(Math.random()*7);
}
function CallBack_DrawNextShape(){
  for(i=0;i<4;i++)
  {
    for(j=0;j<4;j++)
    {
      ImgNext[j][i].src = Public_GetBlock(NextShapeNum,0,i,j) + ".bmp";
    }
  }
}
function Public_Init(){
  //init Board
  Board = new Array(200);
  private_Clear();
  private_NextShape();
  private_NextShape();
}
function Public_Rotate(){
  NowShapeRotateIdx=(NowShapeRotateIdx+1)%4;
  var left = private_getLeft(NowShapeNum,NowShapeRotateIdx);
  if(left+PosX>10)
  {
    var oldPosX=PosX;
    PosX=10-left;
    if(private_anyTouch())
    {
      PosX = oldPosX;
      NowShapeRotateIdx=(NowShapeRotateIdx+3)%4;//-1 rotateback
    }
    return;
  }
  if(private_anyTouch())
  {
    NowShapeRotateIdx=(NowShapeRotateIdx+3)%4;//-1 rotateback
  }
}
function Public_Move(n){
  PosX+=n;
  if(private_anyTouch())
  {
    PosX-=n;
  }
}
function Public_Down(){
  if(private_isTouch())
  {
    private_touchDo();
    return false;
  }
  else
  {
    PosY--;
    return true;
  }
}
function Public_GetBlock(num,idx,i,j){
  var ret;
  if(j&1==1)
  {
    ret = (_dataBlock[(num<<5)+(idx<<3)+(i<<1)+(j>>1)]>>4)&0x0F;
  }
  else
  {
    ret = _dataBlock[(num<<5)+(idx<<3)+(i<<1)+(j>>1)]&0x0F;
  }
  return ret;
}
function private_isTouch(){
  for(i=0;i<4;i++)
  {
    var bottom = private_getBottom(NowShapeNum,NowShapeRotateIdx,i);
    if(bottom!=0)
    {
      if(bottom==PosY+1)
      {
        return true;
      }
      if(private_getBoard(PosX+i,PosY-bottom)!=0)
      {
        return true;
      }
    }
  }
  return false;
}
function private_anyTouch(){
  if(PosX<0)
  {
    return true;
  }
  var left = private_getLeft(NowShapeNum,NowShapeRotateIdx);
  if(left+PosX>10)
  {
    return true;
  }
  for(i=0;i<4;i++)
  {
    for(j=0;j<4;j++)
    {
      var x=PosX+i;
      var y=PosY-j;
      var bottom = private_getBottom(NowShapeNum,NowShapeRotateIdx,i);
      if(PosY-bottom<-1)
      {
        return true;
      }
      var block = Public_GetBlock(NowShapeNum,NowShapeRotateIdx,i,j);
      if(x>=0&&y>=0&&x<10&&y<20&&block!=0&&private_getBoard(x,y)!=0)
      {
        return true;
      }
    }
  }
  return false;
}
function private_touchDo(){
  //add to board
  for(i=0;i<4;i++)
  {
    for(j=0;j<4;j++)
    {
      var x=PosX+i;
      var y=PosY-j;
      var block = Public_GetBlock(NowShapeNum,NowShapeRotateIdx,i,j);
      if(block!=0)
      {
        private_setBoard(x,y,block);
      }
    }
  }
  
  //clear line
  for(j=19;j>=0;j--)
  {
    var line=1;
    for(i=0;i<10;i++)
    {
      if(private_getBoard(i,j)==0)
      {
        line=0;
        break;
      }
    }
    if(line==1)
    {
      for(k=0;k<10;k++)
      {
        if(j-1>=0)
        {
          var temp = private_getBoard(k,j-1);
          temp = _dataSwitch[temp]&0x0F;
          private_setBoard(k,j-1,temp);
        }
        if(j+1<20)
        {
          var temp = private_getBoard(k,j+1);
          temp = (_dataSwitch[temp]>>4)&0x0F;
          private_setBoard(k,j+1,temp);
        }
        private_setBoard(k,j,0);
      }
      for(k=j;k<19;k++)
      {
        for(l=0;l<10;l++)
        {
          private_setBoard(l,k,private_getBoard(l,k+1));
        }
      }
    }
  }
  
  //is gameover
  for(i=0;i<10;i++)
  {
      if(private_getBoard(i,18)!=0)
      {
          private_Clear();
          break;
      }
  }
  private_NextShape();
}
function private_NextShape(){
  NowShapeNum = NextShapeNum;
  NextShapeNum = CallBack_GetRandom();
  NowShapeRotateIdx = 0;
  PosY = 19;
  PosX = 3;
  CallBack_DrawNextShape();
}
function private_Clear(){
  for(i=0;i<10;i++)
  {
    for(j=0;j<20;j++)
    {
      private_setBoard(i,j,0);
    }
  }
}
function private_getBoard(x,y){
  return Board[x*20+y];
}
function private_setBoard(x,y,val){
  Board[x*20+y] = val;
}
function private_getBottom(num,idx,j){
  var ret;
  if(j&1==1)
  {
    ret = (_dataBottom[(num<<3)+(idx<<1)+(j>>1)]>>4)&0x0F;
  }
  else
  {
    ret = _dataBottom[(num<<3)+(idx<<1)+(j>>1)]&0x0F;
  }
  return ret;
}
function private_getLeft(num,idx){
  var ret;
  if(idx&1==1)
  {
    ret = (_dataLeft[(num<<1)+(idx>>1)]>>4)&0x0F;
  }
  else
  {
    ret = _dataLeft[(num<<1)+(idx>>1)]&0x0F;
  }
  return ret;
}

</script>
</head>
<body onload = "__OnLoad();">
<br>
<table>
<tr>
<td>
<span id="Board"></span>
</td>
<td>
<span id="Next"></span>
</td>
</table>
</body>
</html>